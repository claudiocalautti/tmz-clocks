{"version":3,"names":[],"mappings":"","sources":["app.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"./src/scripts/app.jsx\":[function(require,module,exports){\n/** @jsx React.DOM */\n\n'use strict';\n\nvar React = require('react');\n\nvar Wall = require('./components/Wall.jsx');\n\nvar cities = require('./data/cities100000.js');\nvar zones = require('./data/zones.js');\n\n/**\n * Render Wall with cities and zones.\n */\nReact.render(\n\n  React.createElement(Wall, {\n    cities: cities, \n    zones: zones, \n    showUserClock: true, \n    hours12: false}),\n\n  document.body\n);\n\n},{\"./components/Wall.jsx\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/src/scripts/components/Wall.jsx\",\"./data/cities100000.js\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/src/scripts/data/cities100000.js\",\"./data/zones.js\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/src/scripts/data/zones.js\",\"react\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/react.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\":[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/AutoFocusMixin.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule AutoFocusMixin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar focusNode = require(\"./focusNode\");\n\nvar AutoFocusMixin = {\n  componentDidMount: function() {\n    if (this.props.autoFocus) {\n      focusNode(this.getDOMNode());\n    }\n  }\n};\n\nmodule.exports = AutoFocusMixin;\n\n},{\"./focusNode\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/focusNode.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/BeforeInputEventPlugin.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015 Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule BeforeInputEventPlugin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPropagators = require(\"./EventPropagators\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\nvar FallbackCompositionState = require(\"./FallbackCompositionState\");\nvar SyntheticCompositionEvent = require(\"./SyntheticCompositionEvent\");\nvar SyntheticInputEvent = require(\"./SyntheticInputEvent\");\n\nvar keyOf = require(\"./keyOf\");\n\nvar END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\nvar START_KEYCODE = 229;\n\nvar canUseCompositionEvent = (\n  ExecutionEnvironment.canUseDOM &&\n  'CompositionEvent' in window\n);\n\nvar documentMode = null;\nif (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {\n  documentMode = document.documentMode;\n}\n\n// Webkit offers a very useful `textInput` event that can be used to\n// directly represent `beforeInput`. The IE `textinput` event is not as\n// useful, so we don't use it.\nvar canUseTextInputEvent = (\n  ExecutionEnvironment.canUseDOM &&\n  'TextEvent' in window &&\n  !documentMode &&\n  !isPresto()\n);\n\n// In IE9+, we have access to composition events, but the data supplied\n// by the native compositionend event may be incorrect. Japanese ideographic\n// spaces, for instance (\\u3000) are not recorded correctly.\nvar useFallbackCompositionData = (\n  ExecutionEnvironment.canUseDOM &&\n  (\n    (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11)\n  )\n);\n\n/**\n * Opera <= 12 includes TextEvent in window, but does not fire\n * text input events. Rely on keypress instead.\n */\nfunction isPresto() {\n  var opera = window.opera;\n  return (\n    typeof opera === 'object' &&\n    typeof opera.version === 'function' &&\n    parseInt(opera.version(), 10) <= 12\n  );\n}\n\nvar SPACEBAR_CODE = 32;\nvar SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\n// Events and their corresponding property names.\nvar eventTypes = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onBeforeInput: null}),\n      captured: keyOf({onBeforeInputCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topCompositionEnd,\n      topLevelTypes.topKeyPress,\n      topLevelTypes.topTextInput,\n      topLevelTypes.topPaste\n    ]\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onCompositionEnd: null}),\n      captured: keyOf({onCompositionEndCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topBlur,\n      topLevelTypes.topCompositionEnd,\n      topLevelTypes.topKeyDown,\n      topLevelTypes.topKeyPress,\n      topLevelTypes.topKeyUp,\n      topLevelTypes.topMouseDown\n    ]\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onCompositionStart: null}),\n      captured: keyOf({onCompositionStartCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topBlur,\n      topLevelTypes.topCompositionStart,\n      topLevelTypes.topKeyDown,\n      topLevelTypes.topKeyPress,\n      topLevelTypes.topKeyUp,\n      topLevelTypes.topMouseDown\n    ]\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onCompositionUpdate: null}),\n      captured: keyOf({onCompositionUpdateCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topBlur,\n      topLevelTypes.topCompositionUpdate,\n      topLevelTypes.topKeyDown,\n      topLevelTypes.topKeyPress,\n      topLevelTypes.topKeyUp,\n      topLevelTypes.topMouseDown\n    ]\n  }\n};\n\n// Track whether we've ever handled a keypress on the space key.\nvar hasSpaceKeypress = false;\n\n/**\n * Return whether a native keypress event is assumed to be a command.\n * This is required because Firefox fires `keypress` events for key commands\n * (cut, copy, select-all, etc.) even though no character is inserted.\n */\nfunction isKeypressCommand(nativeEvent) {\n  return (\n    (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&\n    // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n    !(nativeEvent.ctrlKey && nativeEvent.altKey)\n  );\n}\n\n\n/**\n * Translate native top level events into event types.\n *\n * @param {string} topLevelType\n * @return {object}\n */\nfunction getCompositionEventType(topLevelType) {\n  switch (topLevelType) {\n    case topLevelTypes.topCompositionStart:\n      return eventTypes.compositionStart;\n    case topLevelTypes.topCompositionEnd:\n      return eventTypes.compositionEnd;\n    case topLevelTypes.topCompositionUpdate:\n      return eventTypes.compositionUpdate;\n  }\n}\n\n/**\n * Does our fallback best-guess model think this event signifies that\n * composition has begun?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionStart(topLevelType, nativeEvent) {\n  return (\n    topLevelType === topLevelTypes.topKeyDown &&\n    nativeEvent.keyCode === START_KEYCODE\n  );\n}\n\n/**\n * Does our fallback mode think that this event is the end of composition?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionEnd(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case topLevelTypes.topKeyUp:\n      // Command keys insert or clear IME input.\n      return (END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1);\n    case topLevelTypes.topKeyDown:\n      // Expect IME keyCode on each keydown. If we get any other\n      // code we must have exited earlier.\n      return (nativeEvent.keyCode !== START_KEYCODE);\n    case topLevelTypes.topKeyPress:\n    case topLevelTypes.topMouseDown:\n    case topLevelTypes.topBlur:\n      // Events are not possible without cancelling IME.\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Google Input Tools provides composition data via a CustomEvent,\n * with the `data` property populated in the `detail` object. If this\n * is available on the event object, use it. If not, this is a plain\n * composition event and we have nothing special to extract.\n *\n * @param {object} nativeEvent\n * @return {?string}\n */\nfunction getDataFromCustomEvent(nativeEvent) {\n  var detail = nativeEvent.detail;\n  if (typeof detail === 'object' && 'data' in detail) {\n    return detail.data;\n  }\n  return null;\n}\n\n// Track the current IME composition fallback object, if any.\nvar currentComposition = null;\n\n/**\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {DOMEventTarget} topLevelTarget The listening component root node.\n * @param {string} topLevelTargetID ID of `topLevelTarget`.\n * @param {object} nativeEvent Native browser event.\n * @return {?object} A SyntheticCompositionEvent.\n */\nfunction extractCompositionEvent(\n  topLevelType,\n  topLevelTarget,\n  topLevelTargetID,\n  nativeEvent\n) {\n  var eventType;\n  var fallbackData;\n\n  if (canUseCompositionEvent) {\n    eventType = getCompositionEventType(topLevelType);\n  } else if (!currentComposition) {\n    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {\n      eventType = eventTypes.compositionStart;\n    }\n  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n    eventType = eventTypes.compositionEnd;\n  }\n\n  if (!eventType) {\n    return null;\n  }\n\n  if (useFallbackCompositionData) {\n    // The current composition is stored statically and must not be\n    // overwritten while composition continues.\n    if (!currentComposition && eventType === eventTypes.compositionStart) {\n      currentComposition = FallbackCompositionState.getPooled(topLevelTarget);\n    } else if (eventType === eventTypes.compositionEnd) {\n      if (currentComposition) {\n        fallbackData = currentComposition.getData();\n      }\n    }\n  }\n\n  var event = SyntheticCompositionEvent.getPooled(\n    eventType,\n    topLevelTargetID,\n    nativeEvent\n  );\n\n  if (fallbackData) {\n    // Inject data generated from fallback path into the synthetic event.\n    // This matches the property of native CompositionEventInterface.\n    event.data = fallbackData;\n  } else {\n    var customData = getDataFromCustomEvent(nativeEvent);\n    if (customData !== null) {\n      event.data = customData;\n    }\n  }\n\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The string corresponding to this `beforeInput` event.\n */\nfunction getNativeBeforeInputChars(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case topLevelTypes.topCompositionEnd:\n      return getDataFromCustomEvent(nativeEvent);\n    case topLevelTypes.topKeyPress:\n      /**\n       * If native `textInput` events are available, our goal is to make\n       * use of them. However, there is a special case: the spacebar key.\n       * In Webkit, preventing default on a spacebar `textInput` event\n       * cancels character insertion, but it *also* causes the browser\n       * to fall back to its default spacebar behavior of scrolling the\n       * page.\n       *\n       * Tracking at:\n       * https://code.google.com/p/chromium/issues/detail?id=355103\n       *\n       * To avoid this issue, use the keypress event as if no `textInput`\n       * event is available.\n       */\n      var which = nativeEvent.which;\n      if (which !== SPACEBAR_CODE) {\n        return null;\n      }\n\n      hasSpaceKeypress = true;\n      return SPACEBAR_CHAR;\n\n    case topLevelTypes.topTextInput:\n      // Record the characters to be added to the DOM.\n      var chars = nativeEvent.data;\n\n      // If it's a spacebar character, assume that we have already handled\n      // it at the keypress level and bail immediately. Android Chrome\n      // doesn't give us keycodes, so we need to blacklist it.\n      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n        return null;\n      }\n\n      return chars;\n\n    default:\n      // For other native event types, do nothing.\n      return null;\n  }\n}\n\n/**\n * For browsers that do not provide the `textInput` event, extract the\n * appropriate string to use for SyntheticInputEvent.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The fallback string for this `beforeInput` event.\n */\nfunction getFallbackBeforeInputChars(topLevelType, nativeEvent) {\n  // If we are currently composing (IME) and using a fallback to do so,\n  // try to extract the composed characters from the fallback object.\n  if (currentComposition) {\n    if (\n      topLevelType === topLevelTypes.topCompositionEnd ||\n      isFallbackCompositionEnd(topLevelType, nativeEvent)\n    ) {\n      var chars = currentComposition.getData();\n      FallbackCompositionState.release(currentComposition);\n      currentComposition = null;\n      return chars;\n    }\n    return null;\n  }\n\n  switch (topLevelType) {\n    case topLevelTypes.topPaste:\n      // If a paste event occurs after a keypress, throw out the input\n      // chars. Paste events should not lead to BeforeInput events.\n      return null;\n    case topLevelTypes.topKeyPress:\n      /**\n       * As of v27, Firefox may fire keypress events even when no character\n       * will be inserted. A few possibilities:\n       *\n       * - `which` is `0`. Arrow keys, Esc key, etc.\n       *\n       * - `which` is the pressed key code, but no char is available.\n       *   Ex: 'AltGr + d` in Polish. There is no modified character for\n       *   this key combination and no character is inserted into the\n       *   document, but FF fires the keypress for char code `100` anyway.\n       *   No `input` event will occur.\n       *\n       * - `which` is the pressed key code, but a command combination is\n       *   being used. Ex: `Cmd+C`. No character is inserted, and no\n       *   `input` event will occur.\n       */\n      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {\n        return String.fromCharCode(nativeEvent.which);\n      }\n      return null;\n    case topLevelTypes.topCompositionEnd:\n      return useFallbackCompositionData ? null : nativeEvent.data;\n    default:\n      return null;\n  }\n}\n\n/**\n * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n * `textInput` or fallback behavior.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {DOMEventTarget} topLevelTarget The listening component root node.\n * @param {string} topLevelTargetID ID of `topLevelTarget`.\n * @param {object} nativeEvent Native browser event.\n * @return {?object} A SyntheticInputEvent.\n */\nfunction extractBeforeInputEvent(\n  topLevelType,\n  topLevelTarget,\n  topLevelTargetID,\n  nativeEvent\n) {\n  var chars;\n\n  if (canUseTextInputEvent) {\n    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);\n  } else {\n    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);\n  }\n\n  // If no characters are being inserted, no BeforeInput event should\n  // be fired.\n  if (!chars) {\n    return null;\n  }\n\n  var event = SyntheticInputEvent.getPooled(\n    eventTypes.beforeInput,\n    topLevelTargetID,\n    nativeEvent\n  );\n\n  event.data = chars;\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * Create an `onBeforeInput` event to match\n * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n *\n * This event plugin is based on the native `textInput` event\n * available in Chrome, Safari, Opera, and IE. This event fires after\n * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n *\n * `beforeInput` is spec'd but not implemented in any browsers, and\n * the `input` event does not provide any useful information about what has\n * actually been added, contrary to the spec. Thus, `textInput` is the best\n * available event to identify the characters that have actually been inserted\n * into the target node.\n *\n * This plugin is also responsible for emitting `composition` events, thus\n * allowing us to share composition fallback code for both `beforeInput` and\n * `composition` event types.\n */\nvar BeforeInputEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID,\n    nativeEvent\n  ) {\n    return [\n      extractCompositionEvent(\n        topLevelType,\n        topLevelTarget,\n        topLevelTargetID,\n        nativeEvent\n      ),\n      extractBeforeInputEvent(\n        topLevelType,\n        topLevelTarget,\n        topLevelTargetID,\n        nativeEvent\n      )\n    ];\n  }\n};\n\nmodule.exports = BeforeInputEventPlugin;\n\n},{\"./EventConstants\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventConstants.js\",\"./EventPropagators\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventPropagators.js\",\"./ExecutionEnvironment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ExecutionEnvironment.js\",\"./FallbackCompositionState\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/FallbackCompositionState.js\",\"./SyntheticCompositionEvent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticCompositionEvent.js\",\"./SyntheticInputEvent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticInputEvent.js\",\"./keyOf\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/keyOf.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/CSSProperty.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSProperty\n */\n\n'use strict';\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\nvar isUnitlessNumber = {\n  boxFlex: true,\n  boxFlexGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  strokeDashoffset: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\nObject.keys(isUnitlessNumber).forEach(function(prop) {\n  prefixes.forEach(function(prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n\n/**\n * Most style properties can be unset by doing .style[prop] = '' but IE8\n * doesn't like doing that with shorthand properties so for the properties that\n * IE8 breaks on, which are listed here, we instead unset each of the\n * individual properties. See http://bugs.jquery.com/ticket/12385.\n * The 4-value 'clock' properties like margin, padding, border-width seem to\n * behave without any problems. Curiously, list-style works too without any\n * special prodding.\n */\nvar shorthandPropertyExpansions = {\n  background: {\n    backgroundImage: true,\n    backgroundPosition: true,\n    backgroundRepeat: true,\n    backgroundColor: true\n  },\n  border: {\n    borderWidth: true,\n    borderStyle: true,\n    borderColor: true\n  },\n  borderBottom: {\n    borderBottomWidth: true,\n    borderBottomStyle: true,\n    borderBottomColor: true\n  },\n  borderLeft: {\n    borderLeftWidth: true,\n    borderLeftStyle: true,\n    borderLeftColor: true\n  },\n  borderRight: {\n    borderRightWidth: true,\n    borderRightStyle: true,\n    borderRightColor: true\n  },\n  borderTop: {\n    borderTopWidth: true,\n    borderTopStyle: true,\n    borderTopColor: true\n  },\n  font: {\n    fontStyle: true,\n    fontVariant: true,\n    fontWeight: true,\n    fontSize: true,\n    lineHeight: true,\n    fontFamily: true\n  }\n};\n\nvar CSSProperty = {\n  isUnitlessNumber: isUnitlessNumber,\n  shorthandPropertyExpansions: shorthandPropertyExpansions\n};\n\nmodule.exports = CSSProperty;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/CSSPropertyOperations.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSPropertyOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CSSProperty = require(\"./CSSProperty\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar camelizeStyleName = require(\"./camelizeStyleName\");\nvar dangerousStyleValue = require(\"./dangerousStyleValue\");\nvar hyphenateStyleName = require(\"./hyphenateStyleName\");\nvar memoizeStringOnly = require(\"./memoizeStringOnly\");\nvar warning = require(\"./warning\");\n\nvar processStyleName = memoizeStringOnly(function(styleName) {\n  return hyphenateStyleName(styleName);\n});\n\nvar styleFloatAccessor = 'cssFloat';\nif (ExecutionEnvironment.canUseDOM) {\n  // IE8 only supports accessing cssFloat (standard) as styleFloat\n  if (document.documentElement.style.cssFloat === undefined) {\n    styleFloatAccessor = 'styleFloat';\n  }\n}\n\nif (\"production\" !== process.env.NODE_ENV) {\n  // 'msTransform' is correct, but the other prefixes should be capitalized\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n\n  // style values shouldn't contain a semicolon\n  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\n  var warnedStyleNames = {};\n  var warnedStyleValues = {};\n\n  var warnHyphenatedStyleName = function(name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      'Unsupported style property %s. Did you mean %s?',\n      name,\n      camelizeStyleName(name)\n    ) : null);\n  };\n\n  var warnBadVendoredStyleName = function(name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      'Unsupported vendor-prefixed style property %s. Did you mean %s?',\n      name,\n      name.charAt(0).toUpperCase() + name.slice(1)\n    ) : null);\n  };\n\n  var warnStyleValueWithSemicolon = function(name, value) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      'Style property values shouldn\\'t contain a semicolon. ' +\n      'Try \"%s: %s\" instead.',\n      name,\n      value.replace(badStyleValueWithSemicolonPattern, '')\n    ) : null);\n  };\n\n  /**\n   * @param {string} name\n   * @param {*} value\n   */\n  var warnValidStyle = function(name, value) {\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value);\n    }\n  };\n}\n\n/**\n * Operations for dealing with CSS properties.\n */\nvar CSSPropertyOperations = {\n\n  /**\n   * Serializes a mapping of style properties for use as inline styles:\n   *\n   *   > createMarkupForStyles({width: '200px', height: 0})\n   *   \"width:200px;height:0;\"\n   *\n   * Undefined values are ignored so that declarative programming is easier.\n   * The result should be HTML-escaped before insertion into the DOM.\n   *\n   * @param {object} styles\n   * @return {?string}\n   */\n  createMarkupForStyles: function(styles) {\n    var serialized = '';\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      var styleValue = styles[styleName];\n      if (\"production\" !== process.env.NODE_ENV) {\n        warnValidStyle(styleName, styleValue);\n      }\n      if (styleValue != null) {\n        serialized += processStyleName(styleName) + ':';\n        serialized += dangerousStyleValue(styleName, styleValue) + ';';\n      }\n    }\n    return serialized || null;\n  },\n\n  /**\n   * Sets the value for multiple styles on a node.  If a value is specified as\n   * '' (empty string), the corresponding style property will be unset.\n   *\n   * @param {DOMElement} node\n   * @param {object} styles\n   */\n  setValueForStyles: function(node, styles) {\n    var style = node.style;\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      if (\"production\" !== process.env.NODE_ENV) {\n        warnValidStyle(styleName, styles[styleName]);\n      }\n      var styleValue = dangerousStyleValue(styleName, styles[styleName]);\n      if (styleName === 'float') {\n        styleName = styleFloatAccessor;\n      }\n      if (styleValue) {\n        style[styleName] = styleValue;\n      } else {\n        var expansion = CSSProperty.shorthandPropertyExpansions[styleName];\n        if (expansion) {\n          // Shorthand property that IE8 won't like unsetting, so unset each\n          // component to placate it\n          for (var individualStyleName in expansion) {\n            style[individualStyleName] = '';\n          }\n        } else {\n          style[styleName] = '';\n        }\n      }\n    }\n  }\n\n};\n\nmodule.exports = CSSPropertyOperations;\n\n}).call(this,require('_process'))\n},{\"./CSSProperty\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/CSSProperty.js\",\"./ExecutionEnvironment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ExecutionEnvironment.js\",\"./camelizeStyleName\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/camelizeStyleName.js\",\"./dangerousStyleValue\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/dangerousStyleValue.js\",\"./hyphenateStyleName\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/hyphenateStyleName.js\",\"./memoizeStringOnly\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/memoizeStringOnly.js\",\"./warning\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/warning.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/CallbackQueue.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CallbackQueue\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\n\n/**\n * A specialized pseudo-event module to help keep track of components waiting to\n * be notified when their DOM representations are available for use.\n *\n * This implements `PooledClass`, so you should never need to instantiate this.\n * Instead, use `CallbackQueue.getPooled()`.\n *\n * @class ReactMountReady\n * @implements PooledClass\n * @internal\n */\nfunction CallbackQueue() {\n  this._callbacks = null;\n  this._contexts = null;\n}\n\nassign(CallbackQueue.prototype, {\n\n  /**\n   * Enqueues a callback to be invoked when `notifyAll` is invoked.\n   *\n   * @param {function} callback Invoked when `notifyAll` is invoked.\n   * @param {?object} context Context to call `callback` with.\n   * @internal\n   */\n  enqueue: function(callback, context) {\n    this._callbacks = this._callbacks || [];\n    this._contexts = this._contexts || [];\n    this._callbacks.push(callback);\n    this._contexts.push(context);\n  },\n\n  /**\n   * Invokes all enqueued callbacks and clears the queue. This is invoked after\n   * the DOM representation of a component has been created or updated.\n   *\n   * @internal\n   */\n  notifyAll: function() {\n    var callbacks = this._callbacks;\n    var contexts = this._contexts;\n    if (callbacks) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        callbacks.length === contexts.length,\n        'Mismatched list of contexts in callback queue'\n      ) : invariant(callbacks.length === contexts.length));\n      this._callbacks = null;\n      this._contexts = null;\n      for (var i = 0, l = callbacks.length; i < l; i++) {\n        callbacks[i].call(contexts[i]);\n      }\n      callbacks.length = 0;\n      contexts.length = 0;\n    }\n  },\n\n  /**\n   * Resets the internal queue.\n   *\n   * @internal\n   */\n  reset: function() {\n    this._callbacks = null;\n    this._contexts = null;\n  },\n\n  /**\n   * `PooledClass` looks for this.\n   */\n  destructor: function() {\n    this.reset();\n  }\n\n});\n\nPooledClass.addPoolingTo(CallbackQueue);\n\nmodule.exports = CallbackQueue;\n\n}).call(this,require('_process'))\n},{\"./Object.assign\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Object.assign.js\",\"./PooledClass\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/PooledClass.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ChangeEventPlugin.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ChangeEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPluginHub = require(\"./EventPluginHub\");\nvar EventPropagators = require(\"./EventPropagators\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\nvar ReactUpdates = require(\"./ReactUpdates\");\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\nvar isEventSupported = require(\"./isEventSupported\");\nvar isTextInputElement = require(\"./isTextInputElement\");\nvar keyOf = require(\"./keyOf\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onChange: null}),\n      captured: keyOf({onChangeCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topBlur,\n      topLevelTypes.topChange,\n      topLevelTypes.topClick,\n      topLevelTypes.topFocus,\n      topLevelTypes.topInput,\n      topLevelTypes.topKeyDown,\n      topLevelTypes.topKeyUp,\n      topLevelTypes.topSelectionChange\n    ]\n  }\n};\n\n/**\n * For IE shims\n */\nvar activeElement = null;\nvar activeElementID = null;\nvar activeElementValue = null;\nvar activeElementValueProp = null;\n\n/**\n * SECTION: handle `change` event\n */\nfunction shouldUseChangeEvent(elem) {\n  return (\n    elem.nodeName === 'SELECT' ||\n    (elem.nodeName === 'INPUT' && elem.type === 'file')\n  );\n}\n\nvar doesChangeEventBubble = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // See `handleChange` comment below\n  doesChangeEventBubble = isEventSupported('change') && (\n    (!('documentMode' in document) || document.documentMode > 8)\n  );\n}\n\nfunction manualDispatchChangeEvent(nativeEvent) {\n  var event = SyntheticEvent.getPooled(\n    eventTypes.change,\n    activeElementID,\n    nativeEvent\n  );\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n\n  // If change and propertychange bubbled, we'd just bind to it like all the\n  // other events and have it go through ReactBrowserEventEmitter. Since it\n  // doesn't, we manually listen for the events and so we have to enqueue and\n  // process the abstract event manually.\n  //\n  // Batching is necessary here in order to ensure that all event handlers run\n  // before the next rerender (including event handlers attached to ancestor\n  // elements instead of directly on the input). Without this, controlled\n  // components don't work properly in conjunction with event bubbling because\n  // the component is rerendered and the value reverted before all the event\n  // handlers can run. See https://github.com/facebook/react/issues/708.\n  ReactUpdates.batchedUpdates(runEventInBatch, event);\n}\n\nfunction runEventInBatch(event) {\n  EventPluginHub.enqueueEvents(event);\n  EventPluginHub.processEventQueue();\n}\n\nfunction startWatchingForChangeEventIE8(target, targetID) {\n  activeElement = target;\n  activeElementID = targetID;\n  activeElement.attachEvent('onchange', manualDispatchChangeEvent);\n}\n\nfunction stopWatchingForChangeEventIE8() {\n  if (!activeElement) {\n    return;\n  }\n  activeElement.detachEvent('onchange', manualDispatchChangeEvent);\n  activeElement = null;\n  activeElementID = null;\n}\n\nfunction getTargetIDForChangeEvent(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topChange) {\n    return topLevelTargetID;\n  }\n}\nfunction handleEventsForChangeEventIE8(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topFocus) {\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForChangeEventIE8();\n    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);\n  } else if (topLevelType === topLevelTypes.topBlur) {\n    stopWatchingForChangeEventIE8();\n  }\n}\n\n\n/**\n * SECTION: handle `input` event\n */\nvar isInputEventSupported = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // IE9 claims to support the input event but fails to trigger it when\n  // deleting text, so we ignore its input events\n  isInputEventSupported = isEventSupported('input') && (\n    (!('documentMode' in document) || document.documentMode > 9)\n  );\n}\n\n/**\n * (For old IE.) Replacement getter/setter for the `value` property that gets\n * set on the active element.\n */\nvar newValueProp =  {\n  get: function() {\n    return activeElementValueProp.get.call(this);\n  },\n  set: function(val) {\n    // Cast to a string so we can do equality checks.\n    activeElementValue = '' + val;\n    activeElementValueProp.set.call(this, val);\n  }\n};\n\n/**\n * (For old IE.) Starts tracking propertychange events on the passed-in element\n * and override the value property so that we can distinguish user events from\n * value changes in JS.\n */\nfunction startWatchingForValueChange(target, targetID) {\n  activeElement = target;\n  activeElementID = targetID;\n  activeElementValue = target.value;\n  activeElementValueProp = Object.getOwnPropertyDescriptor(\n    target.constructor.prototype,\n    'value'\n  );\n\n  Object.defineProperty(activeElement, 'value', newValueProp);\n  activeElement.attachEvent('onpropertychange', handlePropertyChange);\n}\n\n/**\n * (For old IE.) Removes the event listeners from the currently-tracked element,\n * if any exists.\n */\nfunction stopWatchingForValueChange() {\n  if (!activeElement) {\n    return;\n  }\n\n  // delete restores the original property definition\n  delete activeElement.value;\n  activeElement.detachEvent('onpropertychange', handlePropertyChange);\n\n  activeElement = null;\n  activeElementID = null;\n  activeElementValue = null;\n  activeElementValueProp = null;\n}\n\n/**\n * (For old IE.) Handles a propertychange event, sending a `change` event if\n * the value of the active element has changed.\n */\nfunction handlePropertyChange(nativeEvent) {\n  if (nativeEvent.propertyName !== 'value') {\n    return;\n  }\n  var value = nativeEvent.srcElement.value;\n  if (value === activeElementValue) {\n    return;\n  }\n  activeElementValue = value;\n\n  manualDispatchChangeEvent(nativeEvent);\n}\n\n/**\n * If a `change` event should be fired, returns the target's ID.\n */\nfunction getTargetIDForInputEvent(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topInput) {\n    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly\n    // what we want so fall through here and trigger an abstract event\n    return topLevelTargetID;\n  }\n}\n\n// For IE8 and IE9.\nfunction handleEventsForInputEventIE(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topFocus) {\n    // In IE8, we can capture almost all .value changes by adding a\n    // propertychange handler and looking for events with propertyName\n    // equal to 'value'\n    // In IE9, propertychange fires for most input events but is buggy and\n    // doesn't fire when text is deleted, but conveniently, selectionchange\n    // appears to fire in all of the remaining cases so we catch those and\n    // forward the event if the value has changed\n    // In either case, we don't want to call the event handler if the value\n    // is changed from JS so we redefine a setter for `.value` that updates\n    // our activeElementValue variable, allowing us to ignore those changes\n    //\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForValueChange();\n    startWatchingForValueChange(topLevelTarget, topLevelTargetID);\n  } else if (topLevelType === topLevelTypes.topBlur) {\n    stopWatchingForValueChange();\n  }\n}\n\n// For IE8 and IE9.\nfunction getTargetIDForInputEventIE(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topSelectionChange ||\n      topLevelType === topLevelTypes.topKeyUp ||\n      topLevelType === topLevelTypes.topKeyDown) {\n    // On the selectionchange event, the target is just document which isn't\n    // helpful for us so just check activeElement instead.\n    //\n    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n    // propertychange on the first input event after setting `value` from a\n    // script and fires only keydown, keypress, keyup. Catching keyup usually\n    // gets it and catching keydown lets us fire an event for the first\n    // keystroke if user does a key repeat (it'll be a little delayed: right\n    // before the second keystroke). Other input methods (e.g., paste) seem to\n    // fire selectionchange normally.\n    if (activeElement && activeElement.value !== activeElementValue) {\n      activeElementValue = activeElement.value;\n      return activeElementID;\n    }\n  }\n}\n\n\n/**\n * SECTION: handle `click` event\n */\nfunction shouldUseClickEvent(elem) {\n  // Use the `click` event to detect changes to checkbox and radio inputs.\n  // This approach works across all browsers, whereas `change` does not fire\n  // until `blur` in IE8.\n  return (\n    elem.nodeName === 'INPUT' &&\n    (elem.type === 'checkbox' || elem.type === 'radio')\n  );\n}\n\nfunction getTargetIDForClickEvent(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topClick) {\n    return topLevelTargetID;\n  }\n}\n\n/**\n * This plugin creates an `onChange` event that normalizes change events\n * across form elements. This event fires at a time when it's possible to\n * change the element's value without seeing a flicker.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - select\n */\nvar ChangeEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n\n    var getTargetIDFunc, handleEventFunc;\n    if (shouldUseChangeEvent(topLevelTarget)) {\n      if (doesChangeEventBubble) {\n        getTargetIDFunc = getTargetIDForChangeEvent;\n      } else {\n        handleEventFunc = handleEventsForChangeEventIE8;\n      }\n    } else if (isTextInputElement(topLevelTarget)) {\n      if (isInputEventSupported) {\n        getTargetIDFunc = getTargetIDForInputEvent;\n      } else {\n        getTargetIDFunc = getTargetIDForInputEventIE;\n        handleEventFunc = handleEventsForInputEventIE;\n      }\n    } else if (shouldUseClickEvent(topLevelTarget)) {\n      getTargetIDFunc = getTargetIDForClickEvent;\n    }\n\n    if (getTargetIDFunc) {\n      var targetID = getTargetIDFunc(\n        topLevelType,\n        topLevelTarget,\n        topLevelTargetID\n      );\n      if (targetID) {\n        var event = SyntheticEvent.getPooled(\n          eventTypes.change,\n          targetID,\n          nativeEvent\n        );\n        EventPropagators.accumulateTwoPhaseDispatches(event);\n        return event;\n      }\n    }\n\n    if (handleEventFunc) {\n      handleEventFunc(\n        topLevelType,\n        topLevelTarget,\n        topLevelTargetID\n      );\n    }\n  }\n\n};\n\nmodule.exports = ChangeEventPlugin;\n\n},{\"./EventConstants\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventConstants.js\",\"./EventPluginHub\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventPluginHub.js\",\"./EventPropagators\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventPropagators.js\",\"./ExecutionEnvironment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ExecutionEnvironment.js\",\"./ReactUpdates\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactUpdates.js\",\"./SyntheticEvent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticEvent.js\",\"./isEventSupported\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/isEventSupported.js\",\"./isTextInputElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/isTextInputElement.js\",\"./keyOf\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/keyOf.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ClientReactRootIndex.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ClientReactRootIndex\n * @typechecks\n */\n\n'use strict';\n\nvar nextReactRootIndex = 0;\n\nvar ClientReactRootIndex = {\n  createReactRootIndex: function() {\n    return nextReactRootIndex++;\n  }\n};\n\nmodule.exports = ClientReactRootIndex;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/DOMChildrenOperations.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMChildrenOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar Danger = require(\"./Danger\");\nvar ReactMultiChildUpdateTypes = require(\"./ReactMultiChildUpdateTypes\");\n\nvar setTextContent = require(\"./setTextContent\");\nvar invariant = require(\"./invariant\");\n\n/**\n * Inserts `childNode` as a child of `parentNode` at the `index`.\n *\n * @param {DOMElement} parentNode Parent node in which to insert.\n * @param {DOMElement} childNode Child node to insert.\n * @param {number} index Index at which to insert the child.\n * @internal\n */\nfunction insertChildAt(parentNode, childNode, index) {\n  // By exploiting arrays returning `undefined` for an undefined index, we can\n  // rely exclusively on `insertBefore(node, null)` instead of also using\n  // `appendChild(node)`. However, using `undefined` is not allowed by all\n  // browsers so we must replace it with `null`.\n  parentNode.insertBefore(\n    childNode,\n    parentNode.childNodes[index] || null\n  );\n}\n\n/**\n * Operations for updating with DOM children.\n */\nvar DOMChildrenOperations = {\n\n  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,\n\n  updateTextContent: setTextContent,\n\n  /**\n   * Updates a component's children by processing a series of updates. The\n   * update configurations are each expected to have a `parentNode` property.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @param {array<string>} markupList List of markup strings.\n   * @internal\n   */\n  processUpdates: function(updates, markupList) {\n    var update;\n    // Mapping from parent IDs to initial child orderings.\n    var initialChildren = null;\n    // List of children that will be moved or removed.\n    var updatedChildren = null;\n\n    for (var i = 0; i < updates.length; i++) {\n      update = updates[i];\n      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING ||\n          update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {\n        var updatedIndex = update.fromIndex;\n        var updatedChild = update.parentNode.childNodes[updatedIndex];\n        var parentID = update.parentID;\n\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          updatedChild,\n          'processUpdates(): Unable to find child %s of element. This ' +\n          'probably means the DOM was unexpectedly mutated (e.g., by the ' +\n          'browser), usually due to forgetting a <tbody> when using tables, ' +\n          'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' +\n          'in an <svg> parent. Try inspecting the child nodes of the element ' +\n          'with React ID `%s`.',\n          updatedIndex,\n          parentID\n        ) : invariant(updatedChild));\n\n        initialChildren = initialChildren || {};\n        initialChildren[parentID] = initialChildren[parentID] || [];\n        initialChildren[parentID][updatedIndex] = updatedChild;\n\n        updatedChildren = updatedChildren || [];\n        updatedChildren.push(updatedChild);\n      }\n    }\n\n    var renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);\n\n    // Remove updated children first so that `toIndex` is consistent.\n    if (updatedChildren) {\n      for (var j = 0; j < updatedChildren.length; j++) {\n        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);\n      }\n    }\n\n    for (var k = 0; k < updates.length; k++) {\n      update = updates[k];\n      switch (update.type) {\n        case ReactMultiChildUpdateTypes.INSERT_MARKUP:\n          insertChildAt(\n            update.parentNode,\n            renderedMarkup[update.markupIndex],\n            update.toIndex\n          );\n          break;\n        case ReactMultiChildUpdateTypes.MOVE_EXISTING:\n          insertChildAt(\n            update.parentNode,\n            initialChildren[update.parentID][update.fromIndex],\n            update.toIndex\n          );\n          break;\n        case ReactMultiChildUpdateTypes.TEXT_CONTENT:\n          setTextContent(\n            update.parentNode,\n            update.textContent\n          );\n          break;\n        case ReactMultiChildUpdateTypes.REMOVE_NODE:\n          // Already removed by the for-loop above.\n          break;\n      }\n    }\n  }\n\n};\n\nmodule.exports = DOMChildrenOperations;\n\n}).call(this,require('_process'))\n},{\"./Danger\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Danger.js\",\"./ReactMultiChildUpdateTypes\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactMultiChildUpdateTypes.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"./setTextContent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/setTextContent.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/DOMProperty.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMProperty\n * @typechecks static-only\n */\n\n/*jslint bitwise: true */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\nfunction checkMask(value, bitmask) {\n  return (value & bitmask) === bitmask;\n}\n\nvar DOMPropertyInjection = {\n  /**\n   * Mapping from normalized, camelcased property names to a configuration that\n   * specifies how the associated DOM property should be accessed or rendered.\n   */\n  MUST_USE_ATTRIBUTE: 0x1,\n  MUST_USE_PROPERTY: 0x2,\n  HAS_SIDE_EFFECTS: 0x4,\n  HAS_BOOLEAN_VALUE: 0x8,\n  HAS_NUMERIC_VALUE: 0x10,\n  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,\n  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,\n\n  /**\n   * Inject some specialized knowledge about the DOM. This takes a config object\n   * with the following properties:\n   *\n   * isCustomAttribute: function that given an attribute name will return true\n   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*\n   * attributes where it's impossible to enumerate all of the possible\n   * attribute names,\n   *\n   * Properties: object mapping DOM property name to one of the\n   * DOMPropertyInjection constants or null. If your attribute isn't in here,\n   * it won't get written to the DOM.\n   *\n   * DOMAttributeNames: object mapping React attribute name to the DOM\n   * attribute name. Attribute names not specified use the **lowercase**\n   * normalized name.\n   *\n   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.\n   * Property names not specified use the normalized name.\n   *\n   * DOMMutationMethods: Properties that require special mutation methods. If\n   * `value` is undefined, the mutation method should unset the property.\n   *\n   * @param {object} domPropertyConfig the config as described above.\n   */\n  injectDOMPropertyConfig: function(domPropertyConfig) {\n    var Properties = domPropertyConfig.Properties || {};\n    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};\n    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};\n    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};\n\n    if (domPropertyConfig.isCustomAttribute) {\n      DOMProperty._isCustomAttributeFunctions.push(\n        domPropertyConfig.isCustomAttribute\n      );\n    }\n\n    for (var propName in Properties) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        !DOMProperty.isStandardName.hasOwnProperty(propName),\n        'injectDOMPropertyConfig(...): You\\'re trying to inject DOM property ' +\n        '\\'%s\\' which has already been injected. You may be accidentally ' +\n        'injecting the same DOM property config twice, or you may be ' +\n        'injecting two configs that have conflicting property names.',\n        propName\n      ) : invariant(!DOMProperty.isStandardName.hasOwnProperty(propName)));\n\n      DOMProperty.isStandardName[propName] = true;\n\n      var lowerCased = propName.toLowerCase();\n      DOMProperty.getPossibleStandardName[lowerCased] = propName;\n\n      if (DOMAttributeNames.hasOwnProperty(propName)) {\n        var attributeName = DOMAttributeNames[propName];\n        DOMProperty.getPossibleStandardName[attributeName] = propName;\n        DOMProperty.getAttributeName[propName] = attributeName;\n      } else {\n        DOMProperty.getAttributeName[propName] = lowerCased;\n      }\n\n      DOMProperty.getPropertyName[propName] =\n        DOMPropertyNames.hasOwnProperty(propName) ?\n          DOMPropertyNames[propName] :\n          propName;\n\n      if (DOMMutationMethods.hasOwnProperty(propName)) {\n        DOMProperty.getMutationMethod[propName] = DOMMutationMethods[propName];\n      } else {\n        DOMProperty.getMutationMethod[propName] = null;\n      }\n\n      var propConfig = Properties[propName];\n      DOMProperty.mustUseAttribute[propName] =\n        checkMask(propConfig, DOMPropertyInjection.MUST_USE_ATTRIBUTE);\n      DOMProperty.mustUseProperty[propName] =\n        checkMask(propConfig, DOMPropertyInjection.MUST_USE_PROPERTY);\n      DOMProperty.hasSideEffects[propName] =\n        checkMask(propConfig, DOMPropertyInjection.HAS_SIDE_EFFECTS);\n      DOMProperty.hasBooleanValue[propName] =\n        checkMask(propConfig, DOMPropertyInjection.HAS_BOOLEAN_VALUE);\n      DOMProperty.hasNumericValue[propName] =\n        checkMask(propConfig, DOMPropertyInjection.HAS_NUMERIC_VALUE);\n      DOMProperty.hasPositiveNumericValue[propName] =\n        checkMask(propConfig, DOMPropertyInjection.HAS_POSITIVE_NUMERIC_VALUE);\n      DOMProperty.hasOverloadedBooleanValue[propName] =\n        checkMask(propConfig, DOMPropertyInjection.HAS_OVERLOADED_BOOLEAN_VALUE);\n\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        !DOMProperty.mustUseAttribute[propName] ||\n          !DOMProperty.mustUseProperty[propName],\n        'DOMProperty: Cannot require using both attribute and property: %s',\n        propName\n      ) : invariant(!DOMProperty.mustUseAttribute[propName] ||\n        !DOMProperty.mustUseProperty[propName]));\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        DOMProperty.mustUseProperty[propName] ||\n          !DOMProperty.hasSideEffects[propName],\n        'DOMProperty: Properties that have side effects must use property: %s',\n        propName\n      ) : invariant(DOMProperty.mustUseProperty[propName] ||\n        !DOMProperty.hasSideEffects[propName]));\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        !!DOMProperty.hasBooleanValue[propName] +\n          !!DOMProperty.hasNumericValue[propName] +\n          !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1,\n        'DOMProperty: Value can be one of boolean, overloaded boolean, or ' +\n        'numeric value, but not a combination: %s',\n        propName\n      ) : invariant(!!DOMProperty.hasBooleanValue[propName] +\n        !!DOMProperty.hasNumericValue[propName] +\n        !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1));\n    }\n  }\n};\nvar defaultValueCache = {};\n\n/**\n * DOMProperty exports lookup objects that can be used like functions:\n *\n *   > DOMProperty.isValid['id']\n *   true\n *   > DOMProperty.isValid['foobar']\n *   undefined\n *\n * Although this may be confusing, it performs better in general.\n *\n * @see http://jsperf.com/key-exists\n * @see http://jsperf.com/key-missing\n */\nvar DOMProperty = {\n\n  ID_ATTRIBUTE_NAME: 'data-reactid',\n\n  /**\n   * Checks whether a property name is a standard property.\n   * @type {Object}\n   */\n  isStandardName: {},\n\n  /**\n   * Mapping from lowercase property names to the properly cased version, used\n   * to warn in the case of missing properties.\n   * @type {Object}\n   */\n  getPossibleStandardName: {},\n\n  /**\n   * Mapping from normalized names to attribute names that differ. Attribute\n   * names are used when rendering markup or with `*Attribute()`.\n   * @type {Object}\n   */\n  getAttributeName: {},\n\n  /**\n   * Mapping from normalized names to properties on DOM node instances.\n   * (This includes properties that mutate due to external factors.)\n   * @type {Object}\n   */\n  getPropertyName: {},\n\n  /**\n   * Mapping from normalized names to mutation methods. This will only exist if\n   * mutation cannot be set simply by the property or `setAttribute()`.\n   * @type {Object}\n   */\n  getMutationMethod: {},\n\n  /**\n   * Whether the property must be accessed and mutated as an object property.\n   * @type {Object}\n   */\n  mustUseAttribute: {},\n\n  /**\n   * Whether the property must be accessed and mutated using `*Attribute()`.\n   * (This includes anything that fails `<propName> in <element>`.)\n   * @type {Object}\n   */\n  mustUseProperty: {},\n\n  /**\n   * Whether or not setting a value causes side effects such as triggering\n   * resources to be loaded or text selection changes. We must ensure that\n   * the value is only set if it has changed.\n   * @type {Object}\n   */\n  hasSideEffects: {},\n\n  /**\n   * Whether the property should be removed when set to a falsey value.\n   * @type {Object}\n   */\n  hasBooleanValue: {},\n\n  /**\n   * Whether the property must be numeric or parse as a\n   * numeric and should be removed when set to a falsey value.\n   * @type {Object}\n   */\n  hasNumericValue: {},\n\n  /**\n   * Whether the property must be positive numeric or parse as a positive\n   * numeric and should be removed when set to a falsey value.\n   * @type {Object}\n   */\n  hasPositiveNumericValue: {},\n\n  /**\n   * Whether the property can be used as a flag as well as with a value. Removed\n   * when strictly equal to false; present without a value when strictly equal\n   * to true; present with a value otherwise.\n   * @type {Object}\n   */\n  hasOverloadedBooleanValue: {},\n\n  /**\n   * All of the isCustomAttribute() functions that have been injected.\n   */\n  _isCustomAttributeFunctions: [],\n\n  /**\n   * Checks whether a property name is a custom attribute.\n   * @method\n   */\n  isCustomAttribute: function(attributeName) {\n    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {\n      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];\n      if (isCustomAttributeFn(attributeName)) {\n        return true;\n      }\n    }\n    return false;\n  },\n\n  /**\n   * Returns the default property value for a DOM property (i.e., not an\n   * attribute). Most default values are '' or false, but not all. Worse yet,\n   * some (in particular, `type`) vary depending on the type of element.\n   *\n   * TODO: Is it better to grab all the possible properties when creating an\n   * element to avoid having to create the same element twice?\n   */\n  getDefaultValueForProperty: function(nodeName, prop) {\n    var nodeDefaults = defaultValueCache[nodeName];\n    var testElement;\n    if (!nodeDefaults) {\n      defaultValueCache[nodeName] = nodeDefaults = {};\n    }\n    if (!(prop in nodeDefaults)) {\n      testElement = document.createElement(nodeName);\n      nodeDefaults[prop] = testElement[prop];\n    }\n    return nodeDefaults[prop];\n  },\n\n  injection: DOMPropertyInjection\n};\n\nmodule.exports = DOMProperty;\n\n}).call(this,require('_process'))\n},{\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/DOMPropertyOperations.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMPropertyOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\n\nvar quoteAttributeValueForBrowser = require(\"./quoteAttributeValueForBrowser\");\nvar warning = require(\"./warning\");\n\nfunction shouldIgnoreValue(name, value) {\n  return value == null ||\n    (DOMProperty.hasBooleanValue[name] && !value) ||\n    (DOMProperty.hasNumericValue[name] && isNaN(value)) ||\n    (DOMProperty.hasPositiveNumericValue[name] && (value < 1)) ||\n    (DOMProperty.hasOverloadedBooleanValue[name] && value === false);\n}\n\nif (\"production\" !== process.env.NODE_ENV) {\n  var reactProps = {\n    children: true,\n    dangerouslySetInnerHTML: true,\n    key: true,\n    ref: true\n  };\n  var warnedProperties = {};\n\n  var warnUnknownProperty = function(name) {\n    if (reactProps.hasOwnProperty(name) && reactProps[name] ||\n        warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {\n      return;\n    }\n\n    warnedProperties[name] = true;\n    var lowerCasedName = name.toLowerCase();\n\n    // data-* attributes should be lowercase; suggest the lowercase version\n    var standardName = (\n      DOMProperty.isCustomAttribute(lowerCasedName) ?\n        lowerCasedName :\n      DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ?\n        DOMProperty.getPossibleStandardName[lowerCasedName] :\n        null\n    );\n\n    // For now, only warn when we have a suggested correction. This prevents\n    // logging too much when using transferPropsTo.\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      standardName == null,\n      'Unknown DOM property %s. Did you mean %s?',\n      name,\n      standardName\n    ) : null);\n\n  };\n}\n\n/**\n * Operations for dealing with DOM properties.\n */\nvar DOMPropertyOperations = {\n\n  /**\n   * Creates markup for the ID property.\n   *\n   * @param {string} id Unescaped ID.\n   * @return {string} Markup string.\n   */\n  createMarkupForID: function(id) {\n    return DOMProperty.ID_ATTRIBUTE_NAME + '=' +\n      quoteAttributeValueForBrowser(id);\n  },\n\n  /**\n   * Creates markup for a property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {?string} Markup string, or null if the property was invalid.\n   */\n  createMarkupForProperty: function(name, value) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) &&\n        DOMProperty.isStandardName[name]) {\n      if (shouldIgnoreValue(name, value)) {\n        return '';\n      }\n      var attributeName = DOMProperty.getAttributeName[name];\n      if (DOMProperty.hasBooleanValue[name] ||\n          (DOMProperty.hasOverloadedBooleanValue[name] && value === true)) {\n        return attributeName;\n      }\n      return attributeName + '=' + quoteAttributeValueForBrowser(value);\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        return '';\n      }\n      return name + '=' + quoteAttributeValueForBrowser(value);\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n    return null;\n  },\n\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n  setValueForProperty: function(node, name, value) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) &&\n        DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n      if (mutationMethod) {\n        mutationMethod(node, value);\n      } else if (shouldIgnoreValue(name, value)) {\n        this.deleteValueForProperty(node, name);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        // `setAttribute` with objects becomes only `[object]` in IE8/9,\n        // ('' + value) makes it output the correct toString()-value.\n        node.setAttribute(DOMProperty.getAttributeName[name], '' + value);\n      } else {\n        var propName = DOMProperty.getPropertyName[name];\n        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the\n        // property type before comparing; only `value` does and is string.\n        if (!DOMProperty.hasSideEffects[name] ||\n            ('' + node[propName]) !== ('' + value)) {\n          // Contrary to `setAttribute`, object properties are properly\n          // `toString`ed by IE8/9.\n          node[propName] = value;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        node.removeAttribute(name);\n      } else {\n        node.setAttribute(name, '' + value);\n      }\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n  },\n\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForProperty: function(node, name) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) &&\n        DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n      if (mutationMethod) {\n        mutationMethod(node, undefined);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        node.removeAttribute(DOMProperty.getAttributeName[name]);\n      } else {\n        var propName = DOMProperty.getPropertyName[name];\n        var defaultValue = DOMProperty.getDefaultValueForProperty(\n          node.nodeName,\n          propName\n        );\n        if (!DOMProperty.hasSideEffects[name] ||\n            ('' + node[propName]) !== defaultValue) {\n          node[propName] = defaultValue;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      node.removeAttribute(name);\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n  }\n\n};\n\nmodule.exports = DOMPropertyOperations;\n\n}).call(this,require('_process'))\n},{\"./DOMProperty\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/DOMProperty.js\",\"./quoteAttributeValueForBrowser\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/quoteAttributeValueForBrowser.js\",\"./warning\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/warning.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Danger.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Danger\n * @typechecks static-only\n */\n\n/*jslint evil: true, sub: true */\n\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar createNodesFromMarkup = require(\"./createNodesFromMarkup\");\nvar emptyFunction = require(\"./emptyFunction\");\nvar getMarkupWrap = require(\"./getMarkupWrap\");\nvar invariant = require(\"./invariant\");\n\nvar OPEN_TAG_NAME_EXP = /^(<[^ \\/>]+)/;\nvar RESULT_INDEX_ATTR = 'data-danger-index';\n\n/**\n * Extracts the `nodeName` from a string of markup.\n *\n * NOTE: Extracting the `nodeName` does not require a regular expression match\n * because we make assumptions about React-generated markup (i.e. there are no\n * spaces surrounding the opening tag and there is at least one attribute).\n *\n * @param {string} markup String of markup.\n * @return {string} Node name of the supplied markup.\n * @see http://jsperf.com/extract-nodename\n */\nfunction getNodeName(markup) {\n  return markup.substring(1, markup.indexOf(' '));\n}\n\nvar Danger = {\n\n  /**\n   * Renders markup into an array of nodes. The markup is expected to render\n   * into a list of root nodes. Also, the length of `resultList` and\n   * `markupList` should be the same.\n   *\n   * @param {array<string>} markupList List of markup strings to render.\n   * @return {array<DOMElement>} List of rendered nodes.\n   * @internal\n   */\n  dangerouslyRenderMarkup: function(markupList) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ExecutionEnvironment.canUseDOM,\n      'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' +\n      'thread. Make sure `window` and `document` are available globally ' +\n      'before requiring React when unit testing or use ' +\n      'React.renderToString for server rendering.'\n    ) : invariant(ExecutionEnvironment.canUseDOM));\n    var nodeName;\n    var markupByNodeName = {};\n    // Group markup by `nodeName` if a wrap is necessary, else by '*'.\n    for (var i = 0; i < markupList.length; i++) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        markupList[i],\n        'dangerouslyRenderMarkup(...): Missing markup.'\n      ) : invariant(markupList[i]));\n      nodeName = getNodeName(markupList[i]);\n      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';\n      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];\n      markupByNodeName[nodeName][i] = markupList[i];\n    }\n    var resultList = [];\n    var resultListAssignmentCount = 0;\n    for (nodeName in markupByNodeName) {\n      if (!markupByNodeName.hasOwnProperty(nodeName)) {\n        continue;\n      }\n      var markupListByNodeName = markupByNodeName[nodeName];\n\n      // This for-in loop skips the holes of the sparse array. The order of\n      // iteration should follow the order of assignment, which happens to match\n      // numerical index order, but we don't rely on that.\n      var resultIndex;\n      for (resultIndex in markupListByNodeName) {\n        if (markupListByNodeName.hasOwnProperty(resultIndex)) {\n          var markup = markupListByNodeName[resultIndex];\n\n          // Push the requested markup with an additional RESULT_INDEX_ATTR\n          // attribute.  If the markup does not start with a < character, it\n          // will be discarded below (with an appropriate console.error).\n          markupListByNodeName[resultIndex] = markup.replace(\n            OPEN_TAG_NAME_EXP,\n            // This index will be parsed back out below.\n            '$1 ' + RESULT_INDEX_ATTR + '=\"' + resultIndex + '\" '\n          );\n        }\n      }\n\n      // Render each group of markup with similar wrapping `nodeName`.\n      var renderNodes = createNodesFromMarkup(\n        markupListByNodeName.join(''),\n        emptyFunction // Do nothing special with <script> tags.\n      );\n\n      for (var j = 0; j < renderNodes.length; ++j) {\n        var renderNode = renderNodes[j];\n        if (renderNode.hasAttribute &&\n            renderNode.hasAttribute(RESULT_INDEX_ATTR)) {\n\n          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);\n          renderNode.removeAttribute(RESULT_INDEX_ATTR);\n\n          (\"production\" !== process.env.NODE_ENV ? invariant(\n            !resultList.hasOwnProperty(resultIndex),\n            'Danger: Assigning to an already-occupied result index.'\n          ) : invariant(!resultList.hasOwnProperty(resultIndex)));\n\n          resultList[resultIndex] = renderNode;\n\n          // This should match resultList.length and markupList.length when\n          // we're done.\n          resultListAssignmentCount += 1;\n\n        } else if (\"production\" !== process.env.NODE_ENV) {\n          console.error(\n            'Danger: Discarding unexpected node:',\n            renderNode\n          );\n        }\n      }\n    }\n\n    // Although resultList was populated out of order, it should now be a dense\n    // array.\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      resultListAssignmentCount === resultList.length,\n      'Danger: Did not assign to every index of resultList.'\n    ) : invariant(resultListAssignmentCount === resultList.length));\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      resultList.length === markupList.length,\n      'Danger: Expected markup to render %s nodes, but rendered %s.',\n      markupList.length,\n      resultList.length\n    ) : invariant(resultList.length === markupList.length));\n\n    return resultList;\n  },\n\n  /**\n   * Replaces a node with a string of markup at its current position within its\n   * parent. The markup must render into a single root node.\n   *\n   * @param {DOMElement} oldChild Child node to replace.\n   * @param {string} markup Markup to render in place of the child node.\n   * @internal\n   */\n  dangerouslyReplaceNodeWithMarkup: function(oldChild, markup) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ExecutionEnvironment.canUseDOM,\n      'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' +\n      'worker thread. Make sure `window` and `document` are available ' +\n      'globally before requiring React when unit testing or use ' +\n      'React.renderToString for server rendering.'\n    ) : invariant(ExecutionEnvironment.canUseDOM));\n    (\"production\" !== process.env.NODE_ENV ? invariant(markup, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(markup));\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      oldChild.tagName.toLowerCase() !== 'html',\n      'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' +\n      '<html> node. This is because browser quirks make this unreliable ' +\n      'and/or slow. If you want to render to the root you must use ' +\n      'server rendering. See React.renderToString().'\n    ) : invariant(oldChild.tagName.toLowerCase() !== 'html'));\n\n    var newChild = createNodesFromMarkup(markup, emptyFunction)[0];\n    oldChild.parentNode.replaceChild(newChild, oldChild);\n  }\n\n};\n\nmodule.exports = Danger;\n\n}).call(this,require('_process'))\n},{\"./ExecutionEnvironment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ExecutionEnvironment.js\",\"./createNodesFromMarkup\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/createNodesFromMarkup.js\",\"./emptyFunction\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/emptyFunction.js\",\"./getMarkupWrap\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getMarkupWrap.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/DefaultEventPluginOrder.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DefaultEventPluginOrder\n */\n\n'use strict';\n\nvar keyOf = require(\"./keyOf\");\n\n/**\n * Module that is injectable into `EventPluginHub`, that specifies a\n * deterministic ordering of `EventPlugin`s. A convenient way to reason about\n * plugins, without having to package every one of them. This is better than\n * having plugins be ordered in the same order that they are injected because\n * that ordering would be influenced by the packaging order.\n * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n */\nvar DefaultEventPluginOrder = [\n  keyOf({ResponderEventPlugin: null}),\n  keyOf({SimpleEventPlugin: null}),\n  keyOf({TapEventPlugin: null}),\n  keyOf({EnterLeaveEventPlugin: null}),\n  keyOf({ChangeEventPlugin: null}),\n  keyOf({SelectEventPlugin: null}),\n  keyOf({BeforeInputEventPlugin: null}),\n  keyOf({AnalyticsEventPlugin: null}),\n  keyOf({MobileSafariClickEventPlugin: null})\n];\n\nmodule.exports = DefaultEventPluginOrder;\n\n},{\"./keyOf\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/keyOf.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EnterLeaveEventPlugin.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EnterLeaveEventPlugin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPropagators = require(\"./EventPropagators\");\nvar SyntheticMouseEvent = require(\"./SyntheticMouseEvent\");\n\nvar ReactMount = require(\"./ReactMount\");\nvar keyOf = require(\"./keyOf\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\nvar getFirstReactDOM = ReactMount.getFirstReactDOM;\n\nvar eventTypes = {\n  mouseEnter: {\n    registrationName: keyOf({onMouseEnter: null}),\n    dependencies: [\n      topLevelTypes.topMouseOut,\n      topLevelTypes.topMouseOver\n    ]\n  },\n  mouseLeave: {\n    registrationName: keyOf({onMouseLeave: null}),\n    dependencies: [\n      topLevelTypes.topMouseOut,\n      topLevelTypes.topMouseOver\n    ]\n  }\n};\n\nvar extractedEvents = [null, null];\n\nvar EnterLeaveEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    if (topLevelType === topLevelTypes.topMouseOver &&\n        (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n      return null;\n    }\n    if (topLevelType !== topLevelTypes.topMouseOut &&\n        topLevelType !== topLevelTypes.topMouseOver) {\n      // Must not be a mouse in or mouse out - ignoring.\n      return null;\n    }\n\n    var win;\n    if (topLevelTarget.window === topLevelTarget) {\n      // `topLevelTarget` is probably a window object.\n      win = topLevelTarget;\n    } else {\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n      var doc = topLevelTarget.ownerDocument;\n      if (doc) {\n        win = doc.defaultView || doc.parentWindow;\n      } else {\n        win = window;\n      }\n    }\n\n    var from, to;\n    if (topLevelType === topLevelTypes.topMouseOut) {\n      from = topLevelTarget;\n      to =\n        getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement) ||\n        win;\n    } else {\n      from = win;\n      to = topLevelTarget;\n    }\n\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n\n    var fromID = from ? ReactMount.getID(from) : '';\n    var toID = to ? ReactMount.getID(to) : '';\n\n    var leave = SyntheticMouseEvent.getPooled(\n      eventTypes.mouseLeave,\n      fromID,\n      nativeEvent\n    );\n    leave.type = 'mouseleave';\n    leave.target = from;\n    leave.relatedTarget = to;\n\n    var enter = SyntheticMouseEvent.getPooled(\n      eventTypes.mouseEnter,\n      toID,\n      nativeEvent\n    );\n    enter.type = 'mouseenter';\n    enter.target = to;\n    enter.relatedTarget = from;\n\n    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);\n\n    extractedEvents[0] = leave;\n    extractedEvents[1] = enter;\n\n    return extractedEvents;\n  }\n\n};\n\nmodule.exports = EnterLeaveEventPlugin;\n\n},{\"./EventConstants\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventConstants.js\",\"./EventPropagators\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventPropagators.js\",\"./ReactMount\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactMount.js\",\"./SyntheticMouseEvent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticMouseEvent.js\",\"./keyOf\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/keyOf.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventConstants.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventConstants\n */\n\n'use strict';\n\nvar keyMirror = require(\"./keyMirror\");\n\nvar PropagationPhases = keyMirror({bubbled: null, captured: null});\n\n/**\n * Types of raw signals from the browser caught at the top level.\n */\nvar topLevelTypes = keyMirror({\n  topBlur: null,\n  topChange: null,\n  topClick: null,\n  topCompositionEnd: null,\n  topCompositionStart: null,\n  topCompositionUpdate: null,\n  topContextMenu: null,\n  topCopy: null,\n  topCut: null,\n  topDoubleClick: null,\n  topDrag: null,\n  topDragEnd: null,\n  topDragEnter: null,\n  topDragExit: null,\n  topDragLeave: null,\n  topDragOver: null,\n  topDragStart: null,\n  topDrop: null,\n  topError: null,\n  topFocus: null,\n  topInput: null,\n  topKeyDown: null,\n  topKeyPress: null,\n  topKeyUp: null,\n  topLoad: null,\n  topMouseDown: null,\n  topMouseMove: null,\n  topMouseOut: null,\n  topMouseOver: null,\n  topMouseUp: null,\n  topPaste: null,\n  topReset: null,\n  topScroll: null,\n  topSelectionChange: null,\n  topSubmit: null,\n  topTextInput: null,\n  topTouchCancel: null,\n  topTouchEnd: null,\n  topTouchMove: null,\n  topTouchStart: null,\n  topWheel: null\n});\n\nvar EventConstants = {\n  topLevelTypes: topLevelTypes,\n  PropagationPhases: PropagationPhases\n};\n\nmodule.exports = EventConstants;\n\n},{\"./keyMirror\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/keyMirror.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventListener.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule EventListener\n * @typechecks\n */\n\nvar emptyFunction = require(\"./emptyFunction\");\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function(target, eventType, callback) {\n    if (!target.addEventListener) {\n      if (\"production\" !== process.env.NODE_ENV) {\n        console.error(\n          'Attempted to listen to events during the capture phase on a ' +\n          'browser that does not support the capture phase. Your application ' +\n          'will not receive some events.'\n        );\n      }\n      return {\n        remove: emptyFunction\n      };\n    } else {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function() {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    }\n  },\n\n  registerDefault: function() {}\n};\n\nmodule.exports = EventListener;\n\n}).call(this,require('_process'))\n},{\"./emptyFunction\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/emptyFunction.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventPluginHub.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginHub\n */\n\n'use strict';\n\nvar EventPluginRegistry = require(\"./EventPluginRegistry\");\nvar EventPluginUtils = require(\"./EventPluginUtils\");\n\nvar accumulateInto = require(\"./accumulateInto\");\nvar forEachAccumulated = require(\"./forEachAccumulated\");\nvar invariant = require(\"./invariant\");\n\n/**\n * Internal store for event listeners\n */\nvar listenerBank = {};\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\nvar eventQueue = null;\n\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @private\n */\nvar executeDispatchesAndRelease = function(event) {\n  if (event) {\n    var executeDispatch = EventPluginUtils.executeDispatch;\n    // Plugins can provide custom behavior when dispatching events.\n    var PluginModule = EventPluginRegistry.getPluginModuleForEvent(event);\n    if (PluginModule && PluginModule.executeDispatch) {\n      executeDispatch = PluginModule.executeDispatch;\n    }\n    EventPluginUtils.executeDispatchesInOrder(event, executeDispatch);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\n\n/**\n * - `InstanceHandle`: [required] Module that performs logical traversals of DOM\n *   hierarchy given ids of the logical DOM elements involved.\n */\nvar InstanceHandle = null;\n\nfunction validateInstanceHandle() {\n  var valid =\n    InstanceHandle &&\n    InstanceHandle.traverseTwoPhase &&\n    InstanceHandle.traverseEnterLeave;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    valid,\n    'InstanceHandle not injected before use!'\n  ) : invariant(valid));\n}\n\n/**\n * This is a unified interface for event plugins to be installed and configured.\n *\n * Event plugins can implement the following properties:\n *\n *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n *     Required. When a top-level event is fired, this method is expected to\n *     extract synthetic events that will in turn be queued and dispatched.\n *\n *   `eventTypes` {object}\n *     Optional, plugins that fire events must publish a mapping of registration\n *     names that are used to register listeners. Values of this mapping must\n *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n *\n *   `executeDispatch` {function(object, function, string)}\n *     Optional, allows plugins to override how an event gets dispatched. By\n *     default, the listener is simply invoked.\n *\n * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n *\n * @public\n */\nvar EventPluginHub = {\n\n  /**\n   * Methods for injecting dependencies.\n   */\n  injection: {\n\n    /**\n     * @param {object} InjectedMount\n     * @public\n     */\n    injectMount: EventPluginUtils.injection.injectMount,\n\n    /**\n     * @param {object} InjectedInstanceHandle\n     * @public\n     */\n    injectInstanceHandle: function(InjectedInstanceHandle) {\n      InstanceHandle = InjectedInstanceHandle;\n      if (\"production\" !== process.env.NODE_ENV) {\n        validateInstanceHandle();\n      }\n    },\n\n    getInstanceHandle: function() {\n      if (\"production\" !== process.env.NODE_ENV) {\n        validateInstanceHandle();\n      }\n      return InstanceHandle;\n    },\n\n    /**\n     * @param {array} InjectedEventPluginOrder\n     * @public\n     */\n    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,\n\n    /**\n     * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n     */\n    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName\n\n  },\n\n  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,\n\n  registrationNameModules: EventPluginRegistry.registrationNameModules,\n\n  /**\n   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.\n   *\n   * @param {string} id ID of the DOM element.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {?function} listener The callback to store.\n   */\n  putListener: function(id, registrationName, listener) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !listener || typeof listener === 'function',\n      'Expected %s listener to be a function, instead got type %s',\n      registrationName, typeof listener\n    ) : invariant(!listener || typeof listener === 'function'));\n\n    var bankForRegistrationName =\n      listenerBank[registrationName] || (listenerBank[registrationName] = {});\n    bankForRegistrationName[id] = listener;\n  },\n\n  /**\n   * @param {string} id ID of the DOM element.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @return {?function} The stored callback.\n   */\n  getListener: function(id, registrationName) {\n    var bankForRegistrationName = listenerBank[registrationName];\n    return bankForRegistrationName && bankForRegistrationName[id];\n  },\n\n  /**\n   * Deletes a listener from the registration bank.\n   *\n   * @param {string} id ID of the DOM element.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   */\n  deleteListener: function(id, registrationName) {\n    var bankForRegistrationName = listenerBank[registrationName];\n    if (bankForRegistrationName) {\n      delete bankForRegistrationName[id];\n    }\n  },\n\n  /**\n   * Deletes all listeners for the DOM element with the supplied ID.\n   *\n   * @param {string} id ID of the DOM element.\n   */\n  deleteAllListeners: function(id) {\n    for (var registrationName in listenerBank) {\n      delete listenerBank[registrationName][id];\n    }\n  },\n\n  /**\n   * Allows registered plugins an opportunity to extract events from top-level\n   * native browser events.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @internal\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    var events;\n    var plugins = EventPluginRegistry.plugins;\n    for (var i = 0, l = plugins.length; i < l; i++) {\n      // Not every plugin in the ordering may be loaded at runtime.\n      var possiblePlugin = plugins[i];\n      if (possiblePlugin) {\n        var extractedEvents = possiblePlugin.extractEvents(\n          topLevelType,\n          topLevelTarget,\n          topLevelTargetID,\n          nativeEvent\n        );\n        if (extractedEvents) {\n          events = accumulateInto(events, extractedEvents);\n        }\n      }\n    }\n    return events;\n  },\n\n  /**\n   * Enqueues a synthetic event that should be dispatched when\n   * `processEventQueue` is invoked.\n   *\n   * @param {*} events An accumulation of synthetic events.\n   * @internal\n   */\n  enqueueEvents: function(events) {\n    if (events) {\n      eventQueue = accumulateInto(eventQueue, events);\n    }\n  },\n\n  /**\n   * Dispatches all synthetic events on the event queue.\n   *\n   * @internal\n   */\n  processEventQueue: function() {\n    // Set `eventQueue` to null before processing it so that we can tell if more\n    // events get enqueued while processing.\n    var processingEventQueue = eventQueue;\n    eventQueue = null;\n    forEachAccumulated(processingEventQueue, executeDispatchesAndRelease);\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !eventQueue,\n      'processEventQueue(): Additional events were enqueued while processing ' +\n      'an event queue. Support for this has not yet been implemented.'\n    ) : invariant(!eventQueue));\n  },\n\n  /**\n   * These are needed for tests only. Do not use!\n   */\n  __purge: function() {\n    listenerBank = {};\n  },\n\n  __getListenerBank: function() {\n    return listenerBank;\n  }\n\n};\n\nmodule.exports = EventPluginHub;\n\n}).call(this,require('_process'))\n},{\"./EventPluginRegistry\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventPluginRegistry.js\",\"./EventPluginUtils\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventPluginUtils.js\",\"./accumulateInto\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/accumulateInto.js\",\"./forEachAccumulated\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/forEachAccumulated.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventPluginRegistry.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginRegistry\n * @typechecks static-only\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Injectable ordering of event plugins.\n */\nvar EventPluginOrder = null;\n\n/**\n * Injectable mapping from names to event plugin modules.\n */\nvar namesToPlugins = {};\n\n/**\n * Recomputes the plugin list using the injected plugins and plugin ordering.\n *\n * @private\n */\nfunction recomputePluginOrdering() {\n  if (!EventPluginOrder) {\n    // Wait until an `EventPluginOrder` is injected.\n    return;\n  }\n  for (var pluginName in namesToPlugins) {\n    var PluginModule = namesToPlugins[pluginName];\n    var pluginIndex = EventPluginOrder.indexOf(pluginName);\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      pluginIndex > -1,\n      'EventPluginRegistry: Cannot inject event plugins that do not exist in ' +\n      'the plugin ordering, `%s`.',\n      pluginName\n    ) : invariant(pluginIndex > -1));\n    if (EventPluginRegistry.plugins[pluginIndex]) {\n      continue;\n    }\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      PluginModule.extractEvents,\n      'EventPluginRegistry: Event plugins must implement an `extractEvents` ' +\n      'method, but `%s` does not.',\n      pluginName\n    ) : invariant(PluginModule.extractEvents));\n    EventPluginRegistry.plugins[pluginIndex] = PluginModule;\n    var publishedEvents = PluginModule.eventTypes;\n    for (var eventName in publishedEvents) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        publishEventForPlugin(\n          publishedEvents[eventName],\n          PluginModule,\n          eventName\n        ),\n        'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',\n        eventName,\n        pluginName\n      ) : invariant(publishEventForPlugin(\n        publishedEvents[eventName],\n        PluginModule,\n        eventName\n      )));\n    }\n  }\n}\n\n/**\n * Publishes an event so that it can be dispatched by the supplied plugin.\n *\n * @param {object} dispatchConfig Dispatch configuration for the event.\n * @param {object} PluginModule Plugin publishing the event.\n * @return {boolean} True if the event was successfully published.\n * @private\n */\nfunction publishEventForPlugin(dispatchConfig, PluginModule, eventName) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName),\n    'EventPluginHub: More than one plugin attempted to publish the same ' +\n    'event name, `%s`.',\n    eventName\n  ) : invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName)));\n  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;\n\n  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n  if (phasedRegistrationNames) {\n    for (var phaseName in phasedRegistrationNames) {\n      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n        var phasedRegistrationName = phasedRegistrationNames[phaseName];\n        publishRegistrationName(\n          phasedRegistrationName,\n          PluginModule,\n          eventName\n        );\n      }\n    }\n    return true;\n  } else if (dispatchConfig.registrationName) {\n    publishRegistrationName(\n      dispatchConfig.registrationName,\n      PluginModule,\n      eventName\n    );\n    return true;\n  }\n  return false;\n}\n\n/**\n * Publishes a registration name that is used to identify dispatched events and\n * can be used with `EventPluginHub.putListener` to register listeners.\n *\n * @param {string} registrationName Registration name to add.\n * @param {object} PluginModule Plugin publishing the event.\n * @private\n */\nfunction publishRegistrationName(registrationName, PluginModule, eventName) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !EventPluginRegistry.registrationNameModules[registrationName],\n    'EventPluginHub: More than one plugin attempted to publish the same ' +\n    'registration name, `%s`.',\n    registrationName\n  ) : invariant(!EventPluginRegistry.registrationNameModules[registrationName]));\n  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;\n  EventPluginRegistry.registrationNameDependencies[registrationName] =\n    PluginModule.eventTypes[eventName].dependencies;\n}\n\n/**\n * Registers plugins so that they can extract and dispatch events.\n *\n * @see {EventPluginHub}\n */\nvar EventPluginRegistry = {\n\n  /**\n   * Ordered list of injected plugins.\n   */\n  plugins: [],\n\n  /**\n   * Mapping from event name to dispatch config\n   */\n  eventNameDispatchConfigs: {},\n\n  /**\n   * Mapping from registration name to plugin module\n   */\n  registrationNameModules: {},\n\n  /**\n   * Mapping from registration name to event name\n   */\n  registrationNameDependencies: {},\n\n  /**\n   * Injects an ordering of plugins (by plugin name). This allows the ordering\n   * to be decoupled from injection of the actual plugins so that ordering is\n   * always deterministic regardless of packaging, on-the-fly injection, etc.\n   *\n   * @param {array} InjectedEventPluginOrder\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginOrder}\n   */\n  injectEventPluginOrder: function(InjectedEventPluginOrder) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !EventPluginOrder,\n      'EventPluginRegistry: Cannot inject event plugin ordering more than ' +\n      'once. You are likely trying to load more than one copy of React.'\n    ) : invariant(!EventPluginOrder));\n    // Clone the ordering so it cannot be dynamically mutated.\n    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);\n    recomputePluginOrdering();\n  },\n\n  /**\n   * Injects plugins to be used by `EventPluginHub`. The plugin names must be\n   * in the ordering injected by `injectEventPluginOrder`.\n   *\n   * Plugins can be injected as part of page initialization or on-the-fly.\n   *\n   * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginsByName}\n   */\n  injectEventPluginsByName: function(injectedNamesToPlugins) {\n    var isOrderingDirty = false;\n    for (var pluginName in injectedNamesToPlugins) {\n      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n        continue;\n      }\n      var PluginModule = injectedNamesToPlugins[pluginName];\n      if (!namesToPlugins.hasOwnProperty(pluginName) ||\n          namesToPlugins[pluginName] !== PluginModule) {\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          !namesToPlugins[pluginName],\n          'EventPluginRegistry: Cannot inject two different event plugins ' +\n          'using the same name, `%s`.',\n          pluginName\n        ) : invariant(!namesToPlugins[pluginName]));\n        namesToPlugins[pluginName] = PluginModule;\n        isOrderingDirty = true;\n      }\n    }\n    if (isOrderingDirty) {\n      recomputePluginOrdering();\n    }\n  },\n\n  /**\n   * Looks up the plugin for the supplied event.\n   *\n   * @param {object} event A synthetic event.\n   * @return {?object} The plugin that created the supplied event.\n   * @internal\n   */\n  getPluginModuleForEvent: function(event) {\n    var dispatchConfig = event.dispatchConfig;\n    if (dispatchConfig.registrationName) {\n      return EventPluginRegistry.registrationNameModules[\n        dispatchConfig.registrationName\n      ] || null;\n    }\n    for (var phase in dispatchConfig.phasedRegistrationNames) {\n      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {\n        continue;\n      }\n      var PluginModule = EventPluginRegistry.registrationNameModules[\n        dispatchConfig.phasedRegistrationNames[phase]\n      ];\n      if (PluginModule) {\n        return PluginModule;\n      }\n    }\n    return null;\n  },\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _resetEventPlugins: function() {\n    EventPluginOrder = null;\n    for (var pluginName in namesToPlugins) {\n      if (namesToPlugins.hasOwnProperty(pluginName)) {\n        delete namesToPlugins[pluginName];\n      }\n    }\n    EventPluginRegistry.plugins.length = 0;\n\n    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;\n    for (var eventName in eventNameDispatchConfigs) {\n      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n        delete eventNameDispatchConfigs[eventName];\n      }\n    }\n\n    var registrationNameModules = EventPluginRegistry.registrationNameModules;\n    for (var registrationName in registrationNameModules) {\n      if (registrationNameModules.hasOwnProperty(registrationName)) {\n        delete registrationNameModules[registrationName];\n      }\n    }\n  }\n\n};\n\nmodule.exports = EventPluginRegistry;\n\n}).call(this,require('_process'))\n},{\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventPluginUtils.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginUtils\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Injected dependencies:\n */\n\n/**\n * - `Mount`: [required] Module that can convert between React dom IDs and\n *   actual node references.\n */\nvar injection = {\n  Mount: null,\n  injectMount: function(InjectedMount) {\n    injection.Mount = InjectedMount;\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        InjectedMount && InjectedMount.getNode,\n        'EventPluginUtils.injection.injectMount(...): Injected Mount module ' +\n        'is missing getNode.'\n      ) : invariant(InjectedMount && InjectedMount.getNode));\n    }\n  }\n};\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nfunction isEndish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseUp ||\n         topLevelType === topLevelTypes.topTouchEnd ||\n         topLevelType === topLevelTypes.topTouchCancel;\n}\n\nfunction isMoveish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseMove ||\n         topLevelType === topLevelTypes.topTouchMove;\n}\nfunction isStartish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseDown ||\n         topLevelType === topLevelTypes.topTouchStart;\n}\n\n\nvar validateEventDispatches;\nif (\"production\" !== process.env.NODE_ENV) {\n  validateEventDispatches = function(event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchIDs = event._dispatchIDs;\n\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var idsIsArr = Array.isArray(dispatchIDs);\n    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;\n    var listenersLen = listenersIsArr ?\n      dispatchListeners.length :\n      dispatchListeners ? 1 : 0;\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      idsIsArr === listenersIsArr && IDsLen === listenersLen,\n      'EventPluginUtils: Invalid `event`.'\n    ) : invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen));\n  };\n}\n\n/**\n * Invokes `cb(event, listener, id)`. Avoids using call if no scope is\n * provided. The `(listener,id)` pair effectively forms the \"dispatch\" but are\n * kept separate to conserve memory.\n */\nfunction forEachEventDispatch(event, cb) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and IDs are two parallel arrays that are always in sync.\n      cb(event, dispatchListeners[i], dispatchIDs[i]);\n    }\n  } else if (dispatchListeners) {\n    cb(event, dispatchListeners, dispatchIDs);\n  }\n}\n\n/**\n * Default implementation of PluginModule.executeDispatch().\n * @param {SyntheticEvent} SyntheticEvent to handle\n * @param {function} Application-level callback\n * @param {string} domID DOM id to pass to the callback.\n */\nfunction executeDispatch(event, listener, domID) {\n  event.currentTarget = injection.Mount.getNode(domID);\n  var returnValue = listener(event, domID);\n  event.currentTarget = null;\n  return returnValue;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nfunction executeDispatchesInOrder(event, cb) {\n  forEachEventDispatch(event, cb);\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return id of the first dispatch execution who's listener returns true, or\n * null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and IDs are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchIDs[i])) {\n        return dispatchIDs[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchIDs)) {\n      return dispatchIDs;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchIDs = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return The return value of executing the single dispatch.\n */\nfunction executeDirectDispatch(event) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n  var dispatchListener = event._dispatchListeners;\n  var dispatchID = event._dispatchIDs;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !Array.isArray(dispatchListener),\n    'executeDirectDispatch(...): Invalid `event`.'\n  ) : invariant(!Array.isArray(dispatchListener)));\n  var res = dispatchListener ?\n    dispatchListener(event, dispatchID) :\n    null;\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {bool} True iff number of dispatches accumulated is greater than 0.\n */\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\n/**\n * General utilities that are useful in creating custom Event Plugins.\n */\nvar EventPluginUtils = {\n  isEndish: isEndish,\n  isMoveish: isMoveish,\n  isStartish: isStartish,\n\n  executeDirectDispatch: executeDirectDispatch,\n  executeDispatch: executeDispatch,\n  executeDispatchesInOrder: executeDispatchesInOrder,\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n  hasDispatches: hasDispatches,\n  injection: injection,\n  useTouchEvents: false\n};\n\nmodule.exports = EventPluginUtils;\n\n}).call(this,require('_process'))\n},{\"./EventConstants\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventConstants.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventPropagators.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPropagators\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPluginHub = require(\"./EventPluginHub\");\n\nvar accumulateInto = require(\"./accumulateInto\");\nvar forEachAccumulated = require(\"./forEachAccumulated\");\n\nvar PropagationPhases = EventConstants.PropagationPhases;\nvar getListener = EventPluginHub.getListener;\n\n/**\n * Some event types have a notion of different registration names for different\n * \"phases\" of propagation. This finds listeners by a given phase.\n */\nfunction listenerAtPhase(id, event, propagationPhase) {\n  var registrationName =\n    event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListener(id, registrationName);\n}\n\n/**\n * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\n * here, allows us to not have to bind or create functions for each event.\n * Mutating the event's members allows us to not have to create a wrapping\n * \"dispatch\" object that pairs the event with the listener.\n */\nfunction accumulateDirectionalDispatches(domID, upwards, event) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    if (!domID) {\n      throw new Error('Dispatching id must not be null');\n    }\n  }\n  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;\n  var listener = listenerAtPhase(domID, event, phase);\n  if (listener) {\n    event._dispatchListeners =\n      accumulateInto(event._dispatchListeners, listener);\n    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);\n  }\n}\n\n/**\n * Collect dispatches (must be entirely collected before dispatching - see unit\n * tests). Lazily allocate the array to conserve memory.  We must loop through\n * each event and perform the traversal for each one. We can not perform a\n * single traversal for the entire collection of events because each event may\n * have a different target.\n */\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(\n      event.dispatchMarker,\n      accumulateDirectionalDispatches,\n      event\n    );\n  }\n}\n\n\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\nfunction accumulateDispatches(id, ignoredDirection, event) {\n  if (event && event.dispatchConfig.registrationName) {\n    var registrationName = event.dispatchConfig.registrationName;\n    var listener = getListener(id, registrationName);\n    if (listener) {\n      event._dispatchListeners =\n        accumulateInto(event._dispatchListeners, listener);\n      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);\n    }\n  }\n}\n\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\nfunction accumulateDirectDispatchesSingle(event) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches(event.dispatchMarker, null, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatches(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n}\n\nfunction accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {\n  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(\n    fromID,\n    toID,\n    accumulateDispatches,\n    leave,\n    enter\n  );\n}\n\n\nfunction accumulateDirectDispatches(events) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n}\n\n\n\n/**\n * A small set of propagation patterns, each of which will accept a small amount\n * of information, and generate a set of \"dispatch ready event objects\" - which\n * are sets of events that have already been annotated with a set of dispatched\n * listener functions/ids. The API is designed this way to discourage these\n * propagation strategies from actually executing the dispatches, since we\n * always want to collect the entire set of dispatches before executing event a\n * single one.\n *\n * @constructor EventPropagators\n */\nvar EventPropagators = {\n  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,\n  accumulateDirectDispatches: accumulateDirectDispatches,\n  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches\n};\n\nmodule.exports = EventPropagators;\n\n}).call(this,require('_process'))\n},{\"./EventConstants\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventConstants.js\",\"./EventPluginHub\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventPluginHub.js\",\"./accumulateInto\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/accumulateInto.js\",\"./forEachAccumulated\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/forEachAccumulated.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ExecutionEnvironment.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ExecutionEnvironment\n */\n\n/*jslint evil: true */\n\n\"use strict\";\n\nvar canUseDOM = !!(\n  (typeof window !== 'undefined' &&\n  window.document && window.document.createElement)\n);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners:\n    canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/FallbackCompositionState.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FallbackCompositionState\n * @typechecks static-only\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\n\nvar assign = require(\"./Object.assign\");\nvar getTextContentAccessor = require(\"./getTextContentAccessor\");\n\n/**\n * This helper class stores information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n * @param {DOMEventTarget} root\n */\nfunction FallbackCompositionState(root) {\n  this._root = root;\n  this._startText = this.getText();\n  this._fallbackText = null;\n}\n\nassign(FallbackCompositionState.prototype, {\n  /**\n   * Get current text of input.\n   *\n   * @return {string}\n   */\n  getText: function() {\n    if ('value' in this._root) {\n      return this._root.value;\n    }\n    return this._root[getTextContentAccessor()];\n  },\n\n  /**\n   * Determine the differing substring between the initially stored\n   * text content and the current content.\n   *\n   * @return {string}\n   */\n  getData: function() {\n    if (this._fallbackText) {\n      return this._fallbackText;\n    }\n\n    var start;\n    var startValue = this._startText;\n    var startLength = startValue.length;\n    var end;\n    var endValue = this.getText();\n    var endLength = endValue.length;\n\n    for (start = 0; start < startLength; start++) {\n      if (startValue[start] !== endValue[start]) {\n        break;\n      }\n    }\n\n    var minEnd = startLength - start;\n    for (end = 1; end <= minEnd; end++) {\n      if (startValue[startLength - end] !== endValue[endLength - end]) {\n        break;\n      }\n    }\n\n    var sliceTail = end > 1 ? 1 - end : undefined;\n    this._fallbackText = endValue.slice(start, sliceTail);\n    return this._fallbackText;\n  }\n});\n\nPooledClass.addPoolingTo(FallbackCompositionState);\n\nmodule.exports = FallbackCompositionState;\n\n},{\"./Object.assign\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Object.assign.js\",\"./PooledClass\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/PooledClass.js\",\"./getTextContentAccessor\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getTextContentAccessor.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/HTMLDOMPropertyConfig.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule HTMLDOMPropertyConfig\n */\n\n/*jslint bitwise: true*/\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;\nvar MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;\nvar HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;\nvar HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;\nvar HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;\nvar HAS_POSITIVE_NUMERIC_VALUE =\n  DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;\nvar HAS_OVERLOADED_BOOLEAN_VALUE =\n  DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;\n\nvar hasSVG;\nif (ExecutionEnvironment.canUseDOM) {\n  var implementation = document.implementation;\n  hasSVG = (\n    implementation &&\n    implementation.hasFeature &&\n    implementation.hasFeature(\n      'http://www.w3.org/TR/SVG11/feature#BasicStructure',\n      '1.1'\n    )\n  );\n}\n\n\nvar HTMLDOMPropertyConfig = {\n  isCustomAttribute: RegExp.prototype.test.bind(\n    /^(data|aria)-[a-z_][a-z\\d_.\\-]*$/\n  ),\n  Properties: {\n    /**\n     * Standard Properties\n     */\n    accept: null,\n    acceptCharset: null,\n    accessKey: null,\n    action: null,\n    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    allowTransparency: MUST_USE_ATTRIBUTE,\n    alt: null,\n    async: HAS_BOOLEAN_VALUE,\n    autoComplete: null,\n    // autoFocus is polyfilled/normalized by AutoFocusMixin\n    // autoFocus: HAS_BOOLEAN_VALUE,\n    autoPlay: HAS_BOOLEAN_VALUE,\n    cellPadding: null,\n    cellSpacing: null,\n    charSet: MUST_USE_ATTRIBUTE,\n    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    classID: MUST_USE_ATTRIBUTE,\n    // To set className on SVG elements, it's necessary to use .setAttribute;\n    // this works on HTML elements too in all browsers except IE8. Conveniently,\n    // IE8 doesn't support SVG and so we can simply use the attribute in\n    // browsers that support SVG and the property in browsers that don't,\n    // regardless of whether the element is HTML or SVG.\n    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,\n    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n    colSpan: null,\n    content: null,\n    contentEditable: null,\n    contextMenu: MUST_USE_ATTRIBUTE,\n    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    coords: null,\n    crossOrigin: null,\n    data: null, // For `<object />` acts as `src`.\n    dateTime: MUST_USE_ATTRIBUTE,\n    defer: HAS_BOOLEAN_VALUE,\n    dir: null,\n    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    download: HAS_OVERLOADED_BOOLEAN_VALUE,\n    draggable: null,\n    encType: null,\n    form: MUST_USE_ATTRIBUTE,\n    formAction: MUST_USE_ATTRIBUTE,\n    formEncType: MUST_USE_ATTRIBUTE,\n    formMethod: MUST_USE_ATTRIBUTE,\n    formNoValidate: HAS_BOOLEAN_VALUE,\n    formTarget: MUST_USE_ATTRIBUTE,\n    frameBorder: MUST_USE_ATTRIBUTE,\n    headers: null,\n    height: MUST_USE_ATTRIBUTE,\n    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    high: null,\n    href: null,\n    hrefLang: null,\n    htmlFor: null,\n    httpEquiv: null,\n    icon: null,\n    id: MUST_USE_PROPERTY,\n    label: null,\n    lang: null,\n    list: MUST_USE_ATTRIBUTE,\n    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    low: null,\n    manifest: MUST_USE_ATTRIBUTE,\n    marginHeight: null,\n    marginWidth: null,\n    max: null,\n    maxLength: MUST_USE_ATTRIBUTE,\n    media: MUST_USE_ATTRIBUTE,\n    mediaGroup: null,\n    method: null,\n    min: null,\n    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    name: null,\n    noValidate: HAS_BOOLEAN_VALUE,\n    open: HAS_BOOLEAN_VALUE,\n    optimum: null,\n    pattern: null,\n    placeholder: null,\n    poster: null,\n    preload: null,\n    radioGroup: null,\n    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    rel: null,\n    required: HAS_BOOLEAN_VALUE,\n    role: MUST_USE_ATTRIBUTE,\n    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n    rowSpan: null,\n    sandbox: null,\n    scope: null,\n    scoped: HAS_BOOLEAN_VALUE,\n    scrolling: null,\n    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    shape: null,\n    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n    sizes: MUST_USE_ATTRIBUTE,\n    span: HAS_POSITIVE_NUMERIC_VALUE,\n    spellCheck: null,\n    src: null,\n    srcDoc: MUST_USE_PROPERTY,\n    srcSet: MUST_USE_ATTRIBUTE,\n    start: HAS_NUMERIC_VALUE,\n    step: null,\n    style: null,\n    tabIndex: null,\n    target: null,\n    title: null,\n    type: null,\n    useMap: null,\n    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,\n    width: MUST_USE_ATTRIBUTE,\n    wmode: MUST_USE_ATTRIBUTE,\n\n    /**\n     * Non-standard Properties\n     */\n    // autoCapitalize and autoCorrect are supported in Mobile Safari for\n    // keyboard hints.\n    autoCapitalize: null,\n    autoCorrect: null,\n    // itemProp, itemScope, itemType are for\n    // Microdata support. See http://schema.org/docs/gs.html\n    itemProp: MUST_USE_ATTRIBUTE,\n    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    itemType: MUST_USE_ATTRIBUTE,\n    // itemID and itemRef are for Microdata support as well but\n    // only specified in the the WHATWG spec document. See\n    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n    itemID: MUST_USE_ATTRIBUTE,\n    itemRef: MUST_USE_ATTRIBUTE,\n    // property is supported for OpenGraph in meta tags.\n    property: null,\n    // IE-only attribute that controls focus behavior\n    unselectable: MUST_USE_ATTRIBUTE\n  },\n  DOMAttributeNames: {\n    acceptCharset: 'accept-charset',\n    className: 'class',\n    htmlFor: 'for',\n    httpEquiv: 'http-equiv'\n  },\n  DOMPropertyNames: {\n    autoCapitalize: 'autocapitalize',\n    autoComplete: 'autocomplete',\n    autoCorrect: 'autocorrect',\n    autoFocus: 'autofocus',\n    autoPlay: 'autoplay',\n    // `encoding` is equivalent to `enctype`, IE8 lacks an `enctype` setter.\n    // http://www.w3.org/TR/html5/forms.html#dom-fs-encoding\n    encType: 'encoding',\n    hrefLang: 'hreflang',\n    radioGroup: 'radiogroup',\n    spellCheck: 'spellcheck',\n    srcDoc: 'srcdoc',\n    srcSet: 'srcset'\n  }\n};\n\nmodule.exports = HTMLDOMPropertyConfig;\n\n},{\"./DOMProperty\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/DOMProperty.js\",\"./ExecutionEnvironment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ExecutionEnvironment.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/LinkedValueUtils.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LinkedValueUtils\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactPropTypes = require(\"./ReactPropTypes\");\n\nvar invariant = require(\"./invariant\");\n\nvar hasReadOnlyValue = {\n  'button': true,\n  'checkbox': true,\n  'image': true,\n  'hidden': true,\n  'radio': true,\n  'reset': true,\n  'submit': true\n};\n\nfunction _assertSingleLink(input) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    input.props.checkedLink == null || input.props.valueLink == null,\n    'Cannot provide a checkedLink and a valueLink. If you want to use ' +\n    'checkedLink, you probably don\\'t want to use valueLink and vice versa.'\n  ) : invariant(input.props.checkedLink == null || input.props.valueLink == null));\n}\nfunction _assertValueLink(input) {\n  _assertSingleLink(input);\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    input.props.value == null && input.props.onChange == null,\n    'Cannot provide a valueLink and a value or onChange event. If you want ' +\n    'to use value or onChange, you probably don\\'t want to use valueLink.'\n  ) : invariant(input.props.value == null && input.props.onChange == null));\n}\n\nfunction _assertCheckedLink(input) {\n  _assertSingleLink(input);\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    input.props.checked == null && input.props.onChange == null,\n    'Cannot provide a checkedLink and a checked property or onChange event. ' +\n    'If you want to use checked or onChange, you probably don\\'t want to ' +\n    'use checkedLink'\n  ) : invariant(input.props.checked == null && input.props.onChange == null));\n}\n\n/**\n * @param {SyntheticEvent} e change event to handle\n */\nfunction _handleLinkedValueChange(e) {\n  /*jshint validthis:true */\n  this.props.valueLink.requestChange(e.target.value);\n}\n\n/**\n  * @param {SyntheticEvent} e change event to handle\n  */\nfunction _handleLinkedCheckChange(e) {\n  /*jshint validthis:true */\n  this.props.checkedLink.requestChange(e.target.checked);\n}\n\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\nvar LinkedValueUtils = {\n  Mixin: {\n    propTypes: {\n      value: function(props, propName, componentName) {\n        if (!props[propName] ||\n            hasReadOnlyValue[props.type] ||\n            props.onChange ||\n            props.readOnly ||\n            props.disabled) {\n          return null;\n        }\n        return new Error(\n          'You provided a `value` prop to a form field without an ' +\n          '`onChange` handler. This will render a read-only field. If ' +\n          'the field should be mutable use `defaultValue`. Otherwise, ' +\n          'set either `onChange` or `readOnly`.'\n        );\n      },\n      checked: function(props, propName, componentName) {\n        if (!props[propName] ||\n            props.onChange ||\n            props.readOnly ||\n            props.disabled) {\n          return null;\n        }\n        return new Error(\n          'You provided a `checked` prop to a form field without an ' +\n          '`onChange` handler. This will render a read-only field. If ' +\n          'the field should be mutable use `defaultChecked`. Otherwise, ' +\n          'set either `onChange` or `readOnly`.'\n        );\n      },\n      onChange: ReactPropTypes.func\n    }\n  },\n\n  /**\n   * @param {ReactComponent} input Form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function(input) {\n    if (input.props.valueLink) {\n      _assertValueLink(input);\n      return input.props.valueLink.value;\n    }\n    return input.props.value;\n  },\n\n  /**\n   * @param {ReactComponent} input Form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function(input) {\n    if (input.props.checkedLink) {\n      _assertCheckedLink(input);\n      return input.props.checkedLink.value;\n    }\n    return input.props.checked;\n  },\n\n  /**\n   * @param {ReactComponent} input Form component\n   * @return {function} change callback either from onChange prop or link.\n   */\n  getOnChange: function(input) {\n    if (input.props.valueLink) {\n      _assertValueLink(input);\n      return _handleLinkedValueChange;\n    } else if (input.props.checkedLink) {\n      _assertCheckedLink(input);\n      return _handleLinkedCheckChange;\n    }\n    return input.props.onChange;\n  }\n};\n\nmodule.exports = LinkedValueUtils;\n\n}).call(this,require('_process'))\n},{\"./ReactPropTypes\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactPropTypes.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/LocalEventTrapMixin.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LocalEventTrapMixin\n */\n\n'use strict';\n\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\n\nvar accumulateInto = require(\"./accumulateInto\");\nvar forEachAccumulated = require(\"./forEachAccumulated\");\nvar invariant = require(\"./invariant\");\n\nfunction remove(event) {\n  event.remove();\n}\n\nvar LocalEventTrapMixin = {\n  trapBubbledEvent:function(topLevelType, handlerBaseName) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(this.isMounted(), 'Must be mounted to trap events') : invariant(this.isMounted()));\n    // If a component renders to null or if another component fatals and causes\n    // the state of the tree to be corrupted, `node` here can be null.\n    var node = this.getDOMNode();\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      node,\n      'LocalEventTrapMixin.trapBubbledEvent(...): Requires node to be rendered.'\n    ) : invariant(node));\n    var listener = ReactBrowserEventEmitter.trapBubbledEvent(\n      topLevelType,\n      handlerBaseName,\n      node\n    );\n    this._localEventListeners =\n      accumulateInto(this._localEventListeners, listener);\n  },\n\n  // trapCapturedEvent would look nearly identical. We don't implement that\n  // method because it isn't currently needed.\n\n  componentWillUnmount:function() {\n    if (this._localEventListeners) {\n      forEachAccumulated(this._localEventListeners, remove);\n    }\n  }\n};\n\nmodule.exports = LocalEventTrapMixin;\n\n}).call(this,require('_process'))\n},{\"./ReactBrowserEventEmitter\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactBrowserEventEmitter.js\",\"./accumulateInto\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/accumulateInto.js\",\"./forEachAccumulated\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/forEachAccumulated.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/MobileSafariClickEventPlugin.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule MobileSafariClickEventPlugin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\n\nvar emptyFunction = require(\"./emptyFunction\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\n/**\n * Mobile Safari does not fire properly bubble click events on non-interactive\n * elements, which means delegated click listeners do not fire. The workaround\n * for this bug involves attaching an empty click listener on the target node.\n *\n * This particular plugin works around the bug by attaching an empty click\n * listener on `touchstart` (which does fire on every element).\n */\nvar MobileSafariClickEventPlugin = {\n\n  eventTypes: null,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    if (topLevelType === topLevelTypes.topTouchStart) {\n      var target = nativeEvent.target;\n      if (target && !target.onclick) {\n        target.onclick = emptyFunction;\n      }\n    }\n  }\n\n};\n\nmodule.exports = MobileSafariClickEventPlugin;\n\n},{\"./EventConstants\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventConstants.js\",\"./emptyFunction\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/emptyFunction.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Object.assign.js\":[function(require,module,exports){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Object.assign\n */\n\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign\n\n'use strict';\n\nfunction assign(target, sources) {\n  if (target == null) {\n    throw new TypeError('Object.assign target cannot be null or undefined');\n  }\n\n  var to = Object(target);\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n    var nextSource = arguments[nextIndex];\n    if (nextSource == null) {\n      continue;\n    }\n\n    var from = Object(nextSource);\n\n    // We don't currently support accessors nor proxies. Therefore this\n    // copy cannot throw. If we ever supported this then we must handle\n    // exceptions and side-effects. We don't support symbols so they won't\n    // be transferred.\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n  }\n\n  return to;\n}\n\nmodule.exports = assign;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/PooledClass.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule PooledClass\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nvar oneArgumentPooler = function(copyFieldsFrom) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nvar twoArgumentPooler = function(a1, a2) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nvar threeArgumentPooler = function(a1, a2, a3) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nvar fiveArgumentPooler = function(a1, a2, a3, a4, a5) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4, a5);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4, a5);\n  }\n};\n\nvar standardReleaser = function(instance) {\n  var Klass = this;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    instance instanceof Klass,\n    'Trying to release an instance into a pool of a different type.'\n  ) : invariant(instance instanceof Klass));\n  if (instance.destructor) {\n    instance.destructor();\n  }\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = oneArgumentPooler;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances (optional).\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nvar addPoolingTo = function(CopyConstructor, pooler) {\n  var NewKlass = CopyConstructor;\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: oneArgumentPooler,\n  twoArgumentPooler: twoArgumentPooler,\n  threeArgumentPooler: threeArgumentPooler,\n  fiveArgumentPooler: fiveArgumentPooler\n};\n\nmodule.exports = PooledClass;\n\n}).call(this,require('_process'))\n},{\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/React.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule React\n */\n\n/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/\n\n'use strict';\n\nvar EventPluginUtils = require(\"./EventPluginUtils\");\nvar ReactChildren = require(\"./ReactChildren\");\nvar ReactComponent = require(\"./ReactComponent\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactContext = require(\"./ReactContext\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactElementValidator = require(\"./ReactElementValidator\");\nvar ReactDOM = require(\"./ReactDOM\");\nvar ReactDOMTextComponent = require(\"./ReactDOMTextComponent\");\nvar ReactDefaultInjection = require(\"./ReactDefaultInjection\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactPerf = require(\"./ReactPerf\");\nvar ReactPropTypes = require(\"./ReactPropTypes\");\nvar ReactReconciler = require(\"./ReactReconciler\");\nvar ReactServerRendering = require(\"./ReactServerRendering\");\n\nvar assign = require(\"./Object.assign\");\nvar findDOMNode = require(\"./findDOMNode\");\nvar onlyChild = require(\"./onlyChild\");\n\nReactDefaultInjection.inject();\n\nvar createElement = ReactElement.createElement;\nvar createFactory = ReactElement.createFactory;\nvar cloneElement = ReactElement.cloneElement;\n\nif (\"production\" !== process.env.NODE_ENV) {\n  createElement = ReactElementValidator.createElement;\n  createFactory = ReactElementValidator.createFactory;\n  cloneElement = ReactElementValidator.cloneElement;\n}\n\nvar render = ReactPerf.measure('React', 'render', ReactMount.render);\n\nvar React = {\n  Children: {\n    map: ReactChildren.map,\n    forEach: ReactChildren.forEach,\n    count: ReactChildren.count,\n    only: onlyChild\n  },\n  Component: ReactComponent,\n  DOM: ReactDOM,\n  PropTypes: ReactPropTypes,\n  initializeTouchEvents: function(shouldUseTouch) {\n    EventPluginUtils.useTouchEvents = shouldUseTouch;\n  },\n  createClass: ReactClass.createClass,\n  createElement: createElement,\n  cloneElement: cloneElement,\n  createFactory: createFactory,\n  createMixin: function(mixin) {\n    // Currently a noop. Will be used to validate and trace mixins.\n    return mixin;\n  },\n  constructAndRenderComponent: ReactMount.constructAndRenderComponent,\n  constructAndRenderComponentByID: ReactMount.constructAndRenderComponentByID,\n  findDOMNode: findDOMNode,\n  render: render,\n  renderToString: ReactServerRendering.renderToString,\n  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,\n  unmountComponentAtNode: ReactMount.unmountComponentAtNode,\n  isValidElement: ReactElement.isValidElement,\n  withContext: ReactContext.withContext,\n\n  // Hook for JSX spread, don't use this for anything else.\n  __spread: assign\n};\n\n// Inject the runtime into a devtools global hook regardless of browser.\n// Allows for debugging when the hook is injected on the page.\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({\n    CurrentOwner: ReactCurrentOwner,\n    InstanceHandles: ReactInstanceHandles,\n    Mount: ReactMount,\n    Reconciler: ReactReconciler,\n    TextComponent: ReactDOMTextComponent\n  });\n}\n\nif (\"production\" !== process.env.NODE_ENV) {\n  var ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {\n\n    // If we're in Chrome, look for the devtools marker and provide a download\n    // link if not installed.\n    if (navigator.userAgent.indexOf('Chrome') > -1) {\n      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n        console.debug(\n          'Download the React DevTools for a better development experience: ' +\n          'https://fb.me/react-devtools'\n        );\n      }\n    }\n\n    var expectedFeatures = [\n      // shims\n      Array.isArray,\n      Array.prototype.every,\n      Array.prototype.forEach,\n      Array.prototype.indexOf,\n      Array.prototype.map,\n      Date.now,\n      Function.prototype.bind,\n      Object.keys,\n      String.prototype.split,\n      String.prototype.trim,\n\n      // shams\n      Object.create,\n      Object.freeze\n    ];\n\n    for (var i = 0; i < expectedFeatures.length; i++) {\n      if (!expectedFeatures[i]) {\n        console.error(\n          'One or more ES5 shim/shams expected by React are not available: ' +\n          'https://fb.me/react-warning-polyfills'\n        );\n        break;\n      }\n    }\n  }\n}\n\nReact.version = '0.13.3';\n\nmodule.exports = React;\n\n}).call(this,require('_process'))\n},{\"./EventPluginUtils\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventPluginUtils.js\",\"./ExecutionEnvironment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ExecutionEnvironment.js\",\"./Object.assign\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Object.assign.js\",\"./ReactChildren\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactChildren.js\",\"./ReactClass\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactClass.js\",\"./ReactComponent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactComponent.js\",\"./ReactContext\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactContext.js\",\"./ReactCurrentOwner\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactCurrentOwner.js\",\"./ReactDOM\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOM.js\",\"./ReactDOMTextComponent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMTextComponent.js\",\"./ReactDefaultInjection\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDefaultInjection.js\",\"./ReactElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElement.js\",\"./ReactElementValidator\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElementValidator.js\",\"./ReactInstanceHandles\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactInstanceHandles.js\",\"./ReactMount\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactMount.js\",\"./ReactPerf\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactPerf.js\",\"./ReactPropTypes\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactPropTypes.js\",\"./ReactReconciler\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactReconciler.js\",\"./ReactServerRendering\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactServerRendering.js\",\"./findDOMNode\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/findDOMNode.js\",\"./onlyChild\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/onlyChild.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactBrowserComponentMixin.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactBrowserComponentMixin\n */\n\n'use strict';\n\nvar findDOMNode = require(\"./findDOMNode\");\n\nvar ReactBrowserComponentMixin = {\n  /**\n   * Returns the DOM node rendered by this component.\n   *\n   * @return {DOMElement} The root node of this component.\n   * @final\n   * @protected\n   */\n  getDOMNode: function() {\n    return findDOMNode(this);\n  }\n};\n\nmodule.exports = ReactBrowserComponentMixin;\n\n},{\"./findDOMNode\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/findDOMNode.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactBrowserEventEmitter.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactBrowserEventEmitter\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPluginHub = require(\"./EventPluginHub\");\nvar EventPluginRegistry = require(\"./EventPluginRegistry\");\nvar ReactEventEmitterMixin = require(\"./ReactEventEmitterMixin\");\nvar ViewportMetrics = require(\"./ViewportMetrics\");\n\nvar assign = require(\"./Object.assign\");\nvar isEventSupported = require(\"./isEventSupported\");\n\n/**\n * Summary of `ReactBrowserEventEmitter` event handling:\n *\n *  - Top-level delegation is used to trap most native browser events. This\n *    may only occur in the main thread and is the responsibility of\n *    ReactEventListener, which is injected and can therefore support pluggable\n *    event sources. This is the only work that occurs in the main thread.\n *\n *  - We normalize and de-duplicate events to account for browser quirks. This\n *    may be done in the worker thread.\n *\n *  - Forward these native events (with the associated top-level type used to\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n *    to extract any synthetic events.\n *\n *  - The `EventPluginHub` will then process each event by annotating them with\n *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n *\n *  - The `EventPluginHub` then dispatches the events.\n *\n * Overview of React and the event system:\n *\n * +------------+    .\n * |    DOM     |    .\n * +------------+    .\n *       |           .\n *       v           .\n * +------------+    .\n * | ReactEvent |    .\n * |  Listener  |    .\n * +------------+    .                         +-----------+\n *       |           .               +--------+|SimpleEvent|\n *       |           .               |         |Plugin     |\n * +-----|------+    .               v         +-----------+\n * |     |      |    .    +--------------+                    +------------+\n * |     +-----------.--->|EventPluginHub|                    |    Event   |\n * |            |    .    |              |     +-----------+  | Propagators|\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n * |            |    .    |              |     +-----------+  |  utilities |\n * |     +-----------.--->|              |                    +------------+\n * |     |      |    .    +--------------+\n * +-----|------+    .                ^        +-----------+\n *       |           .                |        |Enter/Leave|\n *       +           .                +-------+|Plugin     |\n * +-------------+   .                         +-----------+\n * | application |   .\n * |-------------|   .\n * |             |   .\n * |             |   .\n * +-------------+   .\n *                   .\n *    React Core     .  General Purpose Event Plugin System\n */\n\nvar alreadyListeningTo = {};\nvar isMonitoringScrollValue = false;\nvar reactTopListenersCounter = 0;\n\n// For events like 'submit' which don't consistently bubble (which we trap at a\n// lower node than `document`), binding at `document` would cause duplicate\n// events so we don't include them here\nvar topEventMapping = {\n  topBlur: 'blur',\n  topChange: 'change',\n  topClick: 'click',\n  topCompositionEnd: 'compositionend',\n  topCompositionStart: 'compositionstart',\n  topCompositionUpdate: 'compositionupdate',\n  topContextMenu: 'contextmenu',\n  topCopy: 'copy',\n  topCut: 'cut',\n  topDoubleClick: 'dblclick',\n  topDrag: 'drag',\n  topDragEnd: 'dragend',\n  topDragEnter: 'dragenter',\n  topDragExit: 'dragexit',\n  topDragLeave: 'dragleave',\n  topDragOver: 'dragover',\n  topDragStart: 'dragstart',\n  topDrop: 'drop',\n  topFocus: 'focus',\n  topInput: 'input',\n  topKeyDown: 'keydown',\n  topKeyPress: 'keypress',\n  topKeyUp: 'keyup',\n  topMouseDown: 'mousedown',\n  topMouseMove: 'mousemove',\n  topMouseOut: 'mouseout',\n  topMouseOver: 'mouseover',\n  topMouseUp: 'mouseup',\n  topPaste: 'paste',\n  topScroll: 'scroll',\n  topSelectionChange: 'selectionchange',\n  topTextInput: 'textInput',\n  topTouchCancel: 'touchcancel',\n  topTouchEnd: 'touchend',\n  topTouchMove: 'touchmove',\n  topTouchStart: 'touchstart',\n  topWheel: 'wheel'\n};\n\n/**\n * To ensure no conflicts with other potential React instances on the page\n */\nvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\n\nfunction getListeningForDocument(mountAt) {\n  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n  // directly.\n  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n  }\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\n}\n\n/**\n * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\n * example:\n *\n *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);\n *\n * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n *\n * @internal\n */\nvar ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {\n\n  /**\n   * Injectable event backend\n   */\n  ReactEventListener: null,\n\n  injection: {\n    /**\n     * @param {object} ReactEventListener\n     */\n    injectReactEventListener: function(ReactEventListener) {\n      ReactEventListener.setHandleTopLevel(\n        ReactBrowserEventEmitter.handleTopLevel\n      );\n      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\n    }\n  },\n\n  /**\n   * Sets whether or not any created callbacks should be enabled.\n   *\n   * @param {boolean} enabled True if callbacks should be enabled.\n   */\n  setEnabled: function(enabled) {\n    if (ReactBrowserEventEmitter.ReactEventListener) {\n      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\n    }\n  },\n\n  /**\n   * @return {boolean} True if callbacks are enabled.\n   */\n  isEnabled: function() {\n    return !!(\n      (ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled())\n    );\n  },\n\n  /**\n   * We listen for bubbled touch events on the document object.\n   *\n   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n   * mounting `onmousemove` events at some node that was not the document\n   * element. The symptoms were that if your mouse is not moving over something\n   * contained within that mount point (for example on the background) the\n   * top-level listeners for `onmousemove` won't be called. However, if you\n   * register the `mousemove` on the document object, then it will of course\n   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n   * top-level listeners to the document object only, at least for these\n   * movement types of events and possibly all events.\n   *\n   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n   *\n   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n   * they bubble to document.\n   *\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {object} contentDocumentHandle Document which owns the container\n   */\n  listenTo: function(registrationName, contentDocumentHandle) {\n    var mountAt = contentDocumentHandle;\n    var isListening = getListeningForDocument(mountAt);\n    var dependencies = EventPluginRegistry.\n      registrationNameDependencies[registrationName];\n\n    var topLevelTypes = EventConstants.topLevelTypes;\n    for (var i = 0, l = dependencies.length; i < l; i++) {\n      var dependency = dependencies[i];\n      if (!(\n            (isListening.hasOwnProperty(dependency) && isListening[dependency])\n          )) {\n        if (dependency === topLevelTypes.topWheel) {\n          if (isEventSupported('wheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topWheel,\n              'wheel',\n              mountAt\n            );\n          } else if (isEventSupported('mousewheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topWheel,\n              'mousewheel',\n              mountAt\n            );\n          } else {\n            // Firefox needs to capture a different mouse scroll event.\n            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topWheel,\n              'DOMMouseScroll',\n              mountAt\n            );\n          }\n        } else if (dependency === topLevelTypes.topScroll) {\n\n          if (isEventSupported('scroll', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\n              topLevelTypes.topScroll,\n              'scroll',\n              mountAt\n            );\n          } else {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topScroll,\n              'scroll',\n              ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE\n            );\n          }\n        } else if (dependency === topLevelTypes.topFocus ||\n            dependency === topLevelTypes.topBlur) {\n\n          if (isEventSupported('focus', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\n              topLevelTypes.topFocus,\n              'focus',\n              mountAt\n            );\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\n              topLevelTypes.topBlur,\n              'blur',\n              mountAt\n            );\n          } else if (isEventSupported('focusin')) {\n            // IE has `focusin` and `focusout` events which bubble.\n            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topFocus,\n              'focusin',\n              mountAt\n            );\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topBlur,\n              'focusout',\n              mountAt\n            );\n          }\n\n          // to make sure blur and focus event listeners are only attached once\n          isListening[topLevelTypes.topBlur] = true;\n          isListening[topLevelTypes.topFocus] = true;\n        } else if (topEventMapping.hasOwnProperty(dependency)) {\n          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n            dependency,\n            topEventMapping[dependency],\n            mountAt\n          );\n        }\n\n        isListening[dependency] = true;\n      }\n    }\n  },\n\n  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n      topLevelType,\n      handlerBaseName,\n      handle\n    );\n  },\n\n  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\n      topLevelType,\n      handlerBaseName,\n      handle\n    );\n  },\n\n  /**\n   * Listens to window scroll and resize events. We cache scroll values so that\n   * application code can access them without triggering reflows.\n   *\n   * NOTE: Scroll events do not bubble.\n   *\n   * @see http://www.quirksmode.org/dom/events/scroll.html\n   */\n  ensureScrollValueMonitoring: function() {\n    if (!isMonitoringScrollValue) {\n      var refresh = ViewportMetrics.refreshScrollValues;\n      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n      isMonitoringScrollValue = true;\n    }\n  },\n\n  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,\n\n  registrationNameModules: EventPluginHub.registrationNameModules,\n\n  putListener: EventPluginHub.putListener,\n\n  getListener: EventPluginHub.getListener,\n\n  deleteListener: EventPluginHub.deleteListener,\n\n  deleteAllListeners: EventPluginHub.deleteAllListeners\n\n});\n\nmodule.exports = ReactBrowserEventEmitter;\n\n},{\"./EventConstants\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventConstants.js\",\"./EventPluginHub\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventPluginHub.js\",\"./EventPluginRegistry\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventPluginRegistry.js\",\"./Object.assign\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Object.assign.js\",\"./ReactEventEmitterMixin\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactEventEmitterMixin.js\",\"./ViewportMetrics\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ViewportMetrics.js\",\"./isEventSupported\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/isEventSupported.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactChildReconciler.js\":[function(require,module,exports){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactChildReconciler\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactReconciler = require(\"./ReactReconciler\");\n\nvar flattenChildren = require(\"./flattenChildren\");\nvar instantiateReactComponent = require(\"./instantiateReactComponent\");\nvar shouldUpdateReactComponent = require(\"./shouldUpdateReactComponent\");\n\n/**\n * ReactChildReconciler provides helpers for initializing or updating a set of\n * children. Its output is suitable for passing it onto ReactMultiChild which\n * does diffed reordering and insertion.\n */\nvar ReactChildReconciler = {\n\n  /**\n   * Generates a \"mount image\" for each of the supplied children. In the case\n   * of `ReactDOMComponent`, a mount image is a string of markup.\n   *\n   * @param {?object} nestedChildNodes Nested child maps.\n   * @return {?object} A set of child instances.\n   * @internal\n   */\n  instantiateChildren: function(nestedChildNodes, transaction, context) {\n    var children = flattenChildren(nestedChildNodes);\n    for (var name in children) {\n      if (children.hasOwnProperty(name)) {\n        var child = children[name];\n        // The rendered children must be turned into instances as they're\n        // mounted.\n        var childInstance = instantiateReactComponent(child, null);\n        children[name] = childInstance;\n      }\n    }\n    return children;\n  },\n\n  /**\n   * Updates the rendered children and returns a new set of children.\n   *\n   * @param {?object} prevChildren Previously initialized set of children.\n   * @param {?object} nextNestedChildNodes Nested child maps.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @return {?object} A new set of child instances.\n   * @internal\n   */\n  updateChildren: function(\n    prevChildren,\n    nextNestedChildNodes,\n    transaction,\n    context) {\n    // We currently don't have a way to track moves here but if we use iterators\n    // instead of for..in we can zip the iterators and check if an item has\n    // moved.\n    // TODO: If nothing has changed, return the prevChildren object so that we\n    // can quickly bailout if nothing has changed.\n    var nextChildren = flattenChildren(nextNestedChildNodes);\n    if (!nextChildren && !prevChildren) {\n      return null;\n    }\n    var name;\n    for (name in nextChildren) {\n      if (!nextChildren.hasOwnProperty(name)) {\n        continue;\n      }\n      var prevChild = prevChildren && prevChildren[name];\n      var prevElement = prevChild && prevChild._currentElement;\n      var nextElement = nextChildren[name];\n      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n        ReactReconciler.receiveComponent(\n          prevChild, nextElement, transaction, context\n        );\n        nextChildren[name] = prevChild;\n      } else {\n        if (prevChild) {\n          ReactReconciler.unmountComponent(prevChild, name);\n        }\n        // The child must be instantiated before it's mounted.\n        var nextChildInstance = instantiateReactComponent(\n          nextElement,\n          null\n        );\n        nextChildren[name] = nextChildInstance;\n      }\n    }\n    // Unmount children that are no longer present.\n    for (name in prevChildren) {\n      if (prevChildren.hasOwnProperty(name) &&\n          !(nextChildren && nextChildren.hasOwnProperty(name))) {\n        ReactReconciler.unmountComponent(prevChildren[name]);\n      }\n    }\n    return nextChildren;\n  },\n\n  /**\n   * Unmounts all rendered children. This should be used to clean up children\n   * when this component is unmounted.\n   *\n   * @param {?object} renderedChildren Previously initialized set of children.\n   * @internal\n   */\n  unmountChildren: function(renderedChildren) {\n    for (var name in renderedChildren) {\n      var renderedChild = renderedChildren[name];\n      ReactReconciler.unmountComponent(renderedChild);\n    }\n  }\n\n};\n\nmodule.exports = ReactChildReconciler;\n\n},{\"./ReactReconciler\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactReconciler.js\",\"./flattenChildren\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/flattenChildren.js\",\"./instantiateReactComponent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/instantiateReactComponent.js\",\"./shouldUpdateReactComponent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/shouldUpdateReactComponent.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactChildren.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactChildren\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\nvar ReactFragment = require(\"./ReactFragment\");\n\nvar traverseAllChildren = require(\"./traverseAllChildren\");\nvar warning = require(\"./warning\");\n\nvar twoArgumentPooler = PooledClass.twoArgumentPooler;\nvar threeArgumentPooler = PooledClass.threeArgumentPooler;\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * traversal. Allows avoiding binding callbacks.\n *\n * @constructor ForEachBookKeeping\n * @param {!function} forEachFunction Function to perform traversal with.\n * @param {?*} forEachContext Context to perform context with.\n */\nfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n  this.forEachFunction = forEachFunction;\n  this.forEachContext = forEachContext;\n}\nPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\nfunction forEachSingleChild(traverseContext, child, name, i) {\n  var forEachBookKeeping = traverseContext;\n  forEachBookKeeping.forEachFunction.call(\n    forEachBookKeeping.forEachContext, child, i);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc.\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n\n  var traverseContext =\n    ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  ForEachBookKeeping.release(traverseContext);\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * mapping. Allows avoiding binding callbacks.\n *\n * @constructor MapBookKeeping\n * @param {!*} mapResult Object containing the ordered map of results.\n * @param {!function} mapFunction Function to perform mapping with.\n * @param {?*} mapContext Context to perform mapping with.\n */\nfunction MapBookKeeping(mapResult, mapFunction, mapContext) {\n  this.mapResult = mapResult;\n  this.mapFunction = mapFunction;\n  this.mapContext = mapContext;\n}\nPooledClass.addPoolingTo(MapBookKeeping, threeArgumentPooler);\n\nfunction mapSingleChildIntoContext(traverseContext, child, name, i) {\n  var mapBookKeeping = traverseContext;\n  var mapResult = mapBookKeeping.mapResult;\n\n  var keyUnique = !mapResult.hasOwnProperty(name);\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      keyUnique,\n      'ReactChildren.map(...): Encountered two children with the same key, ' +\n      '`%s`. Child keys must be unique; when two children share a key, only ' +\n      'the first child will be used.',\n      name\n    ) : null);\n  }\n\n  if (keyUnique) {\n    var mappedChild =\n      mapBookKeeping.mapFunction.call(mapBookKeeping.mapContext, child, i);\n    mapResult[name] = mappedChild;\n  }\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * TODO: This may likely break any calls to `ReactChildren.map` that were\n * previously relying on the fact that we guarded against null children.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} mapFunction.\n * @param {*} mapContext Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var mapResult = {};\n  var traverseContext = MapBookKeeping.getPooled(mapResult, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  MapBookKeeping.release(traverseContext);\n  return ReactFragment.create(mapResult);\n}\n\nfunction forEachSingleChildDummy(traverseContext, child, name, i) {\n  return null;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children, context) {\n  return traverseAllChildren(children, forEachSingleChildDummy, null);\n}\n\nvar ReactChildren = {\n  forEach: forEachChildren,\n  map: mapChildren,\n  count: countChildren\n};\n\nmodule.exports = ReactChildren;\n\n}).call(this,require('_process'))\n},{\"./PooledClass\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/PooledClass.js\",\"./ReactFragment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactFragment.js\",\"./traverseAllChildren\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/traverseAllChildren.js\",\"./warning\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/warning.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactClass.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactClass\n */\n\n'use strict';\n\nvar ReactComponent = require(\"./ReactComponent\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactErrorUtils = require(\"./ReactErrorUtils\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\nvar ReactLifeCycle = require(\"./ReactLifeCycle\");\nvar ReactPropTypeLocations = require(\"./ReactPropTypeLocations\");\nvar ReactPropTypeLocationNames = require(\"./ReactPropTypeLocationNames\");\nvar ReactUpdateQueue = require(\"./ReactUpdateQueue\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\nvar keyMirror = require(\"./keyMirror\");\nvar keyOf = require(\"./keyOf\");\nvar warning = require(\"./warning\");\n\nvar MIXINS_KEY = keyOf({mixins: null});\n\n/**\n * Policies that describe methods in `ReactClassInterface`.\n */\nvar SpecPolicy = keyMirror({\n  /**\n   * These methods may be defined only once by the class specification or mixin.\n   */\n  DEFINE_ONCE: null,\n  /**\n   * These methods may be defined by both the class specification and mixins.\n   * Subsequent definitions will be chained. These methods must return void.\n   */\n  DEFINE_MANY: null,\n  /**\n   * These methods are overriding the base class.\n   */\n  OVERRIDE_BASE: null,\n  /**\n   * These methods are similar to DEFINE_MANY, except we assume they return\n   * objects. We try to merge the keys of the return values of all the mixed in\n   * functions. If there is a key conflict we throw.\n   */\n  DEFINE_MANY_MERGED: null\n});\n\n\nvar injectedMixins = [];\n\n/**\n * Composite components are higher-level components that compose other composite\n * or native components.\n *\n * To create a new type of `ReactClass`, pass a specification of\n * your new class to `React.createClass`. The only requirement of your class\n * specification is that you implement a `render` method.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return <div>Hello World</div>;\n *     }\n *   });\n *\n * The class specification supports a specific protocol of methods that have\n * special meaning (e.g. `render`). See `ReactClassInterface` for\n * more the comprehensive protocol. Any other properties and methods in the\n * class specification will available on the prototype.\n *\n * @interface ReactClassInterface\n * @internal\n */\nvar ReactClassInterface = {\n\n  /**\n   * An array of Mixin objects to include when defining your component.\n   *\n   * @type {array}\n   * @optional\n   */\n  mixins: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * An object containing properties and methods that should be defined on\n   * the component's constructor instead of its prototype (static methods).\n   *\n   * @type {object}\n   * @optional\n   */\n  statics: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of prop types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  propTypes: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of context types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  contextTypes: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of context types this component sets for its children.\n   *\n   * @type {object}\n   * @optional\n   */\n  childContextTypes: SpecPolicy.DEFINE_MANY,\n\n  // ==== Definition methods ====\n\n  /**\n   * Invoked when the component is mounted. Values in the mapping will be set on\n   * `this.props` if that prop is not specified (i.e. using an `in` check).\n   *\n   * This method is invoked before `getInitialState` and therefore cannot rely\n   * on `this.state` or use `this.setState`.\n   *\n   * @return {object}\n   * @optional\n   */\n  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * Invoked once before the component is mounted. The return value will be used\n   * as the initial value of `this.state`.\n   *\n   *   getInitialState: function() {\n   *     return {\n   *       isOn: false,\n   *       fooBaz: new BazFoo()\n   *     }\n   *   }\n   *\n   * @return {object}\n   * @optional\n   */\n  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * @return {object}\n   * @optional\n   */\n  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * Uses props from `this.props` and state from `this.state` to render the\n   * structure of the component.\n   *\n   * No guarantees are made about when or how often this method is invoked, so\n   * it must not have side effects.\n   *\n   *   render: function() {\n   *     var name = this.props.name;\n   *     return <div>Hello, {name}!</div>;\n   *   }\n   *\n   * @return {ReactComponent}\n   * @nosideeffects\n   * @required\n   */\n  render: SpecPolicy.DEFINE_ONCE,\n\n\n\n  // ==== Delegate methods ====\n\n  /**\n   * Invoked when the component is initially created and about to be mounted.\n   * This may have side effects, but any external subscriptions or data created\n   * by this method must be cleaned up in `componentWillUnmount`.\n   *\n   * @optional\n   */\n  componentWillMount: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component has been mounted and has a DOM representation.\n   * However, there is no guarantee that the DOM node is in the document.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been mounted (initialized and rendered) for the first time.\n   *\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidMount: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked before the component receives new props.\n   *\n   * Use this as an opportunity to react to a prop transition by updating the\n   * state using `this.setState`. Current props are accessed via `this.props`.\n   *\n   *   componentWillReceiveProps: function(nextProps, nextContext) {\n   *     this.setState({\n   *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n   *     });\n   *   }\n   *\n   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n   * transition may cause a state change, but the opposite is not true. If you\n   * need it, you are probably looking for `componentWillUpdate`.\n   *\n   * @param {object} nextProps\n   * @optional\n   */\n  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked while deciding if the component should be updated as a result of\n   * receiving new props, state and/or context.\n   *\n   * Use this as an opportunity to `return false` when you're certain that the\n   * transition to the new props/state/context will not require a component\n   * update.\n   *\n   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n   *     return !equal(nextProps, this.props) ||\n   *       !equal(nextState, this.state) ||\n   *       !equal(nextContext, this.context);\n   *   }\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @return {boolean} True if the component should update.\n   * @optional\n   */\n  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,\n\n  /**\n   * Invoked when the component is about to update due to a transition from\n   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n   * and `nextContext`.\n   *\n   * Use this as an opportunity to perform preparation before an update occurs.\n   *\n   * NOTE: You **cannot** use `this.setState()` in this method.\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @param {ReactReconcileTransaction} transaction\n   * @optional\n   */\n  componentWillUpdate: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component's DOM representation has been updated.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been updated.\n   *\n   * @param {object} prevProps\n   * @param {?object} prevState\n   * @param {?object} prevContext\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidUpdate: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component is about to be removed from its parent and have\n   * its DOM representation destroyed.\n   *\n   * Use this as an opportunity to deallocate any external resources.\n   *\n   * NOTE: There is no `componentDidUnmount` since your component will have been\n   * destroyed by that point.\n   *\n   * @optional\n   */\n  componentWillUnmount: SpecPolicy.DEFINE_MANY,\n\n\n\n  // ==== Advanced methods ====\n\n  /**\n   * Updates the component's currently mounted DOM representation.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   * @overridable\n   */\n  updateComponent: SpecPolicy.OVERRIDE_BASE\n\n};\n\n/**\n * Mapping from class specification keys to special processing functions.\n *\n * Although these are declared like instance properties in the specification\n * when defining classes using `React.createClass`, they are actually static\n * and are accessible on the constructor instead of the prototype. Despite\n * being static, they must be defined outside of the \"statics\" key under\n * which all other static methods are defined.\n */\nvar RESERVED_SPEC_KEYS = {\n  displayName: function(Constructor, displayName) {\n    Constructor.displayName = displayName;\n  },\n  mixins: function(Constructor, mixins) {\n    if (mixins) {\n      for (var i = 0; i < mixins.length; i++) {\n        mixSpecIntoComponent(Constructor, mixins[i]);\n      }\n    }\n  },\n  childContextTypes: function(Constructor, childContextTypes) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      validateTypeDef(\n        Constructor,\n        childContextTypes,\n        ReactPropTypeLocations.childContext\n      );\n    }\n    Constructor.childContextTypes = assign(\n      {},\n      Constructor.childContextTypes,\n      childContextTypes\n    );\n  },\n  contextTypes: function(Constructor, contextTypes) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      validateTypeDef(\n        Constructor,\n        contextTypes,\n        ReactPropTypeLocations.context\n      );\n    }\n    Constructor.contextTypes = assign(\n      {},\n      Constructor.contextTypes,\n      contextTypes\n    );\n  },\n  /**\n   * Special case getDefaultProps which should move into statics but requires\n   * automatic merging.\n   */\n  getDefaultProps: function(Constructor, getDefaultProps) {\n    if (Constructor.getDefaultProps) {\n      Constructor.getDefaultProps = createMergedResultFunction(\n        Constructor.getDefaultProps,\n        getDefaultProps\n      );\n    } else {\n      Constructor.getDefaultProps = getDefaultProps;\n    }\n  },\n  propTypes: function(Constructor, propTypes) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      validateTypeDef(\n        Constructor,\n        propTypes,\n        ReactPropTypeLocations.prop\n      );\n    }\n    Constructor.propTypes = assign(\n      {},\n      Constructor.propTypes,\n      propTypes\n    );\n  },\n  statics: function(Constructor, statics) {\n    mixStaticSpecIntoComponent(Constructor, statics);\n  }\n};\n\nfunction validateTypeDef(Constructor, typeDef, location) {\n  for (var propName in typeDef) {\n    if (typeDef.hasOwnProperty(propName)) {\n      // use a warning instead of an invariant so components\n      // don't show up in prod but not in __DEV__\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        typeof typeDef[propName] === 'function',\n        '%s: %s type `%s` is invalid; it must be a function, usually from ' +\n        'React.PropTypes.',\n        Constructor.displayName || 'ReactClass',\n        ReactPropTypeLocationNames[location],\n        propName\n      ) : null);\n    }\n  }\n}\n\nfunction validateMethodOverride(proto, name) {\n  var specPolicy = ReactClassInterface.hasOwnProperty(name) ?\n    ReactClassInterface[name] :\n    null;\n\n  // Disallow overriding of base class methods unless explicitly allowed.\n  if (ReactClassMixin.hasOwnProperty(name)) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      specPolicy === SpecPolicy.OVERRIDE_BASE,\n      'ReactClassInterface: You are attempting to override ' +\n      '`%s` from your class specification. Ensure that your method names ' +\n      'do not overlap with React methods.',\n      name\n    ) : invariant(specPolicy === SpecPolicy.OVERRIDE_BASE));\n  }\n\n  // Disallow defining methods more than once unless explicitly allowed.\n  if (proto.hasOwnProperty(name)) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      specPolicy === SpecPolicy.DEFINE_MANY ||\n      specPolicy === SpecPolicy.DEFINE_MANY_MERGED,\n      'ReactClassInterface: You are attempting to define ' +\n      '`%s` on your component more than once. This conflict may be due ' +\n      'to a mixin.',\n      name\n    ) : invariant(specPolicy === SpecPolicy.DEFINE_MANY ||\n    specPolicy === SpecPolicy.DEFINE_MANY_MERGED));\n  }\n}\n\n/**\n * Mixin helper which handles policy validation and reserved\n * specification keys when building React classses.\n */\nfunction mixSpecIntoComponent(Constructor, spec) {\n  if (!spec) {\n    return;\n  }\n\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    typeof spec !== 'function',\n    'ReactClass: You\\'re attempting to ' +\n    'use a component class as a mixin. Instead, just use a regular object.'\n  ) : invariant(typeof spec !== 'function'));\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !ReactElement.isValidElement(spec),\n    'ReactClass: You\\'re attempting to ' +\n    'use a component as a mixin. Instead, just use a regular object.'\n  ) : invariant(!ReactElement.isValidElement(spec)));\n\n  var proto = Constructor.prototype;\n\n  // By handling mixins before any other properties, we ensure the same\n  // chaining order is applied to methods with DEFINE_MANY policy, whether\n  // mixins are listed before or after these methods in the spec.\n  if (spec.hasOwnProperty(MIXINS_KEY)) {\n    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n  }\n\n  for (var name in spec) {\n    if (!spec.hasOwnProperty(name)) {\n      continue;\n    }\n\n    if (name === MIXINS_KEY) {\n      // We have already handled mixins in a special case above\n      continue;\n    }\n\n    var property = spec[name];\n    validateMethodOverride(proto, name);\n\n    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n      RESERVED_SPEC_KEYS[name](Constructor, property);\n    } else {\n      // Setup methods on prototype:\n      // The following member methods should not be automatically bound:\n      // 1. Expected ReactClass methods (in the \"interface\").\n      // 2. Overridden methods (that were mixed in).\n      var isReactClassMethod =\n        ReactClassInterface.hasOwnProperty(name);\n      var isAlreadyDefined = proto.hasOwnProperty(name);\n      var markedDontBind = property && property.__reactDontBind;\n      var isFunction = typeof property === 'function';\n      var shouldAutoBind =\n        isFunction &&\n        !isReactClassMethod &&\n        !isAlreadyDefined &&\n        !markedDontBind;\n\n      if (shouldAutoBind) {\n        if (!proto.__reactAutoBindMap) {\n          proto.__reactAutoBindMap = {};\n        }\n        proto.__reactAutoBindMap[name] = property;\n        proto[name] = property;\n      } else {\n        if (isAlreadyDefined) {\n          var specPolicy = ReactClassInterface[name];\n\n          // These cases should already be caught by validateMethodOverride\n          (\"production\" !== process.env.NODE_ENV ? invariant(\n            isReactClassMethod && (\n              (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)\n            ),\n            'ReactClass: Unexpected spec policy %s for key %s ' +\n            'when mixing in component specs.',\n            specPolicy,\n            name\n          ) : invariant(isReactClassMethod && (\n            (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)\n          )));\n\n          // For methods which are defined more than once, call the existing\n          // methods before calling the new property, merging if appropriate.\n          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {\n            proto[name] = createMergedResultFunction(proto[name], property);\n          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {\n            proto[name] = createChainedFunction(proto[name], property);\n          }\n        } else {\n          proto[name] = property;\n          if (\"production\" !== process.env.NODE_ENV) {\n            // Add verbose displayName to the function, which helps when looking\n            // at profiling tools.\n            if (typeof property === 'function' && spec.displayName) {\n              proto[name].displayName = spec.displayName + '_' + name;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction mixStaticSpecIntoComponent(Constructor, statics) {\n  if (!statics) {\n    return;\n  }\n  for (var name in statics) {\n    var property = statics[name];\n    if (!statics.hasOwnProperty(name)) {\n      continue;\n    }\n\n    var isReserved = name in RESERVED_SPEC_KEYS;\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !isReserved,\n      'ReactClass: You are attempting to define a reserved ' +\n      'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' +\n      'as an instance property instead; it will still be accessible on the ' +\n      'constructor.',\n      name\n    ) : invariant(!isReserved));\n\n    var isInherited = name in Constructor;\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !isInherited,\n      'ReactClass: You are attempting to define ' +\n      '`%s` on your component more than once. This conflict may be ' +\n      'due to a mixin.',\n      name\n    ) : invariant(!isInherited));\n    Constructor[name] = property;\n  }\n}\n\n/**\n * Merge two objects, but throw if both contain the same key.\n *\n * @param {object} one The first object, which is mutated.\n * @param {object} two The second object\n * @return {object} one after it has been mutated to contain everything in two.\n */\nfunction mergeIntoWithNoDuplicateKeys(one, two) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    one && two && typeof one === 'object' && typeof two === 'object',\n    'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'\n  ) : invariant(one && two && typeof one === 'object' && typeof two === 'object'));\n\n  for (var key in two) {\n    if (two.hasOwnProperty(key)) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        one[key] === undefined,\n        'mergeIntoWithNoDuplicateKeys(): ' +\n        'Tried to merge two objects with the same key: `%s`. This conflict ' +\n        'may be due to a mixin; in particular, this may be caused by two ' +\n        'getInitialState() or getDefaultProps() methods returning objects ' +\n        'with clashing keys.',\n        key\n      ) : invariant(one[key] === undefined));\n      one[key] = two[key];\n    }\n  }\n  return one;\n}\n\n/**\n * Creates a function that invokes two functions and merges their return values.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createMergedResultFunction(one, two) {\n  return function mergedResult() {\n    var a = one.apply(this, arguments);\n    var b = two.apply(this, arguments);\n    if (a == null) {\n      return b;\n    } else if (b == null) {\n      return a;\n    }\n    var c = {};\n    mergeIntoWithNoDuplicateKeys(c, a);\n    mergeIntoWithNoDuplicateKeys(c, b);\n    return c;\n  };\n}\n\n/**\n * Creates a function that invokes two functions and ignores their return vales.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createChainedFunction(one, two) {\n  return function chainedFunction() {\n    one.apply(this, arguments);\n    two.apply(this, arguments);\n  };\n}\n\n/**\n * Binds a method to the component.\n *\n * @param {object} component Component whose method is going to be bound.\n * @param {function} method Method to be bound.\n * @return {function} The bound method.\n */\nfunction bindAutoBindMethod(component, method) {\n  var boundMethod = method.bind(component);\n  if (\"production\" !== process.env.NODE_ENV) {\n    boundMethod.__reactBoundContext = component;\n    boundMethod.__reactBoundMethod = method;\n    boundMethod.__reactBoundArguments = null;\n    var componentName = component.constructor.displayName;\n    var _bind = boundMethod.bind;\n    /* eslint-disable block-scoped-var, no-undef */\n    boundMethod.bind = function(newThis ) {for (var args=[],$__0=1,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);\n      // User is trying to bind() an autobound method; we effectively will\n      // ignore the value of \"this\" that the user is trying to use, so\n      // let's warn.\n      if (newThis !== component && newThis !== null) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          false,\n          'bind(): React component methods may only be bound to the ' +\n          'component instance. See %s',\n          componentName\n        ) : null);\n      } else if (!args.length) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          false,\n          'bind(): You are binding a component method to the component. ' +\n          'React does this for you automatically in a high-performance ' +\n          'way, so you can safely remove this call. See %s',\n          componentName\n        ) : null);\n        return boundMethod;\n      }\n      var reboundMethod = _bind.apply(boundMethod, arguments);\n      reboundMethod.__reactBoundContext = component;\n      reboundMethod.__reactBoundMethod = method;\n      reboundMethod.__reactBoundArguments = args;\n      return reboundMethod;\n      /* eslint-enable */\n    };\n  }\n  return boundMethod;\n}\n\n/**\n * Binds all auto-bound methods in a component.\n *\n * @param {object} component Component whose method is going to be bound.\n */\nfunction bindAutoBindMethods(component) {\n  for (var autoBindKey in component.__reactAutoBindMap) {\n    if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {\n      var method = component.__reactAutoBindMap[autoBindKey];\n      component[autoBindKey] = bindAutoBindMethod(\n        component,\n        ReactErrorUtils.guard(\n          method,\n          component.constructor.displayName + '.' + autoBindKey\n        )\n      );\n    }\n  }\n}\n\nvar typeDeprecationDescriptor = {\n  enumerable: false,\n  get: function() {\n    var displayName = this.displayName || this.name || 'Component';\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      '%s.type is deprecated. Use %s directly to access the class.',\n      displayName,\n      displayName\n    ) : null);\n    Object.defineProperty(this, 'type', {\n      value: this\n    });\n    return this;\n  }\n};\n\n/**\n * Add more to the ReactClass base class. These are all legacy features and\n * therefore not already part of the modern ReactComponent.\n */\nvar ReactClassMixin = {\n\n  /**\n   * TODO: This will be deprecated because state should always keep a consistent\n   * type signature and the only use case for this, is to avoid that.\n   */\n  replaceState: function(newState, callback) {\n    ReactUpdateQueue.enqueueReplaceState(this, newState);\n    if (callback) {\n      ReactUpdateQueue.enqueueCallback(this, callback);\n    }\n  },\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function() {\n    if (\"production\" !== process.env.NODE_ENV) {\n      var owner = ReactCurrentOwner.current;\n      if (owner !== null) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          owner._warnedAboutRefsInRender,\n          '%s is accessing isMounted inside its render() function. ' +\n          'render() should be a pure function of props and state. It should ' +\n          'never access something that requires stale data from the previous ' +\n          'render, such as refs. Move this logic to componentDidMount and ' +\n          'componentDidUpdate instead.',\n          owner.getName() || 'A component'\n        ) : null);\n        owner._warnedAboutRefsInRender = true;\n      }\n    }\n    var internalInstance = ReactInstanceMap.get(this);\n    return (\n      internalInstance &&\n      internalInstance !== ReactLifeCycle.currentlyMountingInstance\n    );\n  },\n\n  /**\n   * Sets a subset of the props.\n   *\n   * @param {object} partialProps Subset of the next props.\n   * @param {?function} callback Called after props are updated.\n   * @final\n   * @public\n   * @deprecated\n   */\n  setProps: function(partialProps, callback) {\n    ReactUpdateQueue.enqueueSetProps(this, partialProps);\n    if (callback) {\n      ReactUpdateQueue.enqueueCallback(this, callback);\n    }\n  },\n\n  /**\n   * Replace all the props.\n   *\n   * @param {object} newProps Subset of the next props.\n   * @param {?function} callback Called after props are updated.\n   * @final\n   * @public\n   * @deprecated\n   */\n  replaceProps: function(newProps, callback) {\n    ReactUpdateQueue.enqueueReplaceProps(this, newProps);\n    if (callback) {\n      ReactUpdateQueue.enqueueCallback(this, callback);\n    }\n  }\n};\n\nvar ReactClassComponent = function() {};\nassign(\n  ReactClassComponent.prototype,\n  ReactComponent.prototype,\n  ReactClassMixin\n);\n\n/**\n * Module for creating composite components.\n *\n * @class ReactClass\n */\nvar ReactClass = {\n\n  /**\n   * Creates a composite component class given a class specification.\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  createClass: function(spec) {\n    var Constructor = function(props, context) {\n      // This constructor is overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (\"production\" !== process.env.NODE_ENV) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          this instanceof Constructor,\n          'Something is calling a React component directly. Use a factory or ' +\n          'JSX instead. See: https://fb.me/react-legacyfactory'\n        ) : null);\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindMap) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (\"production\" !== process.env.NODE_ENV) {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (typeof initialState === 'undefined' &&\n            this.getInitialState._isMockFunction) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        typeof initialState === 'object' && !Array.isArray(initialState),\n        '%s.getInitialState(): must return an object or null',\n        Constructor.displayName || 'ReactCompositeComponent'\n      ) : invariant(typeof initialState === 'object' && !Array.isArray(initialState)));\n\n      this.state = initialState;\n    };\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n\n    injectedMixins.forEach(\n      mixSpecIntoComponent.bind(null, Constructor)\n    );\n\n    mixSpecIntoComponent(Constructor, spec);\n\n    // Initialize the defaultProps property after all mixins have been merged\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      Constructor.prototype.render,\n      'createClass(...): Class specification must implement a `render` method.'\n    ) : invariant(Constructor.prototype.render));\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !Constructor.prototype.componentShouldUpdate,\n        '%s has a method called ' +\n        'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n        'The name is phrased as a question because the function is ' +\n        'expected to return a value.',\n        spec.displayName || 'A component'\n      ) : null);\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    // Legacy hook\n    Constructor.type = Constructor;\n    if (\"production\" !== process.env.NODE_ENV) {\n      try {\n        Object.defineProperty(Constructor, 'type', typeDeprecationDescriptor);\n      } catch (x) {\n        // IE will fail on defineProperty (es5-shim/sham too)\n      }\n    }\n\n    return Constructor;\n  },\n\n  injection: {\n    injectMixin: function(mixin) {\n      injectedMixins.push(mixin);\n    }\n  }\n\n};\n\nmodule.exports = ReactClass;\n\n}).call(this,require('_process'))\n},{\"./Object.assign\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Object.assign.js\",\"./ReactComponent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactComponent.js\",\"./ReactCurrentOwner\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactCurrentOwner.js\",\"./ReactElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElement.js\",\"./ReactErrorUtils\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactErrorUtils.js\",\"./ReactInstanceMap\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactInstanceMap.js\",\"./ReactLifeCycle\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactLifeCycle.js\",\"./ReactPropTypeLocationNames\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactPropTypeLocationNames.js\",\"./ReactPropTypeLocations\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactPropTypeLocations.js\",\"./ReactUpdateQueue\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactUpdateQueue.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"./keyMirror\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/keyMirror.js\",\"./keyOf\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/keyOf.js\",\"./warning\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/warning.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactComponent.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponent\n */\n\n'use strict';\n\nvar ReactUpdateQueue = require(\"./ReactUpdateQueue\");\n\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactComponent(props, context) {\n  this.props = props;\n  this.context = context;\n}\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nReactComponent.prototype.setState = function(partialState, callback) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    typeof partialState === 'object' ||\n    typeof partialState === 'function' ||\n    partialState == null,\n    'setState(...): takes an object of state variables to update or a ' +\n    'function which returns an object of state variables.'\n  ) : invariant(typeof partialState === 'object' ||\n  typeof partialState === 'function' ||\n  partialState == null));\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      partialState != null,\n      'setState(...): You passed an undefined or null state object; ' +\n      'instead, use forceUpdate().'\n    ) : null);\n  }\n  ReactUpdateQueue.enqueueSetState(this, partialState);\n  if (callback) {\n    ReactUpdateQueue.enqueueCallback(this, callback);\n  }\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nReactComponent.prototype.forceUpdate = function(callback) {\n  ReactUpdateQueue.enqueueForceUpdate(this);\n  if (callback) {\n    ReactUpdateQueue.enqueueCallback(this, callback);\n  }\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\nif (\"production\" !== process.env.NODE_ENV) {\n  var deprecatedAPIs = {\n    getDOMNode: [\n      'getDOMNode',\n      'Use React.findDOMNode(component) instead.'\n    ],\n    isMounted: [\n      'isMounted',\n      'Instead, make sure to clean up subscriptions and pending requests in ' +\n      'componentWillUnmount to prevent memory leaks.'\n    ],\n    replaceProps: [\n      'replaceProps',\n      'Instead, call React.render again at the top level.'\n    ],\n    replaceState: [\n      'replaceState',\n      'Refactor your code to use setState instead (see ' +\n      'https://github.com/facebook/react/issues/3236).'\n    ],\n    setProps: [\n      'setProps',\n      'Instead, call React.render again at the top level.'\n    ]\n  };\n  var defineDeprecationWarning = function(methodName, info) {\n    try {\n      Object.defineProperty(ReactComponent.prototype, methodName, {\n        get: function() {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            false,\n            '%s(...) is deprecated in plain JavaScript React classes. %s',\n            info[0],\n            info[1]\n          ) : null);\n          return undefined;\n        }\n      });\n    } catch (x) {\n      // IE will fail on defineProperty (es5-shim/sham too)\n    }\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nmodule.exports = ReactComponent;\n\n}).call(this,require('_process'))\n},{\"./ReactUpdateQueue\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactUpdateQueue.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"./warning\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/warning.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactComponentBrowserEnvironment.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentBrowserEnvironment\n */\n\n/*jslint evil: true */\n\n'use strict';\n\nvar ReactDOMIDOperations = require(\"./ReactDOMIDOperations\");\nvar ReactMount = require(\"./ReactMount\");\n\n/**\n * Abstracts away all functionality of the reconciler that requires knowledge of\n * the browser context. TODO: These callers should be refactored to avoid the\n * need for this injection.\n */\nvar ReactComponentBrowserEnvironment = {\n\n  processChildrenUpdates:\n    ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,\n\n  replaceNodeWithMarkupByID:\n    ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,\n\n  /**\n   * If a particular environment requires that some resources be cleaned up,\n   * specify this in the injected Mixin. In the DOM, we would likely want to\n   * purge any cached node ID lookups.\n   *\n   * @private\n   */\n  unmountIDFromEnvironment: function(rootNodeID) {\n    ReactMount.purgeID(rootNodeID);\n  }\n\n};\n\nmodule.exports = ReactComponentBrowserEnvironment;\n\n},{\"./ReactDOMIDOperations\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMIDOperations.js\",\"./ReactMount\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactMount.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactComponentEnvironment.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentEnvironment\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\nvar injected = false;\n\nvar ReactComponentEnvironment = {\n\n  /**\n   * Optionally injectable environment dependent cleanup hook. (server vs.\n   * browser etc). Example: A browser system caches DOM nodes based on component\n   * ID and must remove that cache entry when this instance is unmounted.\n   */\n  unmountIDFromEnvironment: null,\n\n  /**\n   * Optionally injectable hook for swapping out mount images in the middle of\n   * the tree.\n   */\n  replaceNodeWithMarkupByID: null,\n\n  /**\n   * Optionally injectable hook for processing a queue of child updates. Will\n   * later move into MultiChildComponents.\n   */\n  processChildrenUpdates: null,\n\n  injection: {\n    injectEnvironment: function(environment) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        !injected,\n        'ReactCompositeComponent: injectEnvironment() can only be called once.'\n      ) : invariant(!injected));\n      ReactComponentEnvironment.unmountIDFromEnvironment =\n        environment.unmountIDFromEnvironment;\n      ReactComponentEnvironment.replaceNodeWithMarkupByID =\n        environment.replaceNodeWithMarkupByID;\n      ReactComponentEnvironment.processChildrenUpdates =\n        environment.processChildrenUpdates;\n      injected = true;\n    }\n  }\n\n};\n\nmodule.exports = ReactComponentEnvironment;\n\n}).call(this,require('_process'))\n},{\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactCompositeComponent.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactCompositeComponent\n */\n\n'use strict';\n\nvar ReactComponentEnvironment = require(\"./ReactComponentEnvironment\");\nvar ReactContext = require(\"./ReactContext\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactElementValidator = require(\"./ReactElementValidator\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\nvar ReactLifeCycle = require(\"./ReactLifeCycle\");\nvar ReactNativeComponent = require(\"./ReactNativeComponent\");\nvar ReactPerf = require(\"./ReactPerf\");\nvar ReactPropTypeLocations = require(\"./ReactPropTypeLocations\");\nvar ReactPropTypeLocationNames = require(\"./ReactPropTypeLocationNames\");\nvar ReactReconciler = require(\"./ReactReconciler\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar assign = require(\"./Object.assign\");\nvar emptyObject = require(\"./emptyObject\");\nvar invariant = require(\"./invariant\");\nvar shouldUpdateReactComponent = require(\"./shouldUpdateReactComponent\");\nvar warning = require(\"./warning\");\n\nfunction getDeclarationErrorAddendum(component) {\n  var owner = component._currentElement._owner || null;\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * ------------------ The Life-Cycle of a Composite Component ------------------\n *\n * - constructor: Initialization of state. The instance is now retained.\n *   - componentWillMount\n *   - render\n *   - [children's constructors]\n *     - [children's componentWillMount and render]\n *     - [children's componentDidMount]\n *     - componentDidMount\n *\n *       Update Phases:\n *       - componentWillReceiveProps (only called if parent updated)\n *       - shouldComponentUpdate\n *         - componentWillUpdate\n *           - render\n *           - [children's constructors or receive props phases]\n *         - componentDidUpdate\n *\n *     - componentWillUnmount\n *     - [children's componentWillUnmount]\n *   - [children destroyed]\n * - (destroyed): The instance is now blank, released by React and ready for GC.\n *\n * -----------------------------------------------------------------------------\n */\n\n/**\n * An incrementing ID assigned to each component when it is mounted. This is\n * used to enforce the order in which `ReactUpdates` updates dirty components.\n *\n * @private\n */\nvar nextMountID = 1;\n\n/**\n * @lends {ReactCompositeComponent.prototype}\n */\nvar ReactCompositeComponentMixin = {\n\n  /**\n   * Base constructor for all composite component.\n   *\n   * @param {ReactElement} element\n   * @final\n   * @internal\n   */\n  construct: function(element) {\n    this._currentElement = element;\n    this._rootNodeID = null;\n    this._instance = null;\n\n    // See ReactUpdateQueue\n    this._pendingElement = null;\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    this._renderedComponent = null;\n\n    this._context = null;\n    this._mountOrder = 0;\n    this._isTopLevel = false;\n\n    // See ReactUpdates and ReactUpdateQueue.\n    this._pendingCallbacks = null;\n  },\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {string} rootID DOM ID of the root node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function(rootID, transaction, context) {\n    this._context = context;\n    this._mountOrder = nextMountID++;\n    this._rootNodeID = rootID;\n\n    var publicProps = this._processProps(this._currentElement.props);\n    var publicContext = this._processContext(this._currentElement._context);\n\n    var Component = ReactNativeComponent.getComponentClassForElement(\n      this._currentElement\n    );\n\n    // Initialize the public class\n    var inst = new Component(publicProps, publicContext);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      // This will throw later in _renderValidatedComponent, but add an early\n      // warning now to help debugging\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        inst.render != null,\n        '%s(...): No `render` method found on the returned component ' +\n        'instance: you may have forgotten to define `render` in your ' +\n        'component or you may have accidentally tried to render an element ' +\n        'whose type is a function that isn\\'t a React component.',\n        Component.displayName || Component.name || 'Component'\n      ) : null);\n    }\n\n    // These should be set up in the constructor, but as a convenience for\n    // simpler class abstractions, we set them up after the fact.\n    inst.props = publicProps;\n    inst.context = publicContext;\n    inst.refs = emptyObject;\n\n    this._instance = inst;\n\n    // Store a reference from the instance back to the internal representation\n    ReactInstanceMap.set(inst, this);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      this._warnIfContextsDiffer(this._currentElement._context, context);\n    }\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      // Since plain JS classes are defined without any special initialization\n      // logic, we can not catch common errors early. Therefore, we have to\n      // catch them here, at initialization time, instead.\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !inst.getInitialState ||\n        inst.getInitialState.isReactClassApproved,\n        'getInitialState was defined on %s, a plain JavaScript class. ' +\n        'This is only supported for classes created using React.createClass. ' +\n        'Did you mean to define a state property instead?',\n        this.getName() || 'a component'\n      ) : null);\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !inst.getDefaultProps ||\n        inst.getDefaultProps.isReactClassApproved,\n        'getDefaultProps was defined on %s, a plain JavaScript class. ' +\n        'This is only supported for classes created using React.createClass. ' +\n        'Use a static property to define defaultProps instead.',\n        this.getName() || 'a component'\n      ) : null);\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !inst.propTypes,\n        'propTypes was defined as an instance property on %s. Use a static ' +\n        'property to define propTypes instead.',\n        this.getName() || 'a component'\n      ) : null);\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !inst.contextTypes,\n        'contextTypes was defined as an instance property on %s. Use a ' +\n        'static property to define contextTypes instead.',\n        this.getName() || 'a component'\n      ) : null);\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        typeof inst.componentShouldUpdate !== 'function',\n        '%s has a method called ' +\n        'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n        'The name is phrased as a question because the function is ' +\n        'expected to return a value.',\n        (this.getName() || 'A component')\n      ) : null);\n    }\n\n    var initialState = inst.state;\n    if (initialState === undefined) {\n      inst.state = initialState = null;\n    }\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof initialState === 'object' && !Array.isArray(initialState),\n      '%s.state: must be set to an object or null',\n      this.getName() || 'ReactCompositeComponent'\n    ) : invariant(typeof initialState === 'object' && !Array.isArray(initialState)));\n\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    var childContext;\n    var renderedElement;\n\n    var previouslyMounting = ReactLifeCycle.currentlyMountingInstance;\n    ReactLifeCycle.currentlyMountingInstance = this;\n    try {\n      if (inst.componentWillMount) {\n        inst.componentWillMount();\n        // When mounting, calls to `setState` by `componentWillMount` will set\n        // `this._pendingStateQueue` without triggering a re-render.\n        if (this._pendingStateQueue) {\n          inst.state = this._processPendingState(inst.props, inst.context);\n        }\n      }\n\n      childContext = this._getValidatedChildContext(context);\n      renderedElement = this._renderValidatedComponent(childContext);\n    } finally {\n      ReactLifeCycle.currentlyMountingInstance = previouslyMounting;\n    }\n\n    this._renderedComponent = this._instantiateReactComponent(\n      renderedElement,\n      this._currentElement.type // The wrapping type\n    );\n\n    var markup = ReactReconciler.mountComponent(\n      this._renderedComponent,\n      rootID,\n      transaction,\n      this._mergeChildContext(context, childContext)\n    );\n    if (inst.componentDidMount) {\n      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\n    }\n\n    return markup;\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function() {\n    var inst = this._instance;\n\n    if (inst.componentWillUnmount) {\n      var previouslyUnmounting = ReactLifeCycle.currentlyUnmountingInstance;\n      ReactLifeCycle.currentlyUnmountingInstance = this;\n      try {\n        inst.componentWillUnmount();\n      } finally {\n        ReactLifeCycle.currentlyUnmountingInstance = previouslyUnmounting;\n      }\n    }\n\n    ReactReconciler.unmountComponent(this._renderedComponent);\n    this._renderedComponent = null;\n\n    // Reset pending fields\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n    this._pendingCallbacks = null;\n    this._pendingElement = null;\n\n    // These fields do not really need to be reset since this object is no\n    // longer accessible.\n    this._context = null;\n    this._rootNodeID = null;\n\n    // Delete the reference from the instance to this internal representation\n    // which allow the internals to be properly cleaned up even if the user\n    // leaks a reference to the public instance.\n    ReactInstanceMap.remove(inst);\n\n    // Some existing components rely on inst.props even after they've been\n    // destroyed (in event handlers).\n    // TODO: inst.props = null;\n    // TODO: inst.state = null;\n    // TODO: inst.context = null;\n  },\n\n  /**\n   * Schedule a partial update to the props. Only used for internal testing.\n   *\n   * @param {object} partialProps Subset of the next props.\n   * @param {?function} callback Called after props are updated.\n   * @final\n   * @internal\n   */\n  _setPropsInternal: function(partialProps, callback) {\n    // This is a deoptimized path. We optimize for always having an element.\n    // This creates an extra internal element.\n    var element = this._pendingElement || this._currentElement;\n    this._pendingElement = ReactElement.cloneAndReplaceProps(\n      element,\n      assign({}, element.props, partialProps)\n    );\n    ReactUpdates.enqueueUpdate(this, callback);\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _maskContext: function(context) {\n    var maskedContext = null;\n    // This really should be getting the component class for the element,\n    // but we know that we're not going to need it for built-ins.\n    if (typeof this._currentElement.type === 'string') {\n      return emptyObject;\n    }\n    var contextTypes = this._currentElement.type.contextTypes;\n    if (!contextTypes) {\n      return emptyObject;\n    }\n    maskedContext = {};\n    for (var contextName in contextTypes) {\n      maskedContext[contextName] = context[contextName];\n    }\n    return maskedContext;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`, and asserts that they are valid.\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _processContext: function(context) {\n    var maskedContext = this._maskContext(context);\n    if (\"production\" !== process.env.NODE_ENV) {\n      var Component = ReactNativeComponent.getComponentClassForElement(\n        this._currentElement\n      );\n      if (Component.contextTypes) {\n        this._checkPropTypes(\n          Component.contextTypes,\n          maskedContext,\n          ReactPropTypeLocations.context\n        );\n      }\n    }\n    return maskedContext;\n  },\n\n  /**\n   * @param {object} currentContext\n   * @return {object}\n   * @private\n   */\n  _getValidatedChildContext: function(currentContext) {\n    var inst = this._instance;\n    var childContext = inst.getChildContext && inst.getChildContext();\n    if (childContext) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        typeof inst.constructor.childContextTypes === 'object',\n        '%s.getChildContext(): childContextTypes must be defined in order to ' +\n        'use getChildContext().',\n        this.getName() || 'ReactCompositeComponent'\n      ) : invariant(typeof inst.constructor.childContextTypes === 'object'));\n      if (\"production\" !== process.env.NODE_ENV) {\n        this._checkPropTypes(\n          inst.constructor.childContextTypes,\n          childContext,\n          ReactPropTypeLocations.childContext\n        );\n      }\n      for (var name in childContext) {\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          name in inst.constructor.childContextTypes,\n          '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.',\n          this.getName() || 'ReactCompositeComponent',\n          name\n        ) : invariant(name in inst.constructor.childContextTypes));\n      }\n      return childContext;\n    }\n    return null;\n  },\n\n  _mergeChildContext: function(currentContext, childContext) {\n    if (childContext) {\n      return assign({}, currentContext, childContext);\n    }\n    return currentContext;\n  },\n\n  /**\n   * Processes props by setting default values for unspecified props and\n   * asserting that the props are valid. Does not mutate its argument; returns\n   * a new props object with defaults merged in.\n   *\n   * @param {object} newProps\n   * @return {object}\n   * @private\n   */\n  _processProps: function(newProps) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      var Component = ReactNativeComponent.getComponentClassForElement(\n        this._currentElement\n      );\n      if (Component.propTypes) {\n        this._checkPropTypes(\n          Component.propTypes,\n          newProps,\n          ReactPropTypeLocations.prop\n        );\n      }\n    }\n    return newProps;\n  },\n\n  /**\n   * Assert that the props are valid\n   *\n   * @param {object} propTypes Map of prop name to a ReactPropType\n   * @param {object} props\n   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n   * @private\n   */\n  _checkPropTypes: function(propTypes, props, location) {\n    // TODO: Stop validating prop types here and only use the element\n    // validation.\n    var componentName = this.getName();\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error;\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          (\"production\" !== process.env.NODE_ENV ? invariant(\n            typeof propTypes[propName] === 'function',\n            '%s: %s type `%s` is invalid; it must be a function, usually ' +\n            'from React.PropTypes.',\n            componentName || 'React class',\n            ReactPropTypeLocationNames[location],\n            propName\n          ) : invariant(typeof propTypes[propName] === 'function'));\n          error = propTypes[propName](props, propName, componentName, location);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error instanceof Error) {\n          // We may want to extend this logic for similar errors in\n          // React.render calls, so I'm abstracting it away into\n          // a function to minimize refactoring in the future\n          var addendum = getDeclarationErrorAddendum(this);\n\n          if (location === ReactPropTypeLocations.prop) {\n            // Preface gives us something to blacklist in warning module\n            (\"production\" !== process.env.NODE_ENV ? warning(\n              false,\n              'Failed Composite propType: %s%s',\n              error.message,\n              addendum\n            ) : null);\n          } else {\n            (\"production\" !== process.env.NODE_ENV ? warning(\n              false,\n              'Failed Context Types: %s%s',\n              error.message,\n              addendum\n            ) : null);\n          }\n        }\n      }\n    }\n  },\n\n  receiveComponent: function(nextElement, transaction, nextContext) {\n    var prevElement = this._currentElement;\n    var prevContext = this._context;\n\n    this._pendingElement = null;\n\n    this.updateComponent(\n      transaction,\n      prevElement,\n      nextElement,\n      prevContext,\n      nextContext\n    );\n  },\n\n  /**\n   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\n   * is set, update the component.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function(transaction) {\n    if (this._pendingElement != null) {\n      ReactReconciler.receiveComponent(\n        this,\n        this._pendingElement || this._currentElement,\n        transaction,\n        this._context\n      );\n    }\n\n    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\n      if (\"production\" !== process.env.NODE_ENV) {\n        ReactElementValidator.checkAndWarnForMutatedProps(\n          this._currentElement\n        );\n      }\n\n      this.updateComponent(\n        transaction,\n        this._currentElement,\n        this._currentElement,\n        this._context,\n        this._context\n      );\n    }\n  },\n\n  /**\n   * Compare two contexts, warning if they are different\n   * TODO: Remove this check when owner-context is removed\n   */\n   _warnIfContextsDiffer: function(ownerBasedContext, parentBasedContext) {\n    ownerBasedContext = this._maskContext(ownerBasedContext);\n    parentBasedContext = this._maskContext(parentBasedContext);\n    var parentKeys = Object.keys(parentBasedContext).sort();\n    var displayName = this.getName() || 'ReactCompositeComponent';\n    for (var i = 0; i < parentKeys.length; i++) {\n      var key = parentKeys[i];\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        ownerBasedContext[key] === parentBasedContext[key],\n        'owner-based and parent-based contexts differ '  +\n        '(values: `%s` vs `%s`) for key (%s) while mounting %s ' +\n        '(see: http://fb.me/react-context-by-parent)',\n        ownerBasedContext[key],\n        parentBasedContext[key],\n        key,\n        displayName\n      ) : null);\n    }\n  },\n\n  /**\n   * Perform an update to a mounted component. The componentWillReceiveProps and\n   * shouldComponentUpdate methods are called, then (assuming the update isn't\n   * skipped) the remaining update lifecycle methods are called and the DOM\n   * representation is updated.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevParentElement\n   * @param {ReactElement} nextParentElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function(\n    transaction,\n    prevParentElement,\n    nextParentElement,\n    prevUnmaskedContext,\n    nextUnmaskedContext\n  ) {\n    var inst = this._instance;\n\n    var nextContext = inst.context;\n    var nextProps = inst.props;\n\n    // Distinguish between a props update versus a simple state update\n    if (prevParentElement !== nextParentElement) {\n      nextContext = this._processContext(nextParentElement._context);\n      nextProps = this._processProps(nextParentElement.props);\n\n      if (\"production\" !== process.env.NODE_ENV) {\n        if (nextUnmaskedContext != null) {\n          this._warnIfContextsDiffer(\n            nextParentElement._context,\n            nextUnmaskedContext\n          );\n        }\n      }\n\n      // An update here will schedule an update but immediately set\n      // _pendingStateQueue which will ensure that any state updates gets\n      // immediately reconciled instead of waiting for the next batch.\n\n      if (inst.componentWillReceiveProps) {\n        inst.componentWillReceiveProps(nextProps, nextContext);\n      }\n    }\n\n    var nextState = this._processPendingState(nextProps, nextContext);\n\n    var shouldUpdate =\n      this._pendingForceUpdate ||\n      !inst.shouldComponentUpdate ||\n      inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        typeof shouldUpdate !== 'undefined',\n        '%s.shouldComponentUpdate(): Returned undefined instead of a ' +\n        'boolean value. Make sure to return true or false.',\n        this.getName() || 'ReactCompositeComponent'\n      ) : null);\n    }\n\n    if (shouldUpdate) {\n      this._pendingForceUpdate = false;\n      // Will set `this.props`, `this.state` and `this.context`.\n      this._performComponentUpdate(\n        nextParentElement,\n        nextProps,\n        nextState,\n        nextContext,\n        transaction,\n        nextUnmaskedContext\n      );\n    } else {\n      // If it's determined that a component should not update, we still want\n      // to set props and state but we shortcut the rest of the update.\n      this._currentElement = nextParentElement;\n      this._context = nextUnmaskedContext;\n      inst.props = nextProps;\n      inst.state = nextState;\n      inst.context = nextContext;\n    }\n  },\n\n  _processPendingState: function(props, context) {\n    var inst = this._instance;\n    var queue = this._pendingStateQueue;\n    var replace = this._pendingReplaceState;\n    this._pendingReplaceState = false;\n    this._pendingStateQueue = null;\n\n    if (!queue) {\n      return inst.state;\n    }\n\n    if (replace && queue.length === 1) {\n      return queue[0];\n    }\n\n    var nextState = assign({}, replace ? queue[0] : inst.state);\n    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n      var partial = queue[i];\n      assign(\n        nextState,\n        typeof partial === 'function' ?\n          partial.call(inst, nextState, props, context) :\n          partial\n      );\n    }\n\n    return nextState;\n  },\n\n  /**\n   * Merges new props and state, notifies delegate methods of update and\n   * performs update.\n   *\n   * @param {ReactElement} nextElement Next element\n   * @param {object} nextProps Next public object to set as properties.\n   * @param {?object} nextState Next object to set as state.\n   * @param {?object} nextContext Next public object to set as context.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {?object} unmaskedContext\n   * @private\n   */\n  _performComponentUpdate: function(\n    nextElement,\n    nextProps,\n    nextState,\n    nextContext,\n    transaction,\n    unmaskedContext\n  ) {\n    var inst = this._instance;\n\n    var prevProps = inst.props;\n    var prevState = inst.state;\n    var prevContext = inst.context;\n\n    if (inst.componentWillUpdate) {\n      inst.componentWillUpdate(nextProps, nextState, nextContext);\n    }\n\n    this._currentElement = nextElement;\n    this._context = unmaskedContext;\n    inst.props = nextProps;\n    inst.state = nextState;\n    inst.context = nextContext;\n\n    this._updateRenderedComponent(transaction, unmaskedContext);\n\n    if (inst.componentDidUpdate) {\n      transaction.getReactMountReady().enqueue(\n        inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext),\n        inst\n      );\n    }\n  },\n\n  /**\n   * Call the component's `render` method and update the DOM accordingly.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  _updateRenderedComponent: function(transaction, context) {\n    var prevComponentInstance = this._renderedComponent;\n    var prevRenderedElement = prevComponentInstance._currentElement;\n    var childContext = this._getValidatedChildContext();\n    var nextRenderedElement = this._renderValidatedComponent(childContext);\n    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\n      ReactReconciler.receiveComponent(\n        prevComponentInstance,\n        nextRenderedElement,\n        transaction,\n        this._mergeChildContext(context, childContext)\n      );\n    } else {\n      // These two IDs are actually the same! But nothing should rely on that.\n      var thisID = this._rootNodeID;\n      var prevComponentID = prevComponentInstance._rootNodeID;\n      ReactReconciler.unmountComponent(prevComponentInstance);\n\n      this._renderedComponent = this._instantiateReactComponent(\n        nextRenderedElement,\n        this._currentElement.type\n      );\n      var nextMarkup = ReactReconciler.mountComponent(\n        this._renderedComponent,\n        thisID,\n        transaction,\n        this._mergeChildContext(context, childContext)\n      );\n      this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  _replaceNodeWithMarkupByID: function(prevComponentID, nextMarkup) {\n    ReactComponentEnvironment.replaceNodeWithMarkupByID(\n      prevComponentID,\n      nextMarkup\n    );\n  },\n\n  /**\n   * @protected\n   */\n  _renderValidatedComponentWithoutOwnerOrContext: function() {\n    var inst = this._instance;\n    var renderedComponent = inst.render();\n    if (\"production\" !== process.env.NODE_ENV) {\n      // We allow auto-mocks to proceed as if they're returning null.\n      if (typeof renderedComponent === 'undefined' &&\n          inst.render._isMockFunction) {\n        // This is probably bad practice. Consider warning here and\n        // deprecating this convenience.\n        renderedComponent = null;\n      }\n    }\n\n    return renderedComponent;\n  },\n\n  /**\n   * @private\n   */\n  _renderValidatedComponent: function(childContext) {\n    var renderedComponent;\n    var previousContext = ReactContext.current;\n    ReactContext.current = this._mergeChildContext(\n      this._currentElement._context,\n      childContext\n    );\n    ReactCurrentOwner.current = this;\n    try {\n      renderedComponent =\n        this._renderValidatedComponentWithoutOwnerOrContext();\n    } finally {\n      ReactContext.current = previousContext;\n      ReactCurrentOwner.current = null;\n    }\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      // TODO: An `isValidNode` function would probably be more appropriate\n      renderedComponent === null || renderedComponent === false ||\n      ReactElement.isValidElement(renderedComponent),\n      '%s.render(): A valid ReactComponent must be returned. You may have ' +\n        'returned undefined, an array or some other invalid object.',\n      this.getName() || 'ReactCompositeComponent'\n    ) : invariant(// TODO: An `isValidNode` function would probably be more appropriate\n    renderedComponent === null || renderedComponent === false ||\n    ReactElement.isValidElement(renderedComponent)));\n    return renderedComponent;\n  },\n\n  /**\n   * Lazily allocates the refs object and stores `component` as `ref`.\n   *\n   * @param {string} ref Reference name.\n   * @param {component} component Component to store as `ref`.\n   * @final\n   * @private\n   */\n  attachRef: function(ref, component) {\n    var inst = this.getPublicInstance();\n    var refs = inst.refs === emptyObject ? (inst.refs = {}) : inst.refs;\n    refs[ref] = component.getPublicInstance();\n  },\n\n  /**\n   * Detaches a reference name.\n   *\n   * @param {string} ref Name to dereference.\n   * @final\n   * @private\n   */\n  detachRef: function(ref) {\n    var refs = this.getPublicInstance().refs;\n    delete refs[ref];\n  },\n\n  /**\n   * Get a text description of the component that can be used to identify it\n   * in error messages.\n   * @return {string} The name or null.\n   * @internal\n   */\n  getName: function() {\n    var type = this._currentElement.type;\n    var constructor = this._instance && this._instance.constructor;\n    return (\n      type.displayName || (constructor && constructor.displayName) ||\n      type.name || (constructor && constructor.name) ||\n      null\n    );\n  },\n\n  /**\n   * Get the publicly accessible representation of this component - i.e. what\n   * is exposed by refs and returned by React.render. Can be null for stateless\n   * components.\n   *\n   * @return {ReactComponent} the public component instance.\n   * @internal\n   */\n  getPublicInstance: function() {\n    return this._instance;\n  },\n\n  // Stub\n  _instantiateReactComponent: null\n\n};\n\nReactPerf.measureMethods(\n  ReactCompositeComponentMixin,\n  'ReactCompositeComponent',\n  {\n    mountComponent: 'mountComponent',\n    updateComponent: 'updateComponent',\n    _renderValidatedComponent: '_renderValidatedComponent'\n  }\n);\n\nvar ReactCompositeComponent = {\n\n  Mixin: ReactCompositeComponentMixin\n\n};\n\nmodule.exports = ReactCompositeComponent;\n\n}).call(this,require('_process'))\n},{\"./Object.assign\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Object.assign.js\",\"./ReactComponentEnvironment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactComponentEnvironment.js\",\"./ReactContext\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactContext.js\",\"./ReactCurrentOwner\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactCurrentOwner.js\",\"./ReactElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElement.js\",\"./ReactElementValidator\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElementValidator.js\",\"./ReactInstanceMap\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactInstanceMap.js\",\"./ReactLifeCycle\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactLifeCycle.js\",\"./ReactNativeComponent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactNativeComponent.js\",\"./ReactPerf\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactPerf.js\",\"./ReactPropTypeLocationNames\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactPropTypeLocationNames.js\",\"./ReactPropTypeLocations\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactPropTypeLocations.js\",\"./ReactReconciler\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactReconciler.js\",\"./ReactUpdates\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactUpdates.js\",\"./emptyObject\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/emptyObject.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"./shouldUpdateReactComponent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/shouldUpdateReactComponent.js\",\"./warning\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/warning.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactContext.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactContext\n */\n\n'use strict';\n\nvar assign = require(\"./Object.assign\");\nvar emptyObject = require(\"./emptyObject\");\nvar warning = require(\"./warning\");\n\nvar didWarn = false;\n\n/**\n * Keeps track of the current context.\n *\n * The context is automatically passed down the component ownership hierarchy\n * and is accessible via `this.context` on ReactCompositeComponents.\n */\nvar ReactContext = {\n\n  /**\n   * @internal\n   * @type {object}\n   */\n  current: emptyObject,\n\n  /**\n   * Temporarily extends the current context while executing scopedCallback.\n   *\n   * A typical use case might look like\n   *\n   *  render: function() {\n   *    var children = ReactContext.withContext({foo: 'foo'}, () => (\n   *\n   *    ));\n   *    return <div>{children}</div>;\n   *  }\n   *\n   * @param {object} newContext New context to merge into the existing context\n   * @param {function} scopedCallback Callback to run with the new context\n   * @return {ReactComponent|array<ReactComponent>}\n   */\n  withContext: function(newContext, scopedCallback) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        didWarn,\n        'withContext is deprecated and will be removed in a future version. ' +\n        'Use a wrapper component with getChildContext instead.'\n      ) : null);\n\n      didWarn = true;\n    }\n\n    var result;\n    var previousContext = ReactContext.current;\n    ReactContext.current = assign({}, previousContext, newContext);\n    try {\n      result = scopedCallback();\n    } finally {\n      ReactContext.current = previousContext;\n    }\n    return result;\n  }\n\n};\n\nmodule.exports = ReactContext;\n\n}).call(this,require('_process'))\n},{\"./Object.assign\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Object.assign.js\",\"./emptyObject\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/emptyObject.js\",\"./warning\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/warning.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactCurrentOwner.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactCurrentOwner\n */\n\n'use strict';\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n *\n * The depth indicate how many composite components are above this render level.\n */\nvar ReactCurrentOwner = {\n\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n\n};\n\nmodule.exports = ReactCurrentOwner;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOM.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOM\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactElementValidator = require(\"./ReactElementValidator\");\n\nvar mapObject = require(\"./mapObject\");\n\n/**\n * Create a factory that creates HTML tag elements.\n *\n * @param {string} tag Tag name (e.g. `div`).\n * @private\n */\nfunction createDOMFactory(tag) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    return ReactElementValidator.createFactory(tag);\n  }\n  return ReactElement.createFactory(tag);\n}\n\n/**\n * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\n * This is also accessible via `React.DOM`.\n *\n * @public\n */\nvar ReactDOM = mapObject({\n  a: 'a',\n  abbr: 'abbr',\n  address: 'address',\n  area: 'area',\n  article: 'article',\n  aside: 'aside',\n  audio: 'audio',\n  b: 'b',\n  base: 'base',\n  bdi: 'bdi',\n  bdo: 'bdo',\n  big: 'big',\n  blockquote: 'blockquote',\n  body: 'body',\n  br: 'br',\n  button: 'button',\n  canvas: 'canvas',\n  caption: 'caption',\n  cite: 'cite',\n  code: 'code',\n  col: 'col',\n  colgroup: 'colgroup',\n  data: 'data',\n  datalist: 'datalist',\n  dd: 'dd',\n  del: 'del',\n  details: 'details',\n  dfn: 'dfn',\n  dialog: 'dialog',\n  div: 'div',\n  dl: 'dl',\n  dt: 'dt',\n  em: 'em',\n  embed: 'embed',\n  fieldset: 'fieldset',\n  figcaption: 'figcaption',\n  figure: 'figure',\n  footer: 'footer',\n  form: 'form',\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  head: 'head',\n  header: 'header',\n  hr: 'hr',\n  html: 'html',\n  i: 'i',\n  iframe: 'iframe',\n  img: 'img',\n  input: 'input',\n  ins: 'ins',\n  kbd: 'kbd',\n  keygen: 'keygen',\n  label: 'label',\n  legend: 'legend',\n  li: 'li',\n  link: 'link',\n  main: 'main',\n  map: 'map',\n  mark: 'mark',\n  menu: 'menu',\n  menuitem: 'menuitem',\n  meta: 'meta',\n  meter: 'meter',\n  nav: 'nav',\n  noscript: 'noscript',\n  object: 'object',\n  ol: 'ol',\n  optgroup: 'optgroup',\n  option: 'option',\n  output: 'output',\n  p: 'p',\n  param: 'param',\n  picture: 'picture',\n  pre: 'pre',\n  progress: 'progress',\n  q: 'q',\n  rp: 'rp',\n  rt: 'rt',\n  ruby: 'ruby',\n  s: 's',\n  samp: 'samp',\n  script: 'script',\n  section: 'section',\n  select: 'select',\n  small: 'small',\n  source: 'source',\n  span: 'span',\n  strong: 'strong',\n  style: 'style',\n  sub: 'sub',\n  summary: 'summary',\n  sup: 'sup',\n  table: 'table',\n  tbody: 'tbody',\n  td: 'td',\n  textarea: 'textarea',\n  tfoot: 'tfoot',\n  th: 'th',\n  thead: 'thead',\n  time: 'time',\n  title: 'title',\n  tr: 'tr',\n  track: 'track',\n  u: 'u',\n  ul: 'ul',\n  'var': 'var',\n  video: 'video',\n  wbr: 'wbr',\n\n  // SVG\n  circle: 'circle',\n  clipPath: 'clipPath',\n  defs: 'defs',\n  ellipse: 'ellipse',\n  g: 'g',\n  line: 'line',\n  linearGradient: 'linearGradient',\n  mask: 'mask',\n  path: 'path',\n  pattern: 'pattern',\n  polygon: 'polygon',\n  polyline: 'polyline',\n  radialGradient: 'radialGradient',\n  rect: 'rect',\n  stop: 'stop',\n  svg: 'svg',\n  text: 'text',\n  tspan: 'tspan'\n\n}, createDOMFactory);\n\nmodule.exports = ReactDOM;\n\n}).call(this,require('_process'))\n},{\"./ReactElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElement.js\",\"./ReactElementValidator\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElementValidator.js\",\"./mapObject\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/mapObject.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMButton.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMButton\n */\n\n'use strict';\n\nvar AutoFocusMixin = require(\"./AutoFocusMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar keyMirror = require(\"./keyMirror\");\n\nvar button = ReactElement.createFactory('button');\n\nvar mouseListenerNames = keyMirror({\n  onClick: true,\n  onDoubleClick: true,\n  onMouseDown: true,\n  onMouseMove: true,\n  onMouseUp: true,\n  onClickCapture: true,\n  onDoubleClickCapture: true,\n  onMouseDownCapture: true,\n  onMouseMoveCapture: true,\n  onMouseUpCapture: true\n});\n\n/**\n * Implements a <button> native component that does not receive mouse events\n * when `disabled` is set.\n */\nvar ReactDOMButton = ReactClass.createClass({\n  displayName: 'ReactDOMButton',\n  tagName: 'BUTTON',\n\n  mixins: [AutoFocusMixin, ReactBrowserComponentMixin],\n\n  render: function() {\n    var props = {};\n\n    // Copy the props; except the mouse listeners if we're disabled\n    for (var key in this.props) {\n      if (this.props.hasOwnProperty(key) &&\n          (!this.props.disabled || !mouseListenerNames[key])) {\n        props[key] = this.props[key];\n      }\n    }\n\n    return button(props, this.props.children);\n  }\n\n});\n\nmodule.exports = ReactDOMButton;\n\n},{\"./AutoFocusMixin\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/AutoFocusMixin.js\",\"./ReactBrowserComponentMixin\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactBrowserComponentMixin.js\",\"./ReactClass\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactClass.js\",\"./ReactElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElement.js\",\"./keyMirror\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/keyMirror.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMComponent.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMComponent\n * @typechecks static-only\n */\n\n/* global hasOwnProperty:true */\n\n'use strict';\n\nvar CSSPropertyOperations = require(\"./CSSPropertyOperations\");\nvar DOMProperty = require(\"./DOMProperty\");\nvar DOMPropertyOperations = require(\"./DOMPropertyOperations\");\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\nvar ReactComponentBrowserEnvironment =\n  require(\"./ReactComponentBrowserEnvironment\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactMultiChild = require(\"./ReactMultiChild\");\nvar ReactPerf = require(\"./ReactPerf\");\n\nvar assign = require(\"./Object.assign\");\nvar escapeTextContentForBrowser = require(\"./escapeTextContentForBrowser\");\nvar invariant = require(\"./invariant\");\nvar isEventSupported = require(\"./isEventSupported\");\nvar keyOf = require(\"./keyOf\");\nvar warning = require(\"./warning\");\n\nvar deleteListener = ReactBrowserEventEmitter.deleteListener;\nvar listenTo = ReactBrowserEventEmitter.listenTo;\nvar registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;\n\n// For quickly matching children type, to test if can be treated as content.\nvar CONTENT_TYPES = {'string': true, 'number': true};\n\nvar STYLE = keyOf({style: null});\n\nvar ELEMENT_NODE_TYPE = 1;\n\n/**\n * Optionally injectable operations for mutating the DOM\n */\nvar BackendIDOperations = null;\n\n/**\n * @param {?object} props\n */\nfunction assertValidProps(props) {\n  if (!props) {\n    return;\n  }\n  // Note the use of `==` which checks for null or undefined.\n  if (props.dangerouslySetInnerHTML != null) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      props.children == null,\n      'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'\n    ) : invariant(props.children == null));\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof props.dangerouslySetInnerHTML === 'object' &&\n      '__html' in props.dangerouslySetInnerHTML,\n      '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' +\n      'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' +\n      'for more information.'\n    ) : invariant(typeof props.dangerouslySetInnerHTML === 'object' &&\n    '__html' in props.dangerouslySetInnerHTML));\n  }\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      props.innerHTML == null,\n      'Directly setting property `innerHTML` is not permitted. ' +\n      'For more information, lookup documentation on `dangerouslySetInnerHTML`.'\n    ) : null);\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      !props.contentEditable || props.children == null,\n      'A component is `contentEditable` and contains `children` managed by ' +\n      'React. It is now your responsibility to guarantee that none of ' +\n      'those nodes are unexpectedly modified or duplicated. This is ' +\n      'probably not intentional.'\n    ) : null);\n  }\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    props.style == null || typeof props.style === 'object',\n    'The `style` prop expects a mapping from style properties to values, ' +\n    'not a string. For example, style={{marginRight: spacing + \\'em\\'}} when ' +\n    'using JSX.'\n  ) : invariant(props.style == null || typeof props.style === 'object'));\n}\n\nfunction putListener(id, registrationName, listener, transaction) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    // IE8 has no API for event capturing and the `onScroll` event doesn't\n    // bubble.\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      registrationName !== 'onScroll' || isEventSupported('scroll', true),\n      'This browser doesn\\'t support the `onScroll` event'\n    ) : null);\n  }\n  var container = ReactMount.findReactContainerForID(id);\n  if (container) {\n    var doc = container.nodeType === ELEMENT_NODE_TYPE ?\n      container.ownerDocument :\n      container;\n    listenTo(registrationName, doc);\n  }\n  transaction.getPutListenerQueue().enqueuePutListener(\n    id,\n    registrationName,\n    listener\n  );\n}\n\n// For HTML, certain tags should omit their close tag. We keep a whitelist for\n// those special cased tags.\n\nvar omittedCloseTags = {\n  'area': true,\n  'base': true,\n  'br': true,\n  'col': true,\n  'embed': true,\n  'hr': true,\n  'img': true,\n  'input': true,\n  'keygen': true,\n  'link': true,\n  'meta': true,\n  'param': true,\n  'source': true,\n  'track': true,\n  'wbr': true\n  // NOTE: menuitem's close tag should be omitted, but that causes problems.\n};\n\n// We accept any tag to be rendered but since this gets injected into abitrary\n// HTML, we want to make sure that it's a safe tag.\n// http://www.w3.org/TR/REC-xml/#NT-Name\n\nvar VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/; // Simplified subset\nvar validatedTagCache = {};\nvar hasOwnProperty = {}.hasOwnProperty;\n\nfunction validateDangerousTag(tag) {\n  if (!hasOwnProperty.call(validatedTagCache, tag)) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(VALID_TAG_REGEX.test(tag), 'Invalid tag: %s', tag) : invariant(VALID_TAG_REGEX.test(tag)));\n    validatedTagCache[tag] = true;\n  }\n}\n\n/**\n * Creates a new React class that is idempotent and capable of containing other\n * React components. It accepts event listeners and DOM properties that are\n * valid according to `DOMProperty`.\n *\n *  - Event listeners: `onClick`, `onMouseDown`, etc.\n *  - DOM properties: `className`, `name`, `title`, etc.\n *\n * The `style` property functions differently from the DOM API. It accepts an\n * object mapping of style properties to values.\n *\n * @constructor ReactDOMComponent\n * @extends ReactMultiChild\n */\nfunction ReactDOMComponent(tag) {\n  validateDangerousTag(tag);\n  this._tag = tag;\n  this._renderedChildren = null;\n  this._previousStyleCopy = null;\n  this._rootNodeID = null;\n}\n\nReactDOMComponent.displayName = 'ReactDOMComponent';\n\nReactDOMComponent.Mixin = {\n\n  construct: function(element) {\n    this._currentElement = element;\n  },\n\n  /**\n   * Generates root tag markup then recurses. This method has side effects and\n   * is not idempotent.\n   *\n   * @internal\n   * @param {string} rootID The root DOM ID for this node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {string} The computed markup.\n   */\n  mountComponent: function(rootID, transaction, context) {\n    this._rootNodeID = rootID;\n    assertValidProps(this._currentElement.props);\n    var closeTag = omittedCloseTags[this._tag] ? '' : '</' + this._tag + '>';\n    return (\n      this._createOpenTagMarkupAndPutListeners(transaction) +\n      this._createContentMarkup(transaction, context) +\n      closeTag\n    );\n  },\n\n  /**\n   * Creates markup for the open tag and all attributes.\n   *\n   * This method has side effects because events get registered.\n   *\n   * Iterating over object properties is faster than iterating over arrays.\n   * @see http://jsperf.com/obj-vs-arr-iteration\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {string} Markup of opening tag.\n   */\n  _createOpenTagMarkupAndPutListeners: function(transaction) {\n    var props = this._currentElement.props;\n    var ret = '<' + this._tag;\n\n    for (var propKey in props) {\n      if (!props.hasOwnProperty(propKey)) {\n        continue;\n      }\n      var propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      if (registrationNameModules.hasOwnProperty(propKey)) {\n        putListener(this._rootNodeID, propKey, propValue, transaction);\n      } else {\n        if (propKey === STYLE) {\n          if (propValue) {\n            propValue = this._previousStyleCopy = assign({}, props.style);\n          }\n          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);\n        }\n        var markup =\n          DOMPropertyOperations.createMarkupForProperty(propKey, propValue);\n        if (markup) {\n          ret += ' ' + markup;\n        }\n      }\n    }\n\n    // For static pages, no need to put React ID and checksum. Saves lots of\n    // bytes.\n    if (transaction.renderToStaticMarkup) {\n      return ret + '>';\n    }\n\n    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);\n    return ret + ' ' + markupForID + '>';\n  },\n\n  /**\n   * Creates markup for the content between the tags.\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} context\n   * @return {string} Content markup.\n   */\n  _createContentMarkup: function(transaction, context) {\n    var prefix = '';\n    if (this._tag === 'listing' ||\n        this._tag === 'pre' ||\n        this._tag === 'textarea') {\n      // Add an initial newline because browsers ignore the first newline in\n      // a <listing>, <pre>, or <textarea> as an \"authoring convenience\" -- see\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody.\n      prefix = '\\n';\n    }\n\n    var props = this._currentElement.props;\n\n    // Intentional use of != to avoid catching zero/false.\n    var innerHTML = props.dangerouslySetInnerHTML;\n    if (innerHTML != null) {\n      if (innerHTML.__html != null) {\n        return prefix + innerHTML.__html;\n      }\n    } else {\n      var contentToUse =\n        CONTENT_TYPES[typeof props.children] ? props.children : null;\n      var childrenToUse = contentToUse != null ? null : props.children;\n      if (contentToUse != null) {\n        return prefix + escapeTextContentForBrowser(contentToUse);\n      } else if (childrenToUse != null) {\n        var mountImages = this.mountChildren(\n          childrenToUse,\n          transaction,\n          context\n        );\n        return prefix + mountImages.join('');\n      }\n    }\n    return prefix;\n  },\n\n  receiveComponent: function(nextElement, transaction, context) {\n    var prevElement = this._currentElement;\n    this._currentElement = nextElement;\n    this.updateComponent(transaction, prevElement, nextElement, context);\n  },\n\n  /**\n   * Updates a native DOM component after it has already been allocated and\n   * attached to the DOM. Reconciles the root DOM node, then recurses.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevElement\n   * @param {ReactElement} nextElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function(transaction, prevElement, nextElement, context) {\n    assertValidProps(this._currentElement.props);\n    this._updateDOMProperties(prevElement.props, transaction);\n    this._updateDOMChildren(prevElement.props, transaction, context);\n  },\n\n  /**\n   * Reconciles the properties by detecting differences in property values and\n   * updating the DOM as necessary. This function is probably the single most\n   * critical path for performance optimization.\n   *\n   * TODO: Benchmark whether checking for changed values in memory actually\n   *       improves performance (especially statically positioned elements).\n   * TODO: Benchmark the effects of putting this at the top since 99% of props\n   *       do not change for a given reconciliation.\n   * TODO: Benchmark areas that can be improved with caching.\n   *\n   * @private\n   * @param {object} lastProps\n   * @param {ReactReconcileTransaction} transaction\n   */\n  _updateDOMProperties: function(lastProps, transaction) {\n    var nextProps = this._currentElement.props;\n    var propKey;\n    var styleName;\n    var styleUpdates;\n    for (propKey in lastProps) {\n      if (nextProps.hasOwnProperty(propKey) ||\n         !lastProps.hasOwnProperty(propKey)) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        var lastStyle = this._previousStyleCopy;\n        for (styleName in lastStyle) {\n          if (lastStyle.hasOwnProperty(styleName)) {\n            styleUpdates = styleUpdates || {};\n            styleUpdates[styleName] = '';\n          }\n        }\n        this._previousStyleCopy = null;\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        deleteListener(this._rootNodeID, propKey);\n      } else if (\n          DOMProperty.isStandardName[propKey] ||\n          DOMProperty.isCustomAttribute(propKey)) {\n        BackendIDOperations.deletePropertyByID(\n          this._rootNodeID,\n          propKey\n        );\n      }\n    }\n    for (propKey in nextProps) {\n      var nextProp = nextProps[propKey];\n      var lastProp = propKey === STYLE ?\n        this._previousStyleCopy :\n        lastProps[propKey];\n      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        if (nextProp) {\n          nextProp = this._previousStyleCopy = assign({}, nextProp);\n        } else {\n          this._previousStyleCopy = null;\n        }\n        if (lastProp) {\n          // Unset styles on `lastProp` but not on `nextProp`.\n          for (styleName in lastProp) {\n            if (lastProp.hasOwnProperty(styleName) &&\n                (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = '';\n            }\n          }\n          // Update styles that changed since `lastProp`.\n          for (styleName in nextProp) {\n            if (nextProp.hasOwnProperty(styleName) &&\n                lastProp[styleName] !== nextProp[styleName]) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = nextProp[styleName];\n            }\n          }\n        } else {\n          // Relies on `updateStylesByID` not mutating `styleUpdates`.\n          styleUpdates = nextProp;\n        }\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        putListener(this._rootNodeID, propKey, nextProp, transaction);\n      } else if (\n          DOMProperty.isStandardName[propKey] ||\n          DOMProperty.isCustomAttribute(propKey)) {\n        BackendIDOperations.updatePropertyByID(\n          this._rootNodeID,\n          propKey,\n          nextProp\n        );\n      }\n    }\n    if (styleUpdates) {\n      BackendIDOperations.updateStylesByID(\n        this._rootNodeID,\n        styleUpdates\n      );\n    }\n  },\n\n  /**\n   * Reconciles the children with the various properties that affect the\n   * children content.\n   *\n   * @param {object} lastProps\n   * @param {ReactReconcileTransaction} transaction\n   */\n  _updateDOMChildren: function(lastProps, transaction, context) {\n    var nextProps = this._currentElement.props;\n\n    var lastContent =\n      CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;\n    var nextContent =\n      CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;\n\n    var lastHtml =\n      lastProps.dangerouslySetInnerHTML &&\n      lastProps.dangerouslySetInnerHTML.__html;\n    var nextHtml =\n      nextProps.dangerouslySetInnerHTML &&\n      nextProps.dangerouslySetInnerHTML.__html;\n\n    // Note the use of `!=` which checks for null or undefined.\n    var lastChildren = lastContent != null ? null : lastProps.children;\n    var nextChildren = nextContent != null ? null : nextProps.children;\n\n    // If we're switching from children to content/html or vice versa, remove\n    // the old content\n    var lastHasContentOrHtml = lastContent != null || lastHtml != null;\n    var nextHasContentOrHtml = nextContent != null || nextHtml != null;\n    if (lastChildren != null && nextChildren == null) {\n      this.updateChildren(null, transaction, context);\n    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {\n      this.updateTextContent('');\n    }\n\n    if (nextContent != null) {\n      if (lastContent !== nextContent) {\n        this.updateTextContent('' + nextContent);\n      }\n    } else if (nextHtml != null) {\n      if (lastHtml !== nextHtml) {\n        BackendIDOperations.updateInnerHTMLByID(\n          this._rootNodeID,\n          nextHtml\n        );\n      }\n    } else if (nextChildren != null) {\n      this.updateChildren(nextChildren, transaction, context);\n    }\n  },\n\n  /**\n   * Destroys all event registrations for this instance. Does not remove from\n   * the DOM. That must be done by the parent.\n   *\n   * @internal\n   */\n  unmountComponent: function() {\n    this.unmountChildren();\n    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);\n    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);\n    this._rootNodeID = null;\n  }\n\n};\n\nReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {\n  mountComponent: 'mountComponent',\n  updateComponent: 'updateComponent'\n});\n\nassign(\n  ReactDOMComponent.prototype,\n  ReactDOMComponent.Mixin,\n  ReactMultiChild.Mixin\n);\n\nReactDOMComponent.injection = {\n  injectIDOperations: function(IDOperations) {\n    ReactDOMComponent.BackendIDOperations = BackendIDOperations = IDOperations;\n  }\n};\n\nmodule.exports = ReactDOMComponent;\n\n}).call(this,require('_process'))\n},{\"./CSSPropertyOperations\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/CSSPropertyOperations.js\",\"./DOMProperty\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/DOMProperty.js\",\"./DOMPropertyOperations\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/DOMPropertyOperations.js\",\"./Object.assign\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Object.assign.js\",\"./ReactBrowserEventEmitter\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactBrowserEventEmitter.js\",\"./ReactComponentBrowserEnvironment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactComponentBrowserEnvironment.js\",\"./ReactMount\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactMount.js\",\"./ReactMultiChild\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactMultiChild.js\",\"./ReactPerf\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactPerf.js\",\"./escapeTextContentForBrowser\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/escapeTextContentForBrowser.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"./isEventSupported\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/isEventSupported.js\",\"./keyOf\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/keyOf.js\",\"./warning\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/warning.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMForm.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMForm\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar LocalEventTrapMixin = require(\"./LocalEventTrapMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar form = ReactElement.createFactory('form');\n\n/**\n * Since onSubmit doesn't bubble OR capture on the top level in IE8, we need\n * to capture it on the <form> element itself. There are lots of hacks we could\n * do to accomplish this, but the most reliable is to make <form> a\n * composite component and use `componentDidMount` to attach the event handlers.\n */\nvar ReactDOMForm = ReactClass.createClass({\n  displayName: 'ReactDOMForm',\n  tagName: 'FORM',\n\n  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],\n\n  render: function() {\n    // TODO: Instead of using `ReactDOM` directly, we should use JSX. However,\n    // `jshint` fails to parse JSX so in order for linting to work in the open\n    // source repo, we need to just use `ReactDOM.form`.\n    return form(this.props);\n  },\n\n  componentDidMount: function() {\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset');\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit');\n  }\n});\n\nmodule.exports = ReactDOMForm;\n\n},{\"./EventConstants\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventConstants.js\",\"./LocalEventTrapMixin\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/LocalEventTrapMixin.js\",\"./ReactBrowserComponentMixin\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactBrowserComponentMixin.js\",\"./ReactClass\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactClass.js\",\"./ReactElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElement.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMIDOperations.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMIDOperations\n * @typechecks static-only\n */\n\n/*jslint evil: true */\n\n'use strict';\n\nvar CSSPropertyOperations = require(\"./CSSPropertyOperations\");\nvar DOMChildrenOperations = require(\"./DOMChildrenOperations\");\nvar DOMPropertyOperations = require(\"./DOMPropertyOperations\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactPerf = require(\"./ReactPerf\");\n\nvar invariant = require(\"./invariant\");\nvar setInnerHTML = require(\"./setInnerHTML\");\n\n/**\n * Errors for properties that should not be updated with `updatePropertyById()`.\n *\n * @type {object}\n * @private\n */\nvar INVALID_PROPERTY_ERRORS = {\n  dangerouslySetInnerHTML:\n    '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',\n  style: '`style` must be set using `updateStylesByID()`.'\n};\n\n/**\n * Operations used to process updates to DOM nodes. This is made injectable via\n * `ReactDOMComponent.BackendIDOperations`.\n */\nvar ReactDOMIDOperations = {\n\n  /**\n   * Updates a DOM node with new property values. This should only be used to\n   * update DOM properties in `DOMProperty`.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {string} name A valid property name, see `DOMProperty`.\n   * @param {*} value New value of the property.\n   * @internal\n   */\n  updatePropertyByID: function(id, name, value) {\n    var node = ReactMount.getNode(id);\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),\n      'updatePropertyByID(...): %s',\n      INVALID_PROPERTY_ERRORS[name]\n    ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));\n\n    // If we're updating to null or undefined, we should remove the property\n    // from the DOM node instead of inadvertantly setting to a string. This\n    // brings us in line with the same behavior we have on initial render.\n    if (value != null) {\n      DOMPropertyOperations.setValueForProperty(node, name, value);\n    } else {\n      DOMPropertyOperations.deleteValueForProperty(node, name);\n    }\n  },\n\n  /**\n   * Updates a DOM node to remove a property. This should only be used to remove\n   * DOM properties in `DOMProperty`.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {string} name A property name to remove, see `DOMProperty`.\n   * @internal\n   */\n  deletePropertyByID: function(id, name, value) {\n    var node = ReactMount.getNode(id);\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),\n      'updatePropertyByID(...): %s',\n      INVALID_PROPERTY_ERRORS[name]\n    ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));\n    DOMPropertyOperations.deleteValueForProperty(node, name, value);\n  },\n\n  /**\n   * Updates a DOM node with new style values. If a value is specified as '',\n   * the corresponding style property will be unset.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {object} styles Mapping from styles to values.\n   * @internal\n   */\n  updateStylesByID: function(id, styles) {\n    var node = ReactMount.getNode(id);\n    CSSPropertyOperations.setValueForStyles(node, styles);\n  },\n\n  /**\n   * Updates a DOM node's innerHTML.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {string} html An HTML string.\n   * @internal\n   */\n  updateInnerHTMLByID: function(id, html) {\n    var node = ReactMount.getNode(id);\n    setInnerHTML(node, html);\n  },\n\n  /**\n   * Updates a DOM node's text content set by `props.content`.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {string} content Text content.\n   * @internal\n   */\n  updateTextContentByID: function(id, content) {\n    var node = ReactMount.getNode(id);\n    DOMChildrenOperations.updateTextContent(node, content);\n  },\n\n  /**\n   * Replaces a DOM node that exists in the document with markup.\n   *\n   * @param {string} id ID of child to be replaced.\n   * @param {string} markup Dangerous markup to inject in place of child.\n   * @internal\n   * @see {Danger.dangerouslyReplaceNodeWithMarkup}\n   */\n  dangerouslyReplaceNodeWithMarkupByID: function(id, markup) {\n    var node = ReactMount.getNode(id);\n    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);\n  },\n\n  /**\n   * Updates a component's children by processing a series of updates.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @param {array<string>} markup List of markup strings.\n   * @internal\n   */\n  dangerouslyProcessChildrenUpdates: function(updates, markup) {\n    for (var i = 0; i < updates.length; i++) {\n      updates[i].parentNode = ReactMount.getNode(updates[i].parentID);\n    }\n    DOMChildrenOperations.processUpdates(updates, markup);\n  }\n};\n\nReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {\n  updatePropertyByID: 'updatePropertyByID',\n  deletePropertyByID: 'deletePropertyByID',\n  updateStylesByID: 'updateStylesByID',\n  updateInnerHTMLByID: 'updateInnerHTMLByID',\n  updateTextContentByID: 'updateTextContentByID',\n  dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',\n  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'\n});\n\nmodule.exports = ReactDOMIDOperations;\n\n}).call(this,require('_process'))\n},{\"./CSSPropertyOperations\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/CSSPropertyOperations.js\",\"./DOMChildrenOperations\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/DOMChildrenOperations.js\",\"./DOMPropertyOperations\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/DOMPropertyOperations.js\",\"./ReactMount\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactMount.js\",\"./ReactPerf\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactPerf.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"./setInnerHTML\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/setInnerHTML.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMIframe.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMIframe\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar LocalEventTrapMixin = require(\"./LocalEventTrapMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar iframe = ReactElement.createFactory('iframe');\n\n/**\n * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to\n * capture it on the <iframe> element itself. There are lots of hacks we could\n * do to accomplish this, but the most reliable is to make <iframe> a composite\n * component and use `componentDidMount` to attach the event handlers.\n */\nvar ReactDOMIframe = ReactClass.createClass({\n  displayName: 'ReactDOMIframe',\n  tagName: 'IFRAME',\n\n  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],\n\n  render: function() {\n    return iframe(this.props);\n  },\n\n  componentDidMount: function() {\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');\n  }\n});\n\nmodule.exports = ReactDOMIframe;\n\n},{\"./EventConstants\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventConstants.js\",\"./LocalEventTrapMixin\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/LocalEventTrapMixin.js\",\"./ReactBrowserComponentMixin\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactBrowserComponentMixin.js\",\"./ReactClass\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactClass.js\",\"./ReactElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElement.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMImg.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMImg\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar LocalEventTrapMixin = require(\"./LocalEventTrapMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar img = ReactElement.createFactory('img');\n\n/**\n * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to\n * capture it on the <img> element itself. There are lots of hacks we could do\n * to accomplish this, but the most reliable is to make <img> a composite\n * component and use `componentDidMount` to attach the event handlers.\n */\nvar ReactDOMImg = ReactClass.createClass({\n  displayName: 'ReactDOMImg',\n  tagName: 'IMG',\n\n  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],\n\n  render: function() {\n    return img(this.props);\n  },\n\n  componentDidMount: function() {\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error');\n  }\n});\n\nmodule.exports = ReactDOMImg;\n\n},{\"./EventConstants\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventConstants.js\",\"./LocalEventTrapMixin\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/LocalEventTrapMixin.js\",\"./ReactBrowserComponentMixin\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactBrowserComponentMixin.js\",\"./ReactClass\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactClass.js\",\"./ReactElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElement.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMInput.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMInput\n */\n\n'use strict';\n\nvar AutoFocusMixin = require(\"./AutoFocusMixin\");\nvar DOMPropertyOperations = require(\"./DOMPropertyOperations\");\nvar LinkedValueUtils = require(\"./LinkedValueUtils\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\n\nvar input = ReactElement.createFactory('input');\n\nvar instancesByReactID = {};\n\nfunction forceUpdateIfMounted() {\n  /*jshint validthis:true */\n  if (this.isMounted()) {\n    this.forceUpdate();\n  }\n}\n\n/**\n * Implements an <input> native component that allows setting these optional\n * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n *\n * If `checked` or `value` are not supplied (or null/undefined), user actions\n * that affect the checked state or value will trigger updates to the element.\n *\n * If they are supplied (and not null/undefined), the rendered element will not\n * trigger updates to the element. Instead, the props must change in order for\n * the rendered element to be updated.\n *\n * The rendered element will be initialized as unchecked (or `defaultChecked`)\n * with an empty value (or `defaultValue`).\n *\n * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n */\nvar ReactDOMInput = ReactClass.createClass({\n  displayName: 'ReactDOMInput',\n  tagName: 'INPUT',\n\n  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],\n\n  getInitialState: function() {\n    var defaultValue = this.props.defaultValue;\n    return {\n      initialChecked: this.props.defaultChecked || false,\n      initialValue: defaultValue != null ? defaultValue : null\n    };\n  },\n\n  render: function() {\n    // Clone `this.props` so we don't mutate the input.\n    var props = assign({}, this.props);\n\n    props.defaultChecked = null;\n    props.defaultValue = null;\n\n    var value = LinkedValueUtils.getValue(this);\n    props.value = value != null ? value : this.state.initialValue;\n\n    var checked = LinkedValueUtils.getChecked(this);\n    props.checked = checked != null ? checked : this.state.initialChecked;\n\n    props.onChange = this._handleChange;\n\n    return input(props, this.props.children);\n  },\n\n  componentDidMount: function() {\n    var id = ReactMount.getID(this.getDOMNode());\n    instancesByReactID[id] = this;\n  },\n\n  componentWillUnmount: function() {\n    var rootNode = this.getDOMNode();\n    var id = ReactMount.getID(rootNode);\n    delete instancesByReactID[id];\n  },\n\n  componentDidUpdate: function(prevProps, prevState, prevContext) {\n    var rootNode = this.getDOMNode();\n    if (this.props.checked != null) {\n      DOMPropertyOperations.setValueForProperty(\n        rootNode,\n        'checked',\n        this.props.checked || false\n      );\n    }\n\n    var value = LinkedValueUtils.getValue(this);\n    if (value != null) {\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);\n    }\n  },\n\n  _handleChange: function(event) {\n    var returnValue;\n    var onChange = LinkedValueUtils.getOnChange(this);\n    if (onChange) {\n      returnValue = onChange.call(this, event);\n    }\n    // Here we use asap to wait until all updates have propagated, which\n    // is important when using controlled components within layers:\n    // https://github.com/facebook/react/issues/1698\n    ReactUpdates.asap(forceUpdateIfMounted, this);\n\n    var name = this.props.name;\n    if (this.props.type === 'radio' && name != null) {\n      var rootNode = this.getDOMNode();\n      var queryRoot = rootNode;\n\n      while (queryRoot.parentNode) {\n        queryRoot = queryRoot.parentNode;\n      }\n\n      // If `rootNode.form` was non-null, then we could try `form.elements`,\n      // but that sometimes behaves strangely in IE8. We could also try using\n      // `form.getElementsByName`, but that will only return direct children\n      // and won't include inputs that use the HTML5 `form=` attribute. Since\n      // the input might not even be in a form, let's just use the global\n      // `querySelectorAll` to ensure we don't miss anything.\n      var group = queryRoot.querySelectorAll(\n        'input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n\n      for (var i = 0, groupLen = group.length; i < groupLen; i++) {\n        var otherNode = group[i];\n        if (otherNode === rootNode ||\n            otherNode.form !== rootNode.form) {\n          continue;\n        }\n        var otherID = ReactMount.getID(otherNode);\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          otherID,\n          'ReactDOMInput: Mixing React and non-React radio inputs with the ' +\n          'same `name` is not supported.'\n        ) : invariant(otherID));\n        var otherInstance = instancesByReactID[otherID];\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          otherInstance,\n          'ReactDOMInput: Unknown radio button ID %s.',\n          otherID\n        ) : invariant(otherInstance));\n        // If this is a controlled radio button group, forcing the input that\n        // was previously checked to update will cause it to be come re-checked\n        // as appropriate.\n        ReactUpdates.asap(forceUpdateIfMounted, otherInstance);\n      }\n    }\n\n    return returnValue;\n  }\n\n});\n\nmodule.exports = ReactDOMInput;\n\n}).call(this,require('_process'))\n},{\"./AutoFocusMixin\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/AutoFocusMixin.js\",\"./DOMPropertyOperations\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/DOMPropertyOperations.js\",\"./LinkedValueUtils\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/LinkedValueUtils.js\",\"./Object.assign\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Object.assign.js\",\"./ReactBrowserComponentMixin\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactBrowserComponentMixin.js\",\"./ReactClass\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactClass.js\",\"./ReactElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElement.js\",\"./ReactMount\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactMount.js\",\"./ReactUpdates\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactUpdates.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMOption.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMOption\n */\n\n'use strict';\n\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar warning = require(\"./warning\");\n\nvar option = ReactElement.createFactory('option');\n\n/**\n * Implements an <option> native component that warns when `selected` is set.\n */\nvar ReactDOMOption = ReactClass.createClass({\n  displayName: 'ReactDOMOption',\n  tagName: 'OPTION',\n\n  mixins: [ReactBrowserComponentMixin],\n\n  componentWillMount: function() {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        this.props.selected == null,\n        'Use the `defaultValue` or `value` props on <select> instead of ' +\n        'setting `selected` on <option>.'\n      ) : null);\n    }\n  },\n\n  render: function() {\n    return option(this.props, this.props.children);\n  }\n\n});\n\nmodule.exports = ReactDOMOption;\n\n}).call(this,require('_process'))\n},{\"./ReactBrowserComponentMixin\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactBrowserComponentMixin.js\",\"./ReactClass\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactClass.js\",\"./ReactElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElement.js\",\"./warning\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/warning.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMSelect.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMSelect\n */\n\n'use strict';\n\nvar AutoFocusMixin = require(\"./AutoFocusMixin\");\nvar LinkedValueUtils = require(\"./LinkedValueUtils\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar assign = require(\"./Object.assign\");\n\nvar select = ReactElement.createFactory('select');\n\nfunction updateOptionsIfPendingUpdateAndMounted() {\n  /*jshint validthis:true */\n  if (this._pendingUpdate) {\n    this._pendingUpdate = false;\n    var value = LinkedValueUtils.getValue(this);\n    if (value != null && this.isMounted()) {\n      updateOptions(this, value);\n    }\n  }\n}\n\n/**\n * Validation function for `value` and `defaultValue`.\n * @private\n */\nfunction selectValueType(props, propName, componentName) {\n  if (props[propName] == null) {\n    return null;\n  }\n  if (props.multiple) {\n    if (!Array.isArray(props[propName])) {\n      return new Error(\n        (\"The `\" + propName + \"` prop supplied to <select> must be an array if \") +\n        (\"`multiple` is true.\")\n      );\n    }\n  } else {\n    if (Array.isArray(props[propName])) {\n      return new Error(\n        (\"The `\" + propName + \"` prop supplied to <select> must be a scalar \") +\n        (\"value if `multiple` is false.\")\n      );\n    }\n  }\n}\n\n/**\n * @param {ReactComponent} component Instance of ReactDOMSelect\n * @param {*} propValue A stringable (with `multiple`, a list of stringables).\n * @private\n */\nfunction updateOptions(component, propValue) {\n  var selectedValue, i, l;\n  var options = component.getDOMNode().options;\n\n  if (component.props.multiple) {\n    selectedValue = {};\n    for (i = 0, l = propValue.length; i < l; i++) {\n      selectedValue['' + propValue[i]] = true;\n    }\n    for (i = 0, l = options.length; i < l; i++) {\n      var selected = selectedValue.hasOwnProperty(options[i].value);\n      if (options[i].selected !== selected) {\n        options[i].selected = selected;\n      }\n    }\n  } else {\n    // Do not set `select.value` as exact behavior isn't consistent across all\n    // browsers for all cases.\n    selectedValue = '' + propValue;\n    for (i = 0, l = options.length; i < l; i++) {\n      if (options[i].value === selectedValue) {\n        options[i].selected = true;\n        return;\n      }\n    }\n    if (options.length) {\n      options[0].selected = true;\n    }\n  }\n}\n\n/**\n * Implements a <select> native component that allows optionally setting the\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n * stringable. If `multiple` is true, the prop must be an array of stringables.\n *\n * If `value` is not supplied (or null/undefined), user actions that change the\n * selected option will trigger updates to the rendered options.\n *\n * If it is supplied (and not null/undefined), the rendered options will not\n * update in response to user actions. Instead, the `value` prop must change in\n * order for the rendered options to update.\n *\n * If `defaultValue` is provided, any options with the supplied values will be\n * selected.\n */\nvar ReactDOMSelect = ReactClass.createClass({\n  displayName: 'ReactDOMSelect',\n  tagName: 'SELECT',\n\n  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],\n\n  propTypes: {\n    defaultValue: selectValueType,\n    value: selectValueType\n  },\n\n  render: function() {\n    // Clone `this.props` so we don't mutate the input.\n    var props = assign({}, this.props);\n\n    props.onChange = this._handleChange;\n    props.value = null;\n\n    return select(props, this.props.children);\n  },\n\n  componentWillMount: function() {\n    this._pendingUpdate = false;\n  },\n\n  componentDidMount: function() {\n    var value = LinkedValueUtils.getValue(this);\n    if (value != null) {\n      updateOptions(this, value);\n    } else if (this.props.defaultValue != null) {\n      updateOptions(this, this.props.defaultValue);\n    }\n  },\n\n  componentDidUpdate: function(prevProps) {\n    var value = LinkedValueUtils.getValue(this);\n    if (value != null) {\n      this._pendingUpdate = false;\n      updateOptions(this, value);\n    } else if (!prevProps.multiple !== !this.props.multiple) {\n      // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n      if (this.props.defaultValue != null) {\n        updateOptions(this, this.props.defaultValue);\n      } else {\n        // Revert the select back to its default unselected state.\n        updateOptions(this, this.props.multiple ? [] : '');\n      }\n    }\n  },\n\n  _handleChange: function(event) {\n    var returnValue;\n    var onChange = LinkedValueUtils.getOnChange(this);\n    if (onChange) {\n      returnValue = onChange.call(this, event);\n    }\n\n    this._pendingUpdate = true;\n    ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);\n    return returnValue;\n  }\n\n});\n\nmodule.exports = ReactDOMSelect;\n\n},{\"./AutoFocusMixin\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/AutoFocusMixin.js\",\"./LinkedValueUtils\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/LinkedValueUtils.js\",\"./Object.assign\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Object.assign.js\",\"./ReactBrowserComponentMixin\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactBrowserComponentMixin.js\",\"./ReactClass\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactClass.js\",\"./ReactElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElement.js\",\"./ReactUpdates\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactUpdates.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMSelection.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMSelection\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar getNodeForCharacterOffset = require(\"./getNodeForCharacterOffset\");\nvar getTextContentAccessor = require(\"./getTextContentAccessor\");\n\n/**\n * While `isCollapsed` is available on the Selection object and `collapsed`\n * is available on the Range object, IE11 sometimes gets them wrong.\n * If the anchor/focus nodes and offsets are the same, the range is collapsed.\n */\nfunction isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {\n  return anchorNode === focusNode && anchorOffset === focusOffset;\n}\n\n/**\n * Get the appropriate anchor and focus node/offset pairs for IE.\n *\n * The catch here is that IE's selection API doesn't provide information\n * about whether the selection is forward or backward, so we have to\n * behave as though it's always forward.\n *\n * IE text differs from modern selection in that it behaves as though\n * block elements end with a new line. This means character offsets will\n * differ between the two APIs.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getIEOffsets(node) {\n  var selection = document.selection;\n  var selectedRange = selection.createRange();\n  var selectedLength = selectedRange.text.length;\n\n  // Duplicate selection so we can move range without breaking user selection.\n  var fromStart = selectedRange.duplicate();\n  fromStart.moveToElementText(node);\n  fromStart.setEndPoint('EndToStart', selectedRange);\n\n  var startOffset = fromStart.text.length;\n  var endOffset = startOffset + selectedLength;\n\n  return {\n    start: startOffset,\n    end: endOffset\n  };\n}\n\n/**\n * @param {DOMElement} node\n * @return {?object}\n */\nfunction getModernOffsets(node) {\n  var selection = window.getSelection && window.getSelection();\n\n  if (!selection || selection.rangeCount === 0) {\n    return null;\n  }\n\n  var anchorNode = selection.anchorNode;\n  var anchorOffset = selection.anchorOffset;\n  var focusNode = selection.focusNode;\n  var focusOffset = selection.focusOffset;\n\n  var currentRange = selection.getRangeAt(0);\n\n  // If the node and offset values are the same, the selection is collapsed.\n  // `Selection.isCollapsed` is available natively, but IE sometimes gets\n  // this value wrong.\n  var isSelectionCollapsed = isCollapsed(\n    selection.anchorNode,\n    selection.anchorOffset,\n    selection.focusNode,\n    selection.focusOffset\n  );\n\n  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;\n\n  var tempRange = currentRange.cloneRange();\n  tempRange.selectNodeContents(node);\n  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\n\n  var isTempRangeCollapsed = isCollapsed(\n    tempRange.startContainer,\n    tempRange.startOffset,\n    tempRange.endContainer,\n    tempRange.endOffset\n  );\n\n  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;\n  var end = start + rangeLength;\n\n  // Detect whether the selection is backward.\n  var detectionRange = document.createRange();\n  detectionRange.setStart(anchorNode, anchorOffset);\n  detectionRange.setEnd(focusNode, focusOffset);\n  var isBackward = detectionRange.collapsed;\n\n  return {\n    start: isBackward ? end : start,\n    end: isBackward ? start : end\n  };\n}\n\n/**\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setIEOffsets(node, offsets) {\n  var range = document.selection.createRange().duplicate();\n  var start, end;\n\n  if (typeof offsets.end === 'undefined') {\n    start = offsets.start;\n    end = start;\n  } else if (offsets.start > offsets.end) {\n    start = offsets.end;\n    end = offsets.start;\n  } else {\n    start = offsets.start;\n    end = offsets.end;\n  }\n\n  range.moveToElementText(node);\n  range.moveStart('character', start);\n  range.setEndPoint('EndToStart', range);\n  range.moveEnd('character', end - start);\n  range.select();\n}\n\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n *\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setModernOffsets(node, offsets) {\n  if (!window.getSelection) {\n    return;\n  }\n\n  var selection = window.getSelection();\n  var length = node[getTextContentAccessor()].length;\n  var start = Math.min(offsets.start, length);\n  var end = typeof offsets.end === 'undefined' ?\n            start : Math.min(offsets.end, length);\n\n  // IE 11 uses modern selection, but doesn't support the extend method.\n  // Flip backward selections, so we can set with a single range.\n  if (!selection.extend && start > end) {\n    var temp = end;\n    end = start;\n    start = temp;\n  }\n\n  var startMarker = getNodeForCharacterOffset(node, start);\n  var endMarker = getNodeForCharacterOffset(node, end);\n\n  if (startMarker && endMarker) {\n    var range = document.createRange();\n    range.setStart(startMarker.node, startMarker.offset);\n    selection.removeAllRanges();\n\n    if (start > end) {\n      selection.addRange(range);\n      selection.extend(endMarker.node, endMarker.offset);\n    } else {\n      range.setEnd(endMarker.node, endMarker.offset);\n      selection.addRange(range);\n    }\n  }\n}\n\nvar useIEOffsets = (\n  ExecutionEnvironment.canUseDOM &&\n  'selection' in document &&\n  !('getSelection' in window)\n);\n\nvar ReactDOMSelection = {\n  /**\n   * @param {DOMElement} node\n   */\n  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,\n\n  /**\n   * @param {DOMElement|DOMTextNode} node\n   * @param {object} offsets\n   */\n  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets\n};\n\nmodule.exports = ReactDOMSelection;\n\n},{\"./ExecutionEnvironment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ExecutionEnvironment.js\",\"./getNodeForCharacterOffset\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getNodeForCharacterOffset.js\",\"./getTextContentAccessor\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getTextContentAccessor.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMTextComponent.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMTextComponent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMPropertyOperations = require(\"./DOMPropertyOperations\");\nvar ReactComponentBrowserEnvironment =\n  require(\"./ReactComponentBrowserEnvironment\");\nvar ReactDOMComponent = require(\"./ReactDOMComponent\");\n\nvar assign = require(\"./Object.assign\");\nvar escapeTextContentForBrowser = require(\"./escapeTextContentForBrowser\");\n\n/**\n * Text nodes violate a couple assumptions that React makes about components:\n *\n *  - When mounting text into the DOM, adjacent text nodes are merged.\n *  - Text nodes cannot be assigned a React root ID.\n *\n * This component is used to wrap strings in elements so that they can undergo\n * the same reconciliation that is applied to elements.\n *\n * TODO: Investigate representing React components in the DOM with text nodes.\n *\n * @class ReactDOMTextComponent\n * @extends ReactComponent\n * @internal\n */\nvar ReactDOMTextComponent = function(props) {\n  // This constructor and its argument is currently used by mocks.\n};\n\nassign(ReactDOMTextComponent.prototype, {\n\n  /**\n   * @param {ReactText} text\n   * @internal\n   */\n  construct: function(text) {\n    // TODO: This is really a ReactText (ReactNode), not a ReactElement\n    this._currentElement = text;\n    this._stringText = '' + text;\n\n    // Properties\n    this._rootNodeID = null;\n    this._mountIndex = 0;\n  },\n\n  /**\n   * Creates the markup for this text node. This node is not intended to have\n   * any features besides containing text content.\n   *\n   * @param {string} rootID DOM ID of the root node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {string} Markup for this text node.\n   * @internal\n   */\n  mountComponent: function(rootID, transaction, context) {\n    this._rootNodeID = rootID;\n    var escapedText = escapeTextContentForBrowser(this._stringText);\n\n    if (transaction.renderToStaticMarkup) {\n      // Normally we'd wrap this in a `span` for the reasons stated above, but\n      // since this is a situation where React won't take over (static pages),\n      // we can simply return the text as it is.\n      return escapedText;\n    }\n\n    return (\n      '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' +\n        escapedText +\n      '</span>'\n    );\n  },\n\n  /**\n   * Updates this component by updating the text content.\n   *\n   * @param {ReactText} nextText The next text content\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  receiveComponent: function(nextText, transaction) {\n    if (nextText !== this._currentElement) {\n      this._currentElement = nextText;\n      var nextStringText = '' + nextText;\n      if (nextStringText !== this._stringText) {\n        // TODO: Save this as pending props and use performUpdateIfNecessary\n        // and/or updateComponent to do the actual update for consistency with\n        // other component types?\n        this._stringText = nextStringText;\n        ReactDOMComponent.BackendIDOperations.updateTextContentByID(\n          this._rootNodeID,\n          nextStringText\n        );\n      }\n    }\n  },\n\n  unmountComponent: function() {\n    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);\n  }\n\n});\n\nmodule.exports = ReactDOMTextComponent;\n\n},{\"./DOMPropertyOperations\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/DOMPropertyOperations.js\",\"./Object.assign\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Object.assign.js\",\"./ReactComponentBrowserEnvironment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactComponentBrowserEnvironment.js\",\"./ReactDOMComponent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMComponent.js\",\"./escapeTextContentForBrowser\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/escapeTextContentForBrowser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMTextarea.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMTextarea\n */\n\n'use strict';\n\nvar AutoFocusMixin = require(\"./AutoFocusMixin\");\nvar DOMPropertyOperations = require(\"./DOMPropertyOperations\");\nvar LinkedValueUtils = require(\"./LinkedValueUtils\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\n\nvar warning = require(\"./warning\");\n\nvar textarea = ReactElement.createFactory('textarea');\n\nfunction forceUpdateIfMounted() {\n  /*jshint validthis:true */\n  if (this.isMounted()) {\n    this.forceUpdate();\n  }\n}\n\n/**\n * Implements a <textarea> native component that allows setting `value`, and\n * `defaultValue`. This differs from the traditional DOM API because value is\n * usually set as PCDATA children.\n *\n * If `value` is not supplied (or null/undefined), user actions that affect the\n * value will trigger updates to the element.\n *\n * If `value` is supplied (and not null/undefined), the rendered element will\n * not trigger updates to the element. Instead, the `value` prop must change in\n * order for the rendered element to be updated.\n *\n * The rendered element will be initialized with an empty value, the prop\n * `defaultValue` if specified, or the children content (deprecated).\n */\nvar ReactDOMTextarea = ReactClass.createClass({\n  displayName: 'ReactDOMTextarea',\n  tagName: 'TEXTAREA',\n\n  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],\n\n  getInitialState: function() {\n    var defaultValue = this.props.defaultValue;\n    // TODO (yungsters): Remove support for children content in <textarea>.\n    var children = this.props.children;\n    if (children != null) {\n      if (\"production\" !== process.env.NODE_ENV) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          false,\n          'Use the `defaultValue` or `value` props instead of setting ' +\n          'children on <textarea>.'\n        ) : null);\n      }\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        defaultValue == null,\n        'If you supply `defaultValue` on a <textarea>, do not pass children.'\n      ) : invariant(defaultValue == null));\n      if (Array.isArray(children)) {\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          children.length <= 1,\n          '<textarea> can only have at most one child.'\n        ) : invariant(children.length <= 1));\n        children = children[0];\n      }\n\n      defaultValue = '' + children;\n    }\n    if (defaultValue == null) {\n      defaultValue = '';\n    }\n    var value = LinkedValueUtils.getValue(this);\n    return {\n      // We save the initial value so that `ReactDOMComponent` doesn't update\n      // `textContent` (unnecessary since we update value).\n      // The initial value can be a boolean or object so that's why it's\n      // forced to be a string.\n      initialValue: '' + (value != null ? value : defaultValue)\n    };\n  },\n\n  render: function() {\n    // Clone `this.props` so we don't mutate the input.\n    var props = assign({}, this.props);\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      props.dangerouslySetInnerHTML == null,\n      '`dangerouslySetInnerHTML` does not make sense on <textarea>.'\n    ) : invariant(props.dangerouslySetInnerHTML == null));\n\n    props.defaultValue = null;\n    props.value = null;\n    props.onChange = this._handleChange;\n\n    // Always set children to the same thing. In IE9, the selection range will\n    // get reset if `textContent` is mutated.\n    return textarea(props, this.state.initialValue);\n  },\n\n  componentDidUpdate: function(prevProps, prevState, prevContext) {\n    var value = LinkedValueUtils.getValue(this);\n    if (value != null) {\n      var rootNode = this.getDOMNode();\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);\n    }\n  },\n\n  _handleChange: function(event) {\n    var returnValue;\n    var onChange = LinkedValueUtils.getOnChange(this);\n    if (onChange) {\n      returnValue = onChange.call(this, event);\n    }\n    ReactUpdates.asap(forceUpdateIfMounted, this);\n    return returnValue;\n  }\n\n});\n\nmodule.exports = ReactDOMTextarea;\n\n}).call(this,require('_process'))\n},{\"./AutoFocusMixin\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/AutoFocusMixin.js\",\"./DOMPropertyOperations\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/DOMPropertyOperations.js\",\"./LinkedValueUtils\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/LinkedValueUtils.js\",\"./Object.assign\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Object.assign.js\",\"./ReactBrowserComponentMixin\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactBrowserComponentMixin.js\",\"./ReactClass\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactClass.js\",\"./ReactElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElement.js\",\"./ReactUpdates\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactUpdates.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"./warning\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/warning.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDefaultBatchingStrategy.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultBatchingStrategy\n */\n\n'use strict';\n\nvar ReactUpdates = require(\"./ReactUpdates\");\nvar Transaction = require(\"./Transaction\");\n\nvar assign = require(\"./Object.assign\");\nvar emptyFunction = require(\"./emptyFunction\");\n\nvar RESET_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: function() {\n    ReactDefaultBatchingStrategy.isBatchingUpdates = false;\n  }\n};\n\nvar FLUSH_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)\n};\n\nvar TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];\n\nfunction ReactDefaultBatchingStrategyTransaction() {\n  this.reinitializeTransaction();\n}\n\nassign(\n  ReactDefaultBatchingStrategyTransaction.prototype,\n  Transaction.Mixin,\n  {\n    getTransactionWrappers: function() {\n      return TRANSACTION_WRAPPERS;\n    }\n  }\n);\n\nvar transaction = new ReactDefaultBatchingStrategyTransaction();\n\nvar ReactDefaultBatchingStrategy = {\n  isBatchingUpdates: false,\n\n  /**\n   * Call the provided function in a context within which calls to `setState`\n   * and friends are batched such that components aren't updated unnecessarily.\n   */\n  batchedUpdates: function(callback, a, b, c, d) {\n    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;\n\n    ReactDefaultBatchingStrategy.isBatchingUpdates = true;\n\n    // The code is written this way to avoid extra allocations\n    if (alreadyBatchingUpdates) {\n      callback(a, b, c, d);\n    } else {\n      transaction.perform(callback, null, a, b, c, d);\n    }\n  }\n};\n\nmodule.exports = ReactDefaultBatchingStrategy;\n\n},{\"./Object.assign\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Object.assign.js\",\"./ReactUpdates\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactUpdates.js\",\"./Transaction\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Transaction.js\",\"./emptyFunction\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/emptyFunction.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDefaultInjection.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultInjection\n */\n\n'use strict';\n\nvar BeforeInputEventPlugin = require(\"./BeforeInputEventPlugin\");\nvar ChangeEventPlugin = require(\"./ChangeEventPlugin\");\nvar ClientReactRootIndex = require(\"./ClientReactRootIndex\");\nvar DefaultEventPluginOrder = require(\"./DefaultEventPluginOrder\");\nvar EnterLeaveEventPlugin = require(\"./EnterLeaveEventPlugin\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\nvar HTMLDOMPropertyConfig = require(\"./HTMLDOMPropertyConfig\");\nvar MobileSafariClickEventPlugin = require(\"./MobileSafariClickEventPlugin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactComponentBrowserEnvironment =\n  require(\"./ReactComponentBrowserEnvironment\");\nvar ReactDefaultBatchingStrategy = require(\"./ReactDefaultBatchingStrategy\");\nvar ReactDOMComponent = require(\"./ReactDOMComponent\");\nvar ReactDOMButton = require(\"./ReactDOMButton\");\nvar ReactDOMForm = require(\"./ReactDOMForm\");\nvar ReactDOMImg = require(\"./ReactDOMImg\");\nvar ReactDOMIDOperations = require(\"./ReactDOMIDOperations\");\nvar ReactDOMIframe = require(\"./ReactDOMIframe\");\nvar ReactDOMInput = require(\"./ReactDOMInput\");\nvar ReactDOMOption = require(\"./ReactDOMOption\");\nvar ReactDOMSelect = require(\"./ReactDOMSelect\");\nvar ReactDOMTextarea = require(\"./ReactDOMTextarea\");\nvar ReactDOMTextComponent = require(\"./ReactDOMTextComponent\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactEventListener = require(\"./ReactEventListener\");\nvar ReactInjection = require(\"./ReactInjection\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactReconcileTransaction = require(\"./ReactReconcileTransaction\");\nvar SelectEventPlugin = require(\"./SelectEventPlugin\");\nvar ServerReactRootIndex = require(\"./ServerReactRootIndex\");\nvar SimpleEventPlugin = require(\"./SimpleEventPlugin\");\nvar SVGDOMPropertyConfig = require(\"./SVGDOMPropertyConfig\");\n\nvar createFullPageComponent = require(\"./createFullPageComponent\");\n\nfunction autoGenerateWrapperClass(type) {\n  return ReactClass.createClass({\n    tagName: type.toUpperCase(),\n    render: function() {\n      return new ReactElement(\n        type,\n        null,\n        null,\n        null,\n        null,\n        this.props\n      );\n    }\n  });\n}\n\nfunction inject() {\n  ReactInjection.EventEmitter.injectReactEventListener(\n    ReactEventListener\n  );\n\n  /**\n   * Inject modules for resolving DOM hierarchy and plugin ordering.\n   */\n  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);\n  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);\n  ReactInjection.EventPluginHub.injectMount(ReactMount);\n\n  /**\n   * Some important event plugins included by default (without having to require\n   * them).\n   */\n  ReactInjection.EventPluginHub.injectEventPluginsByName({\n    SimpleEventPlugin: SimpleEventPlugin,\n    EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n    ChangeEventPlugin: ChangeEventPlugin,\n    MobileSafariClickEventPlugin: MobileSafariClickEventPlugin,\n    SelectEventPlugin: SelectEventPlugin,\n    BeforeInputEventPlugin: BeforeInputEventPlugin\n  });\n\n  ReactInjection.NativeComponent.injectGenericComponentClass(\n    ReactDOMComponent\n  );\n\n  ReactInjection.NativeComponent.injectTextComponentClass(\n    ReactDOMTextComponent\n  );\n\n  ReactInjection.NativeComponent.injectAutoWrapper(\n    autoGenerateWrapperClass\n  );\n\n  // This needs to happen before createFullPageComponent() otherwise the mixin\n  // won't be included.\n  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);\n\n  ReactInjection.NativeComponent.injectComponentClasses({\n    'button': ReactDOMButton,\n    'form': ReactDOMForm,\n    'iframe': ReactDOMIframe,\n    'img': ReactDOMImg,\n    'input': ReactDOMInput,\n    'option': ReactDOMOption,\n    'select': ReactDOMSelect,\n    'textarea': ReactDOMTextarea,\n\n    'html': createFullPageComponent('html'),\n    'head': createFullPageComponent('head'),\n    'body': createFullPageComponent('body')\n  });\n\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);\n\n  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');\n\n  ReactInjection.Updates.injectReconcileTransaction(\n    ReactReconcileTransaction\n  );\n  ReactInjection.Updates.injectBatchingStrategy(\n    ReactDefaultBatchingStrategy\n  );\n\n  ReactInjection.RootIndex.injectCreateReactRootIndex(\n    ExecutionEnvironment.canUseDOM ?\n      ClientReactRootIndex.createReactRootIndex :\n      ServerReactRootIndex.createReactRootIndex\n  );\n\n  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);\n  ReactInjection.DOMComponent.injectIDOperations(ReactDOMIDOperations);\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    var url = (ExecutionEnvironment.canUseDOM && window.location.href) || '';\n    if ((/[?&]react_perf\\b/).test(url)) {\n      var ReactDefaultPerf = require(\"./ReactDefaultPerf\");\n      ReactDefaultPerf.start();\n    }\n  }\n}\n\nmodule.exports = {\n  inject: inject\n};\n\n}).call(this,require('_process'))\n},{\"./BeforeInputEventPlugin\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/BeforeInputEventPlugin.js\",\"./ChangeEventPlugin\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ChangeEventPlugin.js\",\"./ClientReactRootIndex\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ClientReactRootIndex.js\",\"./DefaultEventPluginOrder\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/DefaultEventPluginOrder.js\",\"./EnterLeaveEventPlugin\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EnterLeaveEventPlugin.js\",\"./ExecutionEnvironment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ExecutionEnvironment.js\",\"./HTMLDOMPropertyConfig\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/HTMLDOMPropertyConfig.js\",\"./MobileSafariClickEventPlugin\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/MobileSafariClickEventPlugin.js\",\"./ReactBrowserComponentMixin\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactBrowserComponentMixin.js\",\"./ReactClass\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactClass.js\",\"./ReactComponentBrowserEnvironment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactComponentBrowserEnvironment.js\",\"./ReactDOMButton\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMButton.js\",\"./ReactDOMComponent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMComponent.js\",\"./ReactDOMForm\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMForm.js\",\"./ReactDOMIDOperations\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMIDOperations.js\",\"./ReactDOMIframe\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMIframe.js\",\"./ReactDOMImg\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMImg.js\",\"./ReactDOMInput\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMInput.js\",\"./ReactDOMOption\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMOption.js\",\"./ReactDOMSelect\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMSelect.js\",\"./ReactDOMTextComponent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMTextComponent.js\",\"./ReactDOMTextarea\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMTextarea.js\",\"./ReactDefaultBatchingStrategy\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDefaultBatchingStrategy.js\",\"./ReactDefaultPerf\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDefaultPerf.js\",\"./ReactElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElement.js\",\"./ReactEventListener\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactEventListener.js\",\"./ReactInjection\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactInjection.js\",\"./ReactInstanceHandles\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactInstanceHandles.js\",\"./ReactMount\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactMount.js\",\"./ReactReconcileTransaction\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactReconcileTransaction.js\",\"./SVGDOMPropertyConfig\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SVGDOMPropertyConfig.js\",\"./SelectEventPlugin\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SelectEventPlugin.js\",\"./ServerReactRootIndex\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ServerReactRootIndex.js\",\"./SimpleEventPlugin\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SimpleEventPlugin.js\",\"./createFullPageComponent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/createFullPageComponent.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDefaultPerf.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultPerf\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\nvar ReactDefaultPerfAnalysis = require(\"./ReactDefaultPerfAnalysis\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactPerf = require(\"./ReactPerf\");\n\nvar performanceNow = require(\"./performanceNow\");\n\nfunction roundFloat(val) {\n  return Math.floor(val * 100) / 100;\n}\n\nfunction addValue(obj, key, val) {\n  obj[key] = (obj[key] || 0) + val;\n}\n\nvar ReactDefaultPerf = {\n  _allMeasurements: [], // last item in the list is the current one\n  _mountStack: [0],\n  _injected: false,\n\n  start: function() {\n    if (!ReactDefaultPerf._injected) {\n      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);\n    }\n\n    ReactDefaultPerf._allMeasurements.length = 0;\n    ReactPerf.enableMeasure = true;\n  },\n\n  stop: function() {\n    ReactPerf.enableMeasure = false;\n  },\n\n  getLastMeasurements: function() {\n    return ReactDefaultPerf._allMeasurements;\n  },\n\n  printExclusive: function(measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);\n    console.table(summary.map(function(item) {\n      return {\n        'Component class name': item.componentName,\n        'Total inclusive time (ms)': roundFloat(item.inclusive),\n        'Exclusive mount time (ms)': roundFloat(item.exclusive),\n        'Exclusive render time (ms)': roundFloat(item.render),\n        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),\n        'Render time per instance (ms)': roundFloat(item.render / item.count),\n        'Instances': item.count\n      };\n    }));\n    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct\n    // number.\n  },\n\n  printInclusive: function(measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);\n    console.table(summary.map(function(item) {\n      return {\n        'Owner > component': item.componentName,\n        'Inclusive time (ms)': roundFloat(item.time),\n        'Instances': item.count\n      };\n    }));\n    console.log(\n      'Total time:',\n      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'\n    );\n  },\n\n  getMeasurementsSummaryMap: function(measurements) {\n    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(\n      measurements,\n      true\n    );\n    return summary.map(function(item) {\n      return {\n        'Owner > component': item.componentName,\n        'Wasted time (ms)': item.time,\n        'Instances': item.count\n      };\n    });\n  },\n\n  printWasted: function(measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));\n    console.log(\n      'Total time:',\n      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'\n    );\n  },\n\n  printDOM: function(measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);\n    console.table(summary.map(function(item) {\n      var result = {};\n      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;\n      result['type'] = item.type;\n      result['args'] = JSON.stringify(item.args);\n      return result;\n    }));\n    console.log(\n      'Total time:',\n      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'\n    );\n  },\n\n  _recordWrite: function(id, fnName, totalTime, args) {\n    // TODO: totalTime isn't that useful since it doesn't count paints/reflows\n    var writes =\n      ReactDefaultPerf\n        ._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1]\n        .writes;\n    writes[id] = writes[id] || [];\n    writes[id].push({\n      type: fnName,\n      time: totalTime,\n      args: args\n    });\n  },\n\n  measure: function(moduleName, fnName, func) {\n    return function() {for (var args=[],$__0=0,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);\n      var totalTime;\n      var rv;\n      var start;\n\n      if (fnName === '_renderNewRootComponent' ||\n          fnName === 'flushBatchedUpdates') {\n        // A \"measurement\" is a set of metrics recorded for each flush. We want\n        // to group the metrics for a given flush together so we can look at the\n        // components that rendered and the DOM operations that actually\n        // happened to determine the amount of \"wasted work\" performed.\n        ReactDefaultPerf._allMeasurements.push({\n          exclusive: {},\n          inclusive: {},\n          render: {},\n          counts: {},\n          writes: {},\n          displayNames: {},\n          totalTime: 0\n        });\n        start = performanceNow();\n        rv = func.apply(this, args);\n        ReactDefaultPerf._allMeasurements[\n          ReactDefaultPerf._allMeasurements.length - 1\n        ].totalTime = performanceNow() - start;\n        return rv;\n      } else if (fnName === '_mountImageIntoNode' ||\n          moduleName === 'ReactDOMIDOperations') {\n        start = performanceNow();\n        rv = func.apply(this, args);\n        totalTime = performanceNow() - start;\n\n        if (fnName === '_mountImageIntoNode') {\n          var mountID = ReactMount.getID(args[1]);\n          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);\n        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {\n          // special format\n          args[0].forEach(function(update) {\n            var writeArgs = {};\n            if (update.fromIndex !== null) {\n              writeArgs.fromIndex = update.fromIndex;\n            }\n            if (update.toIndex !== null) {\n              writeArgs.toIndex = update.toIndex;\n            }\n            if (update.textContent !== null) {\n              writeArgs.textContent = update.textContent;\n            }\n            if (update.markupIndex !== null) {\n              writeArgs.markup = args[1][update.markupIndex];\n            }\n            ReactDefaultPerf._recordWrite(\n              update.parentID,\n              update.type,\n              totalTime,\n              writeArgs\n            );\n          });\n        } else {\n          // basic format\n          ReactDefaultPerf._recordWrite(\n            args[0],\n            fnName,\n            totalTime,\n            Array.prototype.slice.call(args, 1)\n          );\n        }\n        return rv;\n      } else if (moduleName === 'ReactCompositeComponent' && (\n        (// TODO: receiveComponent()?\n        (fnName === 'mountComponent' ||\n        fnName === 'updateComponent' || fnName === '_renderValidatedComponent')))) {\n\n        if (typeof this._currentElement.type === 'string') {\n          return func.apply(this, args);\n        }\n\n        var rootNodeID = fnName === 'mountComponent' ?\n          args[0] :\n          this._rootNodeID;\n        var isRender = fnName === '_renderValidatedComponent';\n        var isMount = fnName === 'mountComponent';\n\n        var mountStack = ReactDefaultPerf._mountStack;\n        var entry = ReactDefaultPerf._allMeasurements[\n          ReactDefaultPerf._allMeasurements.length - 1\n        ];\n\n        if (isRender) {\n          addValue(entry.counts, rootNodeID, 1);\n        } else if (isMount) {\n          mountStack.push(0);\n        }\n\n        start = performanceNow();\n        rv = func.apply(this, args);\n        totalTime = performanceNow() - start;\n\n        if (isRender) {\n          addValue(entry.render, rootNodeID, totalTime);\n        } else if (isMount) {\n          var subMountTime = mountStack.pop();\n          mountStack[mountStack.length - 1] += totalTime;\n          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);\n          addValue(entry.inclusive, rootNodeID, totalTime);\n        } else {\n          addValue(entry.inclusive, rootNodeID, totalTime);\n        }\n\n        entry.displayNames[rootNodeID] = {\n          current: this.getName(),\n          owner: this._currentElement._owner ?\n            this._currentElement._owner.getName() :\n            '<root>'\n        };\n\n        return rv;\n      } else {\n        return func.apply(this, args);\n      }\n    };\n  }\n};\n\nmodule.exports = ReactDefaultPerf;\n\n},{\"./DOMProperty\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/DOMProperty.js\",\"./ReactDefaultPerfAnalysis\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDefaultPerfAnalysis.js\",\"./ReactMount\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactMount.js\",\"./ReactPerf\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactPerf.js\",\"./performanceNow\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/performanceNow.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDefaultPerfAnalysis.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultPerfAnalysis\n */\n\nvar assign = require(\"./Object.assign\");\n\n// Don't try to save users less than 1.2ms (a number I made up)\nvar DONT_CARE_THRESHOLD = 1.2;\nvar DOM_OPERATION_TYPES = {\n  '_mountImageIntoNode': 'set innerHTML',\n  INSERT_MARKUP: 'set innerHTML',\n  MOVE_EXISTING: 'move',\n  REMOVE_NODE: 'remove',\n  TEXT_CONTENT: 'set textContent',\n  'updatePropertyByID': 'update attribute',\n  'deletePropertyByID': 'delete attribute',\n  'updateStylesByID': 'update styles',\n  'updateInnerHTMLByID': 'set innerHTML',\n  'dangerouslyReplaceNodeWithMarkupByID': 'replace'\n};\n\nfunction getTotalTime(measurements) {\n  // TODO: return number of DOM ops? could be misleading.\n  // TODO: measure dropped frames after reconcile?\n  // TODO: log total time of each reconcile and the top-level component\n  // class that triggered it.\n  var totalTime = 0;\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    totalTime += measurement.totalTime;\n  }\n  return totalTime;\n}\n\nfunction getDOMSummary(measurements) {\n  var items = [];\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    var id;\n\n    for (id in measurement.writes) {\n      measurement.writes[id].forEach(function(write) {\n        items.push({\n          id: id,\n          type: DOM_OPERATION_TYPES[write.type] || write.type,\n          args: write.args\n        });\n      });\n    }\n  }\n  return items;\n}\n\nfunction getExclusiveSummary(measurements) {\n  var candidates = {};\n  var displayName;\n\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    var allIDs = assign(\n      {},\n      measurement.exclusive,\n      measurement.inclusive\n    );\n\n    for (var id in allIDs) {\n      displayName = measurement.displayNames[id].current;\n\n      candidates[displayName] = candidates[displayName] || {\n        componentName: displayName,\n        inclusive: 0,\n        exclusive: 0,\n        render: 0,\n        count: 0\n      };\n      if (measurement.render[id]) {\n        candidates[displayName].render += measurement.render[id];\n      }\n      if (measurement.exclusive[id]) {\n        candidates[displayName].exclusive += measurement.exclusive[id];\n      }\n      if (measurement.inclusive[id]) {\n        candidates[displayName].inclusive += measurement.inclusive[id];\n      }\n      if (measurement.counts[id]) {\n        candidates[displayName].count += measurement.counts[id];\n      }\n    }\n  }\n\n  // Now make a sorted array with the results.\n  var arr = [];\n  for (displayName in candidates) {\n    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {\n      arr.push(candidates[displayName]);\n    }\n  }\n\n  arr.sort(function(a, b) {\n    return b.exclusive - a.exclusive;\n  });\n\n  return arr;\n}\n\nfunction getInclusiveSummary(measurements, onlyClean) {\n  var candidates = {};\n  var inclusiveKey;\n\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    var allIDs = assign(\n      {},\n      measurement.exclusive,\n      measurement.inclusive\n    );\n    var cleanComponents;\n\n    if (onlyClean) {\n      cleanComponents = getUnchangedComponents(measurement);\n    }\n\n    for (var id in allIDs) {\n      if (onlyClean && !cleanComponents[id]) {\n        continue;\n      }\n\n      var displayName = measurement.displayNames[id];\n\n      // Inclusive time is not useful for many components without knowing where\n      // they are instantiated. So we aggregate inclusive time with both the\n      // owner and current displayName as the key.\n      inclusiveKey = displayName.owner + ' > ' + displayName.current;\n\n      candidates[inclusiveKey] = candidates[inclusiveKey] || {\n        componentName: inclusiveKey,\n        time: 0,\n        count: 0\n      };\n\n      if (measurement.inclusive[id]) {\n        candidates[inclusiveKey].time += measurement.inclusive[id];\n      }\n      if (measurement.counts[id]) {\n        candidates[inclusiveKey].count += measurement.counts[id];\n      }\n    }\n  }\n\n  // Now make a sorted array with the results.\n  var arr = [];\n  for (inclusiveKey in candidates) {\n    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {\n      arr.push(candidates[inclusiveKey]);\n    }\n  }\n\n  arr.sort(function(a, b) {\n    return b.time - a.time;\n  });\n\n  return arr;\n}\n\nfunction getUnchangedComponents(measurement) {\n  // For a given reconcile, look at which components did not actually\n  // render anything to the DOM and return a mapping of their ID to\n  // the amount of time it took to render the entire subtree.\n  var cleanComponents = {};\n  var dirtyLeafIDs = Object.keys(measurement.writes);\n  var allIDs = assign({}, measurement.exclusive, measurement.inclusive);\n\n  for (var id in allIDs) {\n    var isDirty = false;\n    // For each component that rendered, see if a component that triggered\n    // a DOM op is in its subtree.\n    for (var i = 0; i < dirtyLeafIDs.length; i++) {\n      if (dirtyLeafIDs[i].indexOf(id) === 0) {\n        isDirty = true;\n        break;\n      }\n    }\n    if (!isDirty && measurement.counts[id] > 0) {\n      cleanComponents[id] = true;\n    }\n  }\n  return cleanComponents;\n}\n\nvar ReactDefaultPerfAnalysis = {\n  getExclusiveSummary: getExclusiveSummary,\n  getInclusiveSummary: getInclusiveSummary,\n  getDOMSummary: getDOMSummary,\n  getTotalTime: getTotalTime\n};\n\nmodule.exports = ReactDefaultPerfAnalysis;\n\n},{\"./Object.assign\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Object.assign.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElement.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElement\n */\n\n'use strict';\n\nvar ReactContext = require(\"./ReactContext\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\n\nvar assign = require(\"./Object.assign\");\nvar warning = require(\"./warning\");\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true\n};\n\n/**\n * Warn for mutations.\n *\n * @internal\n * @param {object} object\n * @param {string} key\n */\nfunction defineWarningProperty(object, key) {\n  Object.defineProperty(object, key, {\n\n    configurable: false,\n    enumerable: true,\n\n    get: function() {\n      if (!this._store) {\n        return null;\n      }\n      return this._store[key];\n    },\n\n    set: function(value) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        false,\n        'Don\\'t set the %s property of the React element. Instead, ' +\n        'specify the correct value when initially creating the element.',\n        key\n      ) : null);\n      this._store[key] = value;\n    }\n\n  });\n}\n\n/**\n * This is updated to true if the membrane is successfully created.\n */\nvar useMutationMembrane = false;\n\n/**\n * Warn for mutations.\n *\n * @internal\n * @param {object} element\n */\nfunction defineMutationMembrane(prototype) {\n  try {\n    var pseudoFrozenProperties = {\n      props: true\n    };\n    for (var key in pseudoFrozenProperties) {\n      defineWarningProperty(prototype, key);\n    }\n    useMutationMembrane = true;\n  } catch (x) {\n    // IE will fail on defineProperty\n  }\n}\n\n/**\n * Base constructor for all React elements. This is only used to make this\n * work with a dynamic instanceof check. Nothing should live on this prototype.\n *\n * @param {*} type\n * @param {string|object} ref\n * @param {*} key\n * @param {*} props\n * @internal\n */\nvar ReactElement = function(type, key, ref, owner, context, props) {\n  // Built-in properties that belong on the element\n  this.type = type;\n  this.key = key;\n  this.ref = ref;\n\n  // Record the component responsible for creating this element.\n  this._owner = owner;\n\n  // TODO: Deprecate withContext, and then the context becomes accessible\n  // through the owner.\n  this._context = context;\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    // The validation flag and props are currently mutative. We put them on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    this._store = {props: props, originalProps: assign({}, props)};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    try {\n      Object.defineProperty(this._store, 'validated', {\n        configurable: false,\n        enumerable: false,\n        writable: true\n      });\n    } catch (x) {\n    }\n    this._store.validated = false;\n\n    // We're not allowed to set props directly on the object so we early\n    // return and rely on the prototype membrane to forward to the backing\n    // store.\n    if (useMutationMembrane) {\n      Object.freeze(this);\n      return;\n    }\n  }\n\n  this.props = props;\n};\n\n// We intentionally don't expose the function on the constructor property.\n// ReactElement should be indistinguishable from a plain object.\nReactElement.prototype = {\n  _isReactElement: true\n};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  defineMutationMembrane(ReactElement.prototype);\n}\n\nReactElement.createElement = function(type, config, children) {\n  var propName;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n\n  if (config != null) {\n    ref = config.ref === undefined ? null : config.ref;\n    key = config.key === undefined ? null : '' + config.key;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) &&\n          !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (typeof props[propName] === 'undefined') {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  return new ReactElement(\n    type,\n    key,\n    ref,\n    ReactCurrentOwner.current,\n    ReactContext.current,\n    props\n  );\n};\n\nReactElement.createFactory = function(type) {\n  var factory = ReactElement.createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. <Foo />.type === Foo.type.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook TODO: Warn if this is accessed\n  factory.type = type;\n  return factory;\n};\n\nReactElement.cloneAndReplaceProps = function(oldElement, newProps) {\n  var newElement = new ReactElement(\n    oldElement.type,\n    oldElement.key,\n    oldElement.ref,\n    oldElement._owner,\n    oldElement._context,\n    newProps\n  );\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    // If the key on the original is valid, then the clone is valid\n    newElement._store.validated = oldElement._store.validated;\n  }\n  return newElement;\n};\n\nReactElement.cloneElement = function(element, config, children) {\n  var propName;\n\n  // Original props are copied\n  var props = assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (config.ref !== undefined) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (config.key !== undefined) {\n      key = '' + config.key;\n    }\n    // Remaining properties override existing props\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) &&\n          !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return new ReactElement(\n    element.type,\n    key,\n    ref,\n    owner,\n    element._context,\n    props\n  );\n};\n\n/**\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nReactElement.isValidElement = function(object) {\n  // ReactTestUtils is often used outside of beforeEach where as React is\n  // within it. This leads to two different instances of React on the same\n  // page. To identify a element from a different React instance we use\n  // a flag instead of an instanceof check.\n  var isElement = !!(object && object._isReactElement);\n  // if (isElement && !(object instanceof ReactElement)) {\n  // This is an indicator that you're using multiple versions of React at the\n  // same time. This will screw with ownership and stuff. Fix it, please.\n  // TODO: We could possibly warn here.\n  // }\n  return isElement;\n};\n\nmodule.exports = ReactElement;\n\n}).call(this,require('_process'))\n},{\"./Object.assign\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Object.assign.js\",\"./ReactContext\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactContext.js\",\"./ReactCurrentOwner\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactCurrentOwner.js\",\"./warning\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/warning.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElementValidator.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElementValidator\n */\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactFragment = require(\"./ReactFragment\");\nvar ReactPropTypeLocations = require(\"./ReactPropTypeLocations\");\nvar ReactPropTypeLocationNames = require(\"./ReactPropTypeLocationNames\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactNativeComponent = require(\"./ReactNativeComponent\");\n\nvar getIteratorFn = require(\"./getIteratorFn\");\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = ReactCurrentOwner.current.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nvar ownerHasKeyUseWarning = {};\n\nvar loggedTypeFailures = {};\n\nvar NUMERIC_PROPERTY_REGEX = /^\\d+$/;\n\n/**\n * Gets the instance's name for use in warnings.\n *\n * @internal\n * @return {?string} Display name or undefined\n */\nfunction getName(instance) {\n  var publicInstance = instance && instance.getPublicInstance();\n  if (!publicInstance) {\n    return undefined;\n  }\n  var constructor = publicInstance.constructor;\n  if (!constructor) {\n    return undefined;\n  }\n  return constructor.displayName || constructor.name || undefined;\n}\n\n/**\n * Gets the current owner's displayName for use in warnings.\n *\n * @internal\n * @return {?string} Display name or undefined\n */\nfunction getCurrentOwnerDisplayName() {\n  var current = ReactCurrentOwner.current;\n  return (\n    current && getName(current) || undefined\n  );\n}\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (element._store.validated || element.key != null) {\n    return;\n  }\n  element._store.validated = true;\n\n  warnAndMonitorForKeyUse(\n    'Each child in an array or iterator should have a unique \"key\" prop.',\n    element,\n    parentType\n  );\n}\n\n/**\n * Warn if the key is being defined as an object property but has an incorrect\n * value.\n *\n * @internal\n * @param {string} name Property name of the key.\n * @param {ReactElement} element Component that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validatePropertyKey(name, element, parentType) {\n  if (!NUMERIC_PROPERTY_REGEX.test(name)) {\n    return;\n  }\n  warnAndMonitorForKeyUse(\n    'Child objects should have non-numeric keys so ordering is preserved.',\n    element,\n    parentType\n  );\n}\n\n/**\n * Shared warning and monitoring code for the key warnings.\n *\n * @internal\n * @param {string} message The base warning that gets output.\n * @param {ReactElement} element Component that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction warnAndMonitorForKeyUse(message, element, parentType) {\n  var ownerName = getCurrentOwnerDisplayName();\n  var parentName = typeof parentType === 'string' ?\n    parentType : parentType.displayName || parentType.name;\n\n  var useName = ownerName || parentName;\n  var memoizer = ownerHasKeyUseWarning[message] || (\n    (ownerHasKeyUseWarning[message] = {})\n  );\n  if (memoizer.hasOwnProperty(useName)) {\n    return;\n  }\n  memoizer[useName] = true;\n\n  var parentOrOwnerAddendum =\n    ownerName ? (\" Check the render method of \" + ownerName + \".\") :\n    parentName ? (\" Check the React.render call using <\" + parentName + \">.\") :\n    '';\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  var childOwnerAddendum = '';\n  if (element &&\n      element._owner &&\n      element._owner !== ReactCurrentOwner.current) {\n    // Name of the component that originally created this child.\n    var childOwnerName = getName(element._owner);\n\n    childOwnerAddendum = (\" It was passed a child from \" + childOwnerName + \".\");\n  }\n\n  (\"production\" !== process.env.NODE_ENV ? warning(\n    false,\n    message + '%s%s See https://fb.me/react-warning-keys for more information.',\n    parentOrOwnerAddendum,\n    childOwnerAddendum\n  ) : null);\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n      if (ReactElement.isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (ReactElement.isValidElement(node)) {\n    // This element was passed in a valid location.\n    node._store.validated = true;\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n    // Entry iterators provide implicit keys.\n    if (iteratorFn) {\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (ReactElement.isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    } else if (typeof node === 'object') {\n      var fragment = ReactFragment.extractIfFragment(node);\n      for (var key in fragment) {\n        if (fragment.hasOwnProperty(key)) {\n          validatePropertyKey(key, fragment[key], parentType);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Assert that the props are valid\n *\n * @param {string} componentName Name of the component for error messages.\n * @param {object} propTypes Map of prop name to a ReactPropType\n * @param {object} props\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @private\n */\nfunction checkPropTypes(componentName, propTypes, props, location) {\n  for (var propName in propTypes) {\n    if (propTypes.hasOwnProperty(propName)) {\n      var error;\n      // Prop type validation may throw. In case they do, we don't want to\n      // fail the render phase where it didn't fail before. So we log it.\n      // After these have been cleaned up, we'll let them throw.\n      try {\n        // This is intentionally an invariant that gets caught. It's the same\n        // behavior as without this statement except with a better message.\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          typeof propTypes[propName] === 'function',\n          '%s: %s type `%s` is invalid; it must be a function, usually from ' +\n          'React.PropTypes.',\n          componentName || 'React class',\n          ReactPropTypeLocationNames[location],\n          propName\n        ) : invariant(typeof propTypes[propName] === 'function'));\n        error = propTypes[propName](props, propName, componentName, location);\n      } catch (ex) {\n        error = ex;\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var addendum = getDeclarationErrorAddendum(this);\n        (\"production\" !== process.env.NODE_ENV ? warning(false, 'Failed propType: %s%s', error.message, addendum) : null);\n      }\n    }\n  }\n}\n\nvar warnedPropsMutations = {};\n\n/**\n * Warn about mutating props when setting `propName` on `element`.\n *\n * @param {string} propName The string key within props that was set\n * @param {ReactElement} element\n */\nfunction warnForPropsMutation(propName, element) {\n  var type = element.type;\n  var elementName = typeof type === 'string' ? type : type.displayName;\n  var ownerName = element._owner ?\n    element._owner.getPublicInstance().constructor.displayName : null;\n\n  var warningKey = propName + '|' + elementName + '|' + ownerName;\n  if (warnedPropsMutations.hasOwnProperty(warningKey)) {\n    return;\n  }\n  warnedPropsMutations[warningKey] = true;\n\n  var elementInfo = '';\n  if (elementName) {\n    elementInfo = ' <' + elementName + ' />';\n  }\n  var ownerInfo = '';\n  if (ownerName) {\n    ownerInfo = ' The element was created by ' + ownerName + '.';\n  }\n\n  (\"production\" !== process.env.NODE_ENV ? warning(\n    false,\n    'Don\\'t set .props.%s of the React component%s. Instead, specify the ' +\n    'correct value when initially creating the element or use ' +\n    'React.cloneElement to make a new element with updated props.%s',\n    propName,\n    elementInfo,\n    ownerInfo\n  ) : null);\n}\n\n// Inline Object.is polyfill\nfunction is(a, b) {\n  if (a !== a) {\n    // NaN\n    return b !== b;\n  }\n  if (a === 0 && b === 0) {\n    // +-0\n    return 1 / a === 1 / b;\n  }\n  return a === b;\n}\n\n/**\n * Given an element, check if its props have been mutated since element\n * creation (or the last call to this function). In particular, check if any\n * new props have been added, which we can't directly catch by defining warning\n * properties on the props object.\n *\n * @param {ReactElement} element\n */\nfunction checkAndWarnForMutatedProps(element) {\n  if (!element._store) {\n    // Element was created using `new ReactElement` directly or with\n    // `ReactElement.createElement`; skip mutation checking\n    return;\n  }\n\n  var originalProps = element._store.originalProps;\n  var props = element.props;\n\n  for (var propName in props) {\n    if (props.hasOwnProperty(propName)) {\n      if (!originalProps.hasOwnProperty(propName) ||\n          !is(originalProps[propName], props[propName])) {\n        warnForPropsMutation(propName, element);\n\n        // Copy over the new value so that the two props objects match again\n        originalProps[propName] = props[propName];\n      }\n    }\n  }\n}\n\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\nfunction validatePropTypes(element) {\n  if (element.type == null) {\n    // This has already warned. Don't throw.\n    return;\n  }\n  // Extract the component class from the element. Converts string types\n  // to a composite class which may have propTypes.\n  // TODO: Validating a string's propTypes is not decoupled from the\n  // rendering target which is problematic.\n  var componentClass = ReactNativeComponent.getComponentClassForElement(\n    element\n  );\n  var name = componentClass.displayName || componentClass.name;\n  if (componentClass.propTypes) {\n    checkPropTypes(\n      name,\n      componentClass.propTypes,\n      element.props,\n      ReactPropTypeLocations.prop\n    );\n  }\n  if (typeof componentClass.getDefaultProps === 'function') {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      componentClass.getDefaultProps.isReactClassApproved,\n      'getDefaultProps is only used on classic React.createClass ' +\n      'definitions. Use a static property named `defaultProps` instead.'\n    ) : null);\n  }\n}\n\nvar ReactElementValidator = {\n\n  checkAndWarnForMutatedProps: checkAndWarnForMutatedProps,\n\n  createElement: function(type, props, children) {\n    // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      type != null,\n      'React.createElement: type should not be null or undefined. It should ' +\n        'be a string (for DOM elements) or a ReactClass (for composite ' +\n        'components).'\n    ) : null);\n\n    var element = ReactElement.createElement.apply(this, arguments);\n\n    // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n    if (element == null) {\n      return element;\n    }\n\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n\n    validatePropTypes(element);\n\n    return element;\n  },\n\n  createFactory: function(type) {\n    var validatedFactory = ReactElementValidator.createElement.bind(\n      null,\n      type\n    );\n    // Legacy hook TODO: Warn if this is accessed\n    validatedFactory.type = type;\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      try {\n        Object.defineProperty(\n          validatedFactory,\n          'type',\n          {\n            enumerable: false,\n            get: function() {\n              (\"production\" !== process.env.NODE_ENV ? warning(\n                false,\n                'Factory.type is deprecated. Access the class directly ' +\n                'before passing it to createFactory.'\n              ) : null);\n              Object.defineProperty(this, 'type', {\n                value: type\n              });\n              return type;\n            }\n          }\n        );\n      } catch (x) {\n        // IE will fail on defineProperty (es5-shim/sham too)\n      }\n    }\n\n\n    return validatedFactory;\n  },\n\n  cloneElement: function(element, props, children) {\n    var newElement = ReactElement.cloneElement.apply(this, arguments);\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], newElement.type);\n    }\n    validatePropTypes(newElement);\n    return newElement;\n  }\n\n};\n\nmodule.exports = ReactElementValidator;\n\n}).call(this,require('_process'))\n},{\"./ReactCurrentOwner\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactCurrentOwner.js\",\"./ReactElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElement.js\",\"./ReactFragment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactFragment.js\",\"./ReactNativeComponent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactNativeComponent.js\",\"./ReactPropTypeLocationNames\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactPropTypeLocationNames.js\",\"./ReactPropTypeLocations\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactPropTypeLocations.js\",\"./getIteratorFn\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getIteratorFn.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"./warning\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/warning.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactEmptyComponent.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEmptyComponent\n */\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\n\nvar invariant = require(\"./invariant\");\n\nvar component;\n// This registry keeps track of the React IDs of the components that rendered to\n// `null` (in reality a placeholder such as `noscript`)\nvar nullComponentIDsRegistry = {};\n\nvar ReactEmptyComponentInjection = {\n  injectEmptyComponent: function(emptyComponent) {\n    component = ReactElement.createFactory(emptyComponent);\n  }\n};\n\nvar ReactEmptyComponentType = function() {};\nReactEmptyComponentType.prototype.componentDidMount = function() {\n  var internalInstance = ReactInstanceMap.get(this);\n  // TODO: Make sure we run these methods in the correct order, we shouldn't\n  // need this check. We're going to assume if we're here it means we ran\n  // componentWillUnmount already so there is no internal instance (it gets\n  // removed as part of the unmounting process).\n  if (!internalInstance) {\n    return;\n  }\n  registerNullComponentID(internalInstance._rootNodeID);\n};\nReactEmptyComponentType.prototype.componentWillUnmount = function() {\n  var internalInstance = ReactInstanceMap.get(this);\n  // TODO: Get rid of this check. See TODO in componentDidMount.\n  if (!internalInstance) {\n    return;\n  }\n  deregisterNullComponentID(internalInstance._rootNodeID);\n};\nReactEmptyComponentType.prototype.render = function() {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    component,\n    'Trying to return null from a render, but no null placeholder component ' +\n    'was injected.'\n  ) : invariant(component));\n  return component();\n};\n\nvar emptyElement = ReactElement.createElement(ReactEmptyComponentType);\n\n/**\n * Mark the component as having rendered to null.\n * @param {string} id Component's `_rootNodeID`.\n */\nfunction registerNullComponentID(id) {\n  nullComponentIDsRegistry[id] = true;\n}\n\n/**\n * Unmark the component as having rendered to null: it renders to something now.\n * @param {string} id Component's `_rootNodeID`.\n */\nfunction deregisterNullComponentID(id) {\n  delete nullComponentIDsRegistry[id];\n}\n\n/**\n * @param {string} id Component's `_rootNodeID`.\n * @return {boolean} True if the component is rendered to null.\n */\nfunction isNullComponentID(id) {\n  return !!nullComponentIDsRegistry[id];\n}\n\nvar ReactEmptyComponent = {\n  emptyElement: emptyElement,\n  injection: ReactEmptyComponentInjection,\n  isNullComponentID: isNullComponentID\n};\n\nmodule.exports = ReactEmptyComponent;\n\n}).call(this,require('_process'))\n},{\"./ReactElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElement.js\",\"./ReactInstanceMap\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactInstanceMap.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactErrorUtils.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactErrorUtils\n * @typechecks\n */\n\n\"use strict\";\n\nvar ReactErrorUtils = {\n  /**\n   * Creates a guarded version of a function. This is supposed to make debugging\n   * of event handlers easier. To aid debugging with the browser's debugger,\n   * this currently simply returns the original function.\n   *\n   * @param {function} func Function to be executed\n   * @param {string} name The name of the guard\n   * @return {function}\n   */\n  guard: function(func, name) {\n    return func;\n  }\n};\n\nmodule.exports = ReactErrorUtils;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactEventEmitterMixin.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEventEmitterMixin\n */\n\n'use strict';\n\nvar EventPluginHub = require(\"./EventPluginHub\");\n\nfunction runEventQueueInBatch(events) {\n  EventPluginHub.enqueueEvents(events);\n  EventPluginHub.processEventQueue();\n}\n\nvar ReactEventEmitterMixin = {\n\n  /**\n   * Streams a fired top-level event to `EventPluginHub` where plugins have the\n   * opportunity to create `ReactEvent`s to be dispatched.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {object} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native environment event.\n   */\n  handleTopLevel: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    var events = EventPluginHub.extractEvents(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent\n    );\n\n    runEventQueueInBatch(events);\n  }\n};\n\nmodule.exports = ReactEventEmitterMixin;\n\n},{\"./EventPluginHub\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventPluginHub.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactEventListener.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEventListener\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventListener = require(\"./EventListener\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\nvar PooledClass = require(\"./PooledClass\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar assign = require(\"./Object.assign\");\nvar getEventTarget = require(\"./getEventTarget\");\nvar getUnboundedScrollPosition = require(\"./getUnboundedScrollPosition\");\n\n/**\n * Finds the parent React component of `node`.\n *\n * @param {*} node\n * @return {?DOMEventTarget} Parent container, or `null` if the specified node\n *                           is not nested.\n */\nfunction findParent(node) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  var nodeID = ReactMount.getID(node);\n  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);\n  var container = ReactMount.findReactContainerForID(rootID);\n  var parent = ReactMount.getFirstReactDOM(container);\n  return parent;\n}\n\n// Used to store ancestor hierarchy in top level callback\nfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n  this.topLevelType = topLevelType;\n  this.nativeEvent = nativeEvent;\n  this.ancestors = [];\n}\nassign(TopLevelCallbackBookKeeping.prototype, {\n  destructor: function() {\n    this.topLevelType = null;\n    this.nativeEvent = null;\n    this.ancestors.length = 0;\n  }\n});\nPooledClass.addPoolingTo(\n  TopLevelCallbackBookKeeping,\n  PooledClass.twoArgumentPooler\n);\n\nfunction handleTopLevelImpl(bookKeeping) {\n  var topLevelTarget = ReactMount.getFirstReactDOM(\n    getEventTarget(bookKeeping.nativeEvent)\n  ) || window;\n\n  // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n  var ancestor = topLevelTarget;\n  while (ancestor) {\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = findParent(ancestor);\n  }\n\n  for (var i = 0, l = bookKeeping.ancestors.length; i < l; i++) {\n    topLevelTarget = bookKeeping.ancestors[i];\n    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';\n    ReactEventListener._handleTopLevel(\n      bookKeeping.topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      bookKeeping.nativeEvent\n    );\n  }\n}\n\nfunction scrollValueMonitor(cb) {\n  var scrollPosition = getUnboundedScrollPosition(window);\n  cb(scrollPosition);\n}\n\nvar ReactEventListener = {\n  _enabled: true,\n  _handleTopLevel: null,\n\n  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n\n  setHandleTopLevel: function(handleTopLevel) {\n    ReactEventListener._handleTopLevel = handleTopLevel;\n  },\n\n  setEnabled: function(enabled) {\n    ReactEventListener._enabled = !!enabled;\n  },\n\n  isEnabled: function() {\n    return ReactEventListener._enabled;\n  },\n\n\n  /**\n   * Traps top-level events by using event bubbling.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.listen(\n      element,\n      handlerBaseName,\n      ReactEventListener.dispatchEvent.bind(null, topLevelType)\n    );\n  },\n\n  /**\n   * Traps a top-level event by using event capturing.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.capture(\n      element,\n      handlerBaseName,\n      ReactEventListener.dispatchEvent.bind(null, topLevelType)\n    );\n  },\n\n  monitorScrollValue: function(refresh) {\n    var callback = scrollValueMonitor.bind(null, refresh);\n    EventListener.listen(window, 'scroll', callback);\n  },\n\n  dispatchEvent: function(topLevelType, nativeEvent) {\n    if (!ReactEventListener._enabled) {\n      return;\n    }\n\n    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(\n      topLevelType,\n      nativeEvent\n    );\n    try {\n      // Event queue being processed in the same cycle allows\n      // `preventDefault`.\n      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n    } finally {\n      TopLevelCallbackBookKeeping.release(bookKeeping);\n    }\n  }\n};\n\nmodule.exports = ReactEventListener;\n\n},{\"./EventListener\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventListener.js\",\"./ExecutionEnvironment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ExecutionEnvironment.js\",\"./Object.assign\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Object.assign.js\",\"./PooledClass\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/PooledClass.js\",\"./ReactInstanceHandles\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactInstanceHandles.js\",\"./ReactMount\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactMount.js\",\"./ReactUpdates\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactUpdates.js\",\"./getEventTarget\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getEventTarget.js\",\"./getUnboundedScrollPosition\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getUnboundedScrollPosition.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactFragment.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n* @providesModule ReactFragment\n*/\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\n\nvar warning = require(\"./warning\");\n\n/**\n * We used to allow keyed objects to serve as a collection of ReactElements,\n * or nested sets. This allowed us a way to explicitly key a set a fragment of\n * components. This is now being replaced with an opaque data structure.\n * The upgrade path is to call React.addons.createFragment({ key: value }) to\n * create a keyed fragment. The resulting data structure is opaque, for now.\n */\n\nif (\"production\" !== process.env.NODE_ENV) {\n  var fragmentKey = '_reactFragment';\n  var didWarnKey = '_reactDidWarn';\n  var canWarnForReactFragment = false;\n\n  try {\n    // Feature test. Don't even try to issue this warning if we can't use\n    // enumerable: false.\n\n    var dummy = function() {\n      return 1;\n    };\n\n    Object.defineProperty(\n      {},\n      fragmentKey,\n      {enumerable: false, value: true}\n    );\n\n    Object.defineProperty(\n      {},\n      'key',\n      {enumerable: true, get: dummy}\n    );\n\n    canWarnForReactFragment = true;\n  } catch (x) { }\n\n  var proxyPropertyAccessWithWarning = function(obj, key) {\n    Object.defineProperty(obj, key, {\n      enumerable: true,\n      get: function() {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          this[didWarnKey],\n          'A ReactFragment is an opaque type. Accessing any of its ' +\n          'properties is deprecated. Pass it to one of the React.Children ' +\n          'helpers.'\n        ) : null);\n        this[didWarnKey] = true;\n        return this[fragmentKey][key];\n      },\n      set: function(value) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          this[didWarnKey],\n          'A ReactFragment is an immutable opaque type. Mutating its ' +\n          'properties is deprecated.'\n        ) : null);\n        this[didWarnKey] = true;\n        this[fragmentKey][key] = value;\n      }\n    });\n  };\n\n  var issuedWarnings = {};\n\n  var didWarnForFragment = function(fragment) {\n    // We use the keys and the type of the value as a heuristic to dedupe the\n    // warning to avoid spamming too much.\n    var fragmentCacheKey = '';\n    for (var key in fragment) {\n      fragmentCacheKey += key + ':' + (typeof fragment[key]) + ',';\n    }\n    var alreadyWarnedOnce = !!issuedWarnings[fragmentCacheKey];\n    issuedWarnings[fragmentCacheKey] = true;\n    return alreadyWarnedOnce;\n  };\n}\n\nvar ReactFragment = {\n  // Wrap a keyed object in an opaque proxy that warns you if you access any\n  // of its properties.\n  create: function(object) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      if (typeof object !== 'object' || !object || Array.isArray(object)) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          false,\n          'React.addons.createFragment only accepts a single object.',\n          object\n        ) : null);\n        return object;\n      }\n      if (ReactElement.isValidElement(object)) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          false,\n          'React.addons.createFragment does not accept a ReactElement ' +\n          'without a wrapper object.'\n        ) : null);\n        return object;\n      }\n      if (canWarnForReactFragment) {\n        var proxy = {};\n        Object.defineProperty(proxy, fragmentKey, {\n          enumerable: false,\n          value: object\n        });\n        Object.defineProperty(proxy, didWarnKey, {\n          writable: true,\n          enumerable: false,\n          value: false\n        });\n        for (var key in object) {\n          proxyPropertyAccessWithWarning(proxy, key);\n        }\n        Object.preventExtensions(proxy);\n        return proxy;\n      }\n    }\n    return object;\n  },\n  // Extract the original keyed object from the fragment opaque type. Warn if\n  // a plain object is passed here.\n  extract: function(fragment) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      if (canWarnForReactFragment) {\n        if (!fragment[fragmentKey]) {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            didWarnForFragment(fragment),\n            'Any use of a keyed object should be wrapped in ' +\n            'React.addons.createFragment(object) before being passed as a ' +\n            'child.'\n          ) : null);\n          return fragment;\n        }\n        return fragment[fragmentKey];\n      }\n    }\n    return fragment;\n  },\n  // Check if this is a fragment and if so, extract the keyed object. If it\n  // is a fragment-like object, warn that it should be wrapped. Ignore if we\n  // can't determine what kind of object this is.\n  extractIfFragment: function(fragment) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      if (canWarnForReactFragment) {\n        // If it is the opaque type, return the keyed object.\n        if (fragment[fragmentKey]) {\n          return fragment[fragmentKey];\n        }\n        // Otherwise, check each property if it has an element, if it does\n        // it is probably meant as a fragment, so we can warn early. Defer,\n        // the warning to extract.\n        for (var key in fragment) {\n          if (fragment.hasOwnProperty(key) &&\n              ReactElement.isValidElement(fragment[key])) {\n            // This looks like a fragment object, we should provide an\n            // early warning.\n            return ReactFragment.extract(fragment);\n          }\n        }\n      }\n    }\n    return fragment;\n  }\n};\n\nmodule.exports = ReactFragment;\n\n}).call(this,require('_process'))\n},{\"./ReactElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElement.js\",\"./warning\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/warning.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactInjection.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInjection\n */\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\nvar EventPluginHub = require(\"./EventPluginHub\");\nvar ReactComponentEnvironment = require(\"./ReactComponentEnvironment\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactEmptyComponent = require(\"./ReactEmptyComponent\");\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\nvar ReactNativeComponent = require(\"./ReactNativeComponent\");\nvar ReactDOMComponent = require(\"./ReactDOMComponent\");\nvar ReactPerf = require(\"./ReactPerf\");\nvar ReactRootIndex = require(\"./ReactRootIndex\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar ReactInjection = {\n  Component: ReactComponentEnvironment.injection,\n  Class: ReactClass.injection,\n  DOMComponent: ReactDOMComponent.injection,\n  DOMProperty: DOMProperty.injection,\n  EmptyComponent: ReactEmptyComponent.injection,\n  EventPluginHub: EventPluginHub.injection,\n  EventEmitter: ReactBrowserEventEmitter.injection,\n  NativeComponent: ReactNativeComponent.injection,\n  Perf: ReactPerf.injection,\n  RootIndex: ReactRootIndex.injection,\n  Updates: ReactUpdates.injection\n};\n\nmodule.exports = ReactInjection;\n\n},{\"./DOMProperty\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/DOMProperty.js\",\"./EventPluginHub\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventPluginHub.js\",\"./ReactBrowserEventEmitter\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactBrowserEventEmitter.js\",\"./ReactClass\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactClass.js\",\"./ReactComponentEnvironment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactComponentEnvironment.js\",\"./ReactDOMComponent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMComponent.js\",\"./ReactEmptyComponent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactEmptyComponent.js\",\"./ReactNativeComponent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactNativeComponent.js\",\"./ReactPerf\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactPerf.js\",\"./ReactRootIndex\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactRootIndex.js\",\"./ReactUpdates\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactUpdates.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactInputSelection.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInputSelection\n */\n\n'use strict';\n\nvar ReactDOMSelection = require(\"./ReactDOMSelection\");\n\nvar containsNode = require(\"./containsNode\");\nvar focusNode = require(\"./focusNode\");\nvar getActiveElement = require(\"./getActiveElement\");\n\nfunction isInDocument(node) {\n  return containsNode(document.documentElement, node);\n}\n\n/**\n * @ReactInputSelection: React input selection module. Based on Selection.js,\n * but modified to be suitable for react and has a couple of bug fixes (doesn't\n * assume buttons have range selections allowed).\n * Input selection module for React.\n */\nvar ReactInputSelection = {\n\n  hasSelectionCapabilities: function(elem) {\n    return elem && (\n      ((elem.nodeName === 'INPUT' && elem.type === 'text') ||\n      elem.nodeName === 'TEXTAREA' || elem.contentEditable === 'true')\n    );\n  },\n\n  getSelectionInformation: function() {\n    var focusedElem = getActiveElement();\n    return {\n      focusedElem: focusedElem,\n      selectionRange:\n          ReactInputSelection.hasSelectionCapabilities(focusedElem) ?\n          ReactInputSelection.getSelection(focusedElem) :\n          null\n    };\n  },\n\n  /**\n   * @restoreSelection: If any selection information was potentially lost,\n   * restore it. This is useful when performing operations that could remove dom\n   * nodes and place them back in, resulting in focus being lost.\n   */\n  restoreSelection: function(priorSelectionInformation) {\n    var curFocusedElem = getActiveElement();\n    var priorFocusedElem = priorSelectionInformation.focusedElem;\n    var priorSelectionRange = priorSelectionInformation.selectionRange;\n    if (curFocusedElem !== priorFocusedElem &&\n        isInDocument(priorFocusedElem)) {\n      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {\n        ReactInputSelection.setSelection(\n          priorFocusedElem,\n          priorSelectionRange\n        );\n      }\n      focusNode(priorFocusedElem);\n    }\n  },\n\n  /**\n   * @getSelection: Gets the selection bounds of a focused textarea, input or\n   * contentEditable node.\n   * -@input: Look up selection bounds of this input\n   * -@return {start: selectionStart, end: selectionEnd}\n   */\n  getSelection: function(input) {\n    var selection;\n\n    if ('selectionStart' in input) {\n      // Modern browser with input or textarea.\n      selection = {\n        start: input.selectionStart,\n        end: input.selectionEnd\n      };\n    } else if (document.selection && input.nodeName === 'INPUT') {\n      // IE8 input.\n      var range = document.selection.createRange();\n      // There can only be one selection per document in IE, so it must\n      // be in our element.\n      if (range.parentElement() === input) {\n        selection = {\n          start: -range.moveStart('character', -input.value.length),\n          end: -range.moveEnd('character', -input.value.length)\n        };\n      }\n    } else {\n      // Content editable or old IE textarea.\n      selection = ReactDOMSelection.getOffsets(input);\n    }\n\n    return selection || {start: 0, end: 0};\n  },\n\n  /**\n   * @setSelection: Sets the selection bounds of a textarea or input and focuses\n   * the input.\n   * -@input     Set selection bounds of this input or textarea\n   * -@offsets   Object of same form that is returned from get*\n   */\n  setSelection: function(input, offsets) {\n    var start = offsets.start;\n    var end = offsets.end;\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n\n    if ('selectionStart' in input) {\n      input.selectionStart = start;\n      input.selectionEnd = Math.min(end, input.value.length);\n    } else if (document.selection && input.nodeName === 'INPUT') {\n      var range = input.createTextRange();\n      range.collapse(true);\n      range.moveStart('character', start);\n      range.moveEnd('character', end - start);\n      range.select();\n    } else {\n      ReactDOMSelection.setOffsets(input, offsets);\n    }\n  }\n};\n\nmodule.exports = ReactInputSelection;\n\n},{\"./ReactDOMSelection\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactDOMSelection.js\",\"./containsNode\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/containsNode.js\",\"./focusNode\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/focusNode.js\",\"./getActiveElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getActiveElement.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactInstanceHandles.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInstanceHandles\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactRootIndex = require(\"./ReactRootIndex\");\n\nvar invariant = require(\"./invariant\");\n\nvar SEPARATOR = '.';\nvar SEPARATOR_LENGTH = SEPARATOR.length;\n\n/**\n * Maximum depth of traversals before we consider the possibility of a bad ID.\n */\nvar MAX_TREE_DEPTH = 100;\n\n/**\n * Creates a DOM ID prefix to use when mounting React components.\n *\n * @param {number} index A unique integer\n * @return {string} React root ID.\n * @internal\n */\nfunction getReactRootIDString(index) {\n  return SEPARATOR + index.toString(36);\n}\n\n/**\n * Checks if a character in the supplied ID is a separator or the end.\n *\n * @param {string} id A React DOM ID.\n * @param {number} index Index of the character to check.\n * @return {boolean} True if the character is a separator or end of the ID.\n * @private\n */\nfunction isBoundary(id, index) {\n  return id.charAt(index) === SEPARATOR || index === id.length;\n}\n\n/**\n * Checks if the supplied string is a valid React DOM ID.\n *\n * @param {string} id A React DOM ID, maybe.\n * @return {boolean} True if the string is a valid React DOM ID.\n * @private\n */\nfunction isValidID(id) {\n  return id === '' || (\n    id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR\n  );\n}\n\n/**\n * Checks if the first ID is an ancestor of or equal to the second ID.\n *\n * @param {string} ancestorID\n * @param {string} descendantID\n * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.\n * @internal\n */\nfunction isAncestorIDOf(ancestorID, descendantID) {\n  return (\n    descendantID.indexOf(ancestorID) === 0 &&\n    isBoundary(descendantID, ancestorID.length)\n  );\n}\n\n/**\n * Gets the parent ID of the supplied React DOM ID, `id`.\n *\n * @param {string} id ID of a component.\n * @return {string} ID of the parent, or an empty string.\n * @private\n */\nfunction getParentID(id) {\n  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';\n}\n\n/**\n * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the\n * supplied `destinationID`. If they are equal, the ID is returned.\n *\n * @param {string} ancestorID ID of an ancestor node of `destinationID`.\n * @param {string} destinationID ID of the destination node.\n * @return {string} Next ID on the path from `ancestorID` to `destinationID`.\n * @private\n */\nfunction getNextDescendantID(ancestorID, destinationID) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    isValidID(ancestorID) && isValidID(destinationID),\n    'getNextDescendantID(%s, %s): Received an invalid React DOM ID.',\n    ancestorID,\n    destinationID\n  ) : invariant(isValidID(ancestorID) && isValidID(destinationID)));\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    isAncestorIDOf(ancestorID, destinationID),\n    'getNextDescendantID(...): React has made an invalid assumption about ' +\n    'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.',\n    ancestorID,\n    destinationID\n  ) : invariant(isAncestorIDOf(ancestorID, destinationID)));\n  if (ancestorID === destinationID) {\n    return ancestorID;\n  }\n  // Skip over the ancestor and the immediate separator. Traverse until we hit\n  // another separator or we reach the end of `destinationID`.\n  var start = ancestorID.length + SEPARATOR_LENGTH;\n  var i;\n  for (i = start; i < destinationID.length; i++) {\n    if (isBoundary(destinationID, i)) {\n      break;\n    }\n  }\n  return destinationID.substr(0, i);\n}\n\n/**\n * Gets the nearest common ancestor ID of two IDs.\n *\n * Using this ID scheme, the nearest common ancestor ID is the longest common\n * prefix of the two IDs that immediately preceded a \"marker\" in both strings.\n *\n * @param {string} oneID\n * @param {string} twoID\n * @return {string} Nearest common ancestor ID, or the empty string if none.\n * @private\n */\nfunction getFirstCommonAncestorID(oneID, twoID) {\n  var minLength = Math.min(oneID.length, twoID.length);\n  if (minLength === 0) {\n    return '';\n  }\n  var lastCommonMarkerIndex = 0;\n  // Use `<=` to traverse until the \"EOL\" of the shorter string.\n  for (var i = 0; i <= minLength; i++) {\n    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {\n      lastCommonMarkerIndex = i;\n    } else if (oneID.charAt(i) !== twoID.charAt(i)) {\n      break;\n    }\n  }\n  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    isValidID(longestCommonID),\n    'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s',\n    oneID,\n    twoID,\n    longestCommonID\n  ) : invariant(isValidID(longestCommonID)));\n  return longestCommonID;\n}\n\n/**\n * Traverses the parent path between two IDs (either up or down). The IDs must\n * not be the same, and there must exist a parent path between them. If the\n * callback returns `false`, traversal is stopped.\n *\n * @param {?string} start ID at which to start traversal.\n * @param {?string} stop ID at which to end traversal.\n * @param {function} cb Callback to invoke each ID with.\n * @param {?boolean} skipFirst Whether or not to skip the first node.\n * @param {?boolean} skipLast Whether or not to skip the last node.\n * @private\n */\nfunction traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {\n  start = start || '';\n  stop = stop || '';\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    start !== stop,\n    'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.',\n    start\n  ) : invariant(start !== stop));\n  var traverseUp = isAncestorIDOf(stop, start);\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    traverseUp || isAncestorIDOf(start, stop),\n    'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' +\n    'not have a parent path.',\n    start,\n    stop\n  ) : invariant(traverseUp || isAncestorIDOf(start, stop)));\n  // Traverse from `start` to `stop` one depth at a time.\n  var depth = 0;\n  var traverse = traverseUp ? getParentID : getNextDescendantID;\n  for (var id = start; /* until break */; id = traverse(id, stop)) {\n    var ret;\n    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {\n      ret = cb(id, traverseUp, arg);\n    }\n    if (ret === false || id === stop) {\n      // Only break //after// visiting `stop`.\n      break;\n    }\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      depth++ < MAX_TREE_DEPTH,\n      'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' +\n      'traversing the React DOM ID tree. This may be due to malformed IDs: %s',\n      start, stop\n    ) : invariant(depth++ < MAX_TREE_DEPTH));\n  }\n}\n\n/**\n * Manages the IDs assigned to DOM representations of React components. This\n * uses a specific scheme in order to traverse the DOM efficiently (e.g. in\n * order to simulate events).\n *\n * @internal\n */\nvar ReactInstanceHandles = {\n\n  /**\n   * Constructs a React root ID\n   * @return {string} A React root ID.\n   */\n  createReactRootID: function() {\n    return getReactRootIDString(ReactRootIndex.createReactRootIndex());\n  },\n\n  /**\n   * Constructs a React ID by joining a root ID with a name.\n   *\n   * @param {string} rootID Root ID of a parent component.\n   * @param {string} name A component's name (as flattened children).\n   * @return {string} A React ID.\n   * @internal\n   */\n  createReactID: function(rootID, name) {\n    return rootID + name;\n  },\n\n  /**\n   * Gets the DOM ID of the React component that is the root of the tree that\n   * contains the React component with the supplied DOM ID.\n   *\n   * @param {string} id DOM ID of a React component.\n   * @return {?string} DOM ID of the React component that is the root.\n   * @internal\n   */\n  getReactRootIDFromNodeID: function(id) {\n    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {\n      var index = id.indexOf(SEPARATOR, 1);\n      return index > -1 ? id.substr(0, index) : id;\n    }\n    return null;\n  },\n\n  /**\n   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\n   * should would receive a `mouseEnter` or `mouseLeave` event.\n   *\n   * NOTE: Does not invoke the callback on the nearest common ancestor because\n   * nothing \"entered\" or \"left\" that element.\n   *\n   * @param {string} leaveID ID being left.\n   * @param {string} enterID ID being entered.\n   * @param {function} cb Callback to invoke on each entered/left ID.\n   * @param {*} upArg Argument to invoke the callback with on left IDs.\n   * @param {*} downArg Argument to invoke the callback with on entered IDs.\n   * @internal\n   */\n  traverseEnterLeave: function(leaveID, enterID, cb, upArg, downArg) {\n    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);\n    if (ancestorID !== leaveID) {\n      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);\n    }\n    if (ancestorID !== enterID) {\n      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);\n    }\n  },\n\n  /**\n   * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n   *\n   * NOTE: This traversal happens on IDs without touching the DOM.\n   *\n   * @param {string} targetID ID of the target node.\n   * @param {function} cb Callback to invoke.\n   * @param {*} arg Argument to invoke the callback with.\n   * @internal\n   */\n  traverseTwoPhase: function(targetID, cb, arg) {\n    if (targetID) {\n      traverseParentPath('', targetID, cb, arg, true, false);\n      traverseParentPath(targetID, '', cb, arg, false, true);\n    }\n  },\n\n  /**\n   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For\n   * example, passing `.0.$row-0.1` would result in `cb` getting called\n   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.\n   *\n   * NOTE: This traversal happens on IDs without touching the DOM.\n   *\n   * @param {string} targetID ID of the target node.\n   * @param {function} cb Callback to invoke.\n   * @param {*} arg Argument to invoke the callback with.\n   * @internal\n   */\n  traverseAncestors: function(targetID, cb, arg) {\n    traverseParentPath('', targetID, cb, arg, true, false);\n  },\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _getFirstCommonAncestorID: getFirstCommonAncestorID,\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _getNextDescendantID: getNextDescendantID,\n\n  isAncestorIDOf: isAncestorIDOf,\n\n  SEPARATOR: SEPARATOR\n\n};\n\nmodule.exports = ReactInstanceHandles;\n\n}).call(this,require('_process'))\n},{\"./ReactRootIndex\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactRootIndex.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactInstanceMap.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInstanceMap\n */\n\n'use strict';\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n */\n\n// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\nvar ReactInstanceMap = {\n\n  /**\n   * This API should be called `delete` but we'd have to make sure to always\n   * transform these to strings for IE support. When this transform is fully\n   * supported we can rename it.\n   */\n  remove: function(key) {\n    key._reactInternalInstance = undefined;\n  },\n\n  get: function(key) {\n    return key._reactInternalInstance;\n  },\n\n  has: function(key) {\n    return key._reactInternalInstance !== undefined;\n  },\n\n  set: function(key, value) {\n    key._reactInternalInstance = value;\n  }\n\n};\n\nmodule.exports = ReactInstanceMap;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactLifeCycle.js\":[function(require,module,exports){\n/**\n * Copyright 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactLifeCycle\n */\n\n'use strict';\n\n/**\n * This module manages the bookkeeping when a component is in the process\n * of being mounted or being unmounted. This is used as a way to enforce\n * invariants (or warnings) when it is not recommended to call\n * setState/forceUpdate.\n *\n * currentlyMountingInstance: During the construction phase, it is not possible\n * to trigger an update since the instance is not fully mounted yet. However, we\n * currently allow this as a convenience for mutating the initial state.\n *\n * currentlyUnmountingInstance: During the unmounting phase, the instance is\n * still mounted and can therefore schedule an update. However, this is not\n * recommended and probably an error since it's about to be unmounted.\n * Therefore we still want to trigger in an error for that case.\n */\n\nvar ReactLifeCycle = {\n  currentlyMountingInstance: null,\n  currentlyUnmountingInstance: null\n};\n\nmodule.exports = ReactLifeCycle;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactMarkupChecksum.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMarkupChecksum\n */\n\n'use strict';\n\nvar adler32 = require(\"./adler32\");\n\nvar ReactMarkupChecksum = {\n  CHECKSUM_ATTR_NAME: 'data-react-checksum',\n\n  /**\n   * @param {string} markup Markup string\n   * @return {string} Markup string with checksum attribute attached\n   */\n  addChecksumToMarkup: function(markup) {\n    var checksum = adler32(markup);\n    return markup.replace(\n      '>',\n      ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\">'\n    );\n  },\n\n  /**\n   * @param {string} markup to use\n   * @param {DOMElement} element root React element\n   * @returns {boolean} whether or not the markup is the same\n   */\n  canReuseMarkup: function(markup, element) {\n    var existingChecksum = element.getAttribute(\n      ReactMarkupChecksum.CHECKSUM_ATTR_NAME\n    );\n    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\n    var markupChecksum = adler32(markup);\n    return markupChecksum === existingChecksum;\n  }\n};\n\nmodule.exports = ReactMarkupChecksum;\n\n},{\"./adler32\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/adler32.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactMount.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMount\n */\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactElementValidator = require(\"./ReactElementValidator\");\nvar ReactEmptyComponent = require(\"./ReactEmptyComponent\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\nvar ReactMarkupChecksum = require(\"./ReactMarkupChecksum\");\nvar ReactPerf = require(\"./ReactPerf\");\nvar ReactReconciler = require(\"./ReactReconciler\");\nvar ReactUpdateQueue = require(\"./ReactUpdateQueue\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar emptyObject = require(\"./emptyObject\");\nvar containsNode = require(\"./containsNode\");\nvar getReactRootElementInContainer = require(\"./getReactRootElementInContainer\");\nvar instantiateReactComponent = require(\"./instantiateReactComponent\");\nvar invariant = require(\"./invariant\");\nvar setInnerHTML = require(\"./setInnerHTML\");\nvar shouldUpdateReactComponent = require(\"./shouldUpdateReactComponent\");\nvar warning = require(\"./warning\");\n\nvar SEPARATOR = ReactInstanceHandles.SEPARATOR;\n\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\nvar nodeCache = {};\n\nvar ELEMENT_NODE_TYPE = 1;\nvar DOC_NODE_TYPE = 9;\n\n/** Mapping from reactRootID to React component instance. */\nvar instancesByReactRootID = {};\n\n/** Mapping from reactRootID to `container` nodes. */\nvar containersByReactRootID = {};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  /** __DEV__-only mapping from reactRootID to root elements. */\n  var rootElementsByReactRootID = {};\n}\n\n// Used to store breadth-first search state in findComponentRoot.\nvar findComponentRootReusableArray = [];\n\n/**\n * Finds the index of the first character\n * that's not common between the two given strings.\n *\n * @return {number} the index of the character where the strings diverge\n */\nfunction firstDifferenceIndex(string1, string2) {\n  var minLen = Math.min(string1.length, string2.length);\n  for (var i = 0; i < minLen; i++) {\n    if (string1.charAt(i) !== string2.charAt(i)) {\n      return i;\n    }\n  }\n  return string1.length === string2.length ? -1 : minLen;\n}\n\n/**\n * @param {DOMElement} container DOM element that may contain a React component.\n * @return {?string} A \"reactRoot\" ID, if a React component is rendered.\n */\nfunction getReactRootID(container) {\n  var rootElement = getReactRootElementInContainer(container);\n  return rootElement && ReactMount.getID(rootElement);\n}\n\n/**\n * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form\n * element can return its control whose name or ID equals ATTR_NAME. All\n * DOM nodes support `getAttributeNode` but this can also get called on\n * other objects so just return '' if we're given something other than a\n * DOM node (such as window).\n *\n * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.\n * @return {string} ID of the supplied `domNode`.\n */\nfunction getID(node) {\n  var id = internalGetID(node);\n  if (id) {\n    if (nodeCache.hasOwnProperty(id)) {\n      var cached = nodeCache[id];\n      if (cached !== node) {\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          !isValid(cached, id),\n          'ReactMount: Two valid but unequal nodes with the same `%s`: %s',\n          ATTR_NAME, id\n        ) : invariant(!isValid(cached, id)));\n\n        nodeCache[id] = node;\n      }\n    } else {\n      nodeCache[id] = node;\n    }\n  }\n\n  return id;\n}\n\nfunction internalGetID(node) {\n  // If node is something like a window, document, or text node, none of\n  // which support attributes or a .getAttribute method, gracefully return\n  // the empty string, as if the attribute were missing.\n  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';\n}\n\n/**\n * Sets the React-specific ID of the given node.\n *\n * @param {DOMElement} node The DOM node whose ID will be set.\n * @param {string} id The value of the ID attribute.\n */\nfunction setID(node, id) {\n  var oldID = internalGetID(node);\n  if (oldID !== id) {\n    delete nodeCache[oldID];\n  }\n  node.setAttribute(ATTR_NAME, id);\n  nodeCache[id] = node;\n}\n\n/**\n * Finds the node with the supplied React-generated DOM ID.\n *\n * @param {string} id A React-generated DOM ID.\n * @return {DOMElement} DOM node with the suppled `id`.\n * @internal\n */\nfunction getNode(id) {\n  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {\n    nodeCache[id] = ReactMount.findReactNodeByID(id);\n  }\n  return nodeCache[id];\n}\n\n/**\n * Finds the node with the supplied public React instance.\n *\n * @param {*} instance A public React instance.\n * @return {?DOMElement} DOM node with the suppled `id`.\n * @internal\n */\nfunction getNodeFromInstance(instance) {\n  var id = ReactInstanceMap.get(instance)._rootNodeID;\n  if (ReactEmptyComponent.isNullComponentID(id)) {\n    return null;\n  }\n  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {\n    nodeCache[id] = ReactMount.findReactNodeByID(id);\n  }\n  return nodeCache[id];\n}\n\n/**\n * A node is \"valid\" if it is contained by a currently mounted container.\n *\n * This means that the node does not have to be contained by a document in\n * order to be considered valid.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @param {string} id The expected ID of the node.\n * @return {boolean} Whether the node is contained by a mounted container.\n */\nfunction isValid(node, id) {\n  if (node) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      internalGetID(node) === id,\n      'ReactMount: Unexpected modification of `%s`',\n      ATTR_NAME\n    ) : invariant(internalGetID(node) === id));\n\n    var container = ReactMount.findReactContainerForID(id);\n    if (container && containsNode(container, node)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Causes the cache to forget about one React-specific ID.\n *\n * @param {string} id The ID to forget.\n */\nfunction purgeID(id) {\n  delete nodeCache[id];\n}\n\nvar deepestNodeSoFar = null;\nfunction findDeepestCachedAncestorImpl(ancestorID) {\n  var ancestor = nodeCache[ancestorID];\n  if (ancestor && isValid(ancestor, ancestorID)) {\n    deepestNodeSoFar = ancestor;\n  } else {\n    // This node isn't populated in the cache, so presumably none of its\n    // descendants are. Break out of the loop.\n    return false;\n  }\n}\n\n/**\n * Return the deepest cached node whose ID is a prefix of `targetID`.\n */\nfunction findDeepestCachedAncestor(targetID) {\n  deepestNodeSoFar = null;\n  ReactInstanceHandles.traverseAncestors(\n    targetID,\n    findDeepestCachedAncestorImpl\n  );\n\n  var foundNode = deepestNodeSoFar;\n  deepestNodeSoFar = null;\n  return foundNode;\n}\n\n/**\n * Mounts this component and inserts it into the DOM.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {string} rootID DOM ID of the root node.\n * @param {DOMElement} container DOM element to mount into.\n * @param {ReactReconcileTransaction} transaction\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction mountComponentIntoNode(\n    componentInstance,\n    rootID,\n    container,\n    transaction,\n    shouldReuseMarkup) {\n  var markup = ReactReconciler.mountComponent(\n    componentInstance, rootID, transaction, emptyObject\n  );\n  componentInstance._isTopLevel = true;\n  ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup);\n}\n\n/**\n * Batched mount.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {string} rootID DOM ID of the root node.\n * @param {DOMElement} container DOM element to mount into.\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction batchedMountComponentIntoNode(\n    componentInstance,\n    rootID,\n    container,\n    shouldReuseMarkup) {\n  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();\n  transaction.perform(\n    mountComponentIntoNode,\n    null,\n    componentInstance,\n    rootID,\n    container,\n    transaction,\n    shouldReuseMarkup\n  );\n  ReactUpdates.ReactReconcileTransaction.release(transaction);\n}\n\n/**\n * Mounting is the process of initializing a React component by creating its\n * representative DOM elements and inserting them into a supplied `container`.\n * Any prior content inside `container` is destroyed in the process.\n *\n *   ReactMount.render(\n *     component,\n *     document.getElementById('container')\n *   );\n *\n *   <div id=\"container\">                   <-- Supplied `container`.\n *     <div data-reactid=\".3\">              <-- Rendered reactRoot of React\n *       // ...                                 component.\n *     </div>\n *   </div>\n *\n * Inside of `container`, the first element rendered is the \"reactRoot\".\n */\nvar ReactMount = {\n  /** Exposed for debugging purposes **/\n  _instancesByReactRootID: instancesByReactRootID,\n\n  /**\n   * This is a hook provided to support rendering React components while\n   * ensuring that the apparent scroll position of its `container` does not\n   * change.\n   *\n   * @param {DOMElement} container The `container` being rendered into.\n   * @param {function} renderCallback This must be called once to do the render.\n   */\n  scrollMonitor: function(container, renderCallback) {\n    renderCallback();\n  },\n\n  /**\n   * Take a component that's already mounted into the DOM and replace its props\n   * @param {ReactComponent} prevComponent component instance already in the DOM\n   * @param {ReactElement} nextElement component instance to render\n   * @param {DOMElement} container container to render into\n   * @param {?function} callback function triggered on completion\n   */\n  _updateRootComponent: function(\n      prevComponent,\n      nextElement,\n      container,\n      callback) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      ReactElementValidator.checkAndWarnForMutatedProps(nextElement);\n    }\n\n    ReactMount.scrollMonitor(container, function() {\n      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);\n      if (callback) {\n        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);\n      }\n    });\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      // Record the root element in case it later gets transplanted.\n      rootElementsByReactRootID[getReactRootID(container)] =\n        getReactRootElementInContainer(container);\n    }\n\n    return prevComponent;\n  },\n\n  /**\n   * Register a component into the instance map and starts scroll value\n   * monitoring\n   * @param {ReactComponent} nextComponent component instance to render\n   * @param {DOMElement} container container to render into\n   * @return {string} reactRoot ID prefix\n   */\n  _registerComponent: function(nextComponent, container) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      container && (\n        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n      ),\n      '_registerComponent(...): Target container is not a DOM element.'\n    ) : invariant(container && (\n      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n    )));\n\n    ReactBrowserEventEmitter.ensureScrollValueMonitoring();\n\n    var reactRootID = ReactMount.registerContainer(container);\n    instancesByReactRootID[reactRootID] = nextComponent;\n    return reactRootID;\n  },\n\n  /**\n   * Render a new component into the DOM.\n   * @param {ReactElement} nextElement element to render\n   * @param {DOMElement} container container to render into\n   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion\n   * @return {ReactComponent} nextComponent\n   */\n  _renderNewRootComponent: function(\n    nextElement,\n    container,\n    shouldReuseMarkup\n  ) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case.\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      ReactCurrentOwner.current == null,\n      '_renderNewRootComponent(): Render methods should be a pure function ' +\n      'of props and state; triggering nested component updates from ' +\n      'render is not allowed. If necessary, trigger nested updates in ' +\n      'componentDidUpdate.'\n    ) : null);\n\n    var componentInstance = instantiateReactComponent(nextElement, null);\n    var reactRootID = ReactMount._registerComponent(\n      componentInstance,\n      container\n    );\n\n    // The initial render is synchronous but any updates that happen during\n    // rendering, in componentWillMount or componentDidMount, will be batched\n    // according to the current batching strategy.\n\n    ReactUpdates.batchedUpdates(\n      batchedMountComponentIntoNode,\n      componentInstance,\n      reactRootID,\n      container,\n      shouldReuseMarkup\n    );\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      // Record the root element in case it later gets transplanted.\n      rootElementsByReactRootID[reactRootID] =\n        getReactRootElementInContainer(container);\n    }\n\n    return componentInstance;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  render: function(nextElement, container, callback) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ReactElement.isValidElement(nextElement),\n      'React.render(): Invalid component element.%s',\n      (\n        typeof nextElement === 'string' ?\n          ' Instead of passing an element string, make sure to instantiate ' +\n          'it by passing it to React.createElement.' :\n        typeof nextElement === 'function' ?\n          ' Instead of passing a component class, make sure to instantiate ' +\n          'it by passing it to React.createElement.' :\n        // Check if it quacks like an element\n        nextElement != null && nextElement.props !== undefined ?\n          ' This may be caused by unintentionally loading two independent ' +\n          'copies of React.' :\n          ''\n      )\n    ) : invariant(ReactElement.isValidElement(nextElement)));\n\n    var prevComponent = instancesByReactRootID[getReactRootID(container)];\n\n    if (prevComponent) {\n      var prevElement = prevComponent._currentElement;\n      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n        return ReactMount._updateRootComponent(\n          prevComponent,\n          nextElement,\n          container,\n          callback\n        ).getPublicInstance();\n      } else {\n        ReactMount.unmountComponentAtNode(container);\n      }\n    }\n\n    var reactRootElement = getReactRootElementInContainer(container);\n    var containerHasReactMarkup =\n      reactRootElement && ReactMount.isRenderedByReact(reactRootElement);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      if (!containerHasReactMarkup || reactRootElement.nextSibling) {\n        var rootElementSibling = reactRootElement;\n        while (rootElementSibling) {\n          if (ReactMount.isRenderedByReact(rootElementSibling)) {\n            (\"production\" !== process.env.NODE_ENV ? warning(\n              false,\n              'render(): Target node has markup rendered by React, but there ' +\n              'are unrelated nodes as well. This is most commonly caused by ' +\n              'white-space inserted around server-rendered markup.'\n            ) : null);\n            break;\n          }\n\n          rootElementSibling = rootElementSibling.nextSibling;\n        }\n      }\n    }\n\n    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent;\n\n    var component = ReactMount._renderNewRootComponent(\n      nextElement,\n      container,\n      shouldReuseMarkup\n    ).getPublicInstance();\n    if (callback) {\n      callback.call(component);\n    }\n    return component;\n  },\n\n  /**\n   * Constructs a component instance of `constructor` with `initialProps` and\n   * renders it into the supplied `container`.\n   *\n   * @param {function} constructor React component constructor.\n   * @param {?object} props Initial props of the component instance.\n   * @param {DOMElement} container DOM element to render into.\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  constructAndRenderComponent: function(constructor, props, container) {\n    var element = ReactElement.createElement(constructor, props);\n    return ReactMount.render(element, container);\n  },\n\n  /**\n   * Constructs a component instance of `constructor` with `initialProps` and\n   * renders it into a container node identified by supplied `id`.\n   *\n   * @param {function} componentConstructor React component constructor\n   * @param {?object} props Initial props of the component instance.\n   * @param {string} id ID of the DOM element to render into.\n   * @return {ReactComponent} Component instance rendered in the container node.\n   */\n  constructAndRenderComponentByID: function(constructor, props, id) {\n    var domNode = document.getElementById(id);\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      domNode,\n      'Tried to get element with id of \"%s\" but it is not present on the page.',\n      id\n    ) : invariant(domNode));\n    return ReactMount.constructAndRenderComponent(constructor, props, domNode);\n  },\n\n  /**\n   * Registers a container node into which React components will be rendered.\n   * This also creates the \"reactRoot\" ID that will be assigned to the element\n   * rendered within.\n   *\n   * @param {DOMElement} container DOM element to register as a container.\n   * @return {string} The \"reactRoot\" ID of elements rendered within.\n   */\n  registerContainer: function(container) {\n    var reactRootID = getReactRootID(container);\n    if (reactRootID) {\n      // If one exists, make sure it is a valid \"reactRoot\" ID.\n      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);\n    }\n    if (!reactRootID) {\n      // No valid \"reactRoot\" ID found, create one.\n      reactRootID = ReactInstanceHandles.createReactRootID();\n    }\n    containersByReactRootID[reactRootID] = container;\n    return reactRootID;\n  },\n\n  /**\n   * Unmounts and destroys the React component rendered in the `container`.\n   *\n   * @param {DOMElement} container DOM element containing a React component.\n   * @return {boolean} True if a component was found in and unmounted from\n   *                   `container`\n   */\n  unmountComponentAtNode: function(container) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case. (Strictly speaking, unmounting won't cause a\n    // render but we still don't expect to be in a render call here.)\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      ReactCurrentOwner.current == null,\n      'unmountComponentAtNode(): Render methods should be a pure function of ' +\n      'props and state; triggering nested component updates from render is ' +\n      'not allowed. If necessary, trigger nested updates in ' +\n      'componentDidUpdate.'\n    ) : null);\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      container && (\n        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n      ),\n      'unmountComponentAtNode(...): Target container is not a DOM element.'\n    ) : invariant(container && (\n      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n    )));\n\n    var reactRootID = getReactRootID(container);\n    var component = instancesByReactRootID[reactRootID];\n    if (!component) {\n      return false;\n    }\n    ReactMount.unmountComponentFromNode(component, container);\n    delete instancesByReactRootID[reactRootID];\n    delete containersByReactRootID[reactRootID];\n    if (\"production\" !== process.env.NODE_ENV) {\n      delete rootElementsByReactRootID[reactRootID];\n    }\n    return true;\n  },\n\n  /**\n   * Unmounts a component and removes it from the DOM.\n   *\n   * @param {ReactComponent} instance React component instance.\n   * @param {DOMElement} container DOM element to unmount from.\n   * @final\n   * @internal\n   * @see {ReactMount.unmountComponentAtNode}\n   */\n  unmountComponentFromNode: function(instance, container) {\n    ReactReconciler.unmountComponent(instance);\n\n    if (container.nodeType === DOC_NODE_TYPE) {\n      container = container.documentElement;\n    }\n\n    // http://jsperf.com/emptying-a-node\n    while (container.lastChild) {\n      container.removeChild(container.lastChild);\n    }\n  },\n\n  /**\n   * Finds the container DOM element that contains React component to which the\n   * supplied DOM `id` belongs.\n   *\n   * @param {string} id The ID of an element rendered by a React component.\n   * @return {?DOMElement} DOM element that contains the `id`.\n   */\n  findReactContainerForID: function(id) {\n    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);\n    var container = containersByReactRootID[reactRootID];\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      var rootElement = rootElementsByReactRootID[reactRootID];\n      if (rootElement && rootElement.parentNode !== container) {\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          // Call internalGetID here because getID calls isValid which calls\n          // findReactContainerForID (this function).\n          internalGetID(rootElement) === reactRootID,\n          'ReactMount: Root element ID differed from reactRootID.'\n        ) : invariant(// Call internalGetID here because getID calls isValid which calls\n        // findReactContainerForID (this function).\n        internalGetID(rootElement) === reactRootID));\n\n        var containerChild = container.firstChild;\n        if (containerChild &&\n            reactRootID === internalGetID(containerChild)) {\n          // If the container has a new child with the same ID as the old\n          // root element, then rootElementsByReactRootID[reactRootID] is\n          // just stale and needs to be updated. The case that deserves a\n          // warning is when the container is empty.\n          rootElementsByReactRootID[reactRootID] = containerChild;\n        } else {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            false,\n            'ReactMount: Root element has been removed from its original ' +\n            'container. New container:', rootElement.parentNode\n          ) : null);\n        }\n      }\n    }\n\n    return container;\n  },\n\n  /**\n   * Finds an element rendered by React with the supplied ID.\n   *\n   * @param {string} id ID of a DOM node in the React component.\n   * @return {DOMElement} Root DOM node of the React component.\n   */\n  findReactNodeByID: function(id) {\n    var reactRoot = ReactMount.findReactContainerForID(id);\n    return ReactMount.findComponentRoot(reactRoot, id);\n  },\n\n  /**\n   * True if the supplied `node` is rendered by React.\n   *\n   * @param {*} node DOM Element to check.\n   * @return {boolean} True if the DOM Element appears to be rendered by React.\n   * @internal\n   */\n  isRenderedByReact: function(node) {\n    if (node.nodeType !== 1) {\n      // Not a DOMElement, therefore not a React component\n      return false;\n    }\n    var id = ReactMount.getID(node);\n    return id ? id.charAt(0) === SEPARATOR : false;\n  },\n\n  /**\n   * Traverses up the ancestors of the supplied node to find a node that is a\n   * DOM representation of a React component.\n   *\n   * @param {*} node\n   * @return {?DOMEventTarget}\n   * @internal\n   */\n  getFirstReactDOM: function(node) {\n    var current = node;\n    while (current && current.parentNode !== current) {\n      if (ReactMount.isRenderedByReact(current)) {\n        return current;\n      }\n      current = current.parentNode;\n    }\n    return null;\n  },\n\n  /**\n   * Finds a node with the supplied `targetID` inside of the supplied\n   * `ancestorNode`.  Exploits the ID naming scheme to perform the search\n   * quickly.\n   *\n   * @param {DOMEventTarget} ancestorNode Search from this root.\n   * @pararm {string} targetID ID of the DOM representation of the component.\n   * @return {DOMEventTarget} DOM node with the supplied `targetID`.\n   * @internal\n   */\n  findComponentRoot: function(ancestorNode, targetID) {\n    var firstChildren = findComponentRootReusableArray;\n    var childIndex = 0;\n\n    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;\n\n    firstChildren[0] = deepestAncestor.firstChild;\n    firstChildren.length = 1;\n\n    while (childIndex < firstChildren.length) {\n      var child = firstChildren[childIndex++];\n      var targetChild;\n\n      while (child) {\n        var childID = ReactMount.getID(child);\n        if (childID) {\n          // Even if we find the node we're looking for, we finish looping\n          // through its siblings to ensure they're cached so that we don't have\n          // to revisit this node again. Otherwise, we make n^2 calls to getID\n          // when visiting the many children of a single node in order.\n\n          if (targetID === childID) {\n            targetChild = child;\n          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {\n            // If we find a child whose ID is an ancestor of the given ID,\n            // then we can be sure that we only want to search the subtree\n            // rooted at this child, so we can throw out the rest of the\n            // search state.\n            firstChildren.length = childIndex = 0;\n            firstChildren.push(child.firstChild);\n          }\n\n        } else {\n          // If this child had no ID, then there's a chance that it was\n          // injected automatically by the browser, as when a `<table>`\n          // element sprouts an extra `<tbody>` child as a side effect of\n          // `.innerHTML` parsing. Optimistically continue down this\n          // branch, but not before examining the other siblings.\n          firstChildren.push(child.firstChild);\n        }\n\n        child = child.nextSibling;\n      }\n\n      if (targetChild) {\n        // Emptying firstChildren/findComponentRootReusableArray is\n        // not necessary for correctness, but it helps the GC reclaim\n        // any nodes that were left at the end of the search.\n        firstChildren.length = 0;\n\n        return targetChild;\n      }\n    }\n\n    firstChildren.length = 0;\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      false,\n      'findComponentRoot(..., %s): Unable to find element. This probably ' +\n      'means the DOM was unexpectedly mutated (e.g., by the browser), ' +\n      'usually due to forgetting a <tbody> when using tables, nesting tags ' +\n      'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' +\n      'parent. ' +\n      'Try inspecting the child nodes of the element with React ID `%s`.',\n      targetID,\n      ReactMount.getID(ancestorNode)\n    ) : invariant(false));\n  },\n\n  _mountImageIntoNode: function(markup, container, shouldReuseMarkup) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      container && (\n        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n      ),\n      'mountComponentIntoNode(...): Target container is not valid.'\n    ) : invariant(container && (\n      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n    )));\n\n    if (shouldReuseMarkup) {\n      var rootElement = getReactRootElementInContainer(container);\n      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {\n        return;\n      } else {\n        var checksum = rootElement.getAttribute(\n          ReactMarkupChecksum.CHECKSUM_ATTR_NAME\n        );\n        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\n        var rootMarkup = rootElement.outerHTML;\n        rootElement.setAttribute(\n          ReactMarkupChecksum.CHECKSUM_ATTR_NAME,\n          checksum\n        );\n\n        var diffIndex = firstDifferenceIndex(markup, rootMarkup);\n        var difference = ' (client) ' +\n          markup.substring(diffIndex - 20, diffIndex + 20) +\n          '\\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);\n\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          container.nodeType !== DOC_NODE_TYPE,\n          'You\\'re trying to render a component to the document using ' +\n          'server rendering but the checksum was invalid. This usually ' +\n          'means you rendered a different component type or props on ' +\n          'the client from the one on the server, or your render() ' +\n          'methods are impure. React cannot handle this case due to ' +\n          'cross-browser quirks by rendering at the document root. You ' +\n          'should look for environment dependent code in your components ' +\n          'and ensure the props are the same client and server side:\\n%s',\n          difference\n        ) : invariant(container.nodeType !== DOC_NODE_TYPE));\n\n        if (\"production\" !== process.env.NODE_ENV) {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            false,\n            'React attempted to reuse markup in a container but the ' +\n            'checksum was invalid. This generally means that you are ' +\n            'using server rendering and the markup generated on the ' +\n            'server was not what the client was expecting. React injected ' +\n            'new markup to compensate which works but you have lost many ' +\n            'of the benefits of server rendering. Instead, figure out ' +\n            'why the markup being generated is different on the client ' +\n            'or server:\\n%s',\n            difference\n          ) : null);\n        }\n      }\n    }\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      container.nodeType !== DOC_NODE_TYPE,\n      'You\\'re trying to render a component to the document but ' +\n        'you didn\\'t use server rendering. We can\\'t do this ' +\n        'without using server rendering due to cross-browser quirks. ' +\n        'See React.renderToString() for server rendering.'\n    ) : invariant(container.nodeType !== DOC_NODE_TYPE));\n\n    setInnerHTML(container, markup);\n  },\n\n  /**\n   * React ID utilities.\n   */\n\n  getReactRootID: getReactRootID,\n\n  getID: getID,\n\n  setID: setID,\n\n  getNode: getNode,\n\n  getNodeFromInstance: getNodeFromInstance,\n\n  purgeID: purgeID\n};\n\nReactPerf.measureMethods(ReactMount, 'ReactMount', {\n  _renderNewRootComponent: '_renderNewRootComponent',\n  _mountImageIntoNode: '_mountImageIntoNode'\n});\n\nmodule.exports = ReactMount;\n\n}).call(this,require('_process'))\n},{\"./DOMProperty\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/DOMProperty.js\",\"./ReactBrowserEventEmitter\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactBrowserEventEmitter.js\",\"./ReactCurrentOwner\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactCurrentOwner.js\",\"./ReactElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElement.js\",\"./ReactElementValidator\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElementValidator.js\",\"./ReactEmptyComponent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactEmptyComponent.js\",\"./ReactInstanceHandles\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactInstanceHandles.js\",\"./ReactInstanceMap\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactInstanceMap.js\",\"./ReactMarkupChecksum\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactMarkupChecksum.js\",\"./ReactPerf\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactPerf.js\",\"./ReactReconciler\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactReconciler.js\",\"./ReactUpdateQueue\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactUpdateQueue.js\",\"./ReactUpdates\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactUpdates.js\",\"./containsNode\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/containsNode.js\",\"./emptyObject\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/emptyObject.js\",\"./getReactRootElementInContainer\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getReactRootElementInContainer.js\",\"./instantiateReactComponent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/instantiateReactComponent.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"./setInnerHTML\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/setInnerHTML.js\",\"./shouldUpdateReactComponent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/shouldUpdateReactComponent.js\",\"./warning\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/warning.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactMultiChild.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMultiChild\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactComponentEnvironment = require(\"./ReactComponentEnvironment\");\nvar ReactMultiChildUpdateTypes = require(\"./ReactMultiChildUpdateTypes\");\n\nvar ReactReconciler = require(\"./ReactReconciler\");\nvar ReactChildReconciler = require(\"./ReactChildReconciler\");\n\n/**\n * Updating children of a component may trigger recursive updates. The depth is\n * used to batch recursive updates to render markup more efficiently.\n *\n * @type {number}\n * @private\n */\nvar updateDepth = 0;\n\n/**\n * Queue of update configuration objects.\n *\n * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.\n *\n * @type {array<object>}\n * @private\n */\nvar updateQueue = [];\n\n/**\n * Queue of markup to be rendered.\n *\n * @type {array<string>}\n * @private\n */\nvar markupQueue = [];\n\n/**\n * Enqueues markup to be rendered and inserted at a supplied index.\n *\n * @param {string} parentID ID of the parent component.\n * @param {string} markup Markup that renders into an element.\n * @param {number} toIndex Destination index.\n * @private\n */\nfunction enqueueMarkup(parentID, markup, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,\n    markupIndex: markupQueue.push(markup) - 1,\n    textContent: null,\n    fromIndex: null,\n    toIndex: toIndex\n  });\n}\n\n/**\n * Enqueues moving an existing element to another index.\n *\n * @param {string} parentID ID of the parent component.\n * @param {number} fromIndex Source index of the existing element.\n * @param {number} toIndex Destination index of the element.\n * @private\n */\nfunction enqueueMove(parentID, fromIndex, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,\n    markupIndex: null,\n    textContent: null,\n    fromIndex: fromIndex,\n    toIndex: toIndex\n  });\n}\n\n/**\n * Enqueues removing an element at an index.\n *\n * @param {string} parentID ID of the parent component.\n * @param {number} fromIndex Index of the element to remove.\n * @private\n */\nfunction enqueueRemove(parentID, fromIndex) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.REMOVE_NODE,\n    markupIndex: null,\n    textContent: null,\n    fromIndex: fromIndex,\n    toIndex: null\n  });\n}\n\n/**\n * Enqueues setting the text content.\n *\n * @param {string} parentID ID of the parent component.\n * @param {string} textContent Text content to set.\n * @private\n */\nfunction enqueueTextContent(parentID, textContent) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,\n    markupIndex: null,\n    textContent: textContent,\n    fromIndex: null,\n    toIndex: null\n  });\n}\n\n/**\n * Processes any enqueued updates.\n *\n * @private\n */\nfunction processQueue() {\n  if (updateQueue.length) {\n    ReactComponentEnvironment.processChildrenUpdates(\n      updateQueue,\n      markupQueue\n    );\n    clearQueue();\n  }\n}\n\n/**\n * Clears any enqueued updates.\n *\n * @private\n */\nfunction clearQueue() {\n  updateQueue.length = 0;\n  markupQueue.length = 0;\n}\n\n/**\n * ReactMultiChild are capable of reconciling multiple children.\n *\n * @class ReactMultiChild\n * @internal\n */\nvar ReactMultiChild = {\n\n  /**\n   * Provides common functionality for components that must reconcile multiple\n   * children. This is used by `ReactDOMComponent` to mount, update, and\n   * unmount child components.\n   *\n   * @lends {ReactMultiChild.prototype}\n   */\n  Mixin: {\n\n    /**\n     * Generates a \"mount image\" for each of the supplied children. In the case\n     * of `ReactDOMComponent`, a mount image is a string of markup.\n     *\n     * @param {?object} nestedChildren Nested child maps.\n     * @return {array} An array of mounted representations.\n     * @internal\n     */\n    mountChildren: function(nestedChildren, transaction, context) {\n      var children = ReactChildReconciler.instantiateChildren(\n        nestedChildren, transaction, context\n      );\n      this._renderedChildren = children;\n      var mountImages = [];\n      var index = 0;\n      for (var name in children) {\n        if (children.hasOwnProperty(name)) {\n          var child = children[name];\n          // Inlined for performance, see `ReactInstanceHandles.createReactID`.\n          var rootID = this._rootNodeID + name;\n          var mountImage = ReactReconciler.mountComponent(\n            child,\n            rootID,\n            transaction,\n            context\n          );\n          child._mountIndex = index;\n          mountImages.push(mountImage);\n          index++;\n        }\n      }\n      return mountImages;\n    },\n\n    /**\n     * Replaces any rendered children with a text content string.\n     *\n     * @param {string} nextContent String of content.\n     * @internal\n     */\n    updateTextContent: function(nextContent) {\n      updateDepth++;\n      var errorThrown = true;\n      try {\n        var prevChildren = this._renderedChildren;\n        // Remove any rendered children.\n        ReactChildReconciler.unmountChildren(prevChildren);\n        // TODO: The setTextContent operation should be enough\n        for (var name in prevChildren) {\n          if (prevChildren.hasOwnProperty(name)) {\n            this._unmountChildByName(prevChildren[name], name);\n          }\n        }\n        // Set new text content.\n        this.setTextContent(nextContent);\n        errorThrown = false;\n      } finally {\n        updateDepth--;\n        if (!updateDepth) {\n          if (errorThrown) {\n            clearQueue();\n          } else {\n            processQueue();\n          }\n        }\n      }\n    },\n\n    /**\n     * Updates the rendered children with new children.\n     *\n     * @param {?object} nextNestedChildren Nested child maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     */\n    updateChildren: function(nextNestedChildren, transaction, context) {\n      updateDepth++;\n      var errorThrown = true;\n      try {\n        this._updateChildren(nextNestedChildren, transaction, context);\n        errorThrown = false;\n      } finally {\n        updateDepth--;\n        if (!updateDepth) {\n          if (errorThrown) {\n            clearQueue();\n          } else {\n            processQueue();\n          }\n        }\n\n      }\n    },\n\n    /**\n     * Improve performance by isolating this hot code path from the try/catch\n     * block in `updateChildren`.\n     *\n     * @param {?object} nextNestedChildren Nested child maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @final\n     * @protected\n     */\n    _updateChildren: function(nextNestedChildren, transaction, context) {\n      var prevChildren = this._renderedChildren;\n      var nextChildren = ReactChildReconciler.updateChildren(\n        prevChildren, nextNestedChildren, transaction, context\n      );\n      this._renderedChildren = nextChildren;\n      if (!nextChildren && !prevChildren) {\n        return;\n      }\n      var name;\n      // `nextIndex` will increment for each child in `nextChildren`, but\n      // `lastIndex` will be the last index visited in `prevChildren`.\n      var lastIndex = 0;\n      var nextIndex = 0;\n      for (name in nextChildren) {\n        if (!nextChildren.hasOwnProperty(name)) {\n          continue;\n        }\n        var prevChild = prevChildren && prevChildren[name];\n        var nextChild = nextChildren[name];\n        if (prevChild === nextChild) {\n          this.moveChild(prevChild, nextIndex, lastIndex);\n          lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n          prevChild._mountIndex = nextIndex;\n        } else {\n          if (prevChild) {\n            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.\n            lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n            this._unmountChildByName(prevChild, name);\n          }\n          // The child must be instantiated before it's mounted.\n          this._mountChildByNameAtIndex(\n            nextChild, name, nextIndex, transaction, context\n          );\n        }\n        nextIndex++;\n      }\n      // Remove children that are no longer present.\n      for (name in prevChildren) {\n        if (prevChildren.hasOwnProperty(name) &&\n            !(nextChildren && nextChildren.hasOwnProperty(name))) {\n          this._unmountChildByName(prevChildren[name], name);\n        }\n      }\n    },\n\n    /**\n     * Unmounts all rendered children. This should be used to clean up children\n     * when this component is unmounted.\n     *\n     * @internal\n     */\n    unmountChildren: function() {\n      var renderedChildren = this._renderedChildren;\n      ReactChildReconciler.unmountChildren(renderedChildren);\n      this._renderedChildren = null;\n    },\n\n    /**\n     * Moves a child component to the supplied index.\n     *\n     * @param {ReactComponent} child Component to move.\n     * @param {number} toIndex Destination index of the element.\n     * @param {number} lastIndex Last index visited of the siblings of `child`.\n     * @protected\n     */\n    moveChild: function(child, toIndex, lastIndex) {\n      // If the index of `child` is less than `lastIndex`, then it needs to\n      // be moved. Otherwise, we do not need to move it because a child will be\n      // inserted or moved before `child`.\n      if (child._mountIndex < lastIndex) {\n        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);\n      }\n    },\n\n    /**\n     * Creates a child component.\n     *\n     * @param {ReactComponent} child Component to create.\n     * @param {string} mountImage Markup to insert.\n     * @protected\n     */\n    createChild: function(child, mountImage) {\n      enqueueMarkup(this._rootNodeID, mountImage, child._mountIndex);\n    },\n\n    /**\n     * Removes a child component.\n     *\n     * @param {ReactComponent} child Child to remove.\n     * @protected\n     */\n    removeChild: function(child) {\n      enqueueRemove(this._rootNodeID, child._mountIndex);\n    },\n\n    /**\n     * Sets this text content string.\n     *\n     * @param {string} textContent Text content to set.\n     * @protected\n     */\n    setTextContent: function(textContent) {\n      enqueueTextContent(this._rootNodeID, textContent);\n    },\n\n    /**\n     * Mounts a child with the supplied name.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to mount.\n     * @param {string} name Name of the child.\n     * @param {number} index Index at which to insert the child.\n     * @param {ReactReconcileTransaction} transaction\n     * @private\n     */\n    _mountChildByNameAtIndex: function(\n      child,\n      name,\n      index,\n      transaction,\n      context) {\n      // Inlined for performance, see `ReactInstanceHandles.createReactID`.\n      var rootID = this._rootNodeID + name;\n      var mountImage = ReactReconciler.mountComponent(\n        child,\n        rootID,\n        transaction,\n        context\n      );\n      child._mountIndex = index;\n      this.createChild(child, mountImage);\n    },\n\n    /**\n     * Unmounts a rendered child by name.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to unmount.\n     * @param {string} name Name of the child in `this._renderedChildren`.\n     * @private\n     */\n    _unmountChildByName: function(child, name) {\n      this.removeChild(child);\n      child._mountIndex = null;\n    }\n\n  }\n\n};\n\nmodule.exports = ReactMultiChild;\n\n},{\"./ReactChildReconciler\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactChildReconciler.js\",\"./ReactComponentEnvironment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactComponentEnvironment.js\",\"./ReactMultiChildUpdateTypes\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactMultiChildUpdateTypes.js\",\"./ReactReconciler\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactReconciler.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactMultiChildUpdateTypes.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMultiChildUpdateTypes\n */\n\n'use strict';\n\nvar keyMirror = require(\"./keyMirror\");\n\n/**\n * When a component's children are updated, a series of update configuration\n * objects are created in order to batch and serialize the required changes.\n *\n * Enumerates all the possible types of update configurations.\n *\n * @internal\n */\nvar ReactMultiChildUpdateTypes = keyMirror({\n  INSERT_MARKUP: null,\n  MOVE_EXISTING: null,\n  REMOVE_NODE: null,\n  TEXT_CONTENT: null\n});\n\nmodule.exports = ReactMultiChildUpdateTypes;\n\n},{\"./keyMirror\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/keyMirror.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactNativeComponent.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactNativeComponent\n */\n\n'use strict';\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\n\nvar autoGenerateWrapperClass = null;\nvar genericComponentClass = null;\n// This registry keeps track of wrapper classes around native tags\nvar tagToComponentClass = {};\nvar textComponentClass = null;\n\nvar ReactNativeComponentInjection = {\n  // This accepts a class that receives the tag string. This is a catch all\n  // that can render any kind of tag.\n  injectGenericComponentClass: function(componentClass) {\n    genericComponentClass = componentClass;\n  },\n  // This accepts a text component class that takes the text string to be\n  // rendered as props.\n  injectTextComponentClass: function(componentClass) {\n    textComponentClass = componentClass;\n  },\n  // This accepts a keyed object with classes as values. Each key represents a\n  // tag. That particular tag will use this class instead of the generic one.\n  injectComponentClasses: function(componentClasses) {\n    assign(tagToComponentClass, componentClasses);\n  },\n  // Temporary hack since we expect DOM refs to behave like composites,\n  // for this release.\n  injectAutoWrapper: function(wrapperFactory) {\n    autoGenerateWrapperClass = wrapperFactory;\n  }\n};\n\n/**\n * Get a composite component wrapper class for a specific tag.\n *\n * @param {ReactElement} element The tag for which to get the class.\n * @return {function} The React class constructor function.\n */\nfunction getComponentClassForElement(element) {\n  if (typeof element.type === 'function') {\n    return element.type;\n  }\n  var tag = element.type;\n  var componentClass = tagToComponentClass[tag];\n  if (componentClass == null) {\n    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);\n  }\n  return componentClass;\n}\n\n/**\n * Get a native internal component class for a specific tag.\n *\n * @param {ReactElement} element The element to create.\n * @return {function} The internal class constructor function.\n */\nfunction createInternalComponent(element) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    genericComponentClass,\n    'There is no registered component for the tag %s',\n    element.type\n  ) : invariant(genericComponentClass));\n  return new genericComponentClass(element.type, element.props);\n}\n\n/**\n * @param {ReactText} text\n * @return {ReactComponent}\n */\nfunction createInstanceForText(text) {\n  return new textComponentClass(text);\n}\n\n/**\n * @param {ReactComponent} component\n * @return {boolean}\n */\nfunction isTextComponent(component) {\n  return component instanceof textComponentClass;\n}\n\nvar ReactNativeComponent = {\n  getComponentClassForElement: getComponentClassForElement,\n  createInternalComponent: createInternalComponent,\n  createInstanceForText: createInstanceForText,\n  isTextComponent: isTextComponent,\n  injection: ReactNativeComponentInjection\n};\n\nmodule.exports = ReactNativeComponent;\n\n}).call(this,require('_process'))\n},{\"./Object.assign\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Object.assign.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactOwner.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactOwner\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\n/**\n * ReactOwners are capable of storing references to owned components.\n *\n * All components are capable of //being// referenced by owner components, but\n * only ReactOwner components are capable of //referencing// owned components.\n * The named reference is known as a \"ref\".\n *\n * Refs are available when mounted and updated during reconciliation.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return (\n *         <div onClick={this.handleClick}>\n *           <CustomComponent ref=\"custom\" />\n *         </div>\n *       );\n *     },\n *     handleClick: function() {\n *       this.refs.custom.handleClick();\n *     },\n *     componentDidMount: function() {\n *       this.refs.custom.initialize();\n *     }\n *   });\n *\n * Refs should rarely be used. When refs are used, they should only be done to\n * control data that is not handled by React's data flow.\n *\n * @class ReactOwner\n */\nvar ReactOwner = {\n\n  /**\n   * @param {?object} object\n   * @return {boolean} True if `object` is a valid owner.\n   * @final\n   */\n  isValidOwner: function(object) {\n    return !!(\n      (object &&\n      typeof object.attachRef === 'function' && typeof object.detachRef === 'function')\n    );\n  },\n\n  /**\n   * Adds a component by ref to an owner component.\n   *\n   * @param {ReactComponent} component Component to reference.\n   * @param {string} ref Name by which to refer to the component.\n   * @param {ReactOwner} owner Component on which to record the ref.\n   * @final\n   * @internal\n   */\n  addComponentAsRefTo: function(component, ref, owner) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ReactOwner.isValidOwner(owner),\n      'addComponentAsRefTo(...): Only a ReactOwner can have refs. This ' +\n      'usually means that you\\'re trying to add a ref to a component that ' +\n      'doesn\\'t have an owner (that is, was not created inside of another ' +\n      'component\\'s `render` method). Try rendering this component inside of ' +\n      'a new top-level component which will hold the ref.'\n    ) : invariant(ReactOwner.isValidOwner(owner)));\n    owner.attachRef(ref, component);\n  },\n\n  /**\n   * Removes a component by ref from an owner component.\n   *\n   * @param {ReactComponent} component Component to dereference.\n   * @param {string} ref Name of the ref to remove.\n   * @param {ReactOwner} owner Component on which the ref is recorded.\n   * @final\n   * @internal\n   */\n  removeComponentAsRefFrom: function(component, ref, owner) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ReactOwner.isValidOwner(owner),\n      'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This ' +\n      'usually means that you\\'re trying to remove a ref to a component that ' +\n      'doesn\\'t have an owner (that is, was not created inside of another ' +\n      'component\\'s `render` method). Try rendering this component inside of ' +\n      'a new top-level component which will hold the ref.'\n    ) : invariant(ReactOwner.isValidOwner(owner)));\n    // Check that `component` is still the current ref because we do not want to\n    // detach the ref if another component stole it.\n    if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {\n      owner.detachRef(ref);\n    }\n  }\n\n};\n\nmodule.exports = ReactOwner;\n\n}).call(this,require('_process'))\n},{\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactPerf.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPerf\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * ReactPerf is a general AOP system designed to measure performance. This\n * module only has the hooks: see ReactDefaultPerf for the analysis tool.\n */\nvar ReactPerf = {\n  /**\n   * Boolean to enable/disable measurement. Set to false by default to prevent\n   * accidental logging and perf loss.\n   */\n  enableMeasure: false,\n\n  /**\n   * Holds onto the measure function in use. By default, don't measure\n   * anything, but we'll override this if we inject a measure function.\n   */\n  storedMeasure: _noMeasure,\n\n  /**\n   * @param {object} object\n   * @param {string} objectName\n   * @param {object<string>} methodNames\n   */\n  measureMethods: function(object, objectName, methodNames) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      for (var key in methodNames) {\n        if (!methodNames.hasOwnProperty(key)) {\n          continue;\n        }\n        object[key] = ReactPerf.measure(\n          objectName,\n          methodNames[key],\n          object[key]\n        );\n      }\n    }\n  },\n\n  /**\n   * Use this to wrap methods you want to measure. Zero overhead in production.\n   *\n   * @param {string} objName\n   * @param {string} fnName\n   * @param {function} func\n   * @return {function}\n   */\n  measure: function(objName, fnName, func) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      var measuredFunc = null;\n      var wrapper = function() {\n        if (ReactPerf.enableMeasure) {\n          if (!measuredFunc) {\n            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);\n          }\n          return measuredFunc.apply(this, arguments);\n        }\n        return func.apply(this, arguments);\n      };\n      wrapper.displayName = objName + '_' + fnName;\n      return wrapper;\n    }\n    return func;\n  },\n\n  injection: {\n    /**\n     * @param {function} measure\n     */\n    injectMeasure: function(measure) {\n      ReactPerf.storedMeasure = measure;\n    }\n  }\n};\n\n/**\n * Simply passes through the measured function, without measuring it.\n *\n * @param {string} objName\n * @param {string} fnName\n * @param {function} func\n * @return {function}\n */\nfunction _noMeasure(objName, fnName, func) {\n  return func;\n}\n\nmodule.exports = ReactPerf;\n\n}).call(this,require('_process'))\n},{\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactPropTypeLocationNames.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypeLocationNames\n */\n\n'use strict';\n\nvar ReactPropTypeLocationNames = {};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n}\n\nmodule.exports = ReactPropTypeLocationNames;\n\n}).call(this,require('_process'))\n},{\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactPropTypeLocations.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypeLocations\n */\n\n'use strict';\n\nvar keyMirror = require(\"./keyMirror\");\n\nvar ReactPropTypeLocations = keyMirror({\n  prop: null,\n  context: null,\n  childContext: null\n});\n\nmodule.exports = ReactPropTypeLocations;\n\n},{\"./keyMirror\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/keyMirror.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactPropTypes.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypes\n */\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactFragment = require(\"./ReactFragment\");\nvar ReactPropTypeLocationNames = require(\"./ReactPropTypeLocationNames\");\n\nvar emptyFunction = require(\"./emptyFunction\");\n\n/**\n * Collection of methods that allow declaration and validation of props that are\n * supplied to React components. Example usage:\n *\n *   var Props = require('ReactPropTypes');\n *   var MyArticle = React.createClass({\n *     propTypes: {\n *       // An optional string prop named \"description\".\n *       description: Props.string,\n *\n *       // A required enum prop named \"category\".\n *       category: Props.oneOf(['News','Photos']).isRequired,\n *\n *       // A prop named \"dialog\" that requires an instance of Dialog.\n *       dialog: Props.instanceOf(Dialog).isRequired\n *     },\n *     render: function() { ... }\n *   });\n *\n * A more formal specification of how these methods are used:\n *\n *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n *   decl := ReactPropTypes.{type}(.isRequired)?\n *\n * Each and every declaration produces a function with the same signature. This\n * allows the creation of custom validation functions. For example:\n *\n *  var MyLink = React.createClass({\n *    propTypes: {\n *      // An optional string or URI prop named \"href\".\n *      href: function(props, propName, componentName) {\n *        var propValue = props[propName];\n *        if (propValue != null && typeof propValue !== 'string' &&\n *            !(propValue instanceof URI)) {\n *          return new Error(\n *            'Expected a string or an URI for ' + propName + ' in ' +\n *            componentName\n *          );\n *        }\n *      }\n *    },\n *    render: function() {...}\n *  });\n *\n * @internal\n */\n\nvar ANONYMOUS = '<<anonymous>>';\n\nvar elementTypeChecker = createElementTypeChecker();\nvar nodeTypeChecker = createNodeChecker();\n\nvar ReactPropTypes = {\n  array: createPrimitiveTypeChecker('array'),\n  bool: createPrimitiveTypeChecker('boolean'),\n  func: createPrimitiveTypeChecker('function'),\n  number: createPrimitiveTypeChecker('number'),\n  object: createPrimitiveTypeChecker('object'),\n  string: createPrimitiveTypeChecker('string'),\n\n  any: createAnyTypeChecker(),\n  arrayOf: createArrayOfTypeChecker,\n  element: elementTypeChecker,\n  instanceOf: createInstanceTypeChecker,\n  node: nodeTypeChecker,\n  objectOf: createObjectOfTypeChecker,\n  oneOf: createEnumTypeChecker,\n  oneOfType: createUnionTypeChecker,\n  shape: createShapeTypeChecker\n};\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(isRequired, props, propName, componentName, location) {\n    componentName = componentName || ANONYMOUS;\n    if (props[propName] == null) {\n      var locationName = ReactPropTypeLocationNames[location];\n      if (isRequired) {\n        return new Error(\n          (\"Required \" + locationName + \" `\" + propName + \"` was not specified in \") +\n          (\"`\" + componentName + \"`.\")\n        );\n      }\n      return null;\n    } else {\n      return validate(props, propName, componentName, location);\n    }\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\n\nfunction createPrimitiveTypeChecker(expectedType) {\n  function validate(props, propName, componentName, location) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== expectedType) {\n      var locationName = ReactPropTypeLocationNames[location];\n      // `propValue` being instance of, say, date/regexp, pass the 'object'\n      // check, but we can offer a more precise error message here rather than\n      // 'of type `object`'.\n      var preciseType = getPreciseType(propValue);\n\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` of type `\" + preciseType + \"` \") +\n        (\"supplied to `\" + componentName + \"`, expected `\" + expectedType + \"`.\")\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createAnyTypeChecker() {\n  return createChainableTypeChecker(emptyFunction.thatReturns(null));\n}\n\nfunction createArrayOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location) {\n    var propValue = props[propName];\n    if (!Array.isArray(propValue)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var propType = getPropType(propValue);\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` of type \") +\n        (\"`\" + propType + \"` supplied to `\" + componentName + \"`, expected an array.\")\n      );\n    }\n    for (var i = 0; i < propValue.length; i++) {\n      var error = typeChecker(propValue, i, componentName, location);\n      if (error instanceof Error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createElementTypeChecker() {\n  function validate(props, propName, componentName, location) {\n    if (!ReactElement.isValidElement(props[propName])) {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` supplied to \") +\n        (\"`\" + componentName + \"`, expected a ReactElement.\")\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createInstanceTypeChecker(expectedClass) {\n  function validate(props, propName, componentName, location) {\n    if (!(props[propName] instanceof expectedClass)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var expectedClassName = expectedClass.name || ANONYMOUS;\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` supplied to \") +\n        (\"`\" + componentName + \"`, expected instance of `\" + expectedClassName + \"`.\")\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createEnumTypeChecker(expectedValues) {\n  function validate(props, propName, componentName, location) {\n    var propValue = props[propName];\n    for (var i = 0; i < expectedValues.length; i++) {\n      if (propValue === expectedValues[i]) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    var valuesString = JSON.stringify(expectedValues);\n    return new Error(\n      (\"Invalid \" + locationName + \" `\" + propName + \"` of value `\" + propValue + \"` \") +\n      (\"supplied to `\" + componentName + \"`, expected one of \" + valuesString + \".\")\n    );\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createObjectOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` of type \") +\n        (\"`\" + propType + \"` supplied to `\" + componentName + \"`, expected an object.\")\n      );\n    }\n    for (var key in propValue) {\n      if (propValue.hasOwnProperty(key)) {\n        var error = typeChecker(propValue, key, componentName, location);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createUnionTypeChecker(arrayOfTypeCheckers) {\n  function validate(props, propName, componentName, location) {\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (checker(props, propName, componentName, location) == null) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    return new Error(\n      (\"Invalid \" + locationName + \" `\" + propName + \"` supplied to \") +\n      (\"`\" + componentName + \"`.\")\n    );\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createNodeChecker() {\n  function validate(props, propName, componentName, location) {\n    if (!isNode(props[propName])) {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` supplied to \") +\n        (\"`\" + componentName + \"`, expected a ReactNode.\")\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createShapeTypeChecker(shapeTypes) {\n  function validate(props, propName, componentName, location) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` of type `\" + propType + \"` \") +\n        (\"supplied to `\" + componentName + \"`, expected `object`.\")\n      );\n    }\n    for (var key in shapeTypes) {\n      var checker = shapeTypes[key];\n      if (!checker) {\n        continue;\n      }\n      var error = checker(propValue, key, componentName, location);\n      if (error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction isNode(propValue) {\n  switch (typeof propValue) {\n    case 'number':\n    case 'string':\n    case 'undefined':\n      return true;\n    case 'boolean':\n      return !propValue;\n    case 'object':\n      if (Array.isArray(propValue)) {\n        return propValue.every(isNode);\n      }\n      if (propValue === null || ReactElement.isValidElement(propValue)) {\n        return true;\n      }\n      propValue = ReactFragment.extractIfFragment(propValue);\n      for (var k in propValue) {\n        if (!isNode(propValue[k])) {\n          return false;\n        }\n      }\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Equivalent of `typeof` but with special handling for array and regexp.\nfunction getPropType(propValue) {\n  var propType = typeof propValue;\n  if (Array.isArray(propValue)) {\n    return 'array';\n  }\n  if (propValue instanceof RegExp) {\n    // Old webkits (at least until Android 4.0) return 'function' rather than\n    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n    // passes PropTypes.object.\n    return 'object';\n  }\n  return propType;\n}\n\n// This handles more types than `getPropType`. Only used for error messages.\n// See `createPrimitiveTypeChecker`.\nfunction getPreciseType(propValue) {\n  var propType = getPropType(propValue);\n  if (propType === 'object') {\n    if (propValue instanceof Date) {\n      return 'date';\n    } else if (propValue instanceof RegExp) {\n      return 'regexp';\n    }\n  }\n  return propType;\n}\n\nmodule.exports = ReactPropTypes;\n\n},{\"./ReactElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElement.js\",\"./ReactFragment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactFragment.js\",\"./ReactPropTypeLocationNames\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactPropTypeLocationNames.js\",\"./emptyFunction\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/emptyFunction.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactPutListenerQueue.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPutListenerQueue\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\n\nvar assign = require(\"./Object.assign\");\n\nfunction ReactPutListenerQueue() {\n  this.listenersToPut = [];\n}\n\nassign(ReactPutListenerQueue.prototype, {\n  enqueuePutListener: function(rootNodeID, propKey, propValue) {\n    this.listenersToPut.push({\n      rootNodeID: rootNodeID,\n      propKey: propKey,\n      propValue: propValue\n    });\n  },\n\n  putListeners: function() {\n    for (var i = 0; i < this.listenersToPut.length; i++) {\n      var listenerToPut = this.listenersToPut[i];\n      ReactBrowserEventEmitter.putListener(\n        listenerToPut.rootNodeID,\n        listenerToPut.propKey,\n        listenerToPut.propValue\n      );\n    }\n  },\n\n  reset: function() {\n    this.listenersToPut.length = 0;\n  },\n\n  destructor: function() {\n    this.reset();\n  }\n});\n\nPooledClass.addPoolingTo(ReactPutListenerQueue);\n\nmodule.exports = ReactPutListenerQueue;\n\n},{\"./Object.assign\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Object.assign.js\",\"./PooledClass\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/PooledClass.js\",\"./ReactBrowserEventEmitter\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactBrowserEventEmitter.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactReconcileTransaction.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactReconcileTransaction\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CallbackQueue = require(\"./CallbackQueue\");\nvar PooledClass = require(\"./PooledClass\");\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\nvar ReactInputSelection = require(\"./ReactInputSelection\");\nvar ReactPutListenerQueue = require(\"./ReactPutListenerQueue\");\nvar Transaction = require(\"./Transaction\");\n\nvar assign = require(\"./Object.assign\");\n\n/**\n * Ensures that, when possible, the selection range (currently selected text\n * input) is not disturbed by performing the transaction.\n */\nvar SELECTION_RESTORATION = {\n  /**\n   * @return {Selection} Selection information.\n   */\n  initialize: ReactInputSelection.getSelectionInformation,\n  /**\n   * @param {Selection} sel Selection information returned from `initialize`.\n   */\n  close: ReactInputSelection.restoreSelection\n};\n\n/**\n * Suppresses events (blur/focus) that could be inadvertently dispatched due to\n * high level DOM manipulations (like temporarily removing a text input from the\n * DOM).\n */\nvar EVENT_SUPPRESSION = {\n  /**\n   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before\n   * the reconciliation.\n   */\n  initialize: function() {\n    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();\n    ReactBrowserEventEmitter.setEnabled(false);\n    return currentlyEnabled;\n  },\n\n  /**\n   * @param {boolean} previouslyEnabled Enabled status of\n   *   `ReactBrowserEventEmitter` before the reconciliation occured. `close`\n   *   restores the previous value.\n   */\n  close: function(previouslyEnabled) {\n    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);\n  }\n};\n\n/**\n * Provides a queue for collecting `componentDidMount` and\n * `componentDidUpdate` callbacks during the the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function() {\n    this.reactMountReady.reset();\n  },\n\n  /**\n   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.\n   */\n  close: function() {\n    this.reactMountReady.notifyAll();\n  }\n};\n\nvar PUT_LISTENER_QUEUEING = {\n  initialize: function() {\n    this.putListenerQueue.reset();\n  },\n\n  close: function() {\n    this.putListenerQueue.putListeners();\n  }\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [\n  PUT_LISTENER_QUEUEING,\n  SELECTION_RESTORATION,\n  EVENT_SUPPRESSION,\n  ON_DOM_READY_QUEUEING\n];\n\n/**\n * Currently:\n * - The order that these are listed in the transaction is critical:\n * - Suppresses events.\n * - Restores selection range.\n *\n * Future:\n * - Restore document/overflow scroll positions that were unintentionally\n *   modified via DOM insertions above the top viewport boundary.\n * - Implement/integrate with customized constraint based layout system and keep\n *   track of which dimensions must be remeasured.\n *\n * @class ReactReconcileTransaction\n */\nfunction ReactReconcileTransaction() {\n  this.reinitializeTransaction();\n  // Only server-side rendering really needs this option (see\n  // `ReactServerRendering`), but server-side uses\n  // `ReactServerRenderingTransaction` instead. This option is here so that it's\n  // accessible and defaults to false when `ReactDOMComponent` and\n  // `ReactTextComponent` checks it in `mountComponent`.`\n  this.renderToStaticMarkup = false;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.putListenerQueue = ReactPutListenerQueue.getPooled();\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array<object>} List of operation wrap proceedures.\n   *   TODO: convert to array<TransactionWrapper>\n   */\n  getTransactionWrappers: function() {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function() {\n    return this.reactMountReady;\n  },\n\n  getPutListenerQueue: function() {\n    return this.putListenerQueue;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be resused.\n   */\n  destructor: function() {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n\n    ReactPutListenerQueue.release(this.putListenerQueue);\n    this.putListenerQueue = null;\n  }\n};\n\n\nassign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);\n\nPooledClass.addPoolingTo(ReactReconcileTransaction);\n\nmodule.exports = ReactReconcileTransaction;\n\n},{\"./CallbackQueue\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/CallbackQueue.js\",\"./Object.assign\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Object.assign.js\",\"./PooledClass\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/PooledClass.js\",\"./ReactBrowserEventEmitter\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactBrowserEventEmitter.js\",\"./ReactInputSelection\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactInputSelection.js\",\"./ReactPutListenerQueue\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactPutListenerQueue.js\",\"./Transaction\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Transaction.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactReconciler.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactReconciler\n */\n\n'use strict';\n\nvar ReactRef = require(\"./ReactRef\");\nvar ReactElementValidator = require(\"./ReactElementValidator\");\n\n/**\n * Helper to call ReactRef.attachRefs with this composite component, split out\n * to avoid allocations in the transaction mount-ready queue.\n */\nfunction attachRefs() {\n  ReactRef.attachRefs(this, this._currentElement);\n}\n\nvar ReactReconciler = {\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {string} rootID DOM ID of the root node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function(internalInstance, rootID, transaction, context) {\n    var markup = internalInstance.mountComponent(rootID, transaction, context);\n    if (\"production\" !== process.env.NODE_ENV) {\n      ReactElementValidator.checkAndWarnForMutatedProps(\n        internalInstance._currentElement\n      );\n    }\n    transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    return markup;\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function(internalInstance) {\n    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);\n    internalInstance.unmountComponent();\n  },\n\n  /**\n   * Update a component using a new element.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @internal\n   */\n  receiveComponent: function(\n    internalInstance, nextElement, transaction, context\n  ) {\n    var prevElement = internalInstance._currentElement;\n\n    if (nextElement === prevElement && nextElement._owner != null) {\n      // Since elements are immutable after the owner is rendered,\n      // we can do a cheap identity compare here to determine if this is a\n      // superfluous reconcile. It's possible for state to be mutable but such\n      // change should trigger an update of the owner which would recreate\n      // the element. We explicitly check for the existence of an owner since\n      // it's possible for an element created outside a composite to be\n      // deeply mutated and reused.\n      return;\n    }\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      ReactElementValidator.checkAndWarnForMutatedProps(nextElement);\n    }\n\n    var refsChanged = ReactRef.shouldUpdateRefs(\n      prevElement,\n      nextElement\n    );\n\n    if (refsChanged) {\n      ReactRef.detachRefs(internalInstance, prevElement);\n    }\n\n    internalInstance.receiveComponent(nextElement, transaction, context);\n\n    if (refsChanged) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n  },\n\n  /**\n   * Flush any dirty changes in a component.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function(\n    internalInstance,\n    transaction\n  ) {\n    internalInstance.performUpdateIfNecessary(transaction);\n  }\n\n};\n\nmodule.exports = ReactReconciler;\n\n}).call(this,require('_process'))\n},{\"./ReactElementValidator\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElementValidator.js\",\"./ReactRef\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactRef.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactRef.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactRef\n */\n\n'use strict';\n\nvar ReactOwner = require(\"./ReactOwner\");\n\nvar ReactRef = {};\n\nfunction attachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(component.getPublicInstance());\n  } else {\n    // Legacy ref\n    ReactOwner.addComponentAsRefTo(component, ref, owner);\n  }\n}\n\nfunction detachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(null);\n  } else {\n    // Legacy ref\n    ReactOwner.removeComponentAsRefFrom(component, ref, owner);\n  }\n}\n\nReactRef.attachRefs = function(instance, element) {\n  var ref = element.ref;\n  if (ref != null) {\n    attachRef(ref, instance, element._owner);\n  }\n};\n\nReactRef.shouldUpdateRefs = function(prevElement, nextElement) {\n  // If either the owner or a `ref` has changed, make sure the newest owner\n  // has stored a reference to `this`, and the previous owner (if different)\n  // has forgotten the reference to `this`. We use the element instead\n  // of the public this.props because the post processing cannot determine\n  // a ref. The ref conceptually lives on the element.\n\n  // TODO: Should this even be possible? The owner cannot change because\n  // it's forbidden by shouldUpdateReactComponent. The ref can change\n  // if you swap the keys of but not the refs. Reconsider where this check\n  // is made. It probably belongs where the key checking and\n  // instantiateReactComponent is done.\n\n  return (\n    nextElement._owner !== prevElement._owner ||\n    nextElement.ref !== prevElement.ref\n  );\n};\n\nReactRef.detachRefs = function(instance, element) {\n  var ref = element.ref;\n  if (ref != null) {\n    detachRef(ref, instance, element._owner);\n  }\n};\n\nmodule.exports = ReactRef;\n\n},{\"./ReactOwner\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactOwner.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactRootIndex.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactRootIndex\n * @typechecks\n */\n\n'use strict';\n\nvar ReactRootIndexInjection = {\n  /**\n   * @param {function} _createReactRootIndex\n   */\n  injectCreateReactRootIndex: function(_createReactRootIndex) {\n    ReactRootIndex.createReactRootIndex = _createReactRootIndex;\n  }\n};\n\nvar ReactRootIndex = {\n  createReactRootIndex: null,\n  injection: ReactRootIndexInjection\n};\n\nmodule.exports = ReactRootIndex;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactServerRendering.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks static-only\n * @providesModule ReactServerRendering\n */\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\nvar ReactMarkupChecksum = require(\"./ReactMarkupChecksum\");\nvar ReactServerRenderingTransaction =\n  require(\"./ReactServerRenderingTransaction\");\n\nvar emptyObject = require(\"./emptyObject\");\nvar instantiateReactComponent = require(\"./instantiateReactComponent\");\nvar invariant = require(\"./invariant\");\n\n/**\n * @param {ReactElement} element\n * @return {string} the HTML markup\n */\nfunction renderToString(element) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    ReactElement.isValidElement(element),\n    'renderToString(): You must pass a valid ReactElement.'\n  ) : invariant(ReactElement.isValidElement(element)));\n\n  var transaction;\n  try {\n    var id = ReactInstanceHandles.createReactRootID();\n    transaction = ReactServerRenderingTransaction.getPooled(false);\n\n    return transaction.perform(function() {\n      var componentInstance = instantiateReactComponent(element, null);\n      var markup =\n        componentInstance.mountComponent(id, transaction, emptyObject);\n      return ReactMarkupChecksum.addChecksumToMarkup(markup);\n    }, null);\n  } finally {\n    ReactServerRenderingTransaction.release(transaction);\n  }\n}\n\n/**\n * @param {ReactElement} element\n * @return {string} the HTML markup, without the extra React ID and checksum\n * (for generating static pages)\n */\nfunction renderToStaticMarkup(element) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    ReactElement.isValidElement(element),\n    'renderToStaticMarkup(): You must pass a valid ReactElement.'\n  ) : invariant(ReactElement.isValidElement(element)));\n\n  var transaction;\n  try {\n    var id = ReactInstanceHandles.createReactRootID();\n    transaction = ReactServerRenderingTransaction.getPooled(true);\n\n    return transaction.perform(function() {\n      var componentInstance = instantiateReactComponent(element, null);\n      return componentInstance.mountComponent(id, transaction, emptyObject);\n    }, null);\n  } finally {\n    ReactServerRenderingTransaction.release(transaction);\n  }\n}\n\nmodule.exports = {\n  renderToString: renderToString,\n  renderToStaticMarkup: renderToStaticMarkup\n};\n\n}).call(this,require('_process'))\n},{\"./ReactElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElement.js\",\"./ReactInstanceHandles\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactInstanceHandles.js\",\"./ReactMarkupChecksum\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactMarkupChecksum.js\",\"./ReactServerRenderingTransaction\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactServerRenderingTransaction.js\",\"./emptyObject\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/emptyObject.js\",\"./instantiateReactComponent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/instantiateReactComponent.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactServerRenderingTransaction.js\":[function(require,module,exports){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactServerRenderingTransaction\n * @typechecks\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\nvar CallbackQueue = require(\"./CallbackQueue\");\nvar ReactPutListenerQueue = require(\"./ReactPutListenerQueue\");\nvar Transaction = require(\"./Transaction\");\n\nvar assign = require(\"./Object.assign\");\nvar emptyFunction = require(\"./emptyFunction\");\n\n/**\n * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks\n * during the performing of the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function() {\n    this.reactMountReady.reset();\n  },\n\n  close: emptyFunction\n};\n\nvar PUT_LISTENER_QUEUEING = {\n  initialize: function() {\n    this.putListenerQueue.reset();\n  },\n\n  close: emptyFunction\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [\n  PUT_LISTENER_QUEUEING,\n  ON_DOM_READY_QUEUEING\n];\n\n/**\n * @class ReactServerRenderingTransaction\n * @param {boolean} renderToStaticMarkup\n */\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n  this.reinitializeTransaction();\n  this.renderToStaticMarkup = renderToStaticMarkup;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.putListenerQueue = ReactPutListenerQueue.getPooled();\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array} Empty list of operation wrap proceedures.\n   */\n  getTransactionWrappers: function() {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function() {\n    return this.reactMountReady;\n  },\n\n  getPutListenerQueue: function() {\n    return this.putListenerQueue;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be resused.\n   */\n  destructor: function() {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n\n    ReactPutListenerQueue.release(this.putListenerQueue);\n    this.putListenerQueue = null;\n  }\n};\n\n\nassign(\n  ReactServerRenderingTransaction.prototype,\n  Transaction.Mixin,\n  Mixin\n);\n\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\n\nmodule.exports = ReactServerRenderingTransaction;\n\n},{\"./CallbackQueue\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/CallbackQueue.js\",\"./Object.assign\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Object.assign.js\",\"./PooledClass\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/PooledClass.js\",\"./ReactPutListenerQueue\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactPutListenerQueue.js\",\"./Transaction\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Transaction.js\",\"./emptyFunction\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/emptyFunction.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactUpdateQueue.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactUpdateQueue\n */\n\n'use strict';\n\nvar ReactLifeCycle = require(\"./ReactLifeCycle\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\nfunction enqueueUpdate(internalInstance) {\n  if (internalInstance !== ReactLifeCycle.currentlyMountingInstance) {\n    // If we're in a componentWillMount handler, don't enqueue a rerender\n    // because ReactUpdates assumes we're in a browser context (which is\n    // wrong for server rendering) and we're about to do a render anyway.\n    // See bug in #1740.\n    ReactUpdates.enqueueUpdate(internalInstance);\n  }\n}\n\nfunction getInternalInstanceReadyForUpdate(publicInstance, callerName) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    ReactCurrentOwner.current == null,\n    '%s(...): Cannot update during an existing state transition ' +\n    '(such as within `render`). Render methods should be a pure function ' +\n    'of props and state.',\n    callerName\n  ) : invariant(ReactCurrentOwner.current == null));\n\n  var internalInstance = ReactInstanceMap.get(publicInstance);\n  if (!internalInstance) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      // Only warn when we have a callerName. Otherwise we should be silent.\n      // We're probably calling from enqueueCallback. We don't want to warn\n      // there because we already warned for the corresponding lifecycle method.\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !callerName,\n        '%s(...): Can only update a mounted or mounting component. ' +\n        'This usually means you called %s() on an unmounted ' +\n        'component. This is a no-op.',\n        callerName,\n        callerName\n      ) : null);\n    }\n    return null;\n  }\n\n  if (internalInstance === ReactLifeCycle.currentlyUnmountingInstance) {\n    return null;\n  }\n\n  return internalInstance;\n}\n\n/**\n * ReactUpdateQueue allows for state updates to be scheduled into a later\n * reconciliation step.\n */\nvar ReactUpdateQueue = {\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @internal\n   */\n  enqueueCallback: function(publicInstance, callback) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof callback === 'function',\n      'enqueueCallback(...): You called `setProps`, `replaceProps`, ' +\n      '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +\n      'isn\\'t callable.'\n    ) : invariant(typeof callback === 'function'));\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);\n\n    // Previously we would throw an error if we didn't have an internal\n    // instance. Since we want to make it a no-op instead, we mirror the same\n    // behavior we have in other enqueue* methods.\n    // We also need to ignore callbacks in componentWillMount. See\n    // enqueueUpdates.\n    if (!internalInstance ||\n        internalInstance === ReactLifeCycle.currentlyMountingInstance) {\n      return null;\n    }\n\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    // TODO: The callback here is ignored when setState is called from\n    // componentWillMount. Either fix it or disallow doing so completely in\n    // favor of getInitialState. Alternatively, we can disallow\n    // componentWillMount during server-side rendering.\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueCallbackInternal: function(internalInstance, callback) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof callback === 'function',\n      'enqueueCallback(...): You called `setProps`, `replaceProps`, ' +\n      '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +\n      'isn\\'t callable.'\n    ) : invariant(typeof callback === 'function'));\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldUpdateComponent`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n  enqueueForceUpdate: function(publicInstance) {\n    var internalInstance = getInternalInstanceReadyForUpdate(\n      publicInstance,\n      'forceUpdate'\n    );\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingForceUpdate = true;\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @internal\n   */\n  enqueueReplaceState: function(publicInstance, completeState) {\n    var internalInstance = getInternalInstanceReadyForUpdate(\n      publicInstance,\n      'replaceState'\n    );\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingStateQueue = [completeState];\n    internalInstance._pendingReplaceState = true;\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @internal\n   */\n  enqueueSetState: function(publicInstance, partialState) {\n    var internalInstance = getInternalInstanceReadyForUpdate(\n      publicInstance,\n      'setState'\n    );\n\n    if (!internalInstance) {\n      return;\n    }\n\n    var queue =\n      internalInstance._pendingStateQueue ||\n      (internalInstance._pendingStateQueue = []);\n    queue.push(partialState);\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Sets a subset of the props.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialProps Subset of the next props.\n   * @internal\n   */\n  enqueueSetProps: function(publicInstance, partialProps) {\n    var internalInstance = getInternalInstanceReadyForUpdate(\n      publicInstance,\n      'setProps'\n    );\n\n    if (!internalInstance) {\n      return;\n    }\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      internalInstance._isTopLevel,\n      'setProps(...): You called `setProps` on a ' +\n      'component with a parent. This is an anti-pattern since props will ' +\n      'get reactively updated when rendered. Instead, change the owner\\'s ' +\n      '`render` method to pass the correct value as props to the component ' +\n      'where it is created.'\n    ) : invariant(internalInstance._isTopLevel));\n\n    // Merge with the pending element if it exists, otherwise with existing\n    // element props.\n    var element = internalInstance._pendingElement ||\n                  internalInstance._currentElement;\n    var props = assign({}, element.props, partialProps);\n    internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(\n      element,\n      props\n    );\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Replaces all of the props.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} props New props.\n   * @internal\n   */\n  enqueueReplaceProps: function(publicInstance, props) {\n    var internalInstance = getInternalInstanceReadyForUpdate(\n      publicInstance,\n      'replaceProps'\n    );\n\n    if (!internalInstance) {\n      return;\n    }\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      internalInstance._isTopLevel,\n      'replaceProps(...): You called `replaceProps` on a ' +\n      'component with a parent. This is an anti-pattern since props will ' +\n      'get reactively updated when rendered. Instead, change the owner\\'s ' +\n      '`render` method to pass the correct value as props to the component ' +\n      'where it is created.'\n    ) : invariant(internalInstance._isTopLevel));\n\n    // Merge with the pending element if it exists, otherwise with existing\n    // element props.\n    var element = internalInstance._pendingElement ||\n                  internalInstance._currentElement;\n    internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(\n      element,\n      props\n    );\n\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueElementInternal: function(internalInstance, newElement) {\n    internalInstance._pendingElement = newElement;\n    enqueueUpdate(internalInstance);\n  }\n\n};\n\nmodule.exports = ReactUpdateQueue;\n\n}).call(this,require('_process'))\n},{\"./Object.assign\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Object.assign.js\",\"./ReactCurrentOwner\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactCurrentOwner.js\",\"./ReactElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElement.js\",\"./ReactInstanceMap\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactInstanceMap.js\",\"./ReactLifeCycle\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactLifeCycle.js\",\"./ReactUpdates\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactUpdates.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"./warning\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/warning.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactUpdates.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactUpdates\n */\n\n'use strict';\n\nvar CallbackQueue = require(\"./CallbackQueue\");\nvar PooledClass = require(\"./PooledClass\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactPerf = require(\"./ReactPerf\");\nvar ReactReconciler = require(\"./ReactReconciler\");\nvar Transaction = require(\"./Transaction\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\nvar dirtyComponents = [];\nvar asapCallbackQueue = CallbackQueue.getPooled();\nvar asapEnqueued = false;\n\nvar batchingStrategy = null;\n\nfunction ensureInjected() {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    ReactUpdates.ReactReconcileTransaction && batchingStrategy,\n    'ReactUpdates: must inject a reconcile transaction class and batching ' +\n    'strategy'\n  ) : invariant(ReactUpdates.ReactReconcileTransaction && batchingStrategy));\n}\n\nvar NESTED_UPDATES = {\n  initialize: function() {\n    this.dirtyComponentsLength = dirtyComponents.length;\n  },\n  close: function() {\n    if (this.dirtyComponentsLength !== dirtyComponents.length) {\n      // Additional updates were enqueued by componentDidUpdate handlers or\n      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run\n      // these new updates so that if A's componentDidUpdate calls setState on\n      // B, B will update before the callback A's updater provided when calling\n      // setState.\n      dirtyComponents.splice(0, this.dirtyComponentsLength);\n      flushBatchedUpdates();\n    } else {\n      dirtyComponents.length = 0;\n    }\n  }\n};\n\nvar UPDATE_QUEUEING = {\n  initialize: function() {\n    this.callbackQueue.reset();\n  },\n  close: function() {\n    this.callbackQueue.notifyAll();\n  }\n};\n\nvar TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];\n\nfunction ReactUpdatesFlushTransaction() {\n  this.reinitializeTransaction();\n  this.dirtyComponentsLength = null;\n  this.callbackQueue = CallbackQueue.getPooled();\n  this.reconcileTransaction =\n    ReactUpdates.ReactReconcileTransaction.getPooled();\n}\n\nassign(\n  ReactUpdatesFlushTransaction.prototype,\n  Transaction.Mixin, {\n  getTransactionWrappers: function() {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  destructor: function() {\n    this.dirtyComponentsLength = null;\n    CallbackQueue.release(this.callbackQueue);\n    this.callbackQueue = null;\n    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);\n    this.reconcileTransaction = null;\n  },\n\n  perform: function(method, scope, a) {\n    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`\n    // with this transaction's wrappers around it.\n    return Transaction.Mixin.perform.call(\n      this,\n      this.reconcileTransaction.perform,\n      this.reconcileTransaction,\n      method,\n      scope,\n      a\n    );\n  }\n});\n\nPooledClass.addPoolingTo(ReactUpdatesFlushTransaction);\n\nfunction batchedUpdates(callback, a, b, c, d) {\n  ensureInjected();\n  batchingStrategy.batchedUpdates(callback, a, b, c, d);\n}\n\n/**\n * Array comparator for ReactComponents by mount ordering.\n *\n * @param {ReactComponent} c1 first component you're comparing\n * @param {ReactComponent} c2 second component you're comparing\n * @return {number} Return value usable by Array.prototype.sort().\n */\nfunction mountOrderComparator(c1, c2) {\n  return c1._mountOrder - c2._mountOrder;\n}\n\nfunction runBatchedUpdates(transaction) {\n  var len = transaction.dirtyComponentsLength;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    len === dirtyComponents.length,\n    'Expected flush transaction\\'s stored dirty-components length (%s) to ' +\n    'match dirty-components array length (%s).',\n    len,\n    dirtyComponents.length\n  ) : invariant(len === dirtyComponents.length));\n\n  // Since reconciling a component higher in the owner hierarchy usually (not\n  // always -- see shouldComponentUpdate()) will reconcile children, reconcile\n  // them before their children by sorting the array.\n  dirtyComponents.sort(mountOrderComparator);\n\n  for (var i = 0; i < len; i++) {\n    // If a component is unmounted before pending changes apply, it will still\n    // be here, but we assume that it has cleared its _pendingCallbacks and\n    // that performUpdateIfNecessary is a noop.\n    var component = dirtyComponents[i];\n\n    // If performUpdateIfNecessary happens to enqueue any new updates, we\n    // shouldn't execute the callbacks until the next render happens, so\n    // stash the callbacks first\n    var callbacks = component._pendingCallbacks;\n    component._pendingCallbacks = null;\n\n    ReactReconciler.performUpdateIfNecessary(\n      component,\n      transaction.reconcileTransaction\n    );\n\n    if (callbacks) {\n      for (var j = 0; j < callbacks.length; j++) {\n        transaction.callbackQueue.enqueue(\n          callbacks[j],\n          component.getPublicInstance()\n        );\n      }\n    }\n  }\n}\n\nvar flushBatchedUpdates = function() {\n  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents\n  // array and perform any updates enqueued by mount-ready handlers (i.e.,\n  // componentDidUpdate) but we need to check here too in order to catch\n  // updates enqueued by setState callbacks and asap calls.\n  while (dirtyComponents.length || asapEnqueued) {\n    if (dirtyComponents.length) {\n      var transaction = ReactUpdatesFlushTransaction.getPooled();\n      transaction.perform(runBatchedUpdates, null, transaction);\n      ReactUpdatesFlushTransaction.release(transaction);\n    }\n\n    if (asapEnqueued) {\n      asapEnqueued = false;\n      var queue = asapCallbackQueue;\n      asapCallbackQueue = CallbackQueue.getPooled();\n      queue.notifyAll();\n      CallbackQueue.release(queue);\n    }\n  }\n};\nflushBatchedUpdates = ReactPerf.measure(\n  'ReactUpdates',\n  'flushBatchedUpdates',\n  flushBatchedUpdates\n);\n\n/**\n * Mark a component as needing a rerender, adding an optional callback to a\n * list of functions which will be executed once the rerender occurs.\n */\nfunction enqueueUpdate(component) {\n  ensureInjected();\n\n  // Various parts of our code (such as ReactCompositeComponent's\n  // _renderValidatedComponent) assume that calls to render aren't nested;\n  // verify that that's the case. (This is called by each top-level update\n  // function, like setProps, setState, forceUpdate, etc.; creation and\n  // destruction of top-level components is guarded in ReactMount.)\n  (\"production\" !== process.env.NODE_ENV ? warning(\n    ReactCurrentOwner.current == null,\n    'enqueueUpdate(): Render methods should be a pure function of props ' +\n    'and state; triggering nested component updates from render is not ' +\n    'allowed. If necessary, trigger nested updates in ' +\n    'componentDidUpdate.'\n  ) : null);\n\n  if (!batchingStrategy.isBatchingUpdates) {\n    batchingStrategy.batchedUpdates(enqueueUpdate, component);\n    return;\n  }\n\n  dirtyComponents.push(component);\n}\n\n/**\n * Enqueue a callback to be run at the end of the current batching cycle. Throws\n * if no updates are currently being performed.\n */\nfunction asap(callback, context) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    batchingStrategy.isBatchingUpdates,\n    'ReactUpdates.asap: Can\\'t enqueue an asap callback in a context where' +\n    'updates are not being batched.'\n  ) : invariant(batchingStrategy.isBatchingUpdates));\n  asapCallbackQueue.enqueue(callback, context);\n  asapEnqueued = true;\n}\n\nvar ReactUpdatesInjection = {\n  injectReconcileTransaction: function(ReconcileTransaction) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ReconcileTransaction,\n      'ReactUpdates: must provide a reconcile transaction class'\n    ) : invariant(ReconcileTransaction));\n    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;\n  },\n\n  injectBatchingStrategy: function(_batchingStrategy) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      _batchingStrategy,\n      'ReactUpdates: must provide a batching strategy'\n    ) : invariant(_batchingStrategy));\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof _batchingStrategy.batchedUpdates === 'function',\n      'ReactUpdates: must provide a batchedUpdates() function'\n    ) : invariant(typeof _batchingStrategy.batchedUpdates === 'function'));\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof _batchingStrategy.isBatchingUpdates === 'boolean',\n      'ReactUpdates: must provide an isBatchingUpdates boolean attribute'\n    ) : invariant(typeof _batchingStrategy.isBatchingUpdates === 'boolean'));\n    batchingStrategy = _batchingStrategy;\n  }\n};\n\nvar ReactUpdates = {\n  /**\n   * React references `ReactReconcileTransaction` using this property in order\n   * to allow dependency injection.\n   *\n   * @internal\n   */\n  ReactReconcileTransaction: null,\n\n  batchedUpdates: batchedUpdates,\n  enqueueUpdate: enqueueUpdate,\n  flushBatchedUpdates: flushBatchedUpdates,\n  injection: ReactUpdatesInjection,\n  asap: asap\n};\n\nmodule.exports = ReactUpdates;\n\n}).call(this,require('_process'))\n},{\"./CallbackQueue\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/CallbackQueue.js\",\"./Object.assign\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Object.assign.js\",\"./PooledClass\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/PooledClass.js\",\"./ReactCurrentOwner\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactCurrentOwner.js\",\"./ReactPerf\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactPerf.js\",\"./ReactReconciler\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactReconciler.js\",\"./Transaction\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Transaction.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"./warning\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/warning.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SVGDOMPropertyConfig.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SVGDOMPropertyConfig\n */\n\n/*jslint bitwise: true*/\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\n\nvar MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;\n\nvar SVGDOMPropertyConfig = {\n  Properties: {\n    clipPath: MUST_USE_ATTRIBUTE,\n    cx: MUST_USE_ATTRIBUTE,\n    cy: MUST_USE_ATTRIBUTE,\n    d: MUST_USE_ATTRIBUTE,\n    dx: MUST_USE_ATTRIBUTE,\n    dy: MUST_USE_ATTRIBUTE,\n    fill: MUST_USE_ATTRIBUTE,\n    fillOpacity: MUST_USE_ATTRIBUTE,\n    fontFamily: MUST_USE_ATTRIBUTE,\n    fontSize: MUST_USE_ATTRIBUTE,\n    fx: MUST_USE_ATTRIBUTE,\n    fy: MUST_USE_ATTRIBUTE,\n    gradientTransform: MUST_USE_ATTRIBUTE,\n    gradientUnits: MUST_USE_ATTRIBUTE,\n    markerEnd: MUST_USE_ATTRIBUTE,\n    markerMid: MUST_USE_ATTRIBUTE,\n    markerStart: MUST_USE_ATTRIBUTE,\n    offset: MUST_USE_ATTRIBUTE,\n    opacity: MUST_USE_ATTRIBUTE,\n    patternContentUnits: MUST_USE_ATTRIBUTE,\n    patternUnits: MUST_USE_ATTRIBUTE,\n    points: MUST_USE_ATTRIBUTE,\n    preserveAspectRatio: MUST_USE_ATTRIBUTE,\n    r: MUST_USE_ATTRIBUTE,\n    rx: MUST_USE_ATTRIBUTE,\n    ry: MUST_USE_ATTRIBUTE,\n    spreadMethod: MUST_USE_ATTRIBUTE,\n    stopColor: MUST_USE_ATTRIBUTE,\n    stopOpacity: MUST_USE_ATTRIBUTE,\n    stroke: MUST_USE_ATTRIBUTE,\n    strokeDasharray: MUST_USE_ATTRIBUTE,\n    strokeLinecap: MUST_USE_ATTRIBUTE,\n    strokeOpacity: MUST_USE_ATTRIBUTE,\n    strokeWidth: MUST_USE_ATTRIBUTE,\n    textAnchor: MUST_USE_ATTRIBUTE,\n    transform: MUST_USE_ATTRIBUTE,\n    version: MUST_USE_ATTRIBUTE,\n    viewBox: MUST_USE_ATTRIBUTE,\n    x1: MUST_USE_ATTRIBUTE,\n    x2: MUST_USE_ATTRIBUTE,\n    x: MUST_USE_ATTRIBUTE,\n    y1: MUST_USE_ATTRIBUTE,\n    y2: MUST_USE_ATTRIBUTE,\n    y: MUST_USE_ATTRIBUTE\n  },\n  DOMAttributeNames: {\n    clipPath: 'clip-path',\n    fillOpacity: 'fill-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    gradientTransform: 'gradientTransform',\n    gradientUnits: 'gradientUnits',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    patternContentUnits: 'patternContentUnits',\n    patternUnits: 'patternUnits',\n    preserveAspectRatio: 'preserveAspectRatio',\n    spreadMethod: 'spreadMethod',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strokeDasharray: 'stroke-dasharray',\n    strokeLinecap: 'stroke-linecap',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    textAnchor: 'text-anchor',\n    viewBox: 'viewBox'\n  }\n};\n\nmodule.exports = SVGDOMPropertyConfig;\n\n},{\"./DOMProperty\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/DOMProperty.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SelectEventPlugin.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SelectEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPropagators = require(\"./EventPropagators\");\nvar ReactInputSelection = require(\"./ReactInputSelection\");\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\nvar getActiveElement = require(\"./getActiveElement\");\nvar isTextInputElement = require(\"./isTextInputElement\");\nvar keyOf = require(\"./keyOf\");\nvar shallowEqual = require(\"./shallowEqual\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onSelect: null}),\n      captured: keyOf({onSelectCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topBlur,\n      topLevelTypes.topContextMenu,\n      topLevelTypes.topFocus,\n      topLevelTypes.topKeyDown,\n      topLevelTypes.topMouseDown,\n      topLevelTypes.topMouseUp,\n      topLevelTypes.topSelectionChange\n    ]\n  }\n};\n\nvar activeElement = null;\nvar activeElementID = null;\nvar lastSelection = null;\nvar mouseDown = false;\n\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n *\n * @param {DOMElement} node\n * @param {object}\n */\nfunction getSelection(node) {\n  if ('selectionStart' in node &&\n      ReactInputSelection.hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd\n    };\n  } else if (window.getSelection) {\n    var selection = window.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset\n    };\n  } else if (document.selection) {\n    var range = document.selection.createRange();\n    return {\n      parentElement: range.parentElement(),\n      text: range.text,\n      top: range.boundingTop,\n      left: range.boundingLeft\n    };\n  }\n}\n\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @return {?SyntheticEvent}\n */\nfunction constructSelectEvent(nativeEvent) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior). In HTML5, select\n  // fires only on input and textarea thus if there's no focused element we\n  // won't dispatch.\n  if (mouseDown ||\n      activeElement == null ||\n      activeElement !== getActiveElement()) {\n    return null;\n  }\n\n  // Only fire when selection has actually changed.\n  var currentSelection = getSelection(activeElement);\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n\n    var syntheticEvent = SyntheticEvent.getPooled(\n      eventTypes.select,\n      activeElementID,\n      nativeEvent\n    );\n\n    syntheticEvent.type = 'select';\n    syntheticEvent.target = activeElement;\n\n    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n\n    return syntheticEvent;\n  }\n}\n\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\nvar SelectEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n\n    switch (topLevelType) {\n      // Track the input node that has focus.\n      case topLevelTypes.topFocus:\n        if (isTextInputElement(topLevelTarget) ||\n            topLevelTarget.contentEditable === 'true') {\n          activeElement = topLevelTarget;\n          activeElementID = topLevelTargetID;\n          lastSelection = null;\n        }\n        break;\n      case topLevelTypes.topBlur:\n        activeElement = null;\n        activeElementID = null;\n        lastSelection = null;\n        break;\n\n      // Don't fire the event while the user is dragging. This matches the\n      // semantics of the native select event.\n      case topLevelTypes.topMouseDown:\n        mouseDown = true;\n        break;\n      case topLevelTypes.topContextMenu:\n      case topLevelTypes.topMouseUp:\n        mouseDown = false;\n        return constructSelectEvent(nativeEvent);\n\n      // Chrome and IE fire non-standard event when selection is changed (and\n      // sometimes when it hasn't).\n      // Firefox doesn't support selectionchange, so check selection status\n      // after each key entry. The selection changes after keydown and before\n      // keyup, but we check on keydown as well in the case of holding down a\n      // key, when multiple keydown events are fired but only one keyup is.\n      case topLevelTypes.topSelectionChange:\n      case topLevelTypes.topKeyDown:\n      case topLevelTypes.topKeyUp:\n        return constructSelectEvent(nativeEvent);\n    }\n  }\n};\n\nmodule.exports = SelectEventPlugin;\n\n},{\"./EventConstants\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventConstants.js\",\"./EventPropagators\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventPropagators.js\",\"./ReactInputSelection\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactInputSelection.js\",\"./SyntheticEvent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticEvent.js\",\"./getActiveElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getActiveElement.js\",\"./isTextInputElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/isTextInputElement.js\",\"./keyOf\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/keyOf.js\",\"./shallowEqual\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/shallowEqual.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ServerReactRootIndex.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ServerReactRootIndex\n * @typechecks\n */\n\n'use strict';\n\n/**\n * Size of the reactRoot ID space. We generate random numbers for React root\n * IDs and if there's a collision the events and DOM update system will\n * get confused. In the future we need a way to generate GUIDs but for\n * now this will work on a smaller scale.\n */\nvar GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);\n\nvar ServerReactRootIndex = {\n  createReactRootIndex: function() {\n    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);\n  }\n};\n\nmodule.exports = ServerReactRootIndex;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SimpleEventPlugin.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SimpleEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPluginUtils = require(\"./EventPluginUtils\");\nvar EventPropagators = require(\"./EventPropagators\");\nvar SyntheticClipboardEvent = require(\"./SyntheticClipboardEvent\");\nvar SyntheticEvent = require(\"./SyntheticEvent\");\nvar SyntheticFocusEvent = require(\"./SyntheticFocusEvent\");\nvar SyntheticKeyboardEvent = require(\"./SyntheticKeyboardEvent\");\nvar SyntheticMouseEvent = require(\"./SyntheticMouseEvent\");\nvar SyntheticDragEvent = require(\"./SyntheticDragEvent\");\nvar SyntheticTouchEvent = require(\"./SyntheticTouchEvent\");\nvar SyntheticUIEvent = require(\"./SyntheticUIEvent\");\nvar SyntheticWheelEvent = require(\"./SyntheticWheelEvent\");\n\nvar getEventCharCode = require(\"./getEventCharCode\");\n\nvar invariant = require(\"./invariant\");\nvar keyOf = require(\"./keyOf\");\nvar warning = require(\"./warning\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  blur: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onBlur: true}),\n      captured: keyOf({onBlurCapture: true})\n    }\n  },\n  click: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onClick: true}),\n      captured: keyOf({onClickCapture: true})\n    }\n  },\n  contextMenu: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onContextMenu: true}),\n      captured: keyOf({onContextMenuCapture: true})\n    }\n  },\n  copy: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onCopy: true}),\n      captured: keyOf({onCopyCapture: true})\n    }\n  },\n  cut: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onCut: true}),\n      captured: keyOf({onCutCapture: true})\n    }\n  },\n  doubleClick: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDoubleClick: true}),\n      captured: keyOf({onDoubleClickCapture: true})\n    }\n  },\n  drag: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDrag: true}),\n      captured: keyOf({onDragCapture: true})\n    }\n  },\n  dragEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragEnd: true}),\n      captured: keyOf({onDragEndCapture: true})\n    }\n  },\n  dragEnter: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragEnter: true}),\n      captured: keyOf({onDragEnterCapture: true})\n    }\n  },\n  dragExit: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragExit: true}),\n      captured: keyOf({onDragExitCapture: true})\n    }\n  },\n  dragLeave: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragLeave: true}),\n      captured: keyOf({onDragLeaveCapture: true})\n    }\n  },\n  dragOver: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragOver: true}),\n      captured: keyOf({onDragOverCapture: true})\n    }\n  },\n  dragStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragStart: true}),\n      captured: keyOf({onDragStartCapture: true})\n    }\n  },\n  drop: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDrop: true}),\n      captured: keyOf({onDropCapture: true})\n    }\n  },\n  focus: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onFocus: true}),\n      captured: keyOf({onFocusCapture: true})\n    }\n  },\n  input: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onInput: true}),\n      captured: keyOf({onInputCapture: true})\n    }\n  },\n  keyDown: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onKeyDown: true}),\n      captured: keyOf({onKeyDownCapture: true})\n    }\n  },\n  keyPress: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onKeyPress: true}),\n      captured: keyOf({onKeyPressCapture: true})\n    }\n  },\n  keyUp: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onKeyUp: true}),\n      captured: keyOf({onKeyUpCapture: true})\n    }\n  },\n  load: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onLoad: true}),\n      captured: keyOf({onLoadCapture: true})\n    }\n  },\n  error: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onError: true}),\n      captured: keyOf({onErrorCapture: true})\n    }\n  },\n  // Note: We do not allow listening to mouseOver events. Instead, use the\n  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.\n  mouseDown: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onMouseDown: true}),\n      captured: keyOf({onMouseDownCapture: true})\n    }\n  },\n  mouseMove: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onMouseMove: true}),\n      captured: keyOf({onMouseMoveCapture: true})\n    }\n  },\n  mouseOut: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onMouseOut: true}),\n      captured: keyOf({onMouseOutCapture: true})\n    }\n  },\n  mouseOver: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onMouseOver: true}),\n      captured: keyOf({onMouseOverCapture: true})\n    }\n  },\n  mouseUp: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onMouseUp: true}),\n      captured: keyOf({onMouseUpCapture: true})\n    }\n  },\n  paste: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onPaste: true}),\n      captured: keyOf({onPasteCapture: true})\n    }\n  },\n  reset: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onReset: true}),\n      captured: keyOf({onResetCapture: true})\n    }\n  },\n  scroll: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onScroll: true}),\n      captured: keyOf({onScrollCapture: true})\n    }\n  },\n  submit: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onSubmit: true}),\n      captured: keyOf({onSubmitCapture: true})\n    }\n  },\n  touchCancel: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onTouchCancel: true}),\n      captured: keyOf({onTouchCancelCapture: true})\n    }\n  },\n  touchEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onTouchEnd: true}),\n      captured: keyOf({onTouchEndCapture: true})\n    }\n  },\n  touchMove: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onTouchMove: true}),\n      captured: keyOf({onTouchMoveCapture: true})\n    }\n  },\n  touchStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onTouchStart: true}),\n      captured: keyOf({onTouchStartCapture: true})\n    }\n  },\n  wheel: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onWheel: true}),\n      captured: keyOf({onWheelCapture: true})\n    }\n  }\n};\n\nvar topLevelEventsToDispatchConfig = {\n  topBlur:        eventTypes.blur,\n  topClick:       eventTypes.click,\n  topContextMenu: eventTypes.contextMenu,\n  topCopy:        eventTypes.copy,\n  topCut:         eventTypes.cut,\n  topDoubleClick: eventTypes.doubleClick,\n  topDrag:        eventTypes.drag,\n  topDragEnd:     eventTypes.dragEnd,\n  topDragEnter:   eventTypes.dragEnter,\n  topDragExit:    eventTypes.dragExit,\n  topDragLeave:   eventTypes.dragLeave,\n  topDragOver:    eventTypes.dragOver,\n  topDragStart:   eventTypes.dragStart,\n  topDrop:        eventTypes.drop,\n  topError:       eventTypes.error,\n  topFocus:       eventTypes.focus,\n  topInput:       eventTypes.input,\n  topKeyDown:     eventTypes.keyDown,\n  topKeyPress:    eventTypes.keyPress,\n  topKeyUp:       eventTypes.keyUp,\n  topLoad:        eventTypes.load,\n  topMouseDown:   eventTypes.mouseDown,\n  topMouseMove:   eventTypes.mouseMove,\n  topMouseOut:    eventTypes.mouseOut,\n  topMouseOver:   eventTypes.mouseOver,\n  topMouseUp:     eventTypes.mouseUp,\n  topPaste:       eventTypes.paste,\n  topReset:       eventTypes.reset,\n  topScroll:      eventTypes.scroll,\n  topSubmit:      eventTypes.submit,\n  topTouchCancel: eventTypes.touchCancel,\n  topTouchEnd:    eventTypes.touchEnd,\n  topTouchMove:   eventTypes.touchMove,\n  topTouchStart:  eventTypes.touchStart,\n  topWheel:       eventTypes.wheel\n};\n\nfor (var type in topLevelEventsToDispatchConfig) {\n  topLevelEventsToDispatchConfig[type].dependencies = [type];\n}\n\nvar SimpleEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * Same as the default implementation, except cancels the event when return\n   * value is false. This behavior will be disabled in a future release.\n   *\n   * @param {object} Event to be dispatched.\n   * @param {function} Application-level callback.\n   * @param {string} domID DOM ID to pass to the callback.\n   */\n  executeDispatch: function(event, listener, domID) {\n    var returnValue = EventPluginUtils.executeDispatch(event, listener, domID);\n\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      typeof returnValue !== 'boolean',\n      'Returning `false` from an event handler is deprecated and will be ' +\n      'ignored in a future release. Instead, manually call ' +\n      'e.stopPropagation() or e.preventDefault(), as appropriate.'\n    ) : null);\n\n    if (returnValue === false) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  },\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n    if (!dispatchConfig) {\n      return null;\n    }\n    var EventConstructor;\n    switch (topLevelType) {\n      case topLevelTypes.topInput:\n      case topLevelTypes.topLoad:\n      case topLevelTypes.topError:\n      case topLevelTypes.topReset:\n      case topLevelTypes.topSubmit:\n        // HTML Events\n        // @see http://www.w3.org/TR/html5/index.html#events-0\n        EventConstructor = SyntheticEvent;\n        break;\n      case topLevelTypes.topKeyPress:\n        // FireFox creates a keypress event for function keys too. This removes\n        // the unwanted keypress events. Enter is however both printable and\n        // non-printable. One would expect Tab to be as well (but it isn't).\n        if (getEventCharCode(nativeEvent) === 0) {\n          return null;\n        }\n        /* falls through */\n      case topLevelTypes.topKeyDown:\n      case topLevelTypes.topKeyUp:\n        EventConstructor = SyntheticKeyboardEvent;\n        break;\n      case topLevelTypes.topBlur:\n      case topLevelTypes.topFocus:\n        EventConstructor = SyntheticFocusEvent;\n        break;\n      case topLevelTypes.topClick:\n        // Firefox creates a click event on right mouse clicks. This removes the\n        // unwanted click events.\n        if (nativeEvent.button === 2) {\n          return null;\n        }\n        /* falls through */\n      case topLevelTypes.topContextMenu:\n      case topLevelTypes.topDoubleClick:\n      case topLevelTypes.topMouseDown:\n      case topLevelTypes.topMouseMove:\n      case topLevelTypes.topMouseOut:\n      case topLevelTypes.topMouseOver:\n      case topLevelTypes.topMouseUp:\n        EventConstructor = SyntheticMouseEvent;\n        break;\n      case topLevelTypes.topDrag:\n      case topLevelTypes.topDragEnd:\n      case topLevelTypes.topDragEnter:\n      case topLevelTypes.topDragExit:\n      case topLevelTypes.topDragLeave:\n      case topLevelTypes.topDragOver:\n      case topLevelTypes.topDragStart:\n      case topLevelTypes.topDrop:\n        EventConstructor = SyntheticDragEvent;\n        break;\n      case topLevelTypes.topTouchCancel:\n      case topLevelTypes.topTouchEnd:\n      case topLevelTypes.topTouchMove:\n      case topLevelTypes.topTouchStart:\n        EventConstructor = SyntheticTouchEvent;\n        break;\n      case topLevelTypes.topScroll:\n        EventConstructor = SyntheticUIEvent;\n        break;\n      case topLevelTypes.topWheel:\n        EventConstructor = SyntheticWheelEvent;\n        break;\n      case topLevelTypes.topCopy:\n      case topLevelTypes.topCut:\n      case topLevelTypes.topPaste:\n        EventConstructor = SyntheticClipboardEvent;\n        break;\n    }\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      EventConstructor,\n      'SimpleEventPlugin: Unhandled event type, `%s`.',\n      topLevelType\n    ) : invariant(EventConstructor));\n    var event = EventConstructor.getPooled(\n      dispatchConfig,\n      topLevelTargetID,\n      nativeEvent\n    );\n    EventPropagators.accumulateTwoPhaseDispatches(event);\n    return event;\n  }\n\n};\n\nmodule.exports = SimpleEventPlugin;\n\n}).call(this,require('_process'))\n},{\"./EventConstants\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventConstants.js\",\"./EventPluginUtils\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventPluginUtils.js\",\"./EventPropagators\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/EventPropagators.js\",\"./SyntheticClipboardEvent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticClipboardEvent.js\",\"./SyntheticDragEvent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticDragEvent.js\",\"./SyntheticEvent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticEvent.js\",\"./SyntheticFocusEvent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticFocusEvent.js\",\"./SyntheticKeyboardEvent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticKeyboardEvent.js\",\"./SyntheticMouseEvent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticMouseEvent.js\",\"./SyntheticTouchEvent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticTouchEvent.js\",\"./SyntheticUIEvent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticUIEvent.js\",\"./SyntheticWheelEvent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticWheelEvent.js\",\"./getEventCharCode\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getEventCharCode.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"./keyOf\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/keyOf.js\",\"./warning\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/warning.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticClipboardEvent.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticClipboardEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/clipboard-apis/\n */\nvar ClipboardEventInterface = {\n  clipboardData: function(event) {\n    return (\n      'clipboardData' in event ?\n        event.clipboardData :\n        window.clipboardData\n    );\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);\n\nmodule.exports = SyntheticClipboardEvent;\n\n},{\"./SyntheticEvent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticEvent.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticCompositionEvent.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticCompositionEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n */\nvar CompositionEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticCompositionEvent(\n  dispatchConfig,\n  dispatchMarker,\n  nativeEvent) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticEvent.augmentClass(\n  SyntheticCompositionEvent,\n  CompositionEventInterface\n);\n\nmodule.exports = SyntheticCompositionEvent;\n\n},{\"./SyntheticEvent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticEvent.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticDragEvent.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticDragEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require(\"./SyntheticMouseEvent\");\n\n/**\n * @interface DragEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar DragEventInterface = {\n  dataTransfer: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);\n\nmodule.exports = SyntheticDragEvent;\n\n},{\"./SyntheticMouseEvent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticMouseEvent.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticEvent.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\n\nvar assign = require(\"./Object.assign\");\nvar emptyFunction = require(\"./emptyFunction\");\nvar getEventTarget = require(\"./getEventTarget\");\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar EventInterface = {\n  type: null,\n  target: getEventTarget,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: emptyFunction.thatReturnsNull,\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function(event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n */\nfunction SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  this.dispatchConfig = dispatchConfig;\n  this.dispatchMarker = dispatchMarker;\n  this.nativeEvent = nativeEvent;\n\n  var Interface = this.constructor.Interface;\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    var normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      this[propName] = nativeEvent[propName];\n    }\n  }\n\n  var defaultPrevented = nativeEvent.defaultPrevented != null ?\n    nativeEvent.defaultPrevented :\n    nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n  }\n  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n}\n\nassign(SyntheticEvent.prototype, {\n\n  preventDefault: function() {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else {\n      event.returnValue = false;\n    }\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  },\n\n  stopPropagation: function() {\n    var event = this.nativeEvent;\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else {\n      event.cancelBubble = true;\n    }\n    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function() {\n    this.isPersistent = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: emptyFunction.thatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function() {\n    var Interface = this.constructor.Interface;\n    for (var propName in Interface) {\n      this[propName] = null;\n    }\n    this.dispatchConfig = null;\n    this.dispatchMarker = null;\n    this.nativeEvent = null;\n  }\n\n});\n\nSyntheticEvent.Interface = EventInterface;\n\n/**\n * Helper to reduce boilerplate when creating subclasses.\n *\n * @param {function} Class\n * @param {?object} Interface\n */\nSyntheticEvent.augmentClass = function(Class, Interface) {\n  var Super = this;\n\n  var prototype = Object.create(Super.prototype);\n  assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n\n  Class.Interface = assign({}, Super.Interface, Interface);\n  Class.augmentClass = Super.augmentClass;\n\n  PooledClass.addPoolingTo(Class, PooledClass.threeArgumentPooler);\n};\n\nPooledClass.addPoolingTo(SyntheticEvent, PooledClass.threeArgumentPooler);\n\nmodule.exports = SyntheticEvent;\n\n},{\"./Object.assign\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Object.assign.js\",\"./PooledClass\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/PooledClass.js\",\"./emptyFunction\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/emptyFunction.js\",\"./getEventTarget\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getEventTarget.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticFocusEvent.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticFocusEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require(\"./SyntheticUIEvent\");\n\n/**\n * @interface FocusEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar FocusEventInterface = {\n  relatedTarget: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);\n\nmodule.exports = SyntheticFocusEvent;\n\n},{\"./SyntheticUIEvent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticUIEvent.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticInputEvent.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticInputEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n *      /#events-inputevents\n */\nvar InputEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticInputEvent(\n  dispatchConfig,\n  dispatchMarker,\n  nativeEvent) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticEvent.augmentClass(\n  SyntheticInputEvent,\n  InputEventInterface\n);\n\nmodule.exports = SyntheticInputEvent;\n\n},{\"./SyntheticEvent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticEvent.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticKeyboardEvent.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticKeyboardEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require(\"./SyntheticUIEvent\");\n\nvar getEventCharCode = require(\"./getEventCharCode\");\nvar getEventKey = require(\"./getEventKey\");\nvar getEventModifierState = require(\"./getEventModifierState\");\n\n/**\n * @interface KeyboardEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar KeyboardEventInterface = {\n  key: getEventKey,\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: getEventModifierState,\n  // Legacy Interface\n  charCode: function(event) {\n    // `charCode` is the result of a KeyPress event and represents the value of\n    // the actual printable character.\n\n    // KeyPress is deprecated, but its replacement is not yet final and not\n    // implemented in any major browser. Only KeyPress has charCode.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    return 0;\n  },\n  keyCode: function(event) {\n    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n    // physical keyboard key.\n\n    // The actual meaning of the value depends on the users' keyboard layout\n    // which cannot be detected. Assuming that it is a US keyboard layout\n    // provides a surprisingly accurate mapping for US and European users.\n    // Due to this, it is left to the user to implement at this time.\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  },\n  which: function(event) {\n    // `which` is an alias for either `keyCode` or `charCode` depending on the\n    // type of the event.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);\n\nmodule.exports = SyntheticKeyboardEvent;\n\n},{\"./SyntheticUIEvent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticUIEvent.js\",\"./getEventCharCode\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getEventCharCode.js\",\"./getEventKey\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getEventKey.js\",\"./getEventModifierState\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getEventModifierState.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticMouseEvent.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticMouseEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require(\"./SyntheticUIEvent\");\nvar ViewportMetrics = require(\"./ViewportMetrics\");\n\nvar getEventModifierState = require(\"./getEventModifierState\");\n\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar MouseEventInterface = {\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: getEventModifierState,\n  button: function(event) {\n    // Webkit, Firefox, IE9+\n    // which:  1 2 3\n    // button: 0 1 2 (standard)\n    var button = event.button;\n    if ('which' in event) {\n      return button;\n    }\n    // IE<9\n    // which:  undefined\n    // button: 0 0 0\n    // button: 1 4 2 (onmouseup)\n    return button === 2 ? 2 : button === 4 ? 1 : 0;\n  },\n  buttons: null,\n  relatedTarget: function(event) {\n    return event.relatedTarget || (\n      ((event.fromElement === event.srcElement ? event.toElement : event.fromElement))\n    );\n  },\n  // \"Proprietary\" Interface.\n  pageX: function(event) {\n    return 'pageX' in event ?\n      event.pageX :\n      event.clientX + ViewportMetrics.currentScrollLeft;\n  },\n  pageY: function(event) {\n    return 'pageY' in event ?\n      event.pageY :\n      event.clientY + ViewportMetrics.currentScrollTop;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\n\nmodule.exports = SyntheticMouseEvent;\n\n},{\"./SyntheticUIEvent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticUIEvent.js\",\"./ViewportMetrics\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ViewportMetrics.js\",\"./getEventModifierState\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getEventModifierState.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticTouchEvent.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticTouchEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require(\"./SyntheticUIEvent\");\n\nvar getEventModifierState = require(\"./getEventModifierState\");\n\n/**\n * @interface TouchEvent\n * @see http://www.w3.org/TR/touch-events/\n */\nvar TouchEventInterface = {\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: getEventModifierState\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);\n\nmodule.exports = SyntheticTouchEvent;\n\n},{\"./SyntheticUIEvent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticUIEvent.js\",\"./getEventModifierState\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getEventModifierState.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticUIEvent.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticUIEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\nvar getEventTarget = require(\"./getEventTarget\");\n\n/**\n * @interface UIEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar UIEventInterface = {\n  view: function(event) {\n    if (event.view) {\n      return event.view;\n    }\n\n    var target = getEventTarget(event);\n    if (target != null && target.window === target) {\n      // target is a window object\n      return target;\n    }\n\n    var doc = target.ownerDocument;\n    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n    if (doc) {\n      return doc.defaultView || doc.parentWindow;\n    } else {\n      return window;\n    }\n  },\n  detail: function(event) {\n    return event.detail || 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);\n\nmodule.exports = SyntheticUIEvent;\n\n},{\"./SyntheticEvent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticEvent.js\",\"./getEventTarget\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getEventTarget.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticWheelEvent.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticWheelEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require(\"./SyntheticMouseEvent\");\n\n/**\n * @interface WheelEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar WheelEventInterface = {\n  deltaX: function(event) {\n    return (\n      'deltaX' in event ? event.deltaX :\n      // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n      'wheelDeltaX' in event ? -event.wheelDeltaX : 0\n    );\n  },\n  deltaY: function(event) {\n    return (\n      'deltaY' in event ? event.deltaY :\n      // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n      'wheelDeltaY' in event ? -event.wheelDeltaY :\n      // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n      'wheelDelta' in event ? -event.wheelDelta : 0\n    );\n  },\n  deltaZ: null,\n\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n  deltaMode: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticMouseEvent}\n */\nfunction SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);\n\nmodule.exports = SyntheticWheelEvent;\n\n},{\"./SyntheticMouseEvent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/SyntheticMouseEvent.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Transaction.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Transaction\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\n/**\n * `Transaction` creates a black box that is able to wrap any method such that\n * certain invariants are maintained before and after the method is invoked\n * (Even if an exception is thrown while invoking the wrapped method). Whoever\n * instantiates a transaction can provide enforcers of the invariants at\n * creation time. The `Transaction` class itself will supply one additional\n * automatic invariant for you - the invariant that any transaction instance\n * should not be run while it is already being run. You would typically create a\n * single instance of a `Transaction` for reuse multiple times, that potentially\n * is used to wrap several different methods. Wrappers are extremely simple -\n * they only require implementing two methods.\n *\n * <pre>\n *                       wrappers (injected at creation time)\n *                                      +        +\n *                                      |        |\n *                    +-----------------|--------|--------------+\n *                    |                 v        |              |\n *                    |      +---------------+   |              |\n *                    |   +--|    wrapper1   |---|----+         |\n *                    |   |  +---------------+   v    |         |\n *                    |   |          +-------------+  |         |\n *                    |   |     +----|   wrapper2  |--------+   |\n *                    |   |     |    +-------------+  |     |   |\n *                    |   |     |                     |     |   |\n *                    |   v     v                     v     v   | wrapper\n *                    | +---+ +---+   +---------+   +---+ +---+ | invariants\n * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained\n * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | +---+ +---+   +---------+   +---+ +---+ |\n *                    |  initialize                    close    |\n *                    +-----------------------------------------+\n * </pre>\n *\n * Use cases:\n * - Preserving the input selection ranges before/after reconciliation.\n *   Restoring selection even in the event of an unexpected error.\n * - Deactivating events while rearranging the DOM, preventing blurs/focuses,\n *   while guaranteeing that afterwards, the event system is reactivated.\n * - Flushing a queue of collected DOM mutations to the main UI thread after a\n *   reconciliation takes place in a worker thread.\n * - Invoking any collected `componentDidUpdate` callbacks after rendering new\n *   content.\n * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue\n *   to preserve the `scrollTop` (an automatic scroll aware DOM).\n * - (Future use case): Layout calculations before and after DOM updates.\n *\n * Transactional plugin API:\n * - A module that has an `initialize` method that returns any precomputation.\n * - and a `close` method that accepts the precomputation. `close` is invoked\n *   when the wrapped process is completed, or has failed.\n *\n * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules\n * that implement `initialize` and `close`.\n * @return {Transaction} Single transaction for reuse in thread.\n *\n * @class Transaction\n */\nvar Mixin = {\n  /**\n   * Sets up this instance so that it is prepared for collecting metrics. Does\n   * so such that this setup method may be used on an instance that is already\n   * initialized, in a way that does not consume additional memory upon reuse.\n   * That can be useful if you decide to make your subclass of this mixin a\n   * \"PooledClass\".\n   */\n  reinitializeTransaction: function() {\n    this.transactionWrappers = this.getTransactionWrappers();\n    if (!this.wrapperInitData) {\n      this.wrapperInitData = [];\n    } else {\n      this.wrapperInitData.length = 0;\n    }\n    this._isInTransaction = false;\n  },\n\n  _isInTransaction: false,\n\n  /**\n   * @abstract\n   * @return {Array<TransactionWrapper>} Array of transaction wrappers.\n   */\n  getTransactionWrappers: null,\n\n  isInTransaction: function() {\n    return !!this._isInTransaction;\n  },\n\n  /**\n   * Executes the function within a safety window. Use this for the top level\n   * methods that result in large amounts of computation/mutations that would\n   * need to be safety checked.\n   *\n   * @param {function} method Member of scope to call.\n   * @param {Object} scope Scope to invoke from.\n   * @param {Object?=} args... Arguments to pass to the method (optional).\n   *                           Helps prevent need to bind in many cases.\n   * @return Return value from `method`.\n   */\n  perform: function(method, scope, a, b, c, d, e, f) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !this.isInTransaction(),\n      'Transaction.perform(...): Cannot initialize a transaction when there ' +\n      'is already an outstanding transaction.'\n    ) : invariant(!this.isInTransaction()));\n    var errorThrown;\n    var ret;\n    try {\n      this._isInTransaction = true;\n      // Catching errors makes debugging more difficult, so we start with\n      // errorThrown set to true before setting it to false after calling\n      // close -- if it's still set to true in the finally block, it means\n      // one of these calls threw.\n      errorThrown = true;\n      this.initializeAll(0);\n      ret = method.call(scope, a, b, c, d, e, f);\n      errorThrown = false;\n    } finally {\n      try {\n        if (errorThrown) {\n          // If `method` throws, prefer to show that stack trace over any thrown\n          // by invoking `closeAll`.\n          try {\n            this.closeAll(0);\n          } catch (err) {\n          }\n        } else {\n          // Since `method` didn't throw, we don't want to silence the exception\n          // here.\n          this.closeAll(0);\n        }\n      } finally {\n        this._isInTransaction = false;\n      }\n    }\n    return ret;\n  },\n\n  initializeAll: function(startIndex) {\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      try {\n        // Catching errors makes debugging more difficult, so we start with the\n        // OBSERVED_ERROR state before overwriting it with the real return value\n        // of initialize -- if it's still set to OBSERVED_ERROR in the finally\n        // block, it means wrapper.initialize threw.\n        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;\n        this.wrapperInitData[i] = wrapper.initialize ?\n          wrapper.initialize.call(this) :\n          null;\n      } finally {\n        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {\n          // The initializer for wrapper i threw an error; initialize the\n          // remaining wrappers but silence any exceptions from them to ensure\n          // that the first error is the one to bubble up.\n          try {\n            this.initializeAll(i + 1);\n          } catch (err) {\n          }\n        }\n      }\n    }\n  },\n\n  /**\n   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into\n   * them the respective return values of `this.transactionWrappers.init[i]`\n   * (`close`rs that correspond to initializers that failed will not be\n   * invoked).\n   */\n  closeAll: function(startIndex) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      this.isInTransaction(),\n      'Transaction.closeAll(): Cannot close transaction when none are open.'\n    ) : invariant(this.isInTransaction()));\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      var initData = this.wrapperInitData[i];\n      var errorThrown;\n      try {\n        // Catching errors makes debugging more difficult, so we start with\n        // errorThrown set to true before setting it to false after calling\n        // close -- if it's still set to true in the finally block, it means\n        // wrapper.close threw.\n        errorThrown = true;\n        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {\n          wrapper.close.call(this, initData);\n        }\n        errorThrown = false;\n      } finally {\n        if (errorThrown) {\n          // The closer for wrapper i threw an error; close the remaining\n          // wrappers but silence any exceptions from them to ensure that the\n          // first error is the one to bubble up.\n          try {\n            this.closeAll(i + 1);\n          } catch (e) {\n          }\n        }\n      }\n    }\n    this.wrapperInitData.length = 0;\n  }\n};\n\nvar Transaction = {\n\n  Mixin: Mixin,\n\n  /**\n   * Token to look for to determine if an error occured.\n   */\n  OBSERVED_ERROR: {}\n\n};\n\nmodule.exports = Transaction;\n\n}).call(this,require('_process'))\n},{\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ViewportMetrics.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ViewportMetrics\n */\n\n'use strict';\n\nvar ViewportMetrics = {\n\n  currentScrollLeft: 0,\n\n  currentScrollTop: 0,\n\n  refreshScrollValues: function(scrollPosition) {\n    ViewportMetrics.currentScrollLeft = scrollPosition.x;\n    ViewportMetrics.currentScrollTop = scrollPosition.y;\n  }\n\n};\n\nmodule.exports = ViewportMetrics;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/accumulateInto.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule accumulateInto\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\n/**\n *\n * Accumulates items that must not be null or undefined into the first one. This\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\n * API cleanness. Since `current` can be null before being passed in and not\n * null after this function, make sure to assign it back to `current`:\n *\n * `a = accumulateInto(a, b);`\n *\n * This API should be sparingly used. Try `accumulate` for something cleaner.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulateInto(current, next) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    next != null,\n    'accumulateInto(...): Accumulated items must not be null or undefined.'\n  ) : invariant(next != null));\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  var currentIsArray = Array.isArray(current);\n  var nextIsArray = Array.isArray(next);\n\n  if (currentIsArray && nextIsArray) {\n    current.push.apply(current, next);\n    return current;\n  }\n\n  if (currentIsArray) {\n    current.push(next);\n    return current;\n  }\n\n  if (nextIsArray) {\n    // A bit too dangerous to mutate `next`.\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\nmodule.exports = accumulateInto;\n\n}).call(this,require('_process'))\n},{\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/adler32.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule adler32\n */\n\n/* jslint bitwise:true */\n\n'use strict';\n\nvar MOD = 65521;\n\n// This is a clean-room implementation of adler32 designed for detecting\n// if markup is not what we expect it to be. It does not need to be\n// cryptographically strong, only reasonably good at detecting if markup\n// generated on the server is different than that on the client.\nfunction adler32(data) {\n  var a = 1;\n  var b = 0;\n  for (var i = 0; i < data.length; i++) {\n    a = (a + data.charCodeAt(i)) % MOD;\n    b = (b + a) % MOD;\n  }\n  return a | (b << 16);\n}\n\nmodule.exports = adler32;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/camelize.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule camelize\n * @typechecks\n */\n\nvar _hyphenPattern = /-(.)/g;\n\n/**\n * Camelcases a hyphenated string, for example:\n *\n *   > camelize('background-color')\n *   < \"backgroundColor\"\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelize(string) {\n  return string.replace(_hyphenPattern, function(_, character) {\n    return character.toUpperCase();\n  });\n}\n\nmodule.exports = camelize;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/camelizeStyleName.js\":[function(require,module,exports){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule camelizeStyleName\n * @typechecks\n */\n\n\"use strict\";\n\nvar camelize = require(\"./camelize\");\n\nvar msPattern = /^-ms-/;\n\n/**\n * Camelcases a hyphenated CSS property name, for example:\n *\n *   > camelizeStyleName('background-color')\n *   < \"backgroundColor\"\n *   > camelizeStyleName('-moz-transition')\n *   < \"MozTransition\"\n *   > camelizeStyleName('-ms-transition')\n *   < \"msTransition\"\n *\n * As Andi Smith suggests\n * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n * is converted to lowercase `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelizeStyleName(string) {\n  return camelize(string.replace(msPattern, 'ms-'));\n}\n\nmodule.exports = camelizeStyleName;\n\n},{\"./camelize\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/camelize.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/containsNode.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule containsNode\n * @typechecks\n */\n\nvar isTextNode = require(\"./isTextNode\");\n\n/*jslint bitwise:true */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n *\n * @param {?DOMNode} outerNode Outer DOM node.\n * @param {?DOMNode} innerNode Inner DOM node.\n * @return {boolean} True if `outerNode` contains or is `innerNode`.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if (outerNode.contains) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n},{\"./isTextNode\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/isTextNode.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/createArrayFromMixed.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createArrayFromMixed\n * @typechecks\n */\n\nvar toArray = require(\"./toArray\");\n\n/**\n * Perform a heuristic test to determine if an object is \"array-like\".\n *\n *   A monk asked Joshu, a Zen master, \"Has a dog Buddha nature?\"\n *   Joshu replied: \"Mu.\"\n *\n * This function determines if its argument has \"array nature\": it returns\n * true if the argument is an actual array, an `arguments' object, or an\n * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).\n *\n * It will return false for other array-like objects like Filelist.\n *\n * @param {*} obj\n * @return {boolean}\n */\nfunction hasArrayNature(obj) {\n  return (\n    // not null/false\n    !!obj &&\n    // arrays are objects, NodeLists are functions in Safari\n    (typeof obj == 'object' || typeof obj == 'function') &&\n    // quacks like an array\n    ('length' in obj) &&\n    // not window\n    !('setInterval' in obj) &&\n    // no DOM node should be considered an array-like\n    // a 'select' element has 'length' and 'item' properties on IE8\n    (typeof obj.nodeType != 'number') &&\n    (\n      // a real array\n      (// HTMLCollection/NodeList\n      (Array.isArray(obj) ||\n      // arguments\n      ('callee' in obj) || 'item' in obj))\n    )\n  );\n}\n\n/**\n * Ensure that the argument is an array by wrapping it in an array if it is not.\n * Creates a copy of the argument if it is already an array.\n *\n * This is mostly useful idiomatically:\n *\n *   var createArrayFromMixed = require('createArrayFromMixed');\n *\n *   function takesOneOrMoreThings(things) {\n *     things = createArrayFromMixed(things);\n *     ...\n *   }\n *\n * This allows you to treat `things' as an array, but accept scalars in the API.\n *\n * If you need to convert an array-like object, like `arguments`, into an array\n * use toArray instead.\n *\n * @param {*} obj\n * @return {array}\n */\nfunction createArrayFromMixed(obj) {\n  if (!hasArrayNature(obj)) {\n    return [obj];\n  } else if (Array.isArray(obj)) {\n    return obj.slice();\n  } else {\n    return toArray(obj);\n  }\n}\n\nmodule.exports = createArrayFromMixed;\n\n},{\"./toArray\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/toArray.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/createFullPageComponent.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createFullPageComponent\n * @typechecks\n */\n\n'use strict';\n\n// Defeat circular references by requiring this directly.\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Create a component that will throw an exception when unmounted.\n *\n * Components like <html> <head> and <body> can't be removed or added\n * easily in a cross-browser way, however it's valuable to be able to\n * take advantage of React's reconciliation for styling and <title>\n * management. So we just document it and throw in dangerous cases.\n *\n * @param {string} tag The tag to wrap\n * @return {function} convenience constructor of new component\n */\nfunction createFullPageComponent(tag) {\n  var elementFactory = ReactElement.createFactory(tag);\n\n  var FullPageComponent = ReactClass.createClass({\n    tagName: tag.toUpperCase(),\n    displayName: 'ReactFullPageComponent' + tag,\n\n    componentWillUnmount: function() {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        false,\n        '%s tried to unmount. Because of cross-browser quirks it is ' +\n        'impossible to unmount some top-level components (eg <html>, <head>, ' +\n        'and <body>) reliably and efficiently. To fix this, have a single ' +\n        'top-level component that never unmounts render these elements.',\n        this.constructor.displayName\n      ) : invariant(false));\n    },\n\n    render: function() {\n      return elementFactory(this.props);\n    }\n  });\n\n  return FullPageComponent;\n}\n\nmodule.exports = createFullPageComponent;\n\n}).call(this,require('_process'))\n},{\"./ReactClass\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactClass.js\",\"./ReactElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElement.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/createNodesFromMarkup.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createNodesFromMarkup\n * @typechecks\n */\n\n/*jslint evil: true, sub: true */\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar createArrayFromMixed = require(\"./createArrayFromMixed\");\nvar getMarkupWrap = require(\"./getMarkupWrap\");\nvar invariant = require(\"./invariant\");\n\n/**\n * Dummy container used to render all markup.\n */\nvar dummyNode =\n  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Pattern used by `getNodeName`.\n */\nvar nodeNamePattern = /^\\s*<(\\w+)/;\n\n/**\n * Extracts the `nodeName` of the first element in a string of markup.\n *\n * @param {string} markup String of markup.\n * @return {?string} Node name of the supplied markup.\n */\nfunction getNodeName(markup) {\n  var nodeNameMatch = markup.match(nodeNamePattern);\n  return nodeNameMatch && nodeNameMatch[1].toLowerCase();\n}\n\n/**\n * Creates an array containing the nodes rendered from the supplied markup. The\n * optionally supplied `handleScript` function will be invoked once for each\n * <script> element that is rendered. If no `handleScript` function is supplied,\n * an exception is thrown if any <script> elements are rendered.\n *\n * @param {string} markup A string of valid HTML markup.\n * @param {?function} handleScript Invoked once for each rendered <script>.\n * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.\n */\nfunction createNodesFromMarkup(markup, handleScript) {\n  var node = dummyNode;\n  (\"production\" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'createNodesFromMarkup dummy not initialized') : invariant(!!dummyNode));\n  var nodeName = getNodeName(markup);\n\n  var wrap = nodeName && getMarkupWrap(nodeName);\n  if (wrap) {\n    node.innerHTML = wrap[1] + markup + wrap[2];\n\n    var wrapDepth = wrap[0];\n    while (wrapDepth--) {\n      node = node.lastChild;\n    }\n  } else {\n    node.innerHTML = markup;\n  }\n\n  var scripts = node.getElementsByTagName('script');\n  if (scripts.length) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      handleScript,\n      'createNodesFromMarkup(...): Unexpected <script> element rendered.'\n    ) : invariant(handleScript));\n    createArrayFromMixed(scripts).forEach(handleScript);\n  }\n\n  var nodes = createArrayFromMixed(node.childNodes);\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n  return nodes;\n}\n\nmodule.exports = createNodesFromMarkup;\n\n}).call(this,require('_process'))\n},{\"./ExecutionEnvironment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ExecutionEnvironment.js\",\"./createArrayFromMixed\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/createArrayFromMixed.js\",\"./getMarkupWrap\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getMarkupWrap.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/dangerousStyleValue.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule dangerousStyleValue\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CSSProperty = require(\"./CSSProperty\");\n\nvar isUnitlessNumber = CSSProperty.isUnitlessNumber;\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @return {string} Normalized style value with dimensions applied.\n */\nfunction dangerousStyleValue(name, value) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n\n  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n  if (isEmpty) {\n    return '';\n  }\n\n  var isNonNumeric = isNaN(value);\n  if (isNonNumeric || value === 0 ||\n      isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {\n    return '' + value; // cast to string\n  }\n\n  if (typeof value === 'string') {\n    value = value.trim();\n  }\n  return value + 'px';\n}\n\nmodule.exports = dangerousStyleValue;\n\n},{\"./CSSProperty\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/CSSProperty.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/emptyFunction.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule emptyFunction\n */\n\nfunction makeEmptyFunction(arg) {\n  return function() {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nfunction emptyFunction() {}\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function() { return this; };\nemptyFunction.thatReturnsArgument = function(arg) { return arg; };\n\nmodule.exports = emptyFunction;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/emptyObject.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule emptyObject\n */\n\n\"use strict\";\n\nvar emptyObject = {};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n}).call(this,require('_process'))\n},{\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/escapeTextContentForBrowser.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule escapeTextContentForBrowser\n */\n\n'use strict';\n\nvar ESCAPE_LOOKUP = {\n  '&': '&amp;',\n  '>': '&gt;',\n  '<': '&lt;',\n  '\"': '&quot;',\n  '\\'': '&#x27;'\n};\n\nvar ESCAPE_REGEX = /[&><\"']/g;\n\nfunction escaper(match) {\n  return ESCAPE_LOOKUP[match];\n}\n\n/**\n * Escapes text to prevent scripting attacks.\n *\n * @param {*} text Text value to escape.\n * @return {string} An escaped string.\n */\nfunction escapeTextContentForBrowser(text) {\n  return ('' + text).replace(ESCAPE_REGEX, escaper);\n}\n\nmodule.exports = escapeTextContentForBrowser;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/findDOMNode.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule findDOMNode\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\nvar ReactMount = require(\"./ReactMount\");\n\nvar invariant = require(\"./invariant\");\nvar isNode = require(\"./isNode\");\nvar warning = require(\"./warning\");\n\n/**\n * Returns the DOM node rendered by this element.\n *\n * @param {ReactComponent|DOMElement} componentOrElement\n * @return {DOMElement} The root node of this element.\n */\nfunction findDOMNode(componentOrElement) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    var owner = ReactCurrentOwner.current;\n    if (owner !== null) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        owner._warnedAboutRefsInRender,\n        '%s is accessing getDOMNode or findDOMNode inside its render(). ' +\n        'render() should be a pure function of props and state. It should ' +\n        'never access something that requires stale data from the previous ' +\n        'render, such as refs. Move this logic to componentDidMount and ' +\n        'componentDidUpdate instead.',\n        owner.getName() || 'A component'\n      ) : null);\n      owner._warnedAboutRefsInRender = true;\n    }\n  }\n  if (componentOrElement == null) {\n    return null;\n  }\n  if (isNode(componentOrElement)) {\n    return componentOrElement;\n  }\n  if (ReactInstanceMap.has(componentOrElement)) {\n    return ReactMount.getNodeFromInstance(componentOrElement);\n  }\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    componentOrElement.render == null ||\n    typeof componentOrElement.render !== 'function',\n    'Component (with keys: %s) contains `render` method ' +\n    'but is not mounted in the DOM',\n    Object.keys(componentOrElement)\n  ) : invariant(componentOrElement.render == null ||\n  typeof componentOrElement.render !== 'function'));\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    false,\n    'Element appears to be neither ReactComponent nor DOMNode (keys: %s)',\n    Object.keys(componentOrElement)\n  ) : invariant(false));\n}\n\nmodule.exports = findDOMNode;\n\n}).call(this,require('_process'))\n},{\"./ReactCurrentOwner\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactCurrentOwner.js\",\"./ReactInstanceMap\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactInstanceMap.js\",\"./ReactMount\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactMount.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"./isNode\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/isNode.js\",\"./warning\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/warning.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/flattenChildren.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule flattenChildren\n */\n\n'use strict';\n\nvar traverseAllChildren = require(\"./traverseAllChildren\");\nvar warning = require(\"./warning\");\n\n/**\n * @param {function} traverseContext Context passed through traversal.\n * @param {?ReactComponent} child React child component.\n * @param {!string} name String name of key path to child.\n */\nfunction flattenSingleChildIntoContext(traverseContext, child, name) {\n  // We found a component instance.\n  var result = traverseContext;\n  var keyUnique = !result.hasOwnProperty(name);\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      keyUnique,\n      'flattenChildren(...): Encountered two children with the same key, ' +\n      '`%s`. Child keys must be unique; when two children share a key, only ' +\n      'the first child will be used.',\n      name\n    ) : null);\n  }\n  if (keyUnique && child != null) {\n    result[name] = child;\n  }\n}\n\n/**\n * Flattens children that are typically specified as `props.children`. Any null\n * children will not be included in the resulting object.\n * @return {!object} flattened children keyed by name.\n */\nfunction flattenChildren(children) {\n  if (children == null) {\n    return children;\n  }\n  var result = {};\n  traverseAllChildren(children, flattenSingleChildIntoContext, result);\n  return result;\n}\n\nmodule.exports = flattenChildren;\n\n}).call(this,require('_process'))\n},{\"./traverseAllChildren\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/traverseAllChildren.js\",\"./warning\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/warning.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/focusNode.js\":[function(require,module,exports){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule focusNode\n */\n\n\"use strict\";\n\n/**\n * @param {DOMElement} node input/textarea to focus\n */\nfunction focusNode(node) {\n  // IE8 can throw \"Can't move focus to the control because it is invisible,\n  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n  // reasons that are too expensive and fragile to test.\n  try {\n    node.focus();\n  } catch(e) {\n  }\n}\n\nmodule.exports = focusNode;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/forEachAccumulated.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule forEachAccumulated\n */\n\n'use strict';\n\n/**\n * @param {array} an \"accumulation\" of items which is either an Array or\n * a single item. Useful when paired with the `accumulate` module. This is a\n * simple utility that allows us to reason about a collection of items, but\n * handling the case when there is exactly one item (and we do not need to\n * allocate an array).\n */\nvar forEachAccumulated = function(arr, cb, scope) {\n  if (Array.isArray(arr)) {\n    arr.forEach(cb, scope);\n  } else if (arr) {\n    cb.call(scope, arr);\n  }\n};\n\nmodule.exports = forEachAccumulated;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getActiveElement.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getActiveElement\n * @typechecks\n */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document body is not yet defined.\n */\nfunction getActiveElement() /*?DOMElement*/ {\n  try {\n    return document.activeElement || document.body;\n  } catch (e) {\n    return document.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getEventCharCode.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventCharCode\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * `charCode` represents the actual \"character code\" and is safe to use with\n * `String.fromCharCode`. As such, only keys that correspond to printable\n * characters produce a valid `charCode`, the only exception to this is Enter.\n * The Tab-key is considered non-printable and does not have a `charCode`,\n * presumably because it does not produce a tab-character in browsers.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `charCode` property.\n */\nfunction getEventCharCode(nativeEvent) {\n  var charCode;\n  var keyCode = nativeEvent.keyCode;\n\n  if ('charCode' in nativeEvent) {\n    charCode = nativeEvent.charCode;\n\n    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n    if (charCode === 0 && keyCode === 13) {\n      charCode = 13;\n    }\n  } else {\n    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n    charCode = keyCode;\n  }\n\n  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n  // Must not discard the (non-)printable Enter-key.\n  if (charCode >= 32 || charCode === 13) {\n    return charCode;\n  }\n\n  return 0;\n}\n\nmodule.exports = getEventCharCode;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getEventKey.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventKey\n * @typechecks static-only\n */\n\n'use strict';\n\nvar getEventCharCode = require(\"./getEventCharCode\");\n\n/**\n * Normalization of deprecated HTML5 `key` values\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar normalizeKey = {\n  'Esc': 'Escape',\n  'Spacebar': ' ',\n  'Left': 'ArrowLeft',\n  'Up': 'ArrowUp',\n  'Right': 'ArrowRight',\n  'Down': 'ArrowDown',\n  'Del': 'Delete',\n  'Win': 'OS',\n  'Menu': 'ContextMenu',\n  'Apps': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'MozPrintableKey': 'Unidentified'\n};\n\n/**\n * Translation from legacy `keyCode` to HTML5 `key`\n * Only special keys supported, all others depend on keyboard layout or browser\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar translateToKey = {\n  8: 'Backspace',\n  9: 'Tab',\n  12: 'Clear',\n  13: 'Enter',\n  16: 'Shift',\n  17: 'Control',\n  18: 'Alt',\n  19: 'Pause',\n  20: 'CapsLock',\n  27: 'Escape',\n  32: ' ',\n  33: 'PageUp',\n  34: 'PageDown',\n  35: 'End',\n  36: 'Home',\n  37: 'ArrowLeft',\n  38: 'ArrowUp',\n  39: 'ArrowRight',\n  40: 'ArrowDown',\n  45: 'Insert',\n  46: 'Delete',\n  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',\n  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',\n  144: 'NumLock',\n  145: 'ScrollLock',\n  224: 'Meta'\n};\n\n/**\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `key` property.\n */\nfunction getEventKey(nativeEvent) {\n  if (nativeEvent.key) {\n    // Normalize inconsistent values reported by browsers due to\n    // implementations of a working draft specification.\n\n    // FireFox implements `key` but returns `MozPrintableKey` for all\n    // printable characters (normalized to `Unidentified`), ignore it.\n    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n    if (key !== 'Unidentified') {\n      return key;\n    }\n  }\n\n  // Browser does not implement `key`, polyfill as much of it as we can.\n  if (nativeEvent.type === 'keypress') {\n    var charCode = getEventCharCode(nativeEvent);\n\n    // The enter-key is technically both printable and non-printable and can\n    // thus be captured by `keypress`, no other non-printable key should.\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n  }\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n    // While user keyboard layout determines the actual meaning of each\n    // `keyCode` value, almost all function keys have a universal value.\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n  }\n  return '';\n}\n\nmodule.exports = getEventKey;\n\n},{\"./getEventCharCode\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getEventCharCode.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getEventModifierState.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventModifierState\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Translation from modifier key to the associated property in the event.\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n */\n\nvar modifierKeyToProp = {\n  'Alt': 'altKey',\n  'Control': 'ctrlKey',\n  'Meta': 'metaKey',\n  'Shift': 'shiftKey'\n};\n\n// IE8 does not implement getModifierState so we simply map it to the only\n// modifier keys exposed by the event itself, does not support Lock-keys.\n// Currently, all major browsers except Chrome seems to support Lock-keys.\nfunction modifierStateGetter(keyArg) {\n  /*jshint validthis:true */\n  var syntheticEvent = this;\n  var nativeEvent = syntheticEvent.nativeEvent;\n  if (nativeEvent.getModifierState) {\n    return nativeEvent.getModifierState(keyArg);\n  }\n  var keyProp = modifierKeyToProp[keyArg];\n  return keyProp ? !!nativeEvent[keyProp] : false;\n}\n\nfunction getEventModifierState(nativeEvent) {\n  return modifierStateGetter;\n}\n\nmodule.exports = getEventModifierState;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getEventTarget.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventTarget\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Gets the target node from a native browser event by accounting for\n * inconsistencies in browser DOM APIs.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {DOMEventTarget} Target node.\n */\nfunction getEventTarget(nativeEvent) {\n  var target = nativeEvent.target || nativeEvent.srcElement || window;\n  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n  // @see http://www.quirksmode.org/js/events_properties.html\n  return target.nodeType === 3 ? target.parentNode : target;\n}\n\nmodule.exports = getEventTarget;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getIteratorFn.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getIteratorFn\n * @typechecks static-only\n */\n\n'use strict';\n\n/* global Symbol */\nvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n/**\n * Returns the iterator method function contained on the iterable object.\n *\n * Be sure to invoke the function with the iterable as context:\n *\n *     var iteratorFn = getIteratorFn(myIterable);\n *     if (iteratorFn) {\n *       var iterator = iteratorFn.call(myIterable);\n *       ...\n *     }\n *\n * @param {?object} maybeIterable\n * @return {?function}\n */\nfunction getIteratorFn(maybeIterable) {\n  var iteratorFn = maybeIterable && (\n    (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL])\n  );\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\nmodule.exports = getIteratorFn;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getMarkupWrap.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getMarkupWrap\n */\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Dummy container used to detect which wraps are necessary.\n */\nvar dummyNode =\n  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Some browsers cannot use `innerHTML` to render certain elements standalone,\n * so we wrap them, render the wrapped nodes, then extract the desired node.\n *\n * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n */\nvar shouldWrap = {\n  // Force wrapping for SVG elements because if they get created inside a <div>,\n  // they will be initialized in the wrong namespace (and will not display).\n  'circle': true,\n  'clipPath': true,\n  'defs': true,\n  'ellipse': true,\n  'g': true,\n  'line': true,\n  'linearGradient': true,\n  'path': true,\n  'polygon': true,\n  'polyline': true,\n  'radialGradient': true,\n  'rect': true,\n  'stop': true,\n  'text': true\n};\n\nvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\nvar tableWrap = [1, '<table>', '</table>'];\nvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nvar svgWrap = [1, '<svg>', '</svg>'];\n\nvar markupWrap = {\n  '*': [1, '?<div>', '</div>'],\n\n  'area': [1, '<map>', '</map>'],\n  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  'legend': [1, '<fieldset>', '</fieldset>'],\n  'param': [1, '<object>', '</object>'],\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\n\n  'optgroup': selectWrap,\n  'option': selectWrap,\n\n  'caption': tableWrap,\n  'colgroup': tableWrap,\n  'tbody': tableWrap,\n  'tfoot': tableWrap,\n  'thead': tableWrap,\n\n  'td': trWrap,\n  'th': trWrap,\n\n  'circle': svgWrap,\n  'clipPath': svgWrap,\n  'defs': svgWrap,\n  'ellipse': svgWrap,\n  'g': svgWrap,\n  'line': svgWrap,\n  'linearGradient': svgWrap,\n  'path': svgWrap,\n  'polygon': svgWrap,\n  'polyline': svgWrap,\n  'radialGradient': svgWrap,\n  'rect': svgWrap,\n  'stop': svgWrap,\n  'text': svgWrap\n};\n\n/**\n * Gets the markup wrap configuration for the supplied `nodeName`.\n *\n * NOTE: This lazily detects which wraps are necessary for the current browser.\n *\n * @param {string} nodeName Lowercase `nodeName`.\n * @return {?array} Markup wrap configuration, if applicable.\n */\nfunction getMarkupWrap(nodeName) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'Markup wrapping node not initialized') : invariant(!!dummyNode));\n  if (!markupWrap.hasOwnProperty(nodeName)) {\n    nodeName = '*';\n  }\n  if (!shouldWrap.hasOwnProperty(nodeName)) {\n    if (nodeName === '*') {\n      dummyNode.innerHTML = '<link />';\n    } else {\n      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n    }\n    shouldWrap[nodeName] = !dummyNode.firstChild;\n  }\n  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n}\n\n\nmodule.exports = getMarkupWrap;\n\n}).call(this,require('_process'))\n},{\"./ExecutionEnvironment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ExecutionEnvironment.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getNodeForCharacterOffset.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getNodeForCharacterOffset\n */\n\n'use strict';\n\n/**\n * Given any node return the first leaf node without children.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {DOMElement|DOMTextNode}\n */\nfunction getLeafNode(node) {\n  while (node && node.firstChild) {\n    node = node.firstChild;\n  }\n  return node;\n}\n\n/**\n * Get the next sibling within a container. This will walk up the\n * DOM if a node's siblings have been exhausted.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {?DOMElement|DOMTextNode}\n */\nfunction getSiblingNode(node) {\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n    node = node.parentNode;\n  }\n}\n\n/**\n * Get object describing the nodes which contain characters at offset.\n *\n * @param {DOMElement|DOMTextNode} root\n * @param {number} offset\n * @return {?object}\n */\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  var nodeStart = 0;\n  var nodeEnd = 0;\n\n  while (node) {\n    if (node.nodeType === 3) {\n      nodeEnd = nodeStart + node.textContent.length;\n\n      if (nodeStart <= offset && nodeEnd >= offset) {\n        return {\n          node: node,\n          offset: offset - nodeStart\n        };\n      }\n\n      nodeStart = nodeEnd;\n    }\n\n    node = getLeafNode(getSiblingNode(node));\n  }\n}\n\nmodule.exports = getNodeForCharacterOffset;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getReactRootElementInContainer.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getReactRootElementInContainer\n */\n\n'use strict';\n\nvar DOC_NODE_TYPE = 9;\n\n/**\n * @param {DOMElement|DOMDocument} container DOM element that may contain\n *                                           a React component\n * @return {?*} DOM element that may have the reactRoot ID, or null.\n */\nfunction getReactRootElementInContainer(container) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\nmodule.exports = getReactRootElementInContainer;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getTextContentAccessor.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getTextContentAccessor\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar contentKey = null;\n\n/**\n * Gets the key used to access text content on a DOM node.\n *\n * @return {?string} Key used to access text content.\n * @internal\n */\nfunction getTextContentAccessor() {\n  if (!contentKey && ExecutionEnvironment.canUseDOM) {\n    // Prefer textContent to innerText because many browsers support both but\n    // SVG <text> elements don't support innerText even when <div> does.\n    contentKey = 'textContent' in document.documentElement ?\n      'textContent' :\n      'innerText';\n  }\n  return contentKey;\n}\n\nmodule.exports = getTextContentAccessor;\n\n},{\"./ExecutionEnvironment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ExecutionEnvironment.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getUnboundedScrollPosition.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getUnboundedScrollPosition\n * @typechecks\n */\n\n\"use strict\";\n\n/**\n * Gets the scroll position of the supplied element or window.\n *\n * The return values are unbounded, unlike `getScrollPosition`. This means they\n * may be negative or exceed the element boundaries (which is possible using\n * inertial scrolling).\n *\n * @param {DOMWindow|DOMElement} scrollable\n * @return {object} Map with `x` and `y` keys.\n */\nfunction getUnboundedScrollPosition(scrollable) {\n  if (scrollable === window) {\n    return {\n      x: window.pageXOffset || document.documentElement.scrollLeft,\n      y: window.pageYOffset || document.documentElement.scrollTop\n    };\n  }\n  return {\n    x: scrollable.scrollLeft,\n    y: scrollable.scrollTop\n  };\n}\n\nmodule.exports = getUnboundedScrollPosition;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/hyphenate.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule hyphenate\n * @typechecks\n */\n\nvar _uppercasePattern = /([A-Z])/g;\n\n/**\n * Hyphenates a camelcased string, for example:\n *\n *   > hyphenate('backgroundColor')\n *   < \"background-color\"\n *\n * For CSS style names, use `hyphenateStyleName` instead which works properly\n * with all vendor prefixes, including `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenate(string) {\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n}\n\nmodule.exports = hyphenate;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/hyphenateStyleName.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule hyphenateStyleName\n * @typechecks\n */\n\n\"use strict\";\n\nvar hyphenate = require(\"./hyphenate\");\n\nvar msPattern = /^ms-/;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}\n\nmodule.exports = hyphenateStyleName;\n\n},{\"./hyphenate\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/hyphenate.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/instantiateReactComponent.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule instantiateReactComponent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactCompositeComponent = require(\"./ReactCompositeComponent\");\nvar ReactEmptyComponent = require(\"./ReactEmptyComponent\");\nvar ReactNativeComponent = require(\"./ReactNativeComponent\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\n// To avoid a cyclic dependency, we create the final class in this module\nvar ReactCompositeComponentWrapper = function() { };\nassign(\n  ReactCompositeComponentWrapper.prototype,\n  ReactCompositeComponent.Mixin,\n  {\n    _instantiateReactComponent: instantiateReactComponent\n  }\n);\n\n/**\n * Check if the type reference is a known internal type. I.e. not a user\n * provided composite type.\n *\n * @param {function} type\n * @return {boolean} Returns true if this is a valid internal type.\n */\nfunction isInternalComponentType(type) {\n  return (\n    typeof type === 'function' &&\n    typeof type.prototype !== 'undefined' &&\n    typeof type.prototype.mountComponent === 'function' &&\n    typeof type.prototype.receiveComponent === 'function'\n  );\n}\n\n/**\n * Given a ReactNode, create an instance that will actually be mounted.\n *\n * @param {ReactNode} node\n * @param {*} parentCompositeType The composite type that resolved this.\n * @return {object} A new instance of the element's constructor.\n * @protected\n */\nfunction instantiateReactComponent(node, parentCompositeType) {\n  var instance;\n\n  if (node === null || node === false) {\n    node = ReactEmptyComponent.emptyElement;\n  }\n\n  if (typeof node === 'object') {\n    var element = node;\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        element && (typeof element.type === 'function' ||\n                    typeof element.type === 'string'),\n        'Only functions or strings can be mounted as React components.'\n      ) : null);\n    }\n\n    // Special case string values\n    if (parentCompositeType === element.type &&\n        typeof element.type === 'string') {\n      // Avoid recursion if the wrapper renders itself.\n      instance = ReactNativeComponent.createInternalComponent(element);\n      // All native components are currently wrapped in a composite so we're\n      // safe to assume that this is what we should instantiate.\n    } else if (isInternalComponentType(element.type)) {\n      // This is temporarily available for custom components that are not string\n      // represenations. I.e. ART. Once those are updated to use the string\n      // representation, we can drop this code path.\n      instance = new element.type(element);\n    } else {\n      instance = new ReactCompositeComponentWrapper();\n    }\n  } else if (typeof node === 'string' || typeof node === 'number') {\n    instance = ReactNativeComponent.createInstanceForText(node);\n  } else {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      false,\n      'Encountered invalid React node of type %s',\n      typeof node\n    ) : invariant(false));\n  }\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      typeof instance.construct === 'function' &&\n      typeof instance.mountComponent === 'function' &&\n      typeof instance.receiveComponent === 'function' &&\n      typeof instance.unmountComponent === 'function',\n      'Only React Components can be mounted.'\n    ) : null);\n  }\n\n  // Sets up the instance. This can probably just move into the constructor now.\n  instance.construct(node);\n\n  // These two fields are used by the DOM and ART diffing algorithms\n  // respectively. Instead of using expandos on components, we should be\n  // storing the state needed by the diffing algorithms elsewhere.\n  instance._mountIndex = 0;\n  instance._mountImage = null;\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    instance._isOwnerNecessary = false;\n    instance._warnedAboutRefsInRender = false;\n  }\n\n  // Internal instances should fully constructed at this point, so they should\n  // not get any new fields added to them at this point.\n  if (\"production\" !== process.env.NODE_ENV) {\n    if (Object.preventExtensions) {\n      Object.preventExtensions(instance);\n    }\n  }\n\n  return instance;\n}\n\nmodule.exports = instantiateReactComponent;\n\n}).call(this,require('_process'))\n},{\"./Object.assign\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/Object.assign.js\",\"./ReactCompositeComponent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactCompositeComponent.js\",\"./ReactEmptyComponent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactEmptyComponent.js\",\"./ReactNativeComponent\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactNativeComponent.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"./warning\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/warning.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule invariant\n */\n\n\"use strict\";\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        'Invariant Violation: ' +\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n\n}).call(this,require('_process'))\n},{\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/isEventSupported.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isEventSupported\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar useHasFeature;\nif (ExecutionEnvironment.canUseDOM) {\n  useHasFeature =\n    document.implementation &&\n    document.implementation.hasFeature &&\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    document.implementation.hasFeature('', '') !== true;\n}\n\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @param {?boolean} capture Check if the capture phase is supported.\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\nfunction isEventSupported(eventNameSuffix, capture) {\n  if (!ExecutionEnvironment.canUseDOM ||\n      capture && !('addEventListener' in document)) {\n    return false;\n  }\n\n  var eventName = 'on' + eventNameSuffix;\n  var isSupported = eventName in document;\n\n  if (!isSupported) {\n    var element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\n\nmodule.exports = isEventSupported;\n\n},{\"./ExecutionEnvironment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ExecutionEnvironment.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/isNode.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isNode\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  return !!(object && (\n    ((typeof Node === 'function' ? object instanceof Node : typeof object === 'object' &&\n    typeof object.nodeType === 'number' &&\n    typeof object.nodeName === 'string'))\n  ));\n}\n\nmodule.exports = isNode;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/isTextInputElement.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isTextInputElement\n */\n\n'use strict';\n\n/**\n * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n */\nvar supportedInputTypes = {\n  'color': true,\n  'date': true,\n  'datetime': true,\n  'datetime-local': true,\n  'email': true,\n  'month': true,\n  'number': true,\n  'password': true,\n  'range': true,\n  'search': true,\n  'tel': true,\n  'text': true,\n  'time': true,\n  'url': true,\n  'week': true\n};\n\nfunction isTextInputElement(elem) {\n  return elem && (\n    (elem.nodeName === 'INPUT' && supportedInputTypes[elem.type] || elem.nodeName === 'TEXTAREA')\n  );\n}\n\nmodule.exports = isTextInputElement;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/isTextNode.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isTextNode\n * @typechecks\n */\n\nvar isNode = require(\"./isNode\");\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n},{\"./isNode\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/isNode.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/keyMirror.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule keyMirror\n * @typechecks static-only\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Constructs an enumeration with keys equal to their value.\n *\n * For example:\n *\n *   var COLORS = keyMirror({blue: null, red: null});\n *   var myColor = COLORS.blue;\n *   var isColorValid = !!COLORS[myColor];\n *\n * The last line could not be performed if the values of the generated enum were\n * not equal to their keys.\n *\n *   Input:  {key1: val1, key2: val2}\n *   Output: {key1: key1, key2: key2}\n *\n * @param {object} obj\n * @return {object}\n */\nvar keyMirror = function(obj) {\n  var ret = {};\n  var key;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    obj instanceof Object && !Array.isArray(obj),\n    'keyMirror(...): Argument must be an object.'\n  ) : invariant(obj instanceof Object && !Array.isArray(obj)));\n  for (key in obj) {\n    if (!obj.hasOwnProperty(key)) {\n      continue;\n    }\n    ret[key] = key;\n  }\n  return ret;\n};\n\nmodule.exports = keyMirror;\n\n}).call(this,require('_process'))\n},{\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/keyOf.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule keyOf\n */\n\n/**\n * Allows extraction of a minified key. Let's the build system minify keys\n * without loosing the ability to dynamically use key strings as values\n * themselves. Pass in an object with a single key/val pair and it will return\n * you the string key of that single record. Suppose you want to grab the\n * value for a key 'className' inside of an object. Key/val minification may\n * have aliased that key to be 'xa12'. keyOf({className: null}) will return\n * 'xa12' in that case. Resolve keys you want to use once at startup time, then\n * reuse those resolutions.\n */\nvar keyOf = function(oneKeyObj) {\n  var key;\n  for (key in oneKeyObj) {\n    if (!oneKeyObj.hasOwnProperty(key)) {\n      continue;\n    }\n    return key;\n  }\n  return null;\n};\n\n\nmodule.exports = keyOf;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/mapObject.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule mapObject\n */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Executes the provided `callback` once for each enumerable own property in the\n * object and constructs a new object from the results. The `callback` is\n * invoked with three arguments:\n *\n *  - the property value\n *  - the property name\n *  - the object being traversed\n *\n * Properties that are added after the call to `mapObject` will not be visited\n * by `callback`. If the values of existing properties are changed, the value\n * passed to `callback` will be the value at the time `mapObject` visits them.\n * Properties that are deleted before being visited are not visited.\n *\n * @grep function objectMap()\n * @grep function objMap()\n *\n * @param {?object} object\n * @param {function} callback\n * @param {*} context\n * @return {?object}\n */\nfunction mapObject(object, callback, context) {\n  if (!object) {\n    return null;\n  }\n  var result = {};\n  for (var name in object) {\n    if (hasOwnProperty.call(object, name)) {\n      result[name] = callback.call(context, object[name], name, object);\n    }\n  }\n  return result;\n}\n\nmodule.exports = mapObject;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/memoizeStringOnly.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule memoizeStringOnly\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Memoizes the return value of a function that accepts one string argument.\n *\n * @param {function} callback\n * @return {function}\n */\nfunction memoizeStringOnly(callback) {\n  var cache = {};\n  return function(string) {\n    if (!cache.hasOwnProperty(string)) {\n      cache[string] = callback.call(this, string);\n    }\n    return cache[string];\n  };\n}\n\nmodule.exports = memoizeStringOnly;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/onlyChild.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule onlyChild\n */\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection. The current implementation of this\n * function assumes that a single child gets passed without a wrapper, but the\n * purpose of this helper function is to abstract away the particular structure\n * of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactComponent} The first and only `ReactComponent` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    ReactElement.isValidElement(children),\n    'onlyChild must be passed a children with exactly one child.'\n  ) : invariant(ReactElement.isValidElement(children)));\n  return children;\n}\n\nmodule.exports = onlyChild;\n\n}).call(this,require('_process'))\n},{\"./ReactElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElement.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/performance.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule performance\n * @typechecks\n */\n\n\"use strict\";\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar performance;\n\nif (ExecutionEnvironment.canUseDOM) {\n  performance =\n    window.performance ||\n    window.msPerformance ||\n    window.webkitPerformance;\n}\n\nmodule.exports = performance || {};\n\n},{\"./ExecutionEnvironment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ExecutionEnvironment.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/performanceNow.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule performanceNow\n * @typechecks\n */\n\nvar performance = require(\"./performance\");\n\n/**\n * Detect if we can use `window.performance.now()` and gracefully fallback to\n * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now\n * because of Facebook's testing infrastructure.\n */\nif (!performance || !performance.now) {\n  performance = Date;\n}\n\nvar performanceNow = performance.now.bind(performance);\n\nmodule.exports = performanceNow;\n\n},{\"./performance\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/performance.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/quoteAttributeValueForBrowser.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule quoteAttributeValueForBrowser\n */\n\n'use strict';\n\nvar escapeTextContentForBrowser = require(\"./escapeTextContentForBrowser\");\n\n/**\n * Escapes attribute value to prevent scripting attacks.\n *\n * @param {*} value Value to escape.\n * @return {string} An escaped string.\n */\nfunction quoteAttributeValueForBrowser(value) {\n  return '\"' + escapeTextContentForBrowser(value) + '\"';\n}\n\nmodule.exports = quoteAttributeValueForBrowser;\n\n},{\"./escapeTextContentForBrowser\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/escapeTextContentForBrowser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/setInnerHTML.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule setInnerHTML\n */\n\n/* globals MSApp */\n\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar WHITESPACE_TEST = /^[ \\r\\n\\t\\f]/;\nvar NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \\r\\n\\t\\f\\/>]/;\n\n/**\n * Set the innerHTML property of a node, ensuring that whitespace is preserved\n * even in IE8.\n *\n * @param {DOMElement} node\n * @param {string} html\n * @internal\n */\nvar setInnerHTML = function(node, html) {\n  node.innerHTML = html;\n};\n\n// Win8 apps: Allow all html to be inserted\nif (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n  setInnerHTML = function(node, html) {\n    MSApp.execUnsafeLocalFunction(function() {\n      node.innerHTML = html;\n    });\n  };\n}\n\nif (ExecutionEnvironment.canUseDOM) {\n  // IE8: When updating a just created node with innerHTML only leading\n  // whitespace is removed. When updating an existing node with innerHTML\n  // whitespace in root TextNodes is also collapsed.\n  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html\n\n  // Feature detection; only IE8 is known to behave improperly like this.\n  var testElement = document.createElement('div');\n  testElement.innerHTML = ' ';\n  if (testElement.innerHTML === '') {\n    setInnerHTML = function(node, html) {\n      // Magic theory: IE8 supposedly differentiates between added and updated\n      // nodes when processing innerHTML, innerHTML on updated nodes suffers\n      // from worse whitespace behavior. Re-adding a node like this triggers\n      // the initial and more favorable whitespace behavior.\n      // TODO: What to do on a detached node?\n      if (node.parentNode) {\n        node.parentNode.replaceChild(node, node);\n      }\n\n      // We also implement a workaround for non-visible tags disappearing into\n      // thin air on IE8, this only happens if there is no visible text\n      // in-front of the non-visible tags. Piggyback on the whitespace fix\n      // and simply check if any non-visible tags appear in the source.\n      if (WHITESPACE_TEST.test(html) ||\n          html[0] === '<' && NONVISIBLE_TEST.test(html)) {\n        // Recover leading whitespace by temporarily prepending any character.\n        // \\uFEFF has the potential advantage of being zero-width/invisible.\n        node.innerHTML = '\\uFEFF' + html;\n\n        // deleteData leaves an empty `TextNode` which offsets the index of all\n        // children. Definitely want to avoid this.\n        var textNode = node.firstChild;\n        if (textNode.data.length === 1) {\n          node.removeChild(textNode);\n        } else {\n          textNode.deleteData(0, 1);\n        }\n      } else {\n        node.innerHTML = html;\n      }\n    };\n  }\n}\n\nmodule.exports = setInnerHTML;\n\n},{\"./ExecutionEnvironment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ExecutionEnvironment.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/setTextContent.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule setTextContent\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\nvar escapeTextContentForBrowser = require(\"./escapeTextContentForBrowser\");\nvar setInnerHTML = require(\"./setInnerHTML\");\n\n/**\n * Set the textContent property of a node, ensuring that whitespace is preserved\n * even in IE8. innerText is a poor substitute for textContent and, among many\n * issues, inserts <br> instead of the literal newline chars. innerHTML behaves\n * as it should.\n *\n * @param {DOMElement} node\n * @param {string} text\n * @internal\n */\nvar setTextContent = function(node, text) {\n  node.textContent = text;\n};\n\nif (ExecutionEnvironment.canUseDOM) {\n  if (!('textContent' in document.documentElement)) {\n    setTextContent = function(node, text) {\n      setInnerHTML(node, escapeTextContentForBrowser(text));\n    };\n  }\n}\n\nmodule.exports = setTextContent;\n\n},{\"./ExecutionEnvironment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ExecutionEnvironment.js\",\"./escapeTextContentForBrowser\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/escapeTextContentForBrowser.js\",\"./setInnerHTML\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/setInnerHTML.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/shallowEqual.js\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shallowEqual\n */\n\n'use strict';\n\n/**\n * Performs equality by iterating through keys on an object and returning\n * false when any key has values which are not strictly equal between\n * objA and objB. Returns true when the values of all keys are strictly equal.\n *\n * @return {boolean}\n */\nfunction shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n  var key;\n  // Test for A's keys different from B.\n  for (key in objA) {\n    if (objA.hasOwnProperty(key) &&\n        (!objB.hasOwnProperty(key) || objA[key] !== objB[key])) {\n      return false;\n    }\n  }\n  // Test for B's keys missing from A.\n  for (key in objB) {\n    if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/shouldUpdateReactComponent.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shouldUpdateReactComponent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar warning = require(\"./warning\");\n\n/**\n * Given a `prevElement` and `nextElement`, determines if the existing\n * instance should be updated as opposed to being destroyed or replaced by a new\n * instance. Both arguments are elements. This ensures that this logic can\n * operate on stateless trees without any backing instance.\n *\n * @param {?object} prevElement\n * @param {?object} nextElement\n * @return {boolean} True if the existing instance should be updated.\n * @protected\n */\nfunction shouldUpdateReactComponent(prevElement, nextElement) {\n  if (prevElement != null && nextElement != null) {\n    var prevType = typeof prevElement;\n    var nextType = typeof nextElement;\n    if (prevType === 'string' || prevType === 'number') {\n      return (nextType === 'string' || nextType === 'number');\n    } else {\n      if (nextType === 'object' &&\n          prevElement.type === nextElement.type &&\n          prevElement.key === nextElement.key) {\n        var ownersMatch = prevElement._owner === nextElement._owner;\n        var prevName = null;\n        var nextName = null;\n        var nextDisplayName = null;\n        if (\"production\" !== process.env.NODE_ENV) {\n          if (!ownersMatch) {\n            if (prevElement._owner != null &&\n                prevElement._owner.getPublicInstance() != null &&\n                prevElement._owner.getPublicInstance().constructor != null) {\n              prevName =\n                prevElement._owner.getPublicInstance().constructor.displayName;\n            }\n            if (nextElement._owner != null &&\n                nextElement._owner.getPublicInstance() != null &&\n                nextElement._owner.getPublicInstance().constructor != null) {\n              nextName =\n                nextElement._owner.getPublicInstance().constructor.displayName;\n            }\n            if (nextElement.type != null &&\n                nextElement.type.displayName != null) {\n              nextDisplayName = nextElement.type.displayName;\n            }\n            if (nextElement.type != null && typeof nextElement.type === 'string') {\n              nextDisplayName = nextElement.type;\n            }\n            if (typeof nextElement.type !== 'string' ||\n                nextElement.type === 'input' ||\n                nextElement.type === 'textarea') {\n              if ((prevElement._owner != null &&\n                  prevElement._owner._isOwnerNecessary === false) ||\n                  (nextElement._owner != null &&\n                  nextElement._owner._isOwnerNecessary === false)) {\n                if (prevElement._owner != null) {\n                  prevElement._owner._isOwnerNecessary = true;\n                }\n                if (nextElement._owner != null) {\n                  nextElement._owner._isOwnerNecessary = true;\n                }\n                (\"production\" !== process.env.NODE_ENV ? warning(\n                  false,\n                  '<%s /> is being rendered by both %s and %s using the same ' +\n                  'key (%s) in the same place. Currently, this means that ' +\n                  'they don\\'t preserve state. This behavior should be very ' +\n                  'rare so we\\'re considering deprecating it. Please contact ' +\n                  'the React team and explain your use case so that we can ' +\n                  'take that into consideration.',\n                  nextDisplayName || 'Unknown Component',\n                  prevName || '[Unknown]',\n                  nextName || '[Unknown]',\n                  prevElement.key\n                ) : null);\n              }\n            }\n          }\n        }\n        return ownersMatch;\n      }\n    }\n  }\n  return false;\n}\n\nmodule.exports = shouldUpdateReactComponent;\n\n}).call(this,require('_process'))\n},{\"./warning\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/warning.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/toArray.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule toArray\n * @typechecks\n */\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Convert array-like objects to arrays.\n *\n * This API assumes the caller knows the contents of the data type. For less\n * well defined inputs use createArrayFromMixed.\n *\n * @param {object|function|filelist} obj\n * @return {array}\n */\nfunction toArray(obj) {\n  var length = obj.length;\n\n  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in\n  // old versions of Safari).\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !Array.isArray(obj) &&\n    (typeof obj === 'object' || typeof obj === 'function'),\n    'toArray: Array-like object expected'\n  ) : invariant(!Array.isArray(obj) &&\n  (typeof obj === 'object' || typeof obj === 'function')));\n\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    typeof length === 'number',\n    'toArray: Object needs a length property'\n  ) : invariant(typeof length === 'number'));\n\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    length === 0 ||\n    (length - 1) in obj,\n    'toArray: Object should have keys for indices'\n  ) : invariant(length === 0 ||\n  (length - 1) in obj));\n\n  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\n  // without method will throw during the slice call and skip straight to the\n  // fallback.\n  if (obj.hasOwnProperty) {\n    try {\n      return Array.prototype.slice.call(obj);\n    } catch (e) {\n      // IE < 9 does not support Array#slice on collections objects\n    }\n  }\n\n  // Fall back to copying key by key. This assumes all keys have a value,\n  // so will not preserve sparsely populated inputs.\n  var ret = Array(length);\n  for (var ii = 0; ii < length; ii++) {\n    ret[ii] = obj[ii];\n  }\n  return ret;\n}\n\nmodule.exports = toArray;\n\n}).call(this,require('_process'))\n},{\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/traverseAllChildren.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule traverseAllChildren\n */\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactFragment = require(\"./ReactFragment\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\n\nvar getIteratorFn = require(\"./getIteratorFn\");\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\nvar SEPARATOR = ReactInstanceHandles.SEPARATOR;\nvar SUBSEPARATOR = ':';\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar userProvidedKeyEscaperLookup = {\n  '=': '=0',\n  '.': '=1',\n  ':': '=2'\n};\n\nvar userProvidedKeyEscapeRegex = /[=.:]/g;\n\nvar didWarnAboutMaps = false;\n\nfunction userProvidedKeyEscaper(match) {\n  return userProvidedKeyEscaperLookup[match];\n}\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  if (component && component.key != null) {\n    // Explicit key\n    return wrapUserProvidedKey(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * Escape a component key so that it is safe to use in a reactid.\n *\n * @param {*} key Component key to be escaped.\n * @return {string} An escaped string.\n */\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(\n    userProvidedKeyEscapeRegex,\n    userProvidedKeyEscaper\n  );\n}\n\n/**\n * Wrap a `key` value explicitly provided by the user to distinguish it from\n * implicitly-generated keys generated by a component's index in its parent.\n *\n * @param {string} key Value of a user-provided `key` attribute\n * @return {string}\n */\nfunction wrapUserProvidedKey(key) {\n  return '$' + escapeUserProvidedKey(key);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!number} indexSoFar Number of children encountered until this point.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(\n  children,\n  nameSoFar,\n  indexSoFar,\n  callback,\n  traverseContext\n) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null ||\n      type === 'string' ||\n      type === 'number' ||\n      ReactElement.isValidElement(children)) {\n    callback(\n      traverseContext,\n      children,\n      // If it's the only child, treat the name as if it was wrapped in an array\n      // so that it's consistent if the number of children grows.\n      nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar,\n      indexSoFar\n    );\n    return 1;\n  }\n\n  var child, nextName, nextIndex;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = (\n        (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +\n        getComponentKey(child, i)\n      );\n      nextIndex = indexSoFar + subtreeCount;\n      subtreeCount += traverseAllChildrenImpl(\n        child,\n        nextName,\n        nextIndex,\n        callback,\n        traverseContext\n      );\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = (\n            (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +\n            getComponentKey(child, ii++)\n          );\n          nextIndex = indexSoFar + subtreeCount;\n          subtreeCount += traverseAllChildrenImpl(\n            child,\n            nextName,\n            nextIndex,\n            callback,\n            traverseContext\n          );\n        }\n      } else {\n        if (\"production\" !== process.env.NODE_ENV) {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            didWarnAboutMaps,\n            'Using Maps as children is not yet fully supported. It is an ' +\n            'experimental feature that might be removed. Convert it to a ' +\n            'sequence / iterable of keyed ReactElements instead.'\n          ) : null);\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = (\n              (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +\n              wrapUserProvidedKey(entry[0]) + SUBSEPARATOR +\n              getComponentKey(child, 0)\n            );\n            nextIndex = indexSoFar + subtreeCount;\n            subtreeCount += traverseAllChildrenImpl(\n              child,\n              nextName,\n              nextIndex,\n              callback,\n              traverseContext\n            );\n          }\n        }\n      }\n    } else if (type === 'object') {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        children.nodeType !== 1,\n        'traverseAllChildren(...): Encountered an invalid child; DOM ' +\n        'elements are not valid children of React components.'\n      ) : invariant(children.nodeType !== 1));\n      var fragment = ReactFragment.extract(children);\n      for (var key in fragment) {\n        if (fragment.hasOwnProperty(key)) {\n          child = fragment[key];\n          nextName = (\n            (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +\n            wrapUserProvidedKey(key) + SUBSEPARATOR +\n            getComponentKey(child, 0)\n          );\n          nextIndex = indexSoFar + subtreeCount;\n          subtreeCount += traverseAllChildrenImpl(\n            child,\n            nextName,\n            nextIndex,\n            callback,\n            traverseContext\n          );\n        }\n      }\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', 0, callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;\n\n}).call(this,require('_process'))\n},{\"./ReactElement\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactElement.js\",\"./ReactFragment\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactFragment.js\",\"./ReactInstanceHandles\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/ReactInstanceHandles.js\",\"./getIteratorFn\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/getIteratorFn.js\",\"./invariant\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/invariant.js\",\"./warning\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/warning.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/warning.js\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule warning\n */\n\n\"use strict\";\n\nvar emptyFunction = require(\"./emptyFunction\");\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (\"production\" !== process.env.NODE_ENV) {\n  warning = function(condition, format ) {for (var args=[],$__0=2,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || /^[s\\W]*$/.test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function()  {return args[argIndex++];});\n      console.warn(message);\n      try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n\n}).call(this,require('_process'))\n},{\"./emptyFunction\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/emptyFunction.js\",\"_process\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/browserify/node_modules/process/browser.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/react.js\":[function(require,module,exports){\nmodule.exports = require('./lib/React');\n\n},{\"./lib/React\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/lib/React.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/src/scripts/components/Clock.jsx\":[function(require,module,exports){\n/** @jsx React.DOM */\n\n'use strict';\n\nvar React = require('react');\n\n/**\n * Clock component.\n * Get city with its timezone data and calculate correct time.\n */\nvar Clock = React.createClass({displayName: \"Clock\",\n\n  /**\n   * Validate props.\n   * @type {Object}\n   */\n  propTypes: {\n    id: React.PropTypes.number,\n    city: React.PropTypes.object,\n    zone: React.PropTypes.object,\n    hours12: React.PropTypes.bool,\n    removeClock: React.PropTypes.func,\n    debug: React.PropTypes.bool\n  },\n\n  /**\n   * Invoked once before the component is mounted.\n   * The return value will be used as the initial value of this.state.\n   */\n  getInitialState: function() {\n\n    var date = new Date();\n\n    if (this.props.debug) {\n      this.props.hours12 = false;\n      this._testTime(date);\n    }\n\n    return {\n      time: this._getTime(date)\n    };\n  },\n\n  /**\n   * Sync and start ticker.\n   * Invoked once, immediately before the initial rendering occurs.\n   */\n  componentWillMount: function() {\n\n    this._syncTick(function() {\n      this._tick();\n      this.timer = setInterval(this._tick, 1000);\n    }, this);\n  },\n\n  /**\n   * Remove the timer when the component unmounts.\n   */\n  componentWillUnmount: function() {\n\n    this.timer && clearInterval(this.timer);\n  },\n\n  /**\n   * Handle click event. Dispatch remove clock with id.\n   * @param {Event} e The event object.\n   */\n  handleClick: function(e) {\n\n    if (typeof this.props.removeClock === 'function') {\n      this.props.removeClock(this.props.id);\n    }\n  },\n\n  /**\n   * Sync tick by detecting when next second will occour and fire callback.\n   * @param {Function} callback The callback to run when second change.\n   * @param {Object} context The instance context.\n   * @private\n   */\n  _syncTick: function(callback, context) {\n\n    var date = new Date();\n    var delay = 1000 - date.getMilliseconds();\n\n    setTimeout(callback.bind(context), delay);\n  },\n\n  /**\n   * Ticker, update state to current time.\n   * @private\n   */\n  _tick: function() {\n\n    var date = new Date();\n\n    this.setState({\n      time: this._getTime(date)\n    });\n  },\n\n  /**\n   * Set the clock object to zone time, obtain difference\n   * and add/subtract to local time (notice that diff.hh can be negative).\n   * @param {Object} date The `new Date()` object.\n   * @return {Object} The current zone time.\n   * @private\n   */\n  _getTime: function(date) {\n\n    var diff = this._getDifference(date);\n\n    var hh = date.getHours() + diff.hh;\n    var mm = date.getMinutes() + diff.mm;\n\n    var hours12 = this.props.hours12;\n\n    var when = this._setWhenSentence('Today, ', diff);\n\n    // Once obtained the local hours/minutes and added the\n    // difference from the desidered zone check edge cases A, B, C.\n\n    // A: Minutes above one hour, go to next hour.\n    if (mm >= 60) {\n      hh ++;\n      mm = mm - 60;\n    }\n\n    // B: At midnight local time, minus zone difference\n    // hh will be negative and refer to a day behind.\n    if (hh < 0) {\n\n      // More than 24 hours behind, it can happen only between\n      // UTC +14 (local) and UTC -12 (zone) and least for 2 hours or more.\n      if (diff.hh < -24) {\n        // TODO: Decrease a day in date can be done here.\n        when = 'Two days behind';\n        // Restart from midnight.\n        hh += 24;\n      } else {\n        // TODO: Decrease a day in date can be done here.\n        when = this._setWhenSentence('Yesterday, ', diff);\n      }\n\n      hh = 24 - Math.abs(hh);\n    }\n\n    // C: When difference greater than hours left to midnight,\n    // hh will be equal to at least 24 and refer to a day ahead.\n    if (hh > 23) {\n\n      // More than a 24 hours ahead, it can happen only between\n      // UTC -12 (local) and UTC +14 (zone) and least for 2 hours or more.\n      if (diff.hh > 24) {\n        // TODO: Increase a day in date can be done here.\n        when = 'Two days ahead.';\n      } else {\n        // TODO: Increase a day in date can be done here.\n        when = this._setWhenSentence('Tomorrow, ', diff);\n      }\n\n      hh = hh - 24;\n    }\n\n    // Set 12-hours clock.\n    if (hours12) {\n      hours12 = (hh >= 12) ? 'PM' : 'AM';\n      // http://stackoverflow.com/a/14399178\n      hh = ((hh + 11) % 12 + 1);\n    }\n\n    return {\n      hh: this._pad(hh),\n      mm: this._pad(mm),\n      ss: this._pad(date.getSeconds()),\n      hours12: hours12,\n      when: when\n    };\n  },\n\n  /**\n   * Calculate zone difference from local time, subtract the zone UTC\n   * offset (based on DST) to the local UTC offset and calculate zone\n   * difference in hours and minutes.\n   * @param {Object} date The `new Date()` object.\n   * @return {Object} The zone difference in hours and minutes.\n   * @private\n   */\n  _getDifference: function(date) {\n\n    if (!this.props.zone) {\n      return {\n        hh: 0,\n        mm: 0\n      };\n    }\n\n    var isDST = this._isDST();\n\n    // Local UTC offset in minutes.\n    var offset = date.getTimezoneOffset(); // -60\n\n    // Zone UTC offset in minutes.\n    var offsets = this.props.zone.offsets; // 285 (4.75hrs)\n\n    // Last offset in array is associated with\n    // untils `null` and never refer to DST.\n    var lastOffset = offsets.length - 1;\n\n    if (isDST) {\n      offset -= offsets[lastOffset - 1]; // -345\n    } else {\n      offset -= offsets[lastOffset];\n    }\n\n    // Zone difference in hours and minutes,\n    // notice that minutes are never negative.\n    var hh = Math.floor(offset / 60); // (-5.75) = -6\n    var mm = offset - (hh * 60); // -345 - (-6*60) = 15\n\n    return {\n      hh: hh, // -6\n      mm: mm // 15\n    };\n  },\n\n  /**\n   * Detect if DST is currently observed.\n   * @return {boolean} True if DST is currently observed in the given zone.\n   * @private\n   */\n  _isDST: function() {\n\n    var isDST = false;\n\n    var PAIR = 2;\n\n    var now = Date.now();\n\n    var untils = this.props.zone.untils;\n\n    // Remove last item in array when it's null.\n    if (!untils[untils.length - 1]) {\n      untils.pop();\n    }\n\n    // Warn if DST is observed more than twice.\n    if (untils.length > PAIR * 2) {\n      var zone = this.props.zone.name;\n      console.warn('DST is observed more than twice this year in ' + zone);\n    }\n\n    // When there are [start, end] pairs.\n    if (untils.length > 1) {\n\n      // Loop by 2 and check DST.\n      for (var i = 0; i < untils.length; i += PAIR) {\n\n        var start = untils[i];\n        var end = untils [i + 1];\n\n        // DST not started or finished.\n        if (now < start || now > end) {\n          continue;\n        }\n\n        // DST observed.\n        if (now < end) {\n          isDST = true;\n        }\n      }\n    } else if (untils.length === 1) {\n      // When there is only end, check if DST is still observed.\n      if (now < untils[0]) {\n        isDST = true;\n      }\n    }\n\n    return isDST;\n  },\n\n  /**\n   * Set when sentence.\n   * @param {String} day The named day(s) like `Today`, `Tomorrow`, etc.\n   * @param {Object} diff The zone difference from local time.\n   * @return {String} The when sentence.\n   * @private\n   */\n  _setWhenSentence: function(day, diff) {\n\n    var hh = diff.hh;\n    var mm = diff.mm;\n\n    // Just `Today` if no difference from local time.\n    if (hh === 0 && mm === 0) {\n      return day.replace(', ', '');\n    }\n\n    var hours;\n    var direction = (hh > 0) ? ' ahead.' : ' behind.';\n\n    if (Math.abs(hh) > 1) {\n      hours = Math.abs(hh) + ' hours';\n    } else {\n      hours = Math.abs(hh) + ' hour';\n    }\n\n    if (hh > 0 && mm > 0) {\n      hours = hh + 'h ' + mm + 'm'\n    }\n\n    return day + hours + direction;\n  },\n\n  /**\n   * Format a Number in two length.\n   * @param {number} n The number to be converted.\n   * @return {string}   The formatted string.\n   * @private\n   */\n  _pad: function(n) {\n\n    var nString = n.toString();\n\n    return (n < 10) ? '0' + nString : nString;\n  },\n\n  /**\n   * Test my computed time with time given from `toLocaleString`\n   * for supported zones only and log results.\n   * @private\n   */\n  _testTime: function(date) {\n\n    try {\n\n      var zone = this.props.zone.name;\n\n      var correctDateString = date.toLocaleString(undefined, {\n        timeZone: zone\n      });\n\n      var correctDate = new Date(correctDateString);\n\n      var myDate = this._getTime(date);\n\n      console.log('\\n');\n\n      if (correctDate.getHours() !== Number(myDate.hh)) {\n\n        console.log('%cHOURS WRONG in ' + zone,\n          'color: red; font-weight:bold;');\n      } else if (correctDate.getMinutes() !== Number(myDate.mm)) {\n\n        console.log('%cHOURS WRONG in ' + zone,\n          'color: red; font-weight:bold;');\n      } else if (correctDate.getSeconds() !== Number(myDate.ss)) {\n\n        console.log('%cSECONDS WRONG in ' + zone,\n          'color: red; font-weight:bold;');\n      } else {\n\n        console.log('%cTIME CORRECT in ' + zone,\n          'color: green; font-weight:bold;');\n        console.log(correctDate);\n        console.log(myDate);\n      }\n\n    } catch (e) {\n\n      if (e instanceof RangeError) {\n        console.log('%c' + e.message + ':', 'color: orange;');\n      }\n    }\n  },\n\n  /**\n   * Render.\n   * @return {ReactElement} The Clock component.\n   */\n  render: function() {\n\n    var city = this.props.city;\n    var time = this.state.time;\n\n    return (\n      React.createElement(\"div\", {className: \"clock\"}, \n\n        this.props.debug && this.props.zone ?\n          React.createElement(\"p\", null, \"TZ: \", this.props.zone.name)\n        : null, \n\n        city ?\n          React.createElement(\"span\", {className: \"remove\", onClick: this.handleClick}, \"X\")\n        : null, \n\n        React.createElement(\"p\", null, \n          React.createElement(\"strong\", null, \n            city ? city.name : 'YOU', \n            city && city.country ? ' (' + city.country + ')' : null\n          )\n        ), \n\n        React.createElement(\"time\", null, time.hh, \":\", time.mm, \":\", time.ss, \n          time.hours12 ? ' ' + time.hours12 : null\n        ), \n\n        React.createElement(\"p\", null, time.when, time.diff)\n      )\n    );\n  }\n});\n\nmodule.exports = Clock;\n\n},{\"react\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/react.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/src/scripts/components/Search.jsx\":[function(require,module,exports){\n/** @jsx React.DOM */\n\n'use strict';\n\nvar React = require('react');\n\nvar SearchInString = require('../mixins/SearchInString.js');\n\n/**\n * Search component.\n * Capture user input and display a filtered list of cities,\n * when item is clicked dispatch new city.\n */\nvar Search = React.createClass({displayName: \"Search\",\n\n  /**\n   * Validate props.\n   * @type {Object}\n   */\n  propTypes: {\n    searchString: React.PropTypes.string.isRequired,\n    items: React.PropTypes.object.isRequired,\n    onSelect: React.PropTypes.func.isRequired\n  },\n\n  /**\n   * Invoked once before the component is mounted.\n   * The return value will be used as the initial value of this.state.\n   */\n  getInitialState: function() {\n    return {\n      matches: []\n    };\n  },\n\n  /**\n   * Input box text has changed, trigger update.\n   * @param {Event} e The event object.\n   */\n  handleKeyUp: function(e) {\n\n    var value = this.refs.searchInput.getDOMNode().value;\n\n    this._displayMatches(value);\n  },\n\n  /**\n   * Handle click event. User has clicked an item from the list,\n   * dispatch selected item and clear matches.\n   * @param {Event} e The event object.\n   */\n  handleClick: function(match) {\n\n    this.props.onSelect(match);\n\n    this.setState({\n      matches: []\n    });\n\n    this.refs.searchInput.getDOMNode().value = '';\n  },\n\n  /**\n   * Get list of matching cities.\n   * @param {string} value The search value.\n   * @private\n   */\n  _displayMatches: function(value) {\n\n    var limit = 10;\n\n    var ids = SearchInString(value, this.props.searchString, limit);\n\n    var matches = ids.map(function(id) {\n      return this.props.items[id];\n    }, this);\n\n    this.setState({\n      matches: matches\n    });\n  },\n\n  /**\n   * Render.\n   * @return {ReactElement} The Search component.\n   */\n  render: function() {\n    return (\n      React.createElement(\"div\", {className: \"search\"}, \n\n        React.createElement(\"input\", {\n          type: \"search\", \n          ref: \"searchInput\", \n          onKeyUp: this.handleKeyUp, \n          placeholder: \"Search City...\"}), \n\n        React.createElement(\"ul\", null, \n          this.state.matches.map(function(match, i) {\n            return React.createElement(\"li\", {key: i, onClick: this.handleClick.bind(this, match)}, \n                match.name, \" (\", match.country, \")\"\n              );\n          }, this)\n        )\n      )\n    );\n  }\n});\n\nmodule.exports = Search;\n\n},{\"../mixins/SearchInString.js\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/src/scripts/mixins/SearchInString.js\",\"react\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/react.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/src/scripts/components/Wall.jsx\":[function(require,module,exports){\n/** @jsx React.DOM */\n\n'use strict';\n\nvar React = require('react');\n\nvar Search = require('./Search.jsx');\nvar Clock = require('./Clock.jsx');\n\n/**\n * Wall component.\n */\nvar Wall = React.createClass({displayName: \"Wall\",\n\n  /**\n   * Validate props.\n   * @type {Object}\n   */\n  propTypes: {\n    cities: React.PropTypes.object.isRequired,\n    zones: React.PropTypes.object.isRequired,\n    showUserClock: React.PropTypes.bool,\n    hours12: React.PropTypes.bool\n  },\n\n  /**\n   * Invoked once before the component is mounted.\n   * The return value will be used as the initial value of this.state.\n   */\n  getInitialState: function() {\n    return {\n      favorites: JSON.parse(localStorage.getItem('favorites')) || []\n    };\n  },\n\n  /**\n   * Add new city and its timezone to favorites.\n   * @param {Object} city The selected city.\n   */\n  addFavorite: function(city) {\n\n    if (!city) {\n      return;\n    }\n\n    var zone = this.props.zones[city.zone];\n\n    var favorite = {\n      city: city,\n      zone: zone\n    };\n\n    var favorites = this.state.favorites.concat(favorite);\n\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n\n    this.setState({\n      favorites: favorites\n    });\n  },\n\n  /**\n   * Remove a city and its timezone from favorites.\n   * @param {number} index The index of the object in the favorites array.\n   */\n  removeFavorite: function(index) {\n\n    var favorites = this.state.favorites;\n\n    favorites.splice(index, 1);\n\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n\n    this.setState({\n      favorites: favorites\n    });\n  },\n\n  /**\n   * Get user local time clock.\n   * @return {ReactElement} The clock with the user machine time.\n   * @private\n   */\n  _getUserClock: function() {\n\n    return React.createElement(Clock, {hours12: this.props.hours12});\n  },\n\n  /**\n   * Get the user favorite clocks.\n   * @return {ReactElement} The user favorite clocks.\n   * @private\n   */\n  _getFavoriteClocks: function() {\n\n    return this.state.favorites.map(function(favorite, i) {\n      return React.createElement(Clock, {\n        key: i, \n        id: i, \n        city: favorite.city, \n        zone: favorite.zone, \n        hours12: this.props.hours12, \n        removeClock: this.removeFavorite, \n        debug: false});\n    }, this);\n  },\n\n  /**\n   * Render.\n   * @return {ReactElement} The Wall component.\n   */\n  render: function() {\n\n    return (\n      React.createElement(\"main\", null, \n        React.createElement(Search, {\n          searchString: this.props.cities.search, \n          items: this.props.cities.data, \n          onSelect: this.addFavorite}), \n\n        this.props.showUserClock ?\n          React.createElement(\"div\", {className: \"user\"}, \n            this._getUserClock()\n          )\n        : null, \n\n        React.createElement(\"div\", {className: \"favorites\"}, \n          this._getFavoriteClocks()\n        )\n      )\n    );\n  }\n});\n\nmodule.exports = Wall;\n\n},{\"./Clock.jsx\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/src/scripts/components/Clock.jsx\",\"./Search.jsx\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/src/scripts/components/Search.jsx\",\"react\":\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/node_modules/react/react.js\"}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/src/scripts/data/cities100000.js\":[function(require,module,exports){\nmodule.exports = {\n  \"search\": \"'291074 Ras al-Khaimah''292223 Dubai''292672 Sharjah''292913 Al Ain''292932 Ajman''292968 Abu Dhabi''1133616 Mazār-e Sharīf''1135689 Kunduz''1138336 Kandahār''1138958 Kabul''1139715 Jalālābād''1140026 Herāt''1141269 Ghazni''1141857 Gardēz''1147290 Balkh''1147540 Baghlān''783263 Elbasan''3183875 Tirana''3185728 Durrës''616052 Yerevan''616530 Vanadzor''616635 Gyumri''2239076 N’dalatando''2240449 Luanda''3347762 Lubango''3347939 Lobito''3348078 Cuito''3348313 Huambo''3351663 Benguela''3427408 Villa Lugano''3427833 Tandil''3429577 Resistencia''3429652 Quilmes''3429886 Posadas''3430545 Morón''3430863 Mar del Plata''3432043 La Plata''3433899 Formosa''3435217 Corrientes''3435261 Concordia''3435910 Buenos Aires''3835869 Santiago del Estero''3835994 Santa Rosa''3836277 Santa Fe de la Vera Cruz''3836564 San Salvador de Jujuy''3836669 San Rafael''3836846 San Nicolás de los Arroyos''3836873 San Miguel de Tucumán''3837056 San Luis''3837213 San Juan''3837702 San Fernando del Valle de Catamarca''3838233 Salta''3838583 Rosario''3838874 Río Cuarto''3841956 Paraná''3843123 Neuquén''3844421 Mendoza''3848950 La Rioja''3860259 Córdoba''3860443 Comodoro Rivadavia''3865086 Bahía Blanca''2761369 Vienna''2766824 Salzburg''2772400 Linz''2775220 Innsbruck''2778067 Graz''2062338 Rockingham''2063523 Perth''2073124 Darwin''2078025 Adelaide''2146142 Townsville''2146268 Toowoomba''2147714 Sydney''2155472 Newcastle''2158177 Melbourne''2160517 Launceston''2163355 Hobart''2165087 Gold Coast''2165798 Geelong''2171507 Wollongong''2172517 Canberra''2172797 Cairns''2174003 Brisbane''2176187 Bendigo''7281838 Logan City''147622 Lankaran''584923 Sumqayıt''586523 Ganja''587084 Baku''3186573 Zenica''3188582 Tuzla''3191281 Sarajevo''3194828 Mostar''3204541 Banja Luka''1185098 Tungi''1185099 Sylhet''1185106 Jamālpur''1185111 Sātkhira''1185115 Sirājganj''1185117 Narsingdi''1185121 Shāhzādpur''1185128 Rājshāhi''1185155 Nārāyanganj''1185159 Nāgarpur''1185162 Mymensingh''1185186 Comilla''1185188 Rangpur''1185191 Kushtia''1185241 Dhaka''1185263 Bhairab Bāzār''1192366 Pār Naogaon''1203344 Farīdpur''1203891 Dinājpur''1205733 Chittagong''1336134 Cox’s Bāzār''1336135 Khulna''1336137 Barisāl''1336140 Jessore''1336143 Pābna''1336144 Tāngāil''1337233 Bogra''1337240 Nawābganj''1337248 Sherpur''6545349 Saidpur''2790471 Namur''2792413 Liège''2797656 Gent''2800481 Charleroi''2800866 Brussels''2800931 Brugge''2803138 Antwerpen''2357048 Ouagadougou''2362344 Bobo-Dioulasso''726050 Varna''726848 Stara Zagora''727011 Sofia''727523 Ruse''728193 Plovdiv''728203 Pleven''732770 Burgas''290340 Manama''425378 Bujumbura''2392087 Porto-Novo''2392204 Parakou''2393693 Kandi''2394560 Djougou''2394819 Cotonou''2395049 Bohicon''2395914 Abomey-Calavi''3903320 Tarija''3903987 Sucre''3904906 Santa Cruz de la Sierra''3907584 Potosí''3909234 Oruro''3911925 La Paz''3919968 Cochabamba''3384987 Vitória de Santo Antão''3386361 Timon''3386496 Teresina''3387296 Sobral''3388368 São Luís''3389321 Santa Rita''3389353 Santarém''3390760 Recife''3392242 Petrolina''3392740 Paulista''3392998 Parnamirim''3393001 Parnaíba''3393536 Olinda''3394023 Natal''3394682 Mossoró''3395473 Maracanaú''3395503 Marabá''3395981 Maceió''3396016 Macapá''3397147 Juazeiro do Norte''3397277 João Pessoa''3397838 Jaboatão''3398269 Imperatriz''3399058 Garanhuns''3399415 Fortaleza''3402383 Caxias''3402429 Caucaia''3402591 Castanhal''3402655 Caruaru''3403642 Campina Grande''3404545 Cabo''3405870 Belém''3407327 Arapiraca''3407357 Araguaína''3407669 Ananindeua''3444876 Volta Redonda''3444914 Vitória da Conquista''3444924 Vitória''3445026 Vila Velha''3445156 Viamão''3445446 Várzea Paulista''3445451 Várzea Grande''3445487 Varginha''3445679 Uruguaiana''3445831 Uberlândia''3445839 Uberaba''3446370 Toledo''3446606 Teresópolis''3446621 Teófilo Otoni''3446682 Taubaté''3447186 Taboão da Serra''3447212 Suzano''3447259 Sumaré''3447399 Sorocaba''3447624 Sete Lagoas''3447779 Serra''3448031 Sapucaia''3448136 São Vicente''3448439 São Paulo''3448622 São Leopoldo''3448632 São José dos Pinhais''3448636 São José dos Campos''3448639 São José do Rio Preto''3448742 São José''3448877 São João de Meriti''3449319 São Carlos''3449324 São Caetano do Sul''3449344 São Bernardo do Campo''3449433 Santos''3449701 Santo André''3450083 Santa Maria''3450144 Santa Luzia''3450269 Santa Cruz do Sul''3450404 Santa Bárbara d'Oeste''3450554 Salvador''3450909 Rondonópolis''3451138 Rio Grande''3451190 Rio de Janeiro''3451234 Rio Claro''3451328 Ribeirão Preto''3451329 Ribeirão Pires''3451353 Ribeirão das Neves''3451668 Resende''3452073 Queimados''3452324 Presidente Prudente''3452465 Praia Grande''3452525 Pouso Alegre''3452640 Porto Seguro''3452925 Porto Alegre''3453186 Ponta Grossa''3453303 Poços de Caldas''3453406 Poá''3453643 Piracicaba''3453837 Pindamonhangaba''3454031 Petrópolis''3454244 Pelotas''3454783 Patos de Minas''3454857 Passo Fundo''3455070 Paranaguá''3455478 Palhoça''3455775 Osasco''3456068 Novo Hamburgo''3456160 Nova Iguaçu''3456166 Nova Friburgo''3456223 Nossa Senhora do Socorro''3456283 Niterói''3456290 Nilópolis''3456814 Montes Claros''3457000 Mogi-Gaucu''3457001 Mogi das Cruzes''3457381 Mauá''3457671 Maringá''3457692 Marília''3458266 Macaé''3458329 Luziânia''3458449 Londrina''3458498 Linhares''3458575 Limeira''3458930 Lages''3459462 Jundiaí''3459505 Juiz de Fora''3459712 Joinville''3459943 Jequié''3460005 Jaú''3460102 Jaraguá do Sul''3460170 Jandira''3460370 Jacareí''3460535 Itu''3460644 Itaquaquecetuba''3460718 Itapevi''3460728 Itapetininga''3460748 Itapecerica da Serra''3460845 Itajaí''3460899 Itaguaí''3460949 Itabuna''3460950 Itaboraí''3461144 Ipatinga''3461311 Indaiatuba''3461408 Ilhéus''3461563 Ibirité''3461655 Hortolândia''3461786 Guarulhos''3461789 Guarujá''3461859 Guaratinguetá''3461879 Guarapuava''3461888 Guarapari''3462089 Gravataí''3462315 Governador Valadares''3462377 Goiânia''3462964 Franco da Rocha''3462980 Francisco Morato''3463011 Franca''3463030 Foz do Iguaçu''3463237 Florianópolis''3463422 Ferraz de Vasconcelos''3463478 Feira de Santana''3464008 Esmeraldas''3464305 Embu''3464374 Duque de Caxias''3464460 Dourados''3464688 Divinópolis''3464739 Diadema''3464975 Curitiba''3465038 Cuiabá''3465059 Cubatão''3465196 Criciúma''3465284 Cotia''3465476 Coronel Fabriciano''3465624 Contagem''3465644 Conselheiro Lafaiete''3465927 Colombo''3465944 Colatina''3466296 Chapecó''3466537 Caxias do Sul''3466692 Catanduva''3466779 Cascavel''3466998 Carapicuíba''3467467 Canoas''3467693 Campos''3467747 Campo Grande''3467865 Campinas''3468031 Camaçari''3468376 Cachoeiro de Itapemirim''3468403 Cachoeirinha''3468615 Cabo Frio''3469058 Brasília''3469092 Bragança Paulista''3469136 Botucatu''3469968 Blumenau''3469989 Birigui''3470044 Betim''3470127 Belo Horizonte''3470142 Belford Roxo''3470279 Bauru''3470353 Barueri''3470451 Barretos''3470583 Barreiras''3470636 Barra Mansa''3470858 Barbacena''3471335 Atibaia''3471374 Assis''3471697 Araucária''3471715 Araruama''3471758 Araras''3471766 Araraquara''3471859 Araçatuba''3471872 Aracaju''3471910 Apucarana''3472177 Angra dos Reis''3472287 Anápolis''3472343 Americana''3472766 Alagoinhas''3473964 Guaíba''3474574 Palmas''3662574 Rio Branco''3662762 Porto Velho''3663517 Manaus''3664980 Boa Vista''3925033 Ji Paraná''6316406 Aparecida de Goiânia''6317344 Jaboatão dos Guararapes''6317464 Lauro de Freitas''6317953 Pinhais''6318694 Simões Filho''6318696 Sinop''3571824 Nassau''933773 Gaborone''620127 Vitebsk''622428 Salihorsk''623549 Pinsk''624079 Orsha''624400 Novoye Medvezhino''624784 Navapolatsk''625144 Minsk''625324 Mazyr''625625 Maladzyechna''625665 Mahilyow''627904 Hrodna''627907 Gomel''629634 Brest''630429 Baranovichi''630468 Babruysk''8020218 Malinovka''5881791 Abbotsford''5885383 Anmore''5894171 Barrie''5907364 Brampton''5911592 Burlington''5911606 Burnaby''5913490 Calgary''5913695 Cambridge''5927689 Coquitlam''5935277 Dartmouth''5937615 Delta''5946768 Edmonton''5950267 Etobicoke''5959974 Gatineau''5964700 Greater Sudbury''5967629 Guelph''5969782 Hamilton''5990579 Kelowna''5992500 Kingston''5992996 Kitchener''6050610 Laval''6058560 London''6059891 Longueuil''6066513 Markham''6075357 Mississauga''6077243 Montréal''6091104 North York''6092122 Oakville''6094578 Oshawa''6094817 Ottawa''6119109 Regina''6122085 Richmond''6122091 Richmond Hill''6137270 Saguenay''6141256 Saskatoon''6146143 Sherbrooke''6155721 St. Catharines''6159905 Surrey''6167865 Toronto''6169141 Trois-Rivières''6173331 Vancouver''6173577 Vaughan''6174041 Victoria''6182962 Windsor''6183235 Winnipeg''6324729 Halifax''6325494 Québec''6325521 Lévis''6354908 Sydney''6948711 Scarborough''7281931 Okanagan''7602078 Ladner''204405 Uvira''204953 Tshikapa''207570 Mwene-Ditu''209228 Mbuji-Mayi''212730 Kisangani''212902 Kindu''214481 Kananga''214974 Kalemie''215771 Isiro''215976 Ilebo''216281 Goma''216449 Gandajika''217562 Butembo''217831 Bukavu''922704 Lubumbashi''922741 Likasi''922773 Kolwezi''2312895 Mbandaka''2313002 Matadi''2314302 Kinshasa''2314705 Kikwit''2315728 Gemena''2317397 Bandundu''2593460 Masina''2388873 Bimbo''2389853 Bangui''2255414 Pointe-Noire''2258261 Dolisie''2260535 Brazzaville''2657896 Zürich''2659994 Lausanne''2660646 Genève''2661552 Bern''2661604 Basel''2279755 Yamoussoukro''2282006 San-Pédro''2284647 Man''2286304 Korhogo''2288829 Gagnoa''2289887 Divo''2290486 Daloa''2290956 Bouaké''2292852 Anyama''2293521 Abobo''2293538 Abidjan''2293549 Abengourou''3868121 Viña del Mar''3868626 Valparaíso''3868707 Valdivia''3870011 Temuco''3870282 Talcahuano''3870294 Talca''3871336 Santiago''3872348 San Bernardo''3873775 Rancagua''3874096 Quilpué''3874787 Punta Arenas''3874960 Puerto Montt''3875024 Puente Alto''3877949 Osorno''3882428 Los Ángeles''3884373 La Serena''3887127 Iquique''3892870 Curicó''3893629 Coquimbo''3893656 Copiapó''3893894 Concepción''3895088 Chillán''3897347 Calama''3899361 Arica''3899539 Antofagasta''7281017 La Pintana''7281020 Lo Prado''2220957 Yaoundé''2223763 Nkongsamba''2224827 Ngaoundéré''2226275 Mokolo''2227613 Mbouda''2228373 Maroua''2229152 Loum''2229752 Kumba''2229798 Kousséri''2231320 Garoua''2232239 Edéa''2232593 Douala''2234359 Bertoua''2234974 Bamenda''2235189 Bafoussam''1280737 Lhasa''1280849 Kashi''1280957 Jiayuguan''1281019 Hotan''1529102 Ürümqi''1529114 Laochenglu''1529195 Shihezi''1529376 Sayibage''1529484 Hami''1529569 Changji''1529641 Aral''1529651 Altay''1529660 Yingbazha''1783621 Zunyi''1783633 Zoucheng''1783745 Zigong''1783763 Zhuzhou''1783873 Zhumadian''1783934 Shangqiu''1783940 Zhuji''1783988 Mizhou''1784130 Zhoukou''1784178 Zhoucun''1784185 Yuxi''1784554 Zhicheng''1784580 Zhenzhou''1784642 Zhenjiang''1784658 Zhengzhou''1784820 Xinghua''1784841 Zhaotong''1784853 Zhaoqing''1784953 Luofeng''1784990 Zhanjiang''1785018 Zhangzhou''1785286 Zibo''1785294 Anyang''1785453 Zaozhuang''1785462 Zaoyang''1785545 Yuyao''1785623 Kunshan''1785725 Yunfu''1785738 Yuncheng''1785781 Yulin''1785974 Yuci''1786067 Qianjiang''1786546 Zhongxiang''1786640 Chengzhong''1786657 Yinchuan''1786731 Qingzhou''1786746 Yichun''1786764 Yichang''1786770 Yibin''1787093 Yantai''1787227 Yangzhou''1787323 Yangshuo''1787351 Yangquan''1787746 Yancheng''1787824 Tongshan''1787858 Shangrao''1788046 Xuchang''1788081 Xuanzhou''1788245 Xiuying''1788268 Xiulin''1788450 Xinzhou''1788534 Xinyang''1788572 Xinxiang''1788618 Xintai''1788694 Xinpu''1788816 Xinji''1788852 Xining''1788927 Xingtai''1789065 Ankang''1789137 Xindi''1789273 Sanshui''1789647 Xichang''1789703 Xiazhen''1790254 Xiaogan''1790353 Xianyang''1790371 Xiantao''1790396 Xianning''1790437 Zhuhai''1790492 Xiangtan''1790587 Xiangyang''1790630 Xi’an''1790645 Xiamen''1790840 Wuzhou''1790894 Wuxue''1790923 Wuxi''1791056 Dongyang''1791121 Changde''1791236 Wuhu''1791247 Wuhan''1791249 Wuhai''1791325 Wuda''1791388 Wenzhou''1791536 Tianfu''1791636 Weinan''1791673 Weihai''1791681 Weifang''1791748 Wanxian''1792260 Wafangdian''1792520 Tongzhou''1792621 Wusong''1792892 Tianshui''1792947 Tianjin''1793036 Tengzhou''1793346 Tangshan''1793424 Tanggu''1793505 Taizhou''1793511 Taiyuan''1793700 Taishan''1793724 Tai’an''1793743 Suzhou''1793879 Suizhou''1793900 Suining''1794035 Songjiang''1794806 Shizuishan''1794903 Shiyan''1794904 Shiyan''1795055 Shiqiao''1795060 Shiqi''1795184 Shilong''1795196 Tongchuan''1795270 Shijiazhuang''1795565 Shenzhen''1795816 Shashi''1795842 Shaping''1795855 Shaoxing''1795857 Shaowu''1795874 Shaoguan''1795928 Shanwei''1795940 Shantou''1796236 Shanghai''1796421 Shahecheng''1796556 Sanya''1796663 Sanming''1797121 Jieyang''1797132 Rizhao''1797318 Qujing''1797353 Quanzhou''1797551 Qinzhou''1797595 Qinhuangdao''1797873 Huai'an''1797929 Qingdao''1797945 Qingyuan''1798422 Puyang Chengguanzhen''1798425 Puyang''1798449 Putian''1798473 Puqi''1798490 Pulandian''1798654 Pingxiang''1798713 Pingshan''1798760 Pingliang''1798827 Pingdingshan''1798998 Dadukou''1799397 Ningbo''1799491 Neijiang''1799629 Nanyang''1799722 Nantong''1799846 Nanping''1799869 Nanning''1799962 Nanjing''1800146 Nanchong''1800163 Nanchang''1800498 Mingshui''1800627 Mianyang''1800657 Mentougou''1800779 Meizhou''1800829 Wuchuan''1801401 Majie''1801582 Macheng''1801615 Maba''1801757 Luqiao''1801792 Luoyang''1801799 Luoyang''1801934 Luohe''1802204 Luancheng''1802238 Loudi''1802875 Guankou''1802940 Puning''1803318 Linyi''1803331 Linxia Chengguanzhen''1803334 Linxi''1803352 Linshui''1803367 Qingnian''1803422 Linhai''1803567 Linfen''1803791 Licheng''1803834 Liaocheng''1803886 Lianran''1803936 Wuwei''1804120 Lianjiang''1804153 Leshan''1804169 Lengshuijiang''1804208 Leiyang''1804252 Lecheng''1804386 Laohekou''1804430 Lanzhou''1804540 Langfang''1804586 Laiyang''1804591 Laiwu''1804651 Kunming''1804850 Kaiyuan''1804879 Kaifeng''1805179 Jiujiang''1805270 Qianzhou''1805298 Jinzhou''1805518 Jining''1805528 Jinhua''1805540 Jingzhou''1805611 Jingmen''1805618 Jingling''1805680 Jingdezhen''1805733 Jinchang''1805741 Jincheng''1805753 Jinan''1805844 Jieshou''1805857 Jieshi''1805935 Jiazi''1805953 Jiaxing''1805987 Jiaozuo''1806096 Jiaozhou''1806299 Jiangmen''1806408 Yangjiang''1806445 Ji’an''1806466 Guangyuan''1806535 Huzhou''1806696 Humen''1806776 Huizhou''1806881 Huicheng''1806882 Xinhui''1807112 Huangzhou''1807143 Huangyan''1807234 Huangshi''1807301 Dasha''1807508 Huanggang''1807544 Daxing''1807681 Huainan''1807689 Huaihua''1807700 Huaibei''1808198 Heze''1808316 Yiyang''1808336 Hepo''1808370 Hengyang''1808392 Hengshui''1808722 Hefei''1808770 Hebi''1808857 Hanzhong''1808926 Hangzhou''1808931 Hangu''1808963 Handan''1809061 Jiaojiang''1809062 Haimen''1809077 Haikou''1809078 Haikou''1809412 Guli''1809461 Guiyang''1809498 Guilin''1809858 Guangzhou''1809879 Guangshui''1810240 Gejiu''1810295 Gaozhou''1810437 Gaoping''1810458 Gaomi''1810821 Fuzhou''1810845 Fuyang''1810979 Fuling''1811103 Foshan''1811619 Ezhou''1811729 Encheng''1812101 Shengli''1812228 Dongtai''1812521 Donghai''1812545 Dongguan''1812728 Dingzhou''1812955 Dezhou''1812961 Deyang''1813253 Lijiang''1813325 Dazhou''1813344 Dawukou''1813812 Danshui''1814082 Daliang''1814087 Dalian''1814093 Dali''1814757 Chuzhou''1814786 Yangchun''1814906 Chongqing''1814934 Chizhou''1815059 Chenzhou''1815251 Jiangyin''1815286 Chengdu''1815302 Chenghua''1815395 Chaozhou''1815427 Chaohu''1815456 Changzhou''1815463 Changzhi''1815577 Changsha''1816080 Cangzhou''1816221 Buhe''1816234 Bozhou''1816265 Boshan''1816336 Binzhou''1816440 Bengbu''1816670 Beijing''1816705 Beihai''1816790 Beibei''1816971 Baoding''1817240 Baiyin''1817720 Shangyu''1817968 Anshun''1817990 Anqiu''1817993 Anqing''1818116 Anbu''1885823 Jiangyou''1886760 Suzhou''1915223 Zhongshan''1919014 Lianghu''1927639 Yueyang''2033168 Zhaodong''2033196 Zhangjiakou''2033225 Zalantun''2033242 Yushu''2033370 Yingkou''2033413 Yichun''2033467 Yanji''2033536 Yakeshi''2033574 Zhangjiakou Shi Xuanhua Qu''2033824 Xilin Hot''2034312 Ulanhot''2034400 Tongliao''2034439 Tieling''2034440 Tieli''2034497 Guangming''2034638 Sujiatun''2034655 Suihua''2034714 Siping''2034754 Shunyi''2034786 Shuangyashan''2034834 Shuangcheng''2034937 Shenyang''2034996 Shanhaiguan''2035225 Fendou''2035261 Taihe''2035265 Qiqihar''2035399 Qianguo''2035513 Panshan''2035610 Nehe''2035644 Nanpiao''2035669 Lianhe''2035715 Mudanjiang''2035966 Longjing''2035970 Longjiang''2035980 Longfeng''2036109 Liaoyuan''2036113 Liaoyang''2036337 Kaiyuan''2036389 Jixi''2036401 Jiutai''2036403 Jiupu''2036418 Jishu''2036427 Jinzhou''2036434 Lianshan''2036458 Jining''2036502 Jilin''2036536 Minzhu''2036581 Jiamusi''2036595 Jalai Nur''2036597 Jagdaqi''2036670 Hulan Ergi''2036671 Hulan''2036776 Huadian''2036876 Honggang''2036892 Hohhot''2036920 Fendou''2036973 Heihe''2036986 Hegang''2037013 Harbin''2037069 Hailun''2037078 Hailar''2037086 Haicheng''2037222 Gongzhuling''2037335 Fuyu''2037346 Fuxin''2037355 Fushun''2037411 Fengcheng''2037534 Dunhua''2037620 Dongling''2037685 Dongxing''2037712 Dehui''2037799 Datong''2037860 Daqing''2037886 Dandong''2038067 Chifeng''2038087 Chengde''2038120 Chaoyang''2038180 Changchun''2038300 Benxi''2038342 Beipiao''2038365 Bei’an''2038432 Baotou''2038438 Baoshan''2038569 Baicheng''2038584 Baishan''2038632 Anshan''2038650 Anda''2038679 Acheng''7283386 Changshu City''7303248 Jiashan''7304020 Fenghuang''7602670 Zhu Cheng City''7910932 Shangri-La''8347664 Ordos''8505006 Wenshan City''8533133 Liupanshui''3665900 Villavicencio''3666304 Valledupar''3666608 Tunja''3666645 Tuluá''3667849 Soledad''3667873 Sogamoso''3667905 Soacha''3667983 Sincelejo''3668605 Santa Marta''3671916 Popayán''3672486 Pereira''3672778 Pasto''3673164 Palmira''3673899 Neiva''3674453 Montería''3674962 Medellín''3675443 Manizales''3675595 Malambo''3675657 Maicao''3675692 Magangué''3680450 Itagüí''3680656 Ibagué''3682018 Girón''3682028 Girardot City''3682385 Floridablanca''3682426 Florencia''3682631 Envigado''3685095 Dos Quebradas''3685533 Cúcuta''3687230 Cartago''3687238 Cartagena''3687925 Cali''3688256 Buga''3688451 Buenaventura''3688465 Bucaramanga''3688689 Bogotá''3688928 Bello''3689147 Barranquilla''3689169 Barrancabermeja''3689560 Armenia''3621849 San José''3536729 Santiago de Cuba''3537906 Santa Clara''3538803 San Miguel del Padrón''3540667 Sancti Spíritus''3544091 Pinar del Río''3545064 Palma Soriano''3547398 Matanzas''3547867 Manzanillo''3550598 Las Tunas''3553478 Havana''3556969 Holguín''3557689 Guantánamo''3557846 Guanabacoa''3564124 Cienfuegos''3564178 Ciego de Ávila''3564436 Cerro''3566067 Camagüey''3567597 Bayamo''3568342 Arroyo Naranjo''3746181 Habana del Este''3746183 Centro Habana''6956646 Arroyo Naranjo''6956647 Boyeros''6956648 Diez de Octubre''3374333 Praia''3513090 Willemstad''146268 Nicosia''146384 Limassol''3067696 Prague''3068160 Pilsen''3068799 Ostrava''3069011 Olomouc''3078610 Brno''2805615 Würzburg''2805753 Wuppertal''2806654 Wolfsburg''2807363 Witten''2809346 Wiesbaden''2820256 Ulm''2821164 Trier''2825297 Stuttgart''2831580 Solingen''2832495 Siegen''2836788 Schöneberg''2842647 Saarbrücken''2844588 Rostock''2847736 Reutlingen''2848273 Remscheid''2849483 Regensburg''2849647 Recklinghausen''2852217 Prenzlauer Berg''2852458 Potsdam''2853969 Pforzheim''2855745 Paderborn''2856883 Osnabrück''2857458 Oldenburg''2857807 Offenbach''2860410 Oberhausen''2861650 Nürnberg''2862375 Nippes''2864072 Neue Neustadt''2864118 Neuss''2867543 Münster''2867714 Munich''2867838 Mülheim (Ruhr)''2869894 Mönchengladbach''2870221 Moers''2873074 Marzahn''2873891 Mannheim''2874225 Mainz''2874545 Magdeburg''2875376 Ludwigshafen am Rhein''2875601 Lübeck''2878234 Leverkusen''2879139 Leipzig''2884161 Kreuzberg''2884509 Krefeld''2886242 Köln''2886946 Koblenz''2891122 Kiel''2892518 Kassel''2892794 Karlsruhe''2895044 Jena''2895992 Ingolstadt''2904789 Hildesheim''2905891 Herne''2907669 Heilbronn''2907911 Heidelberg''2910685 Harburg''2910831 Hannover''2911240 Hamm''2911285 Wandsbek''2911287 Marienthal''2911288 Hamburg-Mitte''2911293 Eimsbüttel''2911296 Altona''2911298 Hamburg''2911522 Halle (Saale)''2912621 Hagen''2918632 Göttingen''2921232 Gera''2921466 Gelsenkirchen''2923544 Fürth''2924573 Friedrichshain''2925177 Freiburg''2925533 Frankfurt am Main''2928810 Essen''2929567 Erlangen''2929670 Erfurt''2934246 Düsseldorf''2934691 Duisburg''2935022 Dresden''2935517 Dortmund''2938913 Darmstadt''2940132 Chemnitz''2940187 Charlottenburg''2944368 Bremerhaven''2944388 Bremen''2945024 Braunschweig''2945756 Bottrop''2946447 Bonn''2947416 Bochum''2949186 Bielefeld''2950159 Berlin''2950349 Bergisch Gladbach''2954172 Augsburg''3247449 Aachen''6941055 Bochum-Hordel''7289614 Halle Neustadt''7290243 Bergedorf''7290254 Berlin Schöneberg''8354626 Hamburg-Nord''223817 Djibouti''2615876 Odense''2618425 Copenhagen''2624652 Århus''2624886 Aalborg''3492908 Santo Domingo''3492914 Santiago de los Caballeros''3493032 San Pedro de Macorís''3493146 San Francisco de Macorís''3493175 Puerto Plata''3493240 Salvaleón de Higüey''3494242 Punta Cana''3500957 La Romana''3509382 Concepción de La Vega''3511540 San Cristóbal''3511550 Bella Vista''7874116 Santo Domingo Oeste''2474141 Boumerdas''2475687 Tlemcen''2475744 Tizi Ouzou''2476897 Tiaret''2477461 Tébessa''2479215 Souk Ahras''2479536 Skikda''2481007 Sidi Bel Abbès''2481700 Sétif''2482572 Saïda''2483668 Relizane''2484620 Oum el Bouaghi''2485801 Ouargla''2485926 Oran''2487134 Mostaganem''2488835 Médéa''2490098 Mascara''2491191 Laghouat''2491889 Khenchela''2492913 Jijel''2495662 Guelma''2497411 El Oued''2498392 El Eulma''2498611 Chlef''2498766 El Achir''2498954 Ech Chettia''2500017 Djelfa''2501152 Constantine''2503661 Bordj el Kiffan''2503701 Bordj Bou Arreridj''2503769 Blida''2503826 Biskra''2505329 Bejaïa''2505530 Béchar''2505572 Batna''2505653 Baraki''2505854 Bab Ezzouar''2506999 Annaba''2507480 Algiers''2507972 Aïn Oussera''2508287 Aïn Beïda''3651297 Santo Domingo de los Colorados''3652350 Riobamba''3652462 Quito''3652567 Quevedo''3652941 Portoviejo''3654410 Manta''3654533 Machala''3654667 Loja''3655673 Ibarra''3657509 Guayaquil''3657990 Esmeraldas''3658192 Eloy Alfaro''3658666 Cuenca''3660689 Ambato''10277901 Tutamandahostel''588335 Tartu''588409 Tallinn''347497 Tanda''347591 Ţalkhā''347796 Sohag''349158 Shibīn al Kawm''350550 Qinā''350789 Qalyūb''352951 Mallawī''354502 Kafr ash Shaykh''354775 Kafr ad Dawwār''355026 Jirjā''355628 Idkū''355795 Ḩalwān''358108 Disūq''358172 Dikirnis''358448 Damanhūr''358619 Port Said''358821 Bilqās''358840 Bilbays''359173 Banī Suwayf''359280 Banhā''359493 Zagazig''359783 Asyūţ''359792 Aswan''359796 Suez''360502 Luxor''360630 Cairo''360686 Al Minyā''360761 Al Manşūrah''360829 Al Maḩallah al Kubrá''360995 Al Jīzah''361055 Ismailia''361058 Alexandria''361179 Al Ḩawāmidīyah''361320 Al Fayyūm''361546 Arish''362485 Abū Kabīr''411165 Idfu''2462881 Laâyoune / El Aaiún''343300 Asmara''2509954 Valencia''2510253 Torrevieja''2510542 Telde''2510911 Sevilla''2511174 Santa Cruz de Tenerife''2511401 La Laguna''2512989 Palma''2513416 Murcia''2514169 Marbella''2514256 Málaga''2515270 Las Palmas de Gran Canaria''2516326 Jerez de la Frontera''2516395 Jaén''2516548 Huelva''2517117 Granada''2518559 Elche''2518794 Dos Hermanas''2519240 Córdoba''2519752 Castelló de la Plana''2520058 Cartagena''2520600 Cadiz''2521420 Badajoz''2521886 Almería''2521978 Alicante''2522013 Algeciras''2522258 Albacete''3104324 Zaragoza''3104499 Gasteiz / Vitoria''3104748 Villaverde''3105976 Vigo''3106672 Valladolid''3107784 Torrejón de Ardoz''3108118 Tetuán de las Victorias''3108286 Terrassa''3108288 Tarragona''3109718 Santander''3109981 Santa Coloma de Gramenet''3110044 Donostia / San Sebastián''3110876 Sant Andreu de Palomar''3111108 Salamanca''3111199 Sabadell''3111933 Reus''3112737 Puente de Vallecas''3114256 Parla''3114472 Pamplona''3114711 Oviedo''3114965 Ourense''3116025 Móstoles''3116156 Moratalaz''3117164 Mataró''3117735 Madrid''3118150 Logroño''3118514 Lleida''3118532 León''3118594 Leganés''3119841 A Coruña''3120619 L'Hospitalet de Llobregat''3120635 Hortaleza''3121245 Gràcia''3121424 Gijón''3121437 Getafe''3121960 Fuenlabrada''3124964 Ciudad Lineal''3125239 Chamartín''3127461 Burgos''3128026 Bilbao''3128760 Barcelona''3129028 Badalona''3130564 Alcorcón''3130583 Alcobendas''3130616 Alcalá de Henares''6252065 Nou Barris''6544099 Moncloa-Aravaca''6544100 Eixample''6544102 Sarrià-Sant Gervasi''6544103 Horta-Guinardó''6544104 Sants-Montjuïc''6544105 Sant Martí''6544106 Ciutat Vella''6544487 Arganzuela''6544488 San Blas''6544489 Latina''6544490 Usera''6544491 Salamanca''6544492 Chamberí''6544493 Carabanchel''6544494 City Center''6544495 Retiro''6615440 Delicias''8285534 Fuencarral-El Pardo''330186 Nazrēt''331180 Mekele''333772 Jīma''336014 Gondar''338832 Dire Dawa''339219 Desē''339666 Bishoftu''342884 Bahir Dar''343137 Hawassa''344979 Addis Ababa''632453 Vantaa''633679 Turku''634963 Tampere''643492 Oulu''658225 Helsinki''660158 Espoo''2968254 Villeurbanne''2972191 Tours''2972315 Toulouse''2972328 Toulon''2973783 Strasbourg''2980291 Saint-Étienne''2982652 Rouen''2983990 Rennes''2984114 Reims''2987914 Perpignan''2988507 Paris''2989317 Orléans''2990363 Nîmes''2990440 Nice''2990969 Nantes''2990999 Nancy''2991214 Mulhouse''2992166 Montpellier''2994160 Metz''2995469 Marseille''2996944 Lyon''2998286 Limoges''2998324 Lille''3003603 Le Mans''3003796 Le Havre''3014728 Grenoble''3021372 Dijon''3024635 Clermont-Ferrand''3029241 Caen''3030300 Brest''3031137 Boulogne-Billancourt''3031582 Bordeaux''3033123 Besançon''3037044 Argenteuil''3037656 Angers''3037854 Amiens''3038354 Aix-en-Provence''8533870 Saint-Quentin-en-Yvelines''8555643 Cergy-Pontoise''2396518 Port-Gentil''2399697 Libreville''2633352 York''2633563 Worcester''2633691 Wolverhampton''2633709 Woking''2634491 West Bromwich''2634677 Watford''2634853 Walsall''2636389 Swindon''2636432 Swansea''2636486 Sutton Coldfield''2636503 Sutton''2636531 Sunderland''2636841 Stoke-on-Trent''2636882 Stockport''2637433 Southend-on-Sea''2637487 Southampton''2637627 Slough''2638077 Sheffield''2638785 St Helens''2639093 Rotherham''2639577 Reading''2639912 Preston''2639996 Portsmouth''2640101 Poole''2640194 Plymouth''2640354 Peterborough''2640729 Oxford''2641022 Oldham''2641170 Nottingham''2641181 Norwich''2641430 Northampton''2641598 Newport''2641673 Newcastle upon Tyne''2642465 Milton Keynes''2642607 Middlesbrough''2643123 Manchester''2643339 Luton''2643741 City of London''2643743 London''2644210 Liverpool''2644668 Leicester''2644688 Leeds''2645425 Hull''2646003 Islington''2646057 Ipswich''2646458 Huddersfield''2648404 Gloucester''2648579 Glasgow''2648657 Gillingham''2649808 Exeter''2650225 Edinburgh''2650497 Eastbourne''2650752 Dundee''2650839 Dudley''2651347 Derby''2651621 Dagenham''2652053 Crawley''2652221 Coventry''2652618 Colchester''2653261 Cheltenham''2653266 Chelmsford''2653822 Cardiff''2653941 Cambridge''2654675 Bristol''2654710 Brighton''2654993 Bradford''2655095 Bournemouth''2655237 Bolton''2655459 Blackpool''2655524 Blackburn''2655603 Birmingham''2655775 Bexley''2655984 Belfast''2656194 Basildon''2657832 Aberdeen''3345439 Telford''6947756 Mendip''611717 Tbilisi''613607 Kutaisi''615532 Batumi''2294665 Teshi Old Town''2294700 Tema''2294877 Tamale''2294915 Takoradi''2295458 Sekondi-Takoradi''2296606 Obuasi''2298330 Medina Estates''2298890 Kumasi''2302357 Cape Coast''2306079 Achiaman''2306104 Accra''2416969 Nzérékoré''2419533 Kindia''2419992 Kankan''2422465 Conakry''2422488 Camayenne''2309527 Malabo''2310046 Bata''255274 Piraeus''255524 Peristéri''255683 Pátra''258576 Lárisa''261414 Kallithéa''261745 Irákleion''264371 Athens''734077 Thessaloníki''3587902 Villa Nueva''3587923 Villa Canales''3589885 San Juan Sacatepéquez''3590979 Quetzaltenango''3591415 Petapa''3592519 Mixco''3595803 Escuintla''3598132 Guatemala City''2374775 Bissau''3378644 Georgetown''1818209 Tsuen Wan''1818223 Yuen Long Kau Hui''1819609 Kowloon''1819729 Hong Kong''3600949 Tegucigalpa''3601782 San Pedro Sula''3608248 La Ceiba''3610613 El Progreso''3613533 Choloma''3186886 Zagreb''3190261 Split''3191648 Rijeka''6618983 Zagreb - Centar''3718420 Port-de-Paix''3718426 Port-au-Prince''3718962 Tigwav''3719028 Pétionville''3722286 Léogâne''3723779 Jacmel''3726786 Delmas 73''3727135 Croix des Bouquets''3728097 Les Cayes''3728338 Carrefour''3728474 Okap''715429 Szeged''716935 Nyíregyháza''717582 Miskolc''721472 Debrecen''3044774 Székesfehérvár''3046526 Pécs''3050434 Kecskemét''3052009 Győr''3054643 Budapest''7284824 Budapest XI. kerület''7284829 Budapest XIV. kerület''7284830 Budapest XIII. kerület''7284842 Budapest III. kerület''1213500 Tebingtinggi''1213547 Tanjungbalai''1213614 Sunggal''1214073 Rantauprapat''1214189 Percut''1214191 Perbaungan''1214204 Pematangsiantar''1214369 Padangsidempuan''1214520 Medan''1214882 Kisaran''1215355 Binjai''1215412 Belawan''1215502 Banda Aceh''1621177 Yogyakarta''1621613 Weru''1622636 Ungaran''1622786 Makassar''1624041 Ternate''1624494 Tegal''1624647 Tasikmalaya''1624863 Tanjungpinang''1624917 Bandarlampung''1625084 Tangerang''1625812 Surakarta''1625822 Surabaya''1626100 Sumedang Utara''1626381 Sukabumi''1626542 Sorong''1626560 Soreang''1626801 Situbondo''1626916 Singkawang''1626932 Singaraja''1627253 Sidoarjo''1627549 Serang''1627610 Sepatan''1627896 Semarang''1628453 Sawangan''1629001 Samarinda''1629131 Salatiga''1629710 Rengasdengklok''1630058 Rangkasbitung''1630328 Purwokerto''1630333 Purwodadi''1630341 Purwakarta''1630634 Probolinggo''1630789 Pontianak''1630997 Plumbon''1631393 Prabumulih''1631648 Pemalang''1631761 Pekanbaru''1631766 Pekalongan''1631905 Payakumbuh''1631992 Pati''1632033 Pasuruan''1632197 Paseh''1632228 Pasarkemis''1632276 Parung''1632353 Parepare''1632654 Pangkalpinang''1632937 Pamulang''1632998 Pamanukan''1633034 Palu''1633037 Palopo''1633070 Palembang''1633118 Palangkaraya''1633419 Padang''1635111 Mojokerto''1635283 Metro''1635882 Mataram''1636022 Martapura''1636544 Manado''1636722 Malang''1636884 Magelang''1636930 Madiun''1637090 Lumajang''1637158 Lubuklinggau''1637510 Loa Janan''1638063 Lembang''1638284 Lawang''1638868 Labuhanbajo''1639362 Kresek''1639900 Klaten''1640344 Kendari''1640581 Kedungwuni''1640660 Kediri''1642414 Jombang''1642588 Jember''1642858 Jambi City''1642911 Jakarta''1643078 Indramayu''1643761 Grogol''1643837 Gorontalo''1645133 Dumai''1645518 Depok''1645524 Depok''1645528 Denpasar''1645895 Curug''1646034 Citeureup''1646170 Cirebon''1646194 Ciputat''1646448 Cimahi''1646492 Cileunyi''1646494 Cileungsir''1646678 Cikarang''1646698 Cikampek''1647003 Cibinong''1647149 Ciamis''1647383 Ciampea''1648186 Bontang''1648473 Bogor''1648580 Blitar''1648636 Bitung''1649150 Bengkulu''1649378 Bekasi''1649593 Baturaja''1649881 Batang''1650077 Banyuwangi''1650213 Banjarmasin''1650227 Banjaran''1650319 Bangil''1650357 Bandung''1650527 Balikpapan''1651112 Astanajapura''1651226 Arjawinangun''1651531 Ambon''1651887 Adiwerna''1963770 Padalarang''1985663 Cikupa''1990589 Teluknaga''2057087 Kupang''2082600 Jayapura''8224624 City of Balikpapan''8581443 South Tangerang''2964506 Dún Laoghaire''2964574 Dublin''2965140 Cork''281184 Jerusalem''293397 Tel Aviv''293703 Rishon LeẔiyyon''293788 Ramat Gan''293918 Petaẖ Tiqwa''294071 Netanya''294751 H̱olon''294801 Haifa''295514 Bené Beraq''295530 Beersheba''295548 Bat Yam''295620 Ashqelon''295629 Ashdod''7498240 West Jerusalem''1252758 Yelahanka''1252770 Yavatmāl''1252797 Yamunānagar''1252942 Wardha''1252948 Warangal''1253084 Vizianagaram''1253102 Visakhapatnam''1253133 Virār''1253184 Vijayawāda''1253200 Vidisha''1253237 Verāval''1253286 Vellore''1253315 Vejalpur''1253367 Vāsco Da Gāma''1253405 Varanasi''1253573 Vadodara''1253744 Uppal Kalan''1253747 Unnāo''1253894 Ulhasnagar''1253914 Ujjain''1253952 Udipi''1253958 Udgīr''1253986 Udaipur''1254089 Tumkūr''1254163 Thiruvananthapuram''1254187 Trichūr''1254241 Tonk''1254309 Titāgarh''1254320 Tiruvottiyūr''1254327 Tiruvannāmalai''1254348 Tiruppur''1254360 Tirupati''1254361 Tirunelveli''1254388 Tiruchirappalli''1254649 Thanjāvūr''1254657 Thānesar''1254661 Thāne''1254745 Teni''1255264 Tādepallegūdem''1255344 Suriāpet''1255349 Surendranagar''1255364 Sūrat''1255491 Sultānpur''1255560 Sūjāngarh''1255634 Srinagar''1255647 Srīkākulam''1255744 Sonīpat''1255927 Siwān''1255969 Sītāpur''1256052 Sirsa''1256237 Shimla''1256287 Silchar''1256320 Sīkar''1256409 Shyamnagar''1256422 Shrīrāmpur''1256436 Solāpur''1256451 Shivpurī''1256515 Shimoga''1256523 Shillong''1256525 Shiliguri''1256639 Shāntipur''1256728 Shāhjahānpur''1256826 Seonī''1256922 Secunderabad''1256949 Sawāi Mādhopur''1257022 Satna''1257055 Sātāra''1257416 Sāngli''1257540 Sambhal''1257542 Sambalpur''1257629 Salem''1257804 Saharsa''1257806 Sahāranpur''1257845 Sāgar''1258044 Roorkee''1258076 Rohtak''1258109 Robertsonpet''1258126 Rishra''1258178 Rewāri''1258182 Rewa''1258342 Ratlām''1258470 Rānīganj''1258526 Ranchi''1258599 Rāmpur''1258662 Rāmgundam''1258831 Rāj Nāndgaon''1258847 Rājkot''1258916 Rajapalaiyam''1258932 Rājahmundry''1258980 Raipur''1259005 Raigarh''1259009 Rāiganj''1259012 Rāichūr''1259064 Rāe Bareli''1259091 Kollam''1259163 Puruliya''1259166 Purnia''1259184 Puri''1259229 Pune''1259239 Punāsa''1259297 Pudukkottai''1259312 Proddatūr''1259385 Port Blair''1259395 Porbandar''1259411 Ponnāni''1259425 Puducherry''1259652 Pimpri''1259686 Pīlībhīt''1259827 Phagwāra''1260086 Patna''1260107 Patiāla''1260137 Pathankot''1260173 Pātan''1260341 Parbhani''1260434 Panvel''1260476 Pānīpat''1260482 Pānihāti''1260637 Palwal''1260692 Pallāvaram''1260716 Pāli''1260728 Palakkad''1260777 Pālanpur''1261039 Orai''1261045 Ongole''1261162 Nowrangapur''1261258 Nizāmābād''1261481 New Delhi''1261529 Nellore''1261669 Navadwīp''1261731 Nashik''1261913 Nāngloi Jāt''1261927 Nandyāl''1261931 Nandurbār''1261977 Nanded''1262067 Nalgonda''1262131 Naihāti''1262180 Nagpur''1262204 Nāgercoil''1262209 Nagda''1262292 Nadiād''1262321 Mysore''1262330 Muzaffarpur''1262332 Muzaffarnagar''1262395 Murwāra''1262482 Munger''1262710 Motīhāri''1262771 Morena''1262775 Morbi''1262801 Morādābād''1262951 Moga''1262995 Mirzāpur''1263012 Miriālgūda''1263214 Meerut''1263220 Medinīpur''1263311 Mau''1263364 Mathura''1263494 Marmagao''1263780 Mangalore''1263814 Mandya''1263833 Māndu''1263834 Mandsaur''1264111 Māler Kotla''1264115 Mālegaon''1264407 Mahbūbnagar''1264521 Madurai''1264527 Chennai''1264543 Madhyamgram''1264621 Madanapalle''1264637 Machilīpatnam''1264728 Ludhiāna''1264733 Lucknow''1264773 Loni''1265014 Latur''1265157 Lalitpur''1265242 Lakhīmpur''1265683 Kumbakonam''1265711 Kulti''1265767 Kūkatpalli''1265859 Krishnanagar''1265873 Kozhikode''1266049 Kota''1266122 Korba''1266285 Kolhāpur''1266305 Kolār''1266486 Kishangarh''1266607 Khurja''1266945 Khardah''1266976 Kharagpur''1267016 Khanna''1267031 Khandwa''1267076 Khammam''1267480 Katihar''1267579 Kashipur''1267696 Karol Bāgh''1267708 Karnāl''1267755 Karīmnagar''1267995 Kānpur''1268159 Kānchipuram''1268257 Kāmārhāti''1268295 Kalyān''1268561 Kākināda''1268593 Kaithal''1268715 Kānchrāpāra''1268773 Jūnāgadh''1268782 Jalandhar''1268865 Jodhpur''1268907 Jīnd''1268936 Jhunjhunūn''1269006 Jhānsi''1269065 Jetpur''1269135 Jaunpur''1269280 Jāmuria''1269300 Jamshedpur''1269317 Jāmnagar''1269321 Jammu''1269374 Jamālpur''1269388 Jalpāiguri''1269395 Jālna''1269407 Jālgaon''1269515 Jaipur''1269605 Jagādhri''1269633 Jabalpur''1269653 Itārsi''1269723 Ingrāj Bāzār''1269743 Indore''1269771 Imphal''1269834 Ichalkaranji''1269843 Hyderabad''1269910 Hugli''1269920 Hubli''1269934 Hosūr''1269935 Hospet''1269937 Hoshiārpur''1269939 Hoshangābād''1270022 Hisar''1270079 Hindupur''1270164 Hazārībāg''1270216 Hāthras''1270239 Hassan''1270351 Haridwar''1270370 Hardoī''1270393 Hāpur''1270396 Hāora''1270407 Hanumāngarh''1270484 Hālīsahar''1270498 Haldwani''1270525 Hājīpur''1270568 Hābra''1270583 Gwalior''1270642 Gurgaon''1270668 Guntūr''1270670 Guntakal''1270711 Guna''1270752 Gulbarga''1270801 Gudivāda''1270896 Gosāba''1270926 Gorakhpur''1270927 Gorakhpur''1270990 Gondia''1270994 Gondal''1270996 Gonda''1271107 Godhra''1271306 Ghāzīpur''1271308 Ghāziābād''1271439 Gaya''1271476 Guwahati''1271662 Gangāwati''1271675 Gangāpur''1271685 Gangānagar''1271715 Ghandinagar''1271717 Gāndhīdhām''1271850 Gadag''1271883 Fīrozpur''1271885 Fīrozābād''1271912 Fatehpur''1271942 Farrukhābād''1271951 Farīdābād''1271976 Faizābād''1271987 Etāwah''1272013 Erode''1272051 Elūru''1272175 Durgāpur''1272181 Durg''1272243 Dam Dam''1272423 Dombivli''1272543 Dindigul''1272552 Dimāpur''1272648 Dibrugarh''1272691 Dhule''1272805 Dhaulpur''1272842 Dharmavaram''1272979 Dhanbād''1273066 Dewas''1273193 Deoria''1273294 Delhi''1273309 Dehri''1273313 Dehradun''1273467 Dārjiling''1273491 Darbhanga''1273581 Dānāpur''1273587 Damoh''1273780 Cuttack''1273800 Cuddapah''1273802 Cuddalore''1273865 Coimbatore''1273874 Cochin''1273892 Chūru''1274040 Chittaurgarh''1274056 Chitradurga''1274220 Chikmagalūr''1274304 Chhindwāra''1274337 Chhatarpur''1274353 Chhapra''1274553 Chās''1274693 Chandrapur''1274746 Chandigarh''1274767 Chandausi''1274784 Chandannagar''1275004 Kolkata''1275068 Burhānpur''1275120 Bulandshahr''1275163 Budaun''1275198 Brahmapur''1275218 Botād''1275248 Borivli''1275339 Mumbai''1275362 Bokāro''1275610 Bilimora''1275637 Bilāspur''1275665 Bīkāner''1275701 Bijapur''1275716 Bihār Sharīf''1275738 Bīdar''1275778 Bhusāwal''1275812 Bhuj''1275817 Bhubaneshwar''1275841 Bhopal''1275899 Bhiwāni''1275901 Bhiwandi''1275926 Bhind''1275947 Bhīmavaram''1275960 Bhīlwāra''1275971 Bhilai''1276014 Bhayandar''1276032 Bhāvnagar''1276058 Bhātpāra''1276070 Bhatinda''1276100 Bharūch''1276128 Bharatpur''1276300 Bhāgalpur''1276320 Bhadreswar''1276321 Bhadrāvati''1276393 Bettiah''1276509 Bellary''1276533 Belgaum''1276609 Begusarai''1276634 Beāwar''1276720 Batāla''1276736 Basti''1276856 Bārsi''1276895 Barnāla''1277013 Bareilly''1277029 Barddhamān''1277065 Bārāsat''1277066 Bārāsat''1277082 Baranagar''1277100 Bārākpur''1277240 Bānsbāria''1277264 Bānkura''1277324 Bangaon''1277333 Bangalore''1277397 Bānda''1277508 Bālurghāt''1277539 Bāli''1277599 Balasore''1277780 Baidyabāti''1277799 Bahraich''1277820 Baharampur''1277835 Bahādurgarh''1277939 Bagaha''1277976 Badlapur''1278083 Āzamgarh''1278130 Āvadi''1278149 Aurangabad''1278314 Āsansol''1278483 Ara''1278672 Anantapur''1278685 Ānand''1278708 Amroha''1278710 Amritsar''1278718 Amrāvati''1278815 Ambur''1278840 Ambattūr''1278860 Ambāla''1278903 Amarnāth''1278946 Alwar''1278985 Alleppey''1278994 Allahābād''1279017 Alīgarh''1279064 Alandur''1279105 Akola''1279159 Ajmer''1279186 Aizawl''1279228 Ahmadnagar''1279233 Ahmedabad''1279259 Āgra''1279290 Agartala''1279335 Ādoni''1279344 Ādilābād''1279390 Achalpur''1279403 Abohar''1344377 Haldia''1348818 Nangi''1430991 Soyībug''6619347 Navi Mumbai''6943660 Shivaji Nagar''6954929 Greater Noida''6992326 Mohali''7279746 Noida''7279754 Singrauli''7284820 Jaigaon''7302826 Lal Bahadur Nagar''7302828 Malkajgiri''7302833 Gajuwaka''7302845 Quthbullapur''7302856 Serilingampalle''7302861 Ashoknagar Kalyangarh''8347656 Ramagundam''9781227 Kultali''89824 Umm Qaşr''90708 Sīnah''91597 Sāmarrā’''94787 Kirkuk''94824 Karbala''95446 Erbil''96994 Dihok''97990 Baqubah''98182 Baghdad''98245 Az Zubayr''98463 As Sulaymānīyah''98530 As Samawah''98717 Ramadi''98854 An Nāşirīyah''98860 An Najaf''99071 Al Mawşil al Jadīdah''99072 Mosul''99131 Al Kūt''99135 Kufa''99347 Al Ḩillah''99446 Al Fāw''99454 Al Fallūjah''99532 Al Başrah''99608 Al ‘Amārah''99762 Ad Dīwānīyah''100077 Abū Ghurayb''388349 Al Başrah al Qadīmah''14256 Āzādshahr''23814 Kahrīz''32767 Qarchak''111453 Zanjān''111822 Yazd''112214 Varāmīn''112646 Torbat-e Ḩeydarīyeh''112931 Tehrān''113646 Tabrīz''114259 Sirjan''115019 Shiraz''115770 Shahr-e Kord''116402 Semnān''116667 Sāveh''116996 Sari''117392 Saqqez''117574 Sanandaj''118063 Sabzevar''118743 Rasht''118994 Rafsanjān''119115 Qūchān''119208 Qom''119505 Qazvin''121380 Pārsābād''121801 Orūmīyeh''122285 Nīshābūr''122438 Naz̧arābād''124085 Mīāndoāb''124620 Masjed Soleymān''124665 Mashhad''124862 Marand''125185 Malāyer''125446 Mahābād''126409 Kūhdasht''126972 Khvoy''127319 Khorramshahr''127349 Khorramābād''128226 Kermānshāh''128234 Kermān''128477 Kāshān''128747 Karaj''130802 Īlām''132144 Hamadān''132892 Gorgān''132938 Gonbad-e Kāvūs''135423 Shahrud''139817 Bandar-e Būshehr''139889 Būkān''140044 Borūjerd''140380 Bojnūrd''140463 Bīrjand''141584 Bāneh''141679 Bandar-e Anzalī''141681 Bandar ‘Abbās''142363 Bābol''143083 Ardabīl''143127 Arāk''143534 Āmol''144448 Ahvaz''145459 Abadan''417594 Shāhreẕā''418606 Najafābād''418710 Khomeynī Shahr''418863 Isfahan''1113217 Zābol''1159301 Zahedan''1160939 Īrānshahr''3413829 Reykjavík''2523630 Reggio Calabria''2523920 Palermo''2524170 Messina''2525068 Catania''2525473 Cagliari''3164419 Vicenza''3164527 Verona''3165185 Trieste''3165524 Turin''3165926 Taranto''3168673 Salerno''3169070 Rome''3169361 Rimini''3169522 Reggio nell'Emilia''3169921 Prato''3171168 Pescara''3171180 Perugia''3171457 Parma''3171728 Padova''3172394 Napoli''3172629 Monza''3173331 Modena''3173435 Milano''3173529 Mestre''3174659 Livorno''3176219 Genoa''3176885 Foggia''3176959 Florence''3181554 Brescia''3181928 Bologna''3182164 Bergamo''3182351 Bari''3183539 Acilia-Castel Fusano-Ostia Antica''3488465 Spanish Town''3488981 Portmore''3489297 New Kingston''3489854 Kingston''246013 Wādī as Sīr''248946 Irbid''250090 Zarqa''250441 Amman''250799 ‘Ajlūn''7838895 Russeifa''1847963 Atsugi''1847966 Akashi''1848004 Zama''1848254 Yono''1848277 Yonago''1848313 Yokosuka''1848354 Yokohama''1848373 Yokkaichi''1848445 Yatsushiro''1848522 Yao''1848689 Yamaguchi-shi''1848774 Yaizu''1849053 Utsunomiya-shi''1849186 Urayasu''1849372 Uji''1849429 Ueda''1849498 Ube''1849796 Tsu-shi''1849814 Toyota''1849837 Toyonaka''1849845 Toyokawa''1849846 Toyohashi''1849876 Toyama-shi''1849892 Tottori''1850034 Tondabayashichō''1850147 Tokyo''1850152 Tokuyama''1850158 Tokushima-shi''1850181 Tokorozawa''1850692 Nishi-Tokyo-shi''1850910 Takatsuki''1851002 Takasaki''1851012 Takarazuka''1851032 Takaoka''1851100 Takamatsu-shi''1851193 Tajimi''1851348 Suzuka''1851483 Suita''1851604 Sōka''1851717 Shizuoka-shi''1852225 Shimonoseki''1852383 Minato''1852663 Seto''1852899 Sasebo''1853008 Sandachō''1853140 Sakata''1853195 Sakai''1853303 Saga-shi''1853483 Oyama''1853574 Ōtsu-shi''1853677 Ōta''1853909 Ōsaka-shi''1854083 Ōmuta''1854162 Ōme''1854376 Okazaki''1854383 Okayama-shi''1854487 Ōita''1854703 Ōgaki''1854747 Odawara''1854902 Numazu''1855078 Noda''1855095 Nobeoka''1855189 Nishio''1855207 Nishinomiya-hama''1855425 Niihama''1855431 Niigata-shi''1855612 Nara-shi''1856035 Naha-shi''1856057 Nagoya-shi''1856177 Nagasaki-shi''1856184 Nagareyama''1856199 Nagaoka''1856215 Nagano-shi''1856367 Musashino''1856584 Moriguchi''1856717 Miyazaki-shi''1856775 Miyakonojō''1856942 Mitaka-shi''1856977 Mishima''1857046 Mino''1857144 Minami-rinkan''1857519 Matsumoto''1857550 Matsue-shi''1857553 Matsudo''1857568 Matsubara''1857843 Maebashi-shi''1857871 Machida''1857910 Kyoto''1858067 Kusatsu''1858088 Kurume''1858296 Kure''1858311 Kurashiki''1858421 Kumamoto''1858428 Kumagaya''1858729 Koshigaya''1858836 Kōnan''1858910 Komatsu''1858926 Komaki''1858964 Kokubunji''1859100 Kōfu-shi''1859146 Kōchi-shi''1859171 Kobe''1859307 Kitakyūshū''1859383 Kishiwada''1859393 Kisarazu''1859405 Kiryū''1859642 Kawasaki''1859675 Kawanishi''1859730 Kawaguchi''1859740 Kawagoe''1859884 Kasukabe''1859891 Kasugai''1859924 Kashiwa''1859951 Kashihara-shi''1860034 Kariya''1860243 Kanazawa-shi''1860437 Kamirenjaku''1860672 Kamakura''1860704 Kakogawachō-honmachi''1860735 Kakamigahara''1860827 Kagoshima-shi''1860871 Kadoma''1861107 Izumi''1861164 Iwatsuki''1861212 Iwakuni''1861310 Itami''1861436 Isesaki''1861449 Isehara''1861602 Inazawa''1861749 Ikoma''1861864 Iida''1861949 Ichinomiya''1862033 Ibaraki''1862302 Hōfu''1862415 Hiroshima-shi''1862462 Hiratsuka''1862540 Hirakata''1862599 Hino''1862627 Himeji''1862636 Hikone''1863209 Handa''1863289 Hamamatsu''1863431 Hadano''1863440 Hachiōji''1863641 Gifu-shi''1863905 Funabashi''1863917 Fukuyama''1863967 Fukuoka-shi''1863985 Fukui-shi''1864031 Fukayachō''1864092 Fujisawa''1864105 Fujinomiya''1864132 Fujieda''1864134 Fuji''1864416 Daitōchō''1864518 Chōfugaoka''1864572 Chikushino-shi''1864624 Chigasaki''1864750 Beppu''1865005 Ashikaga''1865294 Anjō''1865387 Amagasaki''1865714 Ageoshimo''1894616 Okinawa''1907146 Sayama''1907299 Asaka''1907301 Shimotoda''1926004 Wakayama-shi''1926099 Matsuyama''2110556 Yamagata-shi''2110683 Tsukuba''2111149 Sendai-shi''2111220 Sakura''2111684 Narita''2111834 Morioka-shi''2111901 Mito-shi''2112141 Kōriyama''2112312 Katsuta''2112539 Iwaki''2112576 Ishinomaki''2112664 Ichihara''2112708 Hitachi''2112923 Fukushima-shi''2113015 Chiba''2113126 Akita''2113164 Abiko''2113719 Akita Shi''2127733 Tomakomai''2128295 Sapporo''2128574 Otaru''2128815 Obihiro''2129376 Kushiro''2129537 Kitami''2130057 Hirosaki''2130188 Hakodate''2130203 Hachinohe''2130404 Ebetsu''2130629 Asahikawa''2130658 Aomori Shi''6697563 Neyagawa''6822096 Hitachi-Naka''6825489 Jōetsu''6940394 Saitama''7279570 Higashimurayama-shi''8555918 Sendai''179330 Thika''184622 Nakuru''184745 Nairobi''186301 Mombasa''187968 Malindi''191245 Kisumu''198629 Eldoret''1527534 Osh''1528675 Bishkek''1821306 Phnom Penh''1821940 Takeo''1822214 Siem Reap''1831142 Sihanoukville''1831797 Battambang''1866923 Wŏnsan''1869446 Songnim''1870883 Sariwŏn''1871859 Pyongyang''1873757 Namp’o''1876373 Kaesŏng''1877030 Hŭngnam''1877449 Hamhŭng''1877615 Haeju''2040893 Sinŭiju''2043572 Kanggye-si''2043837 Hyesan-si''2044757 Chongjin''1832847 Yangju''1833105 Wŏnju''1833747 Ulsan''1833788 Uijeongbu-si''1835235 Daejeon''1835329 Daegu''1835553 Suwon-si''1835648 Suncheon''1835848 Seoul''1838524 Busan''1838716 Bucheon-si''1839071 Pohang''1839652 Osan''1841066 Moppo''1841598 Gyeongsan-si''1841603 Kyonju''1841811 Gwangju''1841988 Guri-si''1842025 Kunsan''1842225 Gumi''1842485 Goyang-si''1842943 Kimhae''1842944 Gimcheon''1843137 Kang-neung''1843491 Iksan''1843564 Incheon''1843702 Icheon-si''1843847 Hwaseong-si''1845136 Chuncheon''1845457 Jeonju''1845604 Cheongju-si''1845759 Cheonan''1846052 Chinju''1846266 Jeju-si''1846326 Changwon''1846898 Anyang-si''1846918 Ansan-si''1846986 Andong''1884138 Yeosu''1892823 Tonghae''1897000 Seongnam-si''1897007 Hanam''1897118 Hwado''1948005 Kwangmyŏng''6621166 Seogwipo''285629 Ḩawallī''285704 As Sālimīyah''285839 Al Aḩmadī''412800 Şabāḩ as Sālim''607610 Zhanaozen''608668 Oral''609655 Karagandy''610529 Atyrau''610611 Aqtöbe''610612 Aktau''1516589 Zhezqazghan''1516905 Taraz''1518262 Temirtau''1518542 Taldykorgan''1518543 Taldyqorghan''1518980 Shymkent''1519422 Semey''1519843 Rudnyy''1519922 Kyzylorda''1519928 Kostanay''1520172 Petropavlovsk''1520240 Pavlodar''1520316 Ust-Kamenogorsk''1522203 Kokshetau''1524325 Ekibastuz''1526273 Astana''1526384 Almaty''9862222 Kyzyl-Orda''1651944 Vientiane''266826 Tripoli''267008 Tyre''268064 Sidon''268743 Ra’s Bayrūt''276781 Beirut''278913 Nabatîyé et Tahta''1226260 Trincomalee''1230089 Pita Kotte''1233369 Negombo''1234633 Moratuwa''1238992 Sri Jayewardenepura Kotte''1241622 Kandy''1242110 Kalmunai''1242833 Jaffna''1246321 Galkissa''1248991 Colombo''2274895 Monrovia''932505 Maseru''593116 Vilnius''594739 Šiauliai''596128 Panevėžys''598098 Klaipėda''598316 Kaunas''456172 Riga''460413 Daugavpils''81302 Tobruk''88319 Benghazi''89113 Ajdabiya''2208485 Zliten''2210221 Tarhuna''2210247 Tripoli''2210554 Sirte''2212771 Şabrātah''2212775 Sabhā''2214846 Mişrātah''2216885 Zawiya''2218970 Az Zāwīyah''2219905 Al Khums''2219960 Al Jadīd''2528910 Tétouan''2529317 Taza''2530335 Tangier''2537406 Settat''2537763 Sale''2537881 Safi''2538475 Rabat''2540483 Oujda''2541479 Nador''2542051 Mohammedia''2542715 Meknès''2542997 Marrakesh''2543549 Larache''2544001 Ksar el Kebir''2544248 Khouribga''2544571 Kenitra''2548885 Fès''2550078 El Jadida''2553604 Casablanca''2555745 Beni Mellal''2558470 Khemisset''2558545 Al Hoceïma''2561668 Agadir''617239 Tiraspolul''618426 Chişinău''618577 Bender''618605 Bălţi''3193044 Podgorica''1053384 Toamasina''1055429 Toliara''1062663 Mahajanga''1064890 Fianarantsoa''1069166 Antsirabe''1070940 Antananarivo''785842 Skopje''2451185 Sikasso''2453348 Mopti''2460596 Bamako''1285173 Yenangyaung''1290596 Taungoo''1292288 Thaton''1293625 Dawei''1293960 Taunggyi''1295765 Sittwe''1298824 Yangon''1299154 Pyay''1300466 Bago''1302439 Pakokku''1307835 Myingyan''1308465 Mawlamyine''1308522 Monywa''1309611 Myeik''1309793 Meiktila''1309937 Pyin Oo Lwin''1311874 Mandalay''1314759 Lashio''1325211 Hinthada''1328421 Pathein''6611854 Nay Pyi Taw''2028462 Ulaanbaatar''1821274 Macau''2377450 Nouakchott''933945 Vacoas''934154 Port Louis''1282027 Male''925475 Mzuzu''927967 Lilongwe''931755 Blantyre''3482969 Gustavo A. Madero''3514450 Xochimilco''3514519 San Miguel Xico Viejo''3514663 Álvaro Obregón''3514670 Villahermosa''3514674 Gustavo A. Madero''3514783 Veracruz''3515001 Tuxtla Gutiérrez''3515011 Tuxpan de Rodríguez Cano''3515062 Tulancingo''3515302 Toluca''3515428 Tlalpan''3515431 Tlalnepantla''3515463 Tlahuac''3515715 Texcoco de Mora''3515807 Cuautitlán Izcalli''3516053 Temapache''3516109 Tehuacán''3516266 Tapachula''3516271 Tantoyuca''3516355 Tampico''3517270 Santa María Chimalhuacán''3518135 San Pablo de las Salinas''3518692 San Juan del Río''3519537 San Cristóbal de las Casas''3520339 Reynosa''3521081 Puebla''3521168 Poza Rica de Hidalgo''3521342 Playa del Carmen''3522210 Pachuca de Soto''3522307 Orizaba''3522507 Oaxaca de Juárez''3522551 Nuevo Laredo''3522732 Nicolás Romero''3522790 Naucalpan de Juárez''3523183 Minatitlan''3523202 Milpa Alta''3523303 Metepec''3523349 Mérida''3523466 Heroica Matamoros''3523513 Martínez de la Torre''3523760 Magdalena Contreras''3523908 Los Reyes La Paz''3524744 Las Margaritas''3526485 Jiutepec''3526617 Xalapa de Enríquez''3526682 Ixtapaluca''3526683 Iztapalapa''3526700 Iztacalco''3526798 Iguala de la Independencia''3529612 Ecatepec''3529947 Cuernavaca''3529982 Cuautla Morelos''3530049 Cuajimalpa''3530139 Coyoacán''3530240 Córdoba''3530517 Coatzacoalcos''3530569 Coacalco''3530580 Ciudad Victoria''3530582 Ciudad Valles''3530589 Ciudad Nezahualcoyotl''3530594 Ciudad Madero''3530597 Mexico City''3530599 Ciudad del Carmen''3530757 Cholula''3530870 Chilpancingo de los Bravos''3531023 Chetumal''3531200 Chalco de Díaz Covarrubias''3531673 Cancún''3531732 Campeche''3532497 Azcapotzalco''3532624 Ciudad López Mateos''3533462 Acapulco de Juárez''3824166 Tampico''3827406 Benito Juarez''3827407 Venustiano Carranza''3827408 Miguel Hidalgo''3827409 Cuauhtémoc''3827414 Huixquilucan''3827598 Ojo de Agua''3827606 Buenavista''3979770 Zapopan''3979802 Zamora''3979844 Zacatecas''3980194 Ciudad de Villa de Álvarez''3980760 Uruapan''3981254 Torreon''3981369 Tonalá''3981461 Tlaquepaque''3981609 Tijuana''3981941 Tepic''3982912 Soledad Díez Gutiérrez''3984583 Santa Catarina''3985241 San Nicolás de los Garza''3985604 San Luis Río Colorado''3985606 San Luis Potosí''3988086 Saltillo''3988214 Salamanca''3991164 Santiago de Querétaro''3991328 Puerto Vallarta''3992619 Piedras Negras''3995019 Navojoa''3995402 Morelia''3995465 Monterrey''3995523 Monclova''3996069 Mexicali''3996322 Mazatlán''3996426 Matamoros''3996663 Manzanillo''3997479 Los Mochis''3998655 León''4000900 La Paz''4004330 Irapuato''4004867 Hidalgo del Parral''4004886 Nogales''4004898 Hermosillo''4005143 Heroica Guaymas''4005492 Guadalupe''4005539 Guadalajara''4005775 Gomez Palacio''4005867 General Escobedo''4005937 Garza García''4006163 Fresnillo''4006702 Ensenada''4011743 Victoria de Durango''4012176 Culiacán''4013516 Colima''4013704 Ciudad Obregón''4013708 Ciudad Juárez''4013714 Ciudad Guzmán''4013720 Ciudad Delicias''4013728 Ciudad Acuña''4014338 Chihuahua''4014875 Celaya''4018390 Apodaca''4019233 Aguascalientes''7280708 Colonia del Valle''8617692 San Pedro Garza Garcia''8858078 Soledad de Graciano Sánchez''8858079 Manzanillo''8858082 Naucalpan de Juárez''1732687 Batu Pahat''1732721 Kampung Pasir Gudang Baru''1732745 Skudai''1732752 Johor Bahru''1732811 Kluang''1732869 Muar''1732903 Shah Alam''1732905 Klang''1733432 Kota Kinabalu''1733953 Lahad Datu''1734052 Sandakan''1734199 Tawau''1734393 Kulim''1734586 Taiping''1734634 Ipoh''1734705 Kuala Terengganu''1734759 Malacca''1734810 Seremban''1735076 Butterworth''1735079 Bukit Mertajam''1735093 Tasek Glugor''1735106 George Town''1735150 Rawang''1735158 Petaling Jaya''1735161 Kuala Lumpur''1735227 Kuantan''1735498 Sungai Petani''1735634 Kuching''1735902 Sibu''1736309 Alor Setar''1736376 Kota Bharu''1737486 Bintulu''1738050 Miri''1764160 Kampung Sungai Ara''1771023 Kampung Baru Subang''8504423 Subang Jaya''1024552 Xai-Xai''1026014 Tete''1028079 Ressano Garcia''1028434 Quelimane''1028918 Pemba''1033356 Nampula''1035025 Nacala''1039536 Maxixe''1039854 Matola''1040652 Maputo''1043893 Lichinga''1049261 Chimoio''1052373 Beira''3352136 Windhoek''2437798 Zinder''2440485 Niamey''2441291 Maradi''2448085 Agadez''2317765 Zaria''2319133 Warri''2319480 Uyo''2319668 Uromi''2320576 Umuahia''2320831 Ugep''2322794 Suleja''2322911 Sokoto''2323390 Saki''2323411 Shagamu''2323675 Sapele''2324774 Port Harcourt''2324857 Pindiga''2325200 Oyo''2325314 Owo''2325330 Owerri''2325590 Osogbo''2326016 Onitsha''2326171 Ondo''2326899 Okrika''2327143 Okigwe''2327220 Okene''2327879 Offa''2328684 Nsukka''2328765 Nnewi''2328811 Nkpor''2328952 Nguru''2329821 Mubi''2330028 Modakeke''2330100 Minna''2331140 Makurdi''2331447 Maiduguri''2332459 Lagos''2332504 Lafiagi''2332515 Lafia''2334327 Kisi''2334802 Katsina''2335204 Kano''2335727 Kaduna''2335953 Jos''2336056 Jimeta''2336589 Jalingo''2336905 Iwo''2337207 Ise-Ekiti''2337490 Inisa''2337639 Ilorin''2337659 Ilobu''2337704 Ilesa''2337765 Ila Orangun''2338106 Ikot-Ekpene''2338269 Ikirun''2338273 Ikire''2338287 Ikere-Ekiti''2338313 Ikeja''2338385 Ijero-Ekiti''2338400 Ijebu-Ode''2338403 Ijebu-Igbo''2338711 Igboho''2339354 Ibadan''2339631 Hadejia''2339937 Gusau''2340451 Gombe''2341355 Gbongan''2341656 Gashua''2342490 Funtua''2343093 Esuk Oron''2343279 Enugu''2343784 Ejigbo''2343983 Effon Alaiye''2344082 Ebute Ikorodu''2346229 Calabar''2346615 Buguma''2347059 Birnin Kebbi''2347209 Bida''2347283 Benin City''2347470 Bauchi''2347954 Bama''2348595 Azare''2348773 Awka''2350249 Amaigbo''2350841 Akure''2352379 Ado-Ekiti''2352778 Abuja''2352947 Abeokuta''2353099 Abakaliki''2353151 Aba''3616035 Tipitapa''3617708 Matagalpa''3617723 Masaya''3617763 Managua''3618030 León''3620381 Chinandega''2743477 Zwolle''2743856 Zoetermeer''2744114 Zaanstad''2745912 Utrecht''2746301 Tilburg''2747351 's-Hertogenbosch''2747373 The Hague''2747891 Rotterdam''2750053 Nijmegen''2751283 Maastricht''2751773 Leiden''2753801 Hoofddorp''2755003 Haarlem''2755251 Groningen''2756071 Enschede''2756253 Eindhoven''2756669 Dordrecht''2758401 Breda''2759661 Arnhem''2759706 Apeldoorn''2759794 Amsterdam''2759821 Amersfoort''2759879 Almere Stad''3133880 Trondheim''3137115 Stavanger''3143244 Oslo''3161732 Bergen''1282898 Pokhara''1282931 Pātan''1283240 Kathmandu''1283460 Dharān Bāzār''1283581 Bīrganj''1283582 Birātnagar''1283613 Bharatpur''2179537 Wellington''2185964 North Shore''2187404 Manukau City''2188164 Lower Hutt''2190324 Hamilton''2191562 Dunedin''2192362 Christchurch''2193733 Auckland''2208032 Tauranga''7302484 Waitakere''286282 Al Sohar''286621 Şalālah''287286 Muscat''287830 ‘Ibrī''288764 Bawshar''288955 As Suwayq''288967 As Sīb al Jadīdah''3701329 San Miguelito''3703443 Panamá''3691148 Tumbes''3691175 Trujillo''3691674 Sullana''3693345 Pucallpa''3693528 Piura''3696183 Iquitos''3696417 Huánuco''3698304 Chimbote''3698350 Chiclayo''3699088 Cajamarca''3928128 Tacna''3928245 Surco''3931276 Puno''3936456 Lima''3937513 Juliaca''3938527 Ica''3939459 Huancayo''3941584 Cusco''3943789 Chincha Alta''3946083 Callao''3947019 Ayacucho''3947322 Arequipa''2088122 Port Moresby''1679432 Zamboanga''1680197 Urdaneta''1680932 Tuguegarao City''1681602 Toledo''1682598 Taytay''1682812 Tarlac City''1683013 Tanza''1683881 Talisay''1684269 Tagum''1684308 Taguig''1686547 Silang''1687687 Santol''1687801 Santiago''1687894 Santa Rosa''1688253 Santa Cruz''1688749 San Pedro''1688830 San Pablo''1689056 San Mateo''1689286 San Juan''1689395 San Jose del Monte''1689510 San Jose''1690039 San Fernando''1691444 Roxas City''1692192 Quezon City''1692520 Pulong Santa Cruz''1692685 Puerto Princesa''1695743 Panalanoy''1696710 Pagadian''1697018 Ormoc''1697175 Olongapo''1698829 Naga''1699054 Muricay''1699296 Rodriguez''1699802 Meycauayan''1700360 Mati''1701053 Marawi City''1701472 Mantampay''1701500 Mansilingan''1701668 Manila''1701947 Mandaue City''1701966 Mandaluyong City''1702540 Malolos''1703417 Makati City''1704703 Mabalacat City''1705357 Lucena''1706090 Lipa City''1706684 Libertad''1706889 Legaspi''1707267 Lapu-Lapu City''1707404 Laoag''1708522 Koronadal''1709968 Kabankalan''1710141 Jolo''1710914 Imus''1711005 Iloilo''1711082 Iligan City''1711982 Hagonoy''1712051 Guyong''1713022 General Santos''1714201 Dumaguete''1714956 Digos''1715348 Davao''1715430 Dasmariñas''1716771 Cotabato''1717512 Cebu City''1717641 Cavite City''1720681 Calamba''1720840 Cainta''1721080 Cagayan de Oro''1721168 Cadiz''1721906 Cabanatuan City''1722186 Butuan''1722930 Bulaon''1723510 Budta''1725094 Binangonan''1726280 Batangas''1727995 Baliuag''1728930 Baguio''1729085 Bago City''1729524 Bacoor''1729564 Bacolod City''1730501 Antipolo''1730737 Angeles City''1978681 Malingao''7290466 Pasig City''1162004 Khairpur''1162456 Wazīrābād''1162813 Vihāri''1163965 Tando Allāhyār''1163967 Tando Ādam''1164408 Sukkur''1164909 Sialkot''1165108 Shikārpur''1165221 Sheikhupura''1165569 Shahkot''1166000 Sargodha''1166548 Sahiwal''1166652 Sādiqābād''1166993 Rawalpindi''1167528 Quetta''1168197 Peshawar''1168555 Pākpattan''1168718 Okāra''1169116 Nawābshāh''1169605 Muzaffargarh''1169607 Muzaffarābād''1169692 Murīdke''1169825 Multān''1170295 Mirpur Khas''1170395 Mingora''1170880 Mardan''1171123 Mandi Bahāuddīn''1171305 Malir Cantonment''1172128 Lārkāna''1172451 Lahore''1173055 Kotli''1173378 Kot Addu''1173491 Kohāt''1173687 Khushāb''1174167 Khānpur''1174625 Kasūr''1174872 Karachi''1175088 Kamoke''1175156 Kamālia''1175864 Jhelum''1175892 Jhang Sadr''1176106 Jarānwāla''1176515 Jacobābād''1176615 Islamabad''1176734 Hyderabad''1177384 Hāfizābād''1177654 Gujrāt''1177662 Gujrānwāla''1178231 Gojra''1179400 Faisalābād''1180281 Dera Ismāīl Khān''1180289 Dera Ghazi Khan''1180436 Daska''1180809 Dadu''1181073 Chishtiān Mandi''1181096 Chiniot''1181636 Chakwāl''1182092 Būrewāla''1182637 Bhimbar''1183880 Bahāwalpur''1183883 Bahāwalnagar''1184845 Ahmadpur East''1185056 Abbottābād''1332083 Bahāwalnagar''755330 Wola''756135 Warsaw''757026 Tarnów''757065 Targówek''758470 Śródmieście''759734 Rzeszów''760778 Radom''763166 Olsztyn''764484 Mokotów''765876 Lublin''769250 Kielce''776029 Bielany''776069 Białystok''776251 Bemowo''3080165 Zielona Góra''3080985 Zabrze''3081368 Wrocław''3081741 Włocławek''3082707 Wałbrzych''3082914 Tychy''3083271 Toruń''3083829 Szczecin''3085128 Sosnowiec''3086586 Rybnik''3086800 Ruda Śląska''3088171 Poznań''3088825 Płock''3090048 Opole''3093133 Łódź''3093692 Legnica''3094802 Kraków''3095049 Koszalin''3096472 Katowice''3096880 Kalisz''3098722 Gorzów Wielkopolski''3099230 Gliwice''3099424 Gdynia''3099434 Gdańsk''3099759 Elbląg''3100796 Dąbrowa Górnicza''3100946 Częstochowa''3101619 Chorzów''3101950 Bytom''3102014 Bydgoszcz''3103402 Bielsko-Biala''6545326 Ursynów''6545348 Praga Południe''4562831 Bayamón''4563243 Carolina''4566880 Ponce''4568127 San Juan''281102 Rafaḩ''281124 Khān Yūnis''281129 Jabālyā''281133 Gaza''282615 Nablus''285066 Hebron''7303419 East Jerusalem''2262963 Setúbal''2264268 Queluz''2267057 Lisbon''2267827 Funchal''2271772 Amadora''2735943 Porto''2740637 Coimbra''2742032 Braga''3437056 San Lorenzo''3437863 Lambaré''3438115 Fernando de la Mora''3439101 Ciudad del Este''3439214 Capiatá''3439389 Asunción''289888 Ar Rayyān''290030 Doha''935264 Saint-Denis''665004 Târgu-Mureş''665087 Timişoara''665850 Suceava''667268 Sibiu''667873 Satu Mare''668872 Râmnicu Vâlcea''670474 Ploieşti''670609 Piteşti''670889 Piatra Neamţ''671768 Oradea''675810 Iaşi''677697 Galaţi''678015 Focşani''678817 Drobeta-Turnu Severin''680332 Craiova''680963 Constanţa''681290 Cluj-Napoca''683123 Buzău''683506 Bucharest''683844 Braşov''683902 Brăila''684039 Botoşani''685826 Baia Mare''685948 Bacău''686254 Arad''6697993 Baia Mare''783920 Zemun''787657 Niš''789128 Kragujevac''792078 Čačak''792680 Belgrade''3194360 Novi Sad''461740 Zyuzino''461835 Zyablikovo''462444 Zlatoust''462745 Zhulebino''463355 Zheleznodorozhnyy''463829 Zelenograd''466806 Yoshkar-Ola''467978 Yelets''468809 Yasenevo''468902 Yaroslavl''470451 Vykhino-Zhulebino''472045 Voronezh''472231 Volzhskiy''472459 Vologda''472757 Volgograd''472761 Volgodonsk''473247 Vladimir''473249 Vladikavkaz''473972 Veshnyaki''476077 Velikiye Luki''479123 Ulyanovsk''479411 Ukhta''479561 Ufa''480060 Tver''480562 Tula''481453 Troparëvo''482283 Tol’yatti''483551 Tyoply Stan''484646 Tambov''484907 Taganrog''484912 Taganskiy''484972 Syzran’''485239 Syktyvkar''487150 Strogino''487495 Sterlitamak''487846 Stavropol’''487928 Staryy Oskol''490971 Solntsevo''491023 Solikamsk''491422 Sochi''491687 Smolensk''495136 Shchukino''495344 Shchelkovo''496015 Shakhty''496285 Severodvinsk''496348 Severnyy''496527 Serpukhov''496638 Sergiyev Posad''498677 Saratov''498698 Saransk''498817 Saint Petersburg''499099 Samara''499292 Salavat''500004 Rybinsk''500096 Ryazan’''501175 Rostov-na-Donu''502971 Ramenki''503550 Pyatigorsk''503977 Pushkino''504341 Pskov''508101 Podol’sk''508751 Ryazanskiy''509820 Petrozavodsk''510808 Pervoural’sk''511153 Perovo''511196 Perm''511510 Novo-Peredelkino''511565 Penza''514734 Orsk''515003 Orenburg''515012 Orël''515024 Orekhovo-Zuyevo''515027 Orekhovo-Borisovo Severnoye''515879 Oktyabr’skiy''516215 Odintsovo''516264 Ochakovo-Matveyevskoye''516436 Obninsk''517121 Novyye Kuz’minki''517161 Novyye Cherëmushki''517836 Novotroitsk''518255 Novorossiysk''518557 Novomoskovsk''518659 Novokuybyshevsk''518970 Novocherkassk''518976 Novocheboksarsk''519336 Velikiy Novgorod''520068 Noginsk''520494 Nizhniy Tagil''520555 Nizhniy Novgorod''521118 Nizhnekamsk''522377 Nevinnomyssk''522942 Neftekamsk''523064 Nazran’''523523 Nal’chik''523750 Naberezhnyye Chelny''523812 Mytishchi''524294 Murom''524305 Murmansk''524901 Moscow''528293 Maykop''529237 Mar’ino''532096 Makhachkala''532288 Magnitogorsk''532535 Lyublino''532615 Lyubertsy''535121 Lipetsk''536164 Tsaritsyno''537832 Kuz’minki''538560 Kursk''542420 Krasnodar''542634 Presnenskiy''543460 Kovrov''543878 Kostroma''546105 Kolpino''546230 Kolomna''548114 Kislovodsk''548408 Kirov''549479 Khoroshëvo-Mnevniki''550280 Khimki''550478 Khasavyurt''551487 Kazan''553287 Kamyshin''553915 Kaluga''554233 Korolev''554234 Kaliningrad''554787 Izmaylovo''554840 Izhevsk''555129 Ivanovskoye''555312 Ivanovo''558418 Groznyy''560465 Gol’yanovo''561347 Glazov''563464 Engel’s''563514 Elista''563523 Elektrostal’''563708 Dzerzhinsk''566199 Dimitrovgrad''566532 Derbent''569154 Cherkessk''569223 Cherepovets''569273 Cherëmushki''569696 Cheboksary''571476 Bryansk''571741 Brateyevo''575505 Bogorodskoye''576279 Biryulëvo''576432 Bibirevo''577206 Berezniki''578072 Belgorod''578740 Bataysk''579464 Balashikha''579492 Balakovo''580497 Astrakhan’''580724 Arzamas''580922 Armavir''581049 Arkhangel’sk''582432 Al’met’yevsk''1486209 Yekaterinburg''1488754 Tyumen''1489425 Tomsk''1489530 Tobol’sk''1490624 Surgut''1493467 Rubtsovsk''1494114 Prokop’yevsk''1496153 Omsk''1496503 Noyabrsk''1496747 Novosibirsk''1496990 Novokuznetsk''1497337 Norilsk''1497543 Nizhnevartovsk''1497917 Nefteyugansk''1498894 Miass''1498920 Mezhdurechensk''1500665 Leninsk-Kuznetsky''1500973 Kyzyl''1501321 Kurgan''1502026 Krasnoyarsk''1503277 Kiselëvsk''1503901 Kemerovo''1504682 Kansk''1504826 Kamensk-Ural’skiy''1508291 Chelyabinsk''1510018 Biysk''1510853 Barnaul''1512165 Achinsk''1512236 Abakan''1538637 Seversk''2013159 Yakutsk''2013348 Vladivostok''2013952 Ust’-Ilimsk''2014006 Ussuriysk''2014407 Ulan-Ude''2019528 Nakhodka''2021851 Komsomolsk-on-Amur''2022890 Khabarovsk''2023469 Irkutsk''2025339 Chita''2026609 Blagoveshchensk''2027456 Artëm''2027667 Angarsk''2051523 Bratsk''2056752 Khabarovsk Vtoroy''2119441 Yuzhno-Sakhalinsk''2122104 Petropavlovsk-Kamchatsky''6418146 Chertanovo Yuzhnoye''6418220 Orekhovo-Borisovo''8504948 Petrogradka''8504949 Vasyl'evsky Ostrov''8504951 Kalininskiy''8504952 Krasnogvargeisky''8504953 Admiralteisky''8504958 Akademicheskoe''8504960 Centralniy''202061 Kigali''100425 Yanbu‘ al Baḩr''101628 Tabūk''101760 Sulţānah''102527 Sakākā''103630 Najrān''104515 Mecca''105072 Khamis Mushait''105299 Jizan''105343 Jeddah''106281 Hayil''107304 Buraydah''107968 Ta’if''108410 Riyadh''108512 ‘Ar‘ar''108648 Al Qurayyāt''109101 Al Mubarraz''109223 Medina''109323 Khobar''109435 Al Jubayl''109571 Al Hufūf''110336 Dammam''110690 Abha''8394316 Unaizah''364103 Wad Medani''365137 Omdurman''367644 Sinnar''368277 Rabak''371760 Kosti''372753 Kassala''377039 Port Sudan''378231 Atbara''378699 An Nuhūd''379003 El Obeid''379062 Al Qadarif''379149 Al Manāqil''379252 Khartoum''379303 Geneina''379555 El Fasher''380148 El Daein''380173 Ed Damer''380174 Ad-Damazin''2664454 Västerås''2666199 Uppsala''2673730 Stockholm''2692969 Malmö''2711537 Göteborg''1880252 Singapore''3196359 Ljubljana''724443 Košice''3060972 Bratislava''2407790 Kenema''2409306 Freetown''2410048 Bo''2243940 Ziguinchor''2244322 Touba''2244616 Tiébo''2244799 Thiès Nones''2246452 Saint-Louis''2246678 Pikine''2250805 Kaolack''2251339 Grand Dakar''2253354 Dakar''53654 Mogadishu''54225 Marka''55671 Kismayo''56399 Jamaame''57289 Hargeysa''64435 Berbera''64536 Baidoa''3383330 Paramaribo''363885 Wau''370737 Malakal''373303 Juba''3583096 Soyapango''3583334 Santa Ana''3583361 San Salvador''3583446 San Miguel''3584257 Santa Tecla''3584399 Mejicanos''3587345 Apopa''169389 Idlib''169577 Homs''170017 Ḩamāh''170063 Aleppo''170592 Douma''170654 Damascus''170794 Deir ez-Zor''172955 Ar Raqqah''173576 Latakia''174018 Al Bāb''934995 Manzini''2425791 Sagh''2427123 N'Djamena''2427455 Moundou''2364104 Sokodé''2365267 Lomé''2366152 Kara''1150515 Surat Thani''1151933 Nakhon Si Thammarat''1152473 Lampang''1153671 Chiang Mai''1605239 Udon Thani''1605245 Ubon Ratchathani''1606250 Si Racha''1606590 Samut Prakan''1607017 Rayong''1607508 Phra Pradaeng''1607708 Phitsanulok''1608048 Pak Kret''1608133 Mueang Nonthaburi''1608529 Nakhon Ratchasima''1608534 Nakhon Pathom''1609350 Bangkok''1609776 Khon Kaen''1609899 Khlong Luang''1610780 Hat Yai''1611110 Chon Buri''1613769 Ban Rangsit''1221874 Dushanbe''1514879 Khŭjand''1645457 Dili''162183 Ashgabat''601734 Daşoguz''1218667 Mary''1219649 Türkmenabat''2464470 Tunis''2464915 Sousse''2467454 Sfax''2468369 Gabès''2468925 Midoun''2472706 Bizerte''2473449 Kairouan''298033 Viranşehir''298117 Van''298299 Uşak''298333 Şanlıurfa''298806 Turgutlu''299817 Tarsus''300614 Siverek''300619 Sivas''300822 Siirt''303195 Osmaniye''303873 Nazilli''304531 Mercin''304827 Manisa''304922 Malatya''305268 Kütahya''306571 Konya''307084 Kızıltepe''307654 Kırıkkale''308464 Kayseri''309527 Karaman''310859 Kahramanmaraş''311046 İzmir''311073 Isparta''311111 İskenderun''314830 Gaziantep''315202 Eskişehir''315368 Erzurum''315373 Erzincan''315808 Elazığ''316541 Diyarbakır''317109 Denizli''321836 Batman''322165 Balıkesir''322830 Aydın''323777 Antalya''323779 Antakya''323786 Ankara''324190 Alanya''324496 Aksaray''325303 Afyonkarahisar''325330 Adıyaman''325363 Adana''442301 Batikent''737022 Zonguldak''737071 Zeytinburnu''738329 Üsküdar''738377 Umraniye''738618 Turhal''738648 Trabzon''738743 Tokat''738927 Tekirdağ''739549 Şişli''740264 Samsun''741100 Ordu''741385 Mustafakemalpaşa''741763 Maltepe''745028 İzmit''745044 İstanbul''745169 Inegol''747014 Gebze''747323 Esenyurt''747340 Esenler''747712 Edirne''748879 Çorum''748893 Çorlu''750269 Bursa''751077 Bandırma''751324 Bağcılar''752850 Adapazarı''6947637 Ataşehir''6947639 Başakşehir''6947640 Beylikdüzü''6947641 Büyükçekmece''6955677 Çankaya''7627067 Bahçelievler''7628416 Sultangazi''7628419 Sultanbeyli''7628420 Sancaktepe''7701384 Karabağlar''3574309 Laventille''1665196 Douliu''1668341 Taipei''1668355 Tainan''1668399 Taichung''1670029 Banqiao''1671566 Nantou''1673820 Kaohsiung''1674504 Hualian''1675151 Hsinchu''1678228 Keelung''6696918 Taoyuan City''6949678 Taitung City''148730 Zanzibar''149606 Tanga''149658 Tabora''150006 Shinyanga''152224 Mwanza''152451 Musoma''153209 Moshi''153220 Morogoro''154380 Mbeya''157738 Kigoma''158151 Katumba''159071 Iringa''160196 Dodoma''160263 Dar es Salaam''161325 Arusha''877401 Songea''686967 Zhytomyr''687700 Zaporizhzhya''688105 Yevpatoriya''688148 Yenakiyeve''689558 Vinnytsya''690548 Uzhhorod''691650 Ternopil’''691999 Syevyerodonets’k''692194 Sumy''693468 Sloviansk''693805 Simferopol''694423 Sevastopol''695594 Rivne''696643 Poltava''697889 Pavlohrad''698625 Oleksandriya''698740 Odessa''700051 Nikopol’''700569 Mykolayiv''701404 Melitopol’''701822 Mariupol''702320 Makiyivka''702550 L'viv''702569 Luts’k''702658 Luhansk''702972 Lysychans’k''703448 Kiev''703845 Kryvyi Rih''704147 Kremenchuk''704508 Kramators’k''705812 Kirovohrad''706369 Khmel’nyts’kyy''706448 Kherson''706483 Kharkiv''706524 Kerch''707471 Ivano-Frankivs’k''707753 Horlivka''709717 Donetsk''709930 Dnipropetrovsk''709932 Dniprodzerzhyns’k''710719 Chernivtsi''710735 Chernihiv''710791 Cherkasy''712165 Bila Tserkva''712451 Berdyans’k''713716 Alchevs’k''230166 Lira''232422 Kampala''233346 Gulu''4049979 Birmingham''4068590 Huntsville''4076598 Mobile''4076784 Montgomery''4119403 Little Rock''4140963 Washington, D.C.''4148757 Brandon''4149962 Cape Coral''4151316 Clearwater''4151909 Coral Springs''4155966 Fort Lauderdale''4156404 Gainesville''4158476 Hialeah''4158928 Hollywood''4160021 Jacksonville''4164138 Miami''4164167 Miami Gardens''4164601 Miramar''4167147 Orlando''4167499 Palm Bay''4168139 Pembroke Pines''4169171 Port Saint Lucie''4171563 Saint Petersburg''4174715 Tallahassee''4174757 Tampa''4180386 Athens''4180439 Atlanta''4188985 Columbus''4221552 Savannah''4250542 Springfield''4257227 Evansville''4259418 Indianapolis''4273837 Kansas City''4276614 Olathe''4276873 Overland Park''4280539 Topeka''4281730 Wichita''4295940 Ironville''4297983 Lexington''4297999 Lexington-Fayette''4299276 Louisville''4300488 Meads''4315588 Baton Rouge''4330145 Lafayette''4333177 Metairie''4333190 Metairie Terrace''4335045 New Orleans''4341513 Shreveport''4347778 Baltimore''4381982 Columbia''4385018 East Independence''4391812 Independence''4393217 Kansas City''4407066 St. Louis''4409896 Springfield''4431410 Jackson''4459467 Cary''4460243 Charlotte''4464368 Durham''4466033 Fayetteville''4469146 Greensboro''4471025 High Point''4487042 Raleigh''4498303 West Raleigh''4499379 Wilmington''4499612 Winston-Salem''4508722 Cincinnati''4509177 Columbus''4509884 Dayton''4543762 Norman''4544349 Oklahoma City''4553433 Tulsa''4560349 Philadelphia''4574324 Charleston''4575352 Columbia''4612862 Chattanooga''4613868 Clarksville''4619947 East Chattanooga''4634946 Knoxville''4641239 Memphis''4644312 Murfreesboro''4644585 Nashville''4645421 New South Memphis''4669635 Abilene''4671240 Arlington''4671654 Austin''4672989 Beaumont''4676740 Brownsville''4679195 Carrollton''4683416 Corpus Christi''4684888 Dallas''4685907 Denton''4691930 Fort Worth''4692559 Frisco''4693003 Garland''4694482 Grand Prairie''4699066 Houston''4700168 Irving''4703223 Killeen''4705349 Laredo''4709796 McAllen''4710178 McKinney''4710826 Mesquite''4717782 Pasadena''4719457 Plano''4726206 San Antonio''4739526 Waco''4741752 Wichita Falls''4744091 Alexandria''4744709 Arlington''4752186 Chesapeake''4756955 East Hampton''4762894 Hampton''4776024 Newport News''4776222 Norfolk''4781708 Richmond''4791259 Virginia Beach''4835797 Hartford''4839366 New Haven''4839745 North Stamford''4843564 Stamford''4845193 Waterbury''4850751 Cedar Rapids''4853828 Des Moines''4883817 Aurora''4887398 Chicago''4890864 Elgin''4898015 Joliet''4903279 Naperville''4903976 North Peoria''4905687 Peoria''4907959 Rockford''4920423 Fort Wayne''4926563 South Bend''4930956 Boston''4931972 Cambridge''4942618 Lowell''4951305 South Boston''4951788 Springfield''4956184 Worcester''4984247 Ann Arbor''4990729 Detroit''4992982 Flint''4994358 Grand Rapids''4998830 Lansing''5011148 Sterling Heights''5014051 Warren''5037649 Minneapolis''5043473 Rochester''5045360 Saint Paul''5059163 Fargo''5072006 Lincoln''5074472 Omaha''5089178 Manchester''5097529 Edison''5097598 Elizabeth''5099836 Jersey City''5101798 Newark''5102466 Paterson''5107129 Amherst''5110266 The Bronx''5110302 Brooklyn''5110629 Buffalo''5115985 East New York''5122520 Jamaica''5125771 Manhattan''5128581 New York City''5133273 Borough of Queens''5134086 Rochester''5139568 Staten Island''5140405 Syracuse''5145215 Yonkers''5145476 Akron''5150529 Cleveland''5174035 Toledo''5178127 Allentown''5188843 Erie''5206379 Pittsburgh''5224151 Providence''5231851 Sioux Falls''5254962 Green Bay''5261457 Madison''5263045 Milwaukee''5282804 Bridgeport''5289282 Chandler''5295903 Gilbert''5295985 Glendale''5304391 Mesa''5308480 Peoria''5308655 Phoenix''5313457 Scottsdale''5316428 Surprise''5317058 Tempe''5317071 Tempe Junction''5318313 Tucson''5323810 Anaheim''5324200 Antioch''5325738 Bakersfield''5327684 Berkeley''5331835 Burbank''5334223 Carlsbad''5336899 Chula Vista''5339111 Concord''5339631 Corona''5339840 Costa Mesa''5341430 Daly City''5343858 Downey''5344994 East Los Angeles''5345743 El Monte''5346111 Elk Grove''5346827 Escondido''5347335 Fairfield''5349755 Fontana''5350734 Fremont''5350937 Fresno''5351247 Fullerton''5351515 Garden Grove''5352423 Glendale''5355933 Hayward''5357527 Hollywood''5358705 Huntington Beach''5359488 Inglewood''5359777 Irvine''5364940 Lancaster''5367929 Long Beach''5368361 Los Angeles''5373900 Modesto''5374732 Moreno Valley''5375911 Murrieta''5377613 North Glendale''5377995 Norwalk''5378538 Oakland''5378771 Oceanside''5379439 Ontario''5379513 Orange''5380184 Oxnard''5380202 Oxnard Shores''5380698 Palmdale''5381396 Pasadena''5384170 Pomona''5385955 Rancho Cucamonga''5387428 Richmond''5387877 Riverside''5388881 Roseville''5389489 Sacramento''5391295 Salinas''5391710 San Bernardino''5391811 San Diego''5391959 San Francisco''5392171 San Jose''5392900 Santa Ana''5393015 Santa Clara''5393049 Santa Clarita''5393287 Santa Rosa''5396003 Simi Valley''5399020 Stockton''5400075 Sunnyvale''5401395 Temecula''5402405 Thousand Oaks''5403022 Torrance''5404794 Universal City''5405288 Valencia''5405380 Vallejo''5405693 Van Nuys''5406222 Victorville''5406567 Visalia''5407933 West Covina''5412199 Arvada''5412347 Aurora''5416541 Centennial''5417598 Colorado Springs''5419384 Denver''5427946 Lakewood''5435464 Pueblo''5441492 Thornton''5443910 Westminster''5454711 Albuquerque''5503766 Enterprise''5505411 Henderson''5506956 Las Vegas''5509403 North Las Vegas''5509952 Paradise''5511077 Reno''5512909 Spring Valley''5513343 Sunrise Manor''5516233 Amarillo''5520993 El Paso''5525577 Lubbock''5526337 Midland''5577147 Fort Collins''5586437 Boise''5640350 Billings''5725846 Eugene''5729485 Gresham''5746545 Portland''5750162 Salem''5780026 Provo''5780993 Salt Lake City''5784549 West Jordan''5784607 West Valley City''5786882 Bellevue''5793933 Everett''5809844 Seattle''5811696 Spokane''5812944 Tacoma''5814616 Vancouver''5856195 Honolulu''5879400 Anchorage''3441575 Montevideo''601294 Nukus''1215957 Tirmiz''1216265 Samarqand''1216311 Qarshi''1217662 Bukhara''1512473 Urganch''1512569 Tashkent''1512979 Qo‘qon''1513064 Olmaliq''1513131 Navoiy''1513157 Namangan''1513243 Marg‘ilon''1513886 Jizzax''1514019 Fergana''1514210 Chirchiq''1514581 Angren''1514588 Andijon''1538229 Navoiy Shahri''3486270 Anaco''3487903 Alto Barinas''3625549 Valencia''3625829 Turmero''3627047 Santa Teresa''3628473 San Cristóbal''3629576 Punto Fijo''3629672 Puerto La Cruz''3629706 Puerto Cabello''3630297 Petare''3630932 Palo Negro''3631412 Ocumare del Tuy''3631741 Mucumpiz''3632308 Mérida''3632929 Mariara''3632998 Maracay''3633009 Maracaibo''3633622 Los Teques''3639898 Guatire''3640049 Guarenas''3640226 Guanare''3640465 Guacara''3641351 El Tigre''3642833 El Limón''3644417 Ejido''3644768 Cumaná''3644918 Cúa''3645213 Coro''3645528 Ciudad Guayana''3645532 Ciudad Bolívar''3645854 Charallave''3646190 Catia La Mar''3646382 Carúpano''3646738 Caracas''3647444 Calabozo''3647549 Cagua''3647651 Cabimas''3648439 Baruta''3648522 Barquisimeto''3648546 Barinas''3648559 Barcelona''3649833 Acarigua''3778045 Maturín''1560037 Yên Vinh''1562414 Vũng Tàu''1562693 Vĩnh Long''1562798 Vinh''1566083 Ho Chi Minh City''1566166 Thanh Hóa''1566319 Thành Phố Thái Nguyên''1567788 Sóc Trăng''1568043 Sa Pá''1568510 Rạch Giá''1568574 Qui Nhon''1569684 Pleiku''1571058 Phan Thiết''1572151 Nha Trang''1573517 Thành Phố Nam Định''1574023 Mỹ Tho''1575627 Long Xuyên''1577995 La Gi''1580240 Huế''1580410 Thành Phố Hạ Long''1580830 Thành Phố Hòa Bình''1581130 Hanoi''1581298 Haiphong''1583992 Da Nang''1584071 Ðà Lạt''1586203 Cần Thơ''1586296 Cần Giuộc''1586350 Cam Ranh''1586357 Cẩm Phả Mines''1586443 Cà Mau''1586896 Buôn Ma Thuột''1587923 Biên Hòa''1588275 Bảo Lộc''1591474 Thành phố Bạc Liêu''786712 Prizren''786714 Pristina''789225 Mitrovicë''70225 Ta‘izz''71137 Sanaa''74477 Ibb''76184 Dhamār''78754 Al Mukallā''79415 Al Ḩudaydah''415189 Aden''936374 Roodepoort''939270 Witbank''940316 Westonaria''940909 Welkom''942470 Vryheid''943882 Virginia''944385 Vereeniging''944986 Vanderbijlpark''946877 Uitenhage''949880 Tembisa''952865 Springs''953781 Soweto''958724 Rustenburg''962367 Richards Bay''963230 Randfontein''963516 Queenstown''964137 Pretoria''964315 Mokopane''964349 Potchefstroom''964420 Port Elizabeth''965289 Polokwane''965301 Pietermaritzburg''965528 Phalaborwa''967476 Orkney''970566 Nigel''971421 Newcastle''971534 Nelspruit''973111 Mpumalanga''973709 Mossel Bay''976361 Middelburg''986822 Krugersdorp''986846 Kroonstad''989921 Klerksdorp''990930 Kimberley''993800 Johannesburg''1002145 George''1005646 eMbalenhle''1006984 East London''1007311 Durban''1014073 Carletonville''1015621 Brits''1016181 Brakpan''1016670 Botshabelo''1017780 Boksburg''1018725 Bloemfontein''1019330 Bhisho''1019760 Bethal''1020098 Benoni''1105776 Midrand''1105777 Centurion''3359041 Worcester''3363094 Paarl''3369157 Cape Town''8764562 Diepsloot''901344 Ndola''905395 Mufulira''909137 Lusaka''909863 Luanshya''910111 Livingstone''911148 Kitwe''916095 Kabwe''919009 Chingola''884979 Mutare''890299 Harare''890422 Gweru''894701 Bulawayo''1085510 Epworth''1106542 Chitungwiza'\",\n  \"data\": {\n    \"14256\": {\n      \"name\": \"Āzādshahr\",\n      \"country\": \"IR\",\n      \"lat\": 34.79049,\n      \"long\": 48.57011,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"23814\": {\n      \"name\": \"Kahrīz\",\n      \"country\": \"IR\",\n      \"lat\": 34.3838,\n      \"long\": 47.0553,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"32767\": {\n      \"name\": \"Qarchak\",\n      \"country\": \"IR\",\n      \"lat\": 35.42867,\n      \"long\": 51.57544,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"53654\": {\n      \"name\": \"Mogadishu\",\n      \"country\": \"SO\",\n      \"lat\": 2.03711,\n      \"long\": 45.34375,\n      \"zone\": \"Africa/Mogadishu\"\n    },\n    \"54225\": {\n      \"name\": \"Marka\",\n      \"country\": \"SO\",\n      \"lat\": 1.71594,\n      \"long\": 44.77166,\n      \"zone\": \"Africa/Mogadishu\"\n    },\n    \"55671\": {\n      \"name\": \"Kismayo\",\n      \"country\": \"SO\",\n      \"lat\": -0.35817,\n      \"long\": 42.54536,\n      \"zone\": \"Africa/Mogadishu\"\n    },\n    \"56399\": {\n      \"name\": \"Jamaame\",\n      \"country\": \"SO\",\n      \"lat\": 0.06968,\n      \"long\": 42.74497,\n      \"zone\": \"Africa/Mogadishu\"\n    },\n    \"57289\": {\n      \"name\": \"Hargeysa\",\n      \"country\": \"SO\",\n      \"lat\": 9.56,\n      \"long\": 44.065,\n      \"zone\": \"Africa/Mogadishu\"\n    },\n    \"64435\": {\n      \"name\": \"Berbera\",\n      \"country\": \"SO\",\n      \"lat\": 10.43959,\n      \"long\": 45.01432,\n      \"zone\": \"Africa/Mogadishu\"\n    },\n    \"64536\": {\n      \"name\": \"Baidoa\",\n      \"country\": \"SO\",\n      \"lat\": 3.11383,\n      \"long\": 43.6498,\n      \"zone\": \"Africa/Mogadishu\"\n    },\n    \"70225\": {\n      \"name\": \"Ta‘izz\",\n      \"country\": \"YE\",\n      \"lat\": 13.57952,\n      \"long\": 44.02091,\n      \"zone\": \"Asia/Aden\"\n    },\n    \"71137\": {\n      \"name\": \"Sanaa\",\n      \"country\": \"YE\",\n      \"lat\": 15.35472,\n      \"long\": 44.20667,\n      \"zone\": \"Asia/Aden\"\n    },\n    \"74477\": {\n      \"name\": \"Ibb\",\n      \"country\": \"YE\",\n      \"lat\": 13.96667,\n      \"long\": 44.18333,\n      \"zone\": \"Asia/Aden\"\n    },\n    \"76184\": {\n      \"name\": \"Dhamār\",\n      \"country\": \"YE\",\n      \"lat\": 14.54274,\n      \"long\": 44.40514,\n      \"zone\": \"Asia/Aden\"\n    },\n    \"78754\": {\n      \"name\": \"Al Mukallā\",\n      \"country\": \"YE\",\n      \"lat\": 14.54248,\n      \"long\": 49.12424,\n      \"zone\": \"Asia/Aden\"\n    },\n    \"79415\": {\n      \"name\": \"Al Ḩudaydah\",\n      \"country\": \"YE\",\n      \"lat\": 14.79781,\n      \"long\": 42.95452,\n      \"zone\": \"Asia/Aden\"\n    },\n    \"81302\": {\n      \"name\": \"Tobruk\",\n      \"country\": \"LY\",\n      \"lat\": 32.08361,\n      \"long\": 23.97639,\n      \"zone\": \"Africa/Tripoli\"\n    },\n    \"88319\": {\n      \"name\": \"Benghazi\",\n      \"country\": \"LY\",\n      \"lat\": 32.11486,\n      \"long\": 20.06859,\n      \"zone\": \"Africa/Tripoli\"\n    },\n    \"89113\": {\n      \"name\": \"Ajdabiya\",\n      \"country\": \"LY\",\n      \"lat\": 30.75545,\n      \"long\": 20.22625,\n      \"zone\": \"Africa/Tripoli\"\n    },\n    \"89824\": {\n      \"name\": \"Umm Qaşr\",\n      \"country\": \"IQ\",\n      \"lat\": 30.0362,\n      \"long\": 47.91951,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"90708\": {\n      \"name\": \"Sīnah\",\n      \"country\": \"IQ\",\n      \"lat\": 36.80752,\n      \"long\": 43.03831,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"91597\": {\n      \"name\": \"Sāmarrā’\",\n      \"country\": \"IQ\",\n      \"lat\": 34.1959,\n      \"long\": 43.88568,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"94787\": {\n      \"name\": \"Kirkuk\",\n      \"country\": \"IQ\",\n      \"lat\": 35.46806,\n      \"long\": 44.39222,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"94824\": {\n      \"name\": \"Karbala\",\n      \"country\": \"IQ\",\n      \"lat\": 32.61603,\n      \"long\": 44.02488,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"95446\": {\n      \"name\": \"Erbil\",\n      \"country\": \"IQ\",\n      \"lat\": 36.19257,\n      \"long\": 44.01062,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"96994\": {\n      \"name\": \"Dihok\",\n      \"country\": \"IQ\",\n      \"lat\": 36.86709,\n      \"long\": 42.98845,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"97990\": {\n      \"name\": \"Baqubah\",\n      \"country\": \"IQ\",\n      \"lat\": 33.74659,\n      \"long\": 44.64366,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"98182\": {\n      \"name\": \"Baghdad\",\n      \"country\": \"IQ\",\n      \"lat\": 33.34058,\n      \"long\": 44.40088,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"98245\": {\n      \"name\": \"Az Zubayr\",\n      \"country\": \"IQ\",\n      \"lat\": 30.39213,\n      \"long\": 47.70175,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"98463\": {\n      \"name\": \"As Sulaymānīyah\",\n      \"country\": \"IQ\",\n      \"lat\": 35.56496,\n      \"long\": 45.4329,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"98530\": {\n      \"name\": \"As Samawah\",\n      \"country\": \"IQ\",\n      \"lat\": 31.33198,\n      \"long\": 45.2944,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"98717\": {\n      \"name\": \"Ramadi\",\n      \"country\": \"IQ\",\n      \"lat\": 33.42056,\n      \"long\": 43.30778,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"98854\": {\n      \"name\": \"An Nāşirīyah\",\n      \"country\": \"IQ\",\n      \"lat\": 31.05799,\n      \"long\": 46.25726,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"98860\": {\n      \"name\": \"An Najaf\",\n      \"country\": \"IQ\",\n      \"lat\": 32.02594,\n      \"long\": 44.34625,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"99071\": {\n      \"name\": \"Al Mawşil al Jadīdah\",\n      \"country\": \"IQ\",\n      \"lat\": 36.33306,\n      \"long\": 43.1049,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"99072\": {\n      \"name\": \"Mosul\",\n      \"country\": \"IQ\",\n      \"lat\": 36.335,\n      \"long\": 43.11889,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"99131\": {\n      \"name\": \"Al Kūt\",\n      \"country\": \"IQ\",\n      \"lat\": 32.5128,\n      \"long\": 45.81817,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"99135\": {\n      \"name\": \"Kufa\",\n      \"country\": \"IQ\",\n      \"lat\": 32.05114,\n      \"long\": 44.44017,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"99347\": {\n      \"name\": \"Al Ḩillah\",\n      \"country\": \"IQ\",\n      \"lat\": 32.46367,\n      \"long\": 44.41963,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"99446\": {\n      \"name\": \"Al Fāw\",\n      \"country\": \"IQ\",\n      \"lat\": 29.97421,\n      \"long\": 48.47309,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"99454\": {\n      \"name\": \"Al Fallūjah\",\n      \"country\": \"IQ\",\n      \"lat\": 33.34913,\n      \"long\": 43.78599,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"99532\": {\n      \"name\": \"Al Başrah\",\n      \"country\": \"IQ\",\n      \"lat\": 30.53302,\n      \"long\": 47.79747,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"99608\": {\n      \"name\": \"Al ‘Amārah\",\n      \"country\": \"IQ\",\n      \"lat\": 31.83588,\n      \"long\": 47.14399,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"99762\": {\n      \"name\": \"Ad Dīwānīyah\",\n      \"country\": \"IQ\",\n      \"lat\": 31.99289,\n      \"long\": 44.92552,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"100077\": {\n      \"name\": \"Abū Ghurayb\",\n      \"country\": \"IQ\",\n      \"lat\": 33.30563,\n      \"long\": 44.18477,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"100425\": {\n      \"name\": \"Yanbu‘ al Baḩr\",\n      \"country\": \"SA\",\n      \"lat\": 24.08912,\n      \"long\": 38.06374,\n      \"zone\": \"Asia/Riyadh\"\n    },\n    \"101628\": {\n      \"name\": \"Tabūk\",\n      \"country\": \"SA\",\n      \"lat\": 28.3998,\n      \"long\": 36.57151,\n      \"zone\": \"Asia/Riyadh\"\n    },\n    \"101760\": {\n      \"name\": \"Sulţānah\",\n      \"country\": \"SA\",\n      \"lat\": 24.49258,\n      \"long\": 39.58572,\n      \"zone\": \"Asia/Riyadh\"\n    },\n    \"102527\": {\n      \"name\": \"Sakākā\",\n      \"country\": \"SA\",\n      \"lat\": 29.96974,\n      \"long\": 40.20641,\n      \"zone\": \"Asia/Riyadh\"\n    },\n    \"103630\": {\n      \"name\": \"Najrān\",\n      \"country\": \"SA\",\n      \"lat\": 17.49326,\n      \"long\": 44.12766,\n      \"zone\": \"Asia/Riyadh\"\n    },\n    \"104515\": {\n      \"name\": \"Mecca\",\n      \"country\": \"SA\",\n      \"lat\": 21.42664,\n      \"long\": 39.82563,\n      \"zone\": \"Asia/Riyadh\"\n    },\n    \"105072\": {\n      \"name\": \"Khamis Mushait\",\n      \"country\": \"SA\",\n      \"lat\": 18.3,\n      \"long\": 42.73333,\n      \"zone\": \"Asia/Riyadh\"\n    },\n    \"105299\": {\n      \"name\": \"Jizan\",\n      \"country\": \"SA\",\n      \"lat\": 16.88917,\n      \"long\": 42.55111,\n      \"zone\": \"Asia/Riyadh\"\n    },\n    \"105343\": {\n      \"name\": \"Jeddah\",\n      \"country\": \"SA\",\n      \"lat\": 21.54238,\n      \"long\": 39.19797,\n      \"zone\": \"Asia/Riyadh\"\n    },\n    \"106281\": {\n      \"name\": \"Hayil\",\n      \"country\": \"SA\",\n      \"lat\": 27.52188,\n      \"long\": 41.69073,\n      \"zone\": \"Asia/Riyadh\"\n    },\n    \"107304\": {\n      \"name\": \"Buraydah\",\n      \"country\": \"SA\",\n      \"lat\": 26.32599,\n      \"long\": 43.97497,\n      \"zone\": \"Asia/Riyadh\"\n    },\n    \"107968\": {\n      \"name\": \"Ta’if\",\n      \"country\": \"SA\",\n      \"lat\": 21.27028,\n      \"long\": 40.41583,\n      \"zone\": \"Asia/Riyadh\"\n    },\n    \"108410\": {\n      \"name\": \"Riyadh\",\n      \"country\": \"SA\",\n      \"lat\": 24.68773,\n      \"long\": 46.72185,\n      \"zone\": \"Asia/Riyadh\"\n    },\n    \"108512\": {\n      \"name\": \"‘Ar‘ar\",\n      \"country\": \"SA\",\n      \"lat\": 30.97531,\n      \"long\": 41.03808,\n      \"zone\": \"Asia/Riyadh\"\n    },\n    \"108648\": {\n      \"name\": \"Al Qurayyāt\",\n      \"country\": \"SA\",\n      \"lat\": 31.33176,\n      \"long\": 37.34282,\n      \"zone\": \"Asia/Riyadh\"\n    },\n    \"109101\": {\n      \"name\": \"Al Mubarraz\",\n      \"country\": \"SA\",\n      \"lat\": 25.41,\n      \"long\": 49.58083,\n      \"zone\": \"Asia/Riyadh\"\n    },\n    \"109223\": {\n      \"name\": \"Medina\",\n      \"country\": \"SA\",\n      \"lat\": 24.46861,\n      \"long\": 39.61417,\n      \"zone\": \"Asia/Riyadh\"\n    },\n    \"109323\": {\n      \"name\": \"Khobar\",\n      \"country\": \"SA\",\n      \"lat\": 26.27944,\n      \"long\": 50.20833,\n      \"zone\": \"Asia/Riyadh\"\n    },\n    \"109435\": {\n      \"name\": \"Al Jubayl\",\n      \"country\": \"SA\",\n      \"lat\": 27.01122,\n      \"long\": 49.65825,\n      \"zone\": \"Asia/Riyadh\"\n    },\n    \"109571\": {\n      \"name\": \"Al Hufūf\",\n      \"country\": \"SA\",\n      \"lat\": 25.36457,\n      \"long\": 49.56532,\n      \"zone\": \"Asia/Riyadh\"\n    },\n    \"110336\": {\n      \"name\": \"Dammam\",\n      \"country\": \"SA\",\n      \"lat\": 26.43442,\n      \"long\": 50.10326,\n      \"zone\": \"Asia/Riyadh\"\n    },\n    \"110690\": {\n      \"name\": \"Abha\",\n      \"country\": \"SA\",\n      \"lat\": 18.21639,\n      \"long\": 42.50528,\n      \"zone\": \"Asia/Riyadh\"\n    },\n    \"111453\": {\n      \"name\": \"Zanjān\",\n      \"country\": \"IR\",\n      \"lat\": 36.6736,\n      \"long\": 48.4787,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"111822\": {\n      \"name\": \"Yazd\",\n      \"country\": \"IR\",\n      \"lat\": 31.89722,\n      \"long\": 54.3675,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"112214\": {\n      \"name\": \"Varāmīn\",\n      \"country\": \"IR\",\n      \"lat\": 35.3242,\n      \"long\": 51.6457,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"112646\": {\n      \"name\": \"Torbat-e Ḩeydarīyeh\",\n      \"country\": \"IR\",\n      \"lat\": 35.27401,\n      \"long\": 59.21949,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"112931\": {\n      \"name\": \"Tehrān\",\n      \"country\": \"IR\",\n      \"lat\": 35.69439,\n      \"long\": 51.42151,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"113646\": {\n      \"name\": \"Tabrīz\",\n      \"country\": \"IR\",\n      \"lat\": 38.08,\n      \"long\": 46.2919,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"114259\": {\n      \"name\": \"Sirjan\",\n      \"country\": \"IR\",\n      \"lat\": 29.45137,\n      \"long\": 55.6809,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"115019\": {\n      \"name\": \"Shiraz\",\n      \"country\": \"IR\",\n      \"lat\": 29.61031,\n      \"long\": 52.53113,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"115770\": {\n      \"name\": \"Shahr-e Kord\",\n      \"country\": \"IR\",\n      \"lat\": 32.32556,\n      \"long\": 50.86444,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"116402\": {\n      \"name\": \"Semnān\",\n      \"country\": \"IR\",\n      \"lat\": 35.57691,\n      \"long\": 53.39205,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"116667\": {\n      \"name\": \"Sāveh\",\n      \"country\": \"IR\",\n      \"lat\": 35.0213,\n      \"long\": 50.3566,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"116996\": {\n      \"name\": \"Sari\",\n      \"country\": \"IR\",\n      \"lat\": 36.56332,\n      \"long\": 53.06009,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"117392\": {\n      \"name\": \"Saqqez\",\n      \"country\": \"IR\",\n      \"lat\": 36.24992,\n      \"long\": 46.2735,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"117574\": {\n      \"name\": \"Sanandaj\",\n      \"country\": \"IR\",\n      \"lat\": 35.31495,\n      \"long\": 46.99883,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"118063\": {\n      \"name\": \"Sabzevar\",\n      \"country\": \"IR\",\n      \"lat\": 36.2126,\n      \"long\": 57.68191,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"118743\": {\n      \"name\": \"Rasht\",\n      \"country\": \"IR\",\n      \"lat\": 37.28077,\n      \"long\": 49.58319,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"118994\": {\n      \"name\": \"Rafsanjān\",\n      \"country\": \"IR\",\n      \"lat\": 30.4067,\n      \"long\": 55.9939,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"119115\": {\n      \"name\": \"Qūchān\",\n      \"country\": \"IR\",\n      \"lat\": 37.106,\n      \"long\": 58.50955,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"119208\": {\n      \"name\": \"Qom\",\n      \"country\": \"IR\",\n      \"lat\": 34.6401,\n      \"long\": 50.8764,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"119505\": {\n      \"name\": \"Qazvin\",\n      \"country\": \"IR\",\n      \"lat\": 36.26877,\n      \"long\": 50.0041,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"121380\": {\n      \"name\": \"Pārsābād\",\n      \"country\": \"IR\",\n      \"lat\": 39.6482,\n      \"long\": 47.9174,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"121801\": {\n      \"name\": \"Orūmīyeh\",\n      \"country\": \"IR\",\n      \"lat\": 37.55274,\n      \"long\": 45.07605,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"122285\": {\n      \"name\": \"Nīshābūr\",\n      \"country\": \"IR\",\n      \"lat\": 36.21329,\n      \"long\": 58.79575,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"122438\": {\n      \"name\": \"Naz̧arābād\",\n      \"country\": \"IR\",\n      \"lat\": 35.95411,\n      \"long\": 50.60607,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"124085\": {\n      \"name\": \"Mīāndoāb\",\n      \"country\": \"IR\",\n      \"lat\": 36.96667,\n      \"long\": 46.10961,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"124620\": {\n      \"name\": \"Masjed Soleymān\",\n      \"country\": \"IR\",\n      \"lat\": 31.9364,\n      \"long\": 49.3039,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"124665\": {\n      \"name\": \"Mashhad\",\n      \"country\": \"IR\",\n      \"lat\": 36.31559,\n      \"long\": 59.56796,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"124862\": {\n      \"name\": \"Marand\",\n      \"country\": \"IR\",\n      \"lat\": 38.4329,\n      \"long\": 45.7749,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"125185\": {\n      \"name\": \"Malāyer\",\n      \"country\": \"IR\",\n      \"lat\": 34.2969,\n      \"long\": 48.8235,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"125446\": {\n      \"name\": \"Mahābād\",\n      \"country\": \"IR\",\n      \"lat\": 36.7631,\n      \"long\": 45.7222,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"126409\": {\n      \"name\": \"Kūhdasht\",\n      \"country\": \"IR\",\n      \"lat\": 33.53335,\n      \"long\": 47.60999,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"126972\": {\n      \"name\": \"Khvoy\",\n      \"country\": \"IR\",\n      \"lat\": 38.5503,\n      \"long\": 44.9521,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"127319\": {\n      \"name\": \"Khorramshahr\",\n      \"country\": \"IR\",\n      \"lat\": 30.44079,\n      \"long\": 48.18428,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"127349\": {\n      \"name\": \"Khorramābād\",\n      \"country\": \"IR\",\n      \"lat\": 33.48778,\n      \"long\": 48.35583,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"128226\": {\n      \"name\": \"Kermānshāh\",\n      \"country\": \"IR\",\n      \"lat\": 34.31417,\n      \"long\": 47.065,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"128234\": {\n      \"name\": \"Kermān\",\n      \"country\": \"IR\",\n      \"lat\": 30.28321,\n      \"long\": 57.07879,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"128477\": {\n      \"name\": \"Kāshān\",\n      \"country\": \"IR\",\n      \"lat\": 33.98308,\n      \"long\": 51.43644,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"128747\": {\n      \"name\": \"Karaj\",\n      \"country\": \"IR\",\n      \"lat\": 35.83266,\n      \"long\": 50.99155,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"130802\": {\n      \"name\": \"Īlām\",\n      \"country\": \"IR\",\n      \"lat\": 33.6374,\n      \"long\": 46.4227,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"132144\": {\n      \"name\": \"Hamadān\",\n      \"country\": \"IR\",\n      \"lat\": 34.79922,\n      \"long\": 48.51456,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"132892\": {\n      \"name\": \"Gorgān\",\n      \"country\": \"IR\",\n      \"lat\": 36.84165,\n      \"long\": 54.44361,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"132938\": {\n      \"name\": \"Gonbad-e Kāvūs\",\n      \"country\": \"IR\",\n      \"lat\": 37.25004,\n      \"long\": 55.16721,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"135423\": {\n      \"name\": \"Shahrud\",\n      \"country\": \"IR\",\n      \"lat\": 36.41819,\n      \"long\": 54.97628,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"139817\": {\n      \"name\": \"Bandar-e Būshehr\",\n      \"country\": \"IR\",\n      \"lat\": 28.9684,\n      \"long\": 50.8385,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"139889\": {\n      \"name\": \"Būkān\",\n      \"country\": \"IR\",\n      \"lat\": 36.521,\n      \"long\": 46.2089,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"140044\": {\n      \"name\": \"Borūjerd\",\n      \"country\": \"IR\",\n      \"lat\": 33.8973,\n      \"long\": 48.7516,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"140380\": {\n      \"name\": \"Bojnūrd\",\n      \"country\": \"IR\",\n      \"lat\": 37.47473,\n      \"long\": 57.32903,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"140463\": {\n      \"name\": \"Bīrjand\",\n      \"country\": \"IR\",\n      \"lat\": 32.86628,\n      \"long\": 59.22114,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"141584\": {\n      \"name\": \"Bāneh\",\n      \"country\": \"IR\",\n      \"lat\": 35.9975,\n      \"long\": 45.8853,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"141679\": {\n      \"name\": \"Bandar-e Anzalī\",\n      \"country\": \"IR\",\n      \"lat\": 37.47257,\n      \"long\": 49.4593,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"141681\": {\n      \"name\": \"Bandar ‘Abbās\",\n      \"country\": \"IR\",\n      \"lat\": 27.1865,\n      \"long\": 56.2808,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"142363\": {\n      \"name\": \"Bābol\",\n      \"country\": \"IR\",\n      \"lat\": 36.55132,\n      \"long\": 52.67895,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"143083\": {\n      \"name\": \"Ardabīl\",\n      \"country\": \"IR\",\n      \"lat\": 38.2498,\n      \"long\": 48.2933,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"143127\": {\n      \"name\": \"Arāk\",\n      \"country\": \"IR\",\n      \"lat\": 34.09174,\n      \"long\": 49.68916,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"143534\": {\n      \"name\": \"Āmol\",\n      \"country\": \"IR\",\n      \"lat\": 36.46961,\n      \"long\": 52.35072,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"144448\": {\n      \"name\": \"Ahvaz\",\n      \"country\": \"IR\",\n      \"lat\": 31.31901,\n      \"long\": 48.6842,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"145459\": {\n      \"name\": \"Abadan\",\n      \"country\": \"IR\",\n      \"lat\": 30.3392,\n      \"long\": 48.3043,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"146268\": {\n      \"name\": \"Nicosia\",\n      \"country\": \"CY\",\n      \"lat\": 35.17531,\n      \"long\": 33.3642,\n      \"zone\": \"Asia/Nicosia\"\n    },\n    \"146384\": {\n      \"name\": \"Limassol\",\n      \"country\": \"CY\",\n      \"lat\": 34.68406,\n      \"long\": 33.03794,\n      \"zone\": \"Asia/Nicosia\"\n    },\n    \"147622\": {\n      \"name\": \"Lankaran\",\n      \"country\": \"AZ\",\n      \"lat\": 38.75428,\n      \"long\": 48.85062,\n      \"zone\": \"Asia/Baku\"\n    },\n    \"148730\": {\n      \"name\": \"Zanzibar\",\n      \"country\": \"TZ\",\n      \"lat\": -6.16394,\n      \"long\": 39.19793,\n      \"zone\": \"Africa/Dar_es_Salaam\"\n    },\n    \"149606\": {\n      \"name\": \"Tanga\",\n      \"country\": \"TZ\",\n      \"lat\": -5.06893,\n      \"long\": 39.09875,\n      \"zone\": \"Africa/Dar_es_Salaam\"\n    },\n    \"149658\": {\n      \"name\": \"Tabora\",\n      \"country\": \"TZ\",\n      \"lat\": -5.01622,\n      \"long\": 32.82663,\n      \"zone\": \"Africa/Dar_es_Salaam\"\n    },\n    \"150006\": {\n      \"name\": \"Shinyanga\",\n      \"country\": \"TZ\",\n      \"lat\": -3.66393,\n      \"long\": 33.42118,\n      \"zone\": \"Africa/Dar_es_Salaam\"\n    },\n    \"152224\": {\n      \"name\": \"Mwanza\",\n      \"country\": \"TZ\",\n      \"lat\": -2.51667,\n      \"long\": 32.9,\n      \"zone\": \"Africa/Dar_es_Salaam\"\n    },\n    \"152451\": {\n      \"name\": \"Musoma\",\n      \"country\": \"TZ\",\n      \"lat\": -1.5,\n      \"long\": 33.8,\n      \"zone\": \"Africa/Dar_es_Salaam\"\n    },\n    \"153209\": {\n      \"name\": \"Moshi\",\n      \"country\": \"TZ\",\n      \"lat\": -3.35,\n      \"long\": 37.33333,\n      \"zone\": \"Africa/Dar_es_Salaam\"\n    },\n    \"153220\": {\n      \"name\": \"Morogoro\",\n      \"country\": \"TZ\",\n      \"lat\": -6.82102,\n      \"long\": 37.66122,\n      \"zone\": \"Africa/Dar_es_Salaam\"\n    },\n    \"154380\": {\n      \"name\": \"Mbeya\",\n      \"country\": \"TZ\",\n      \"lat\": -8.9,\n      \"long\": 33.45,\n      \"zone\": \"Africa/Dar_es_Salaam\"\n    },\n    \"157738\": {\n      \"name\": \"Kigoma\",\n      \"country\": \"TZ\",\n      \"lat\": -4.87694,\n      \"long\": 29.62667,\n      \"zone\": \"Africa/Dar_es_Salaam\"\n    },\n    \"158151\": {\n      \"name\": \"Katumba\",\n      \"country\": \"TZ\",\n      \"lat\": -9.23333,\n      \"long\": 33.61667,\n      \"zone\": \"Africa/Dar_es_Salaam\"\n    },\n    \"159071\": {\n      \"name\": \"Iringa\",\n      \"country\": \"TZ\",\n      \"lat\": -7.76667,\n      \"long\": 35.7,\n      \"zone\": \"Africa/Dar_es_Salaam\"\n    },\n    \"160196\": {\n      \"name\": \"Dodoma\",\n      \"country\": \"TZ\",\n      \"lat\": -6.17221,\n      \"long\": 35.73947,\n      \"zone\": \"Africa/Dar_es_Salaam\"\n    },\n    \"160263\": {\n      \"name\": \"Dar es Salaam\",\n      \"country\": \"TZ\",\n      \"lat\": -6.82349,\n      \"long\": 39.26951,\n      \"zone\": \"Africa/Dar_es_Salaam\"\n    },\n    \"161325\": {\n      \"name\": \"Arusha\",\n      \"country\": \"TZ\",\n      \"lat\": -3.36667,\n      \"long\": 36.68333,\n      \"zone\": \"Africa/Dar_es_Salaam\"\n    },\n    \"162183\": {\n      \"name\": \"Ashgabat\",\n      \"country\": \"TM\",\n      \"lat\": 37.95,\n      \"long\": 58.38333,\n      \"zone\": \"Asia/Ashgabat\"\n    },\n    \"169389\": {\n      \"name\": \"Idlib\",\n      \"country\": \"SY\",\n      \"lat\": 35.93062,\n      \"long\": 36.63393,\n      \"zone\": \"Asia/Damascus\"\n    },\n    \"169577\": {\n      \"name\": \"Homs\",\n      \"country\": \"SY\",\n      \"lat\": 34.72682,\n      \"long\": 36.72339,\n      \"zone\": \"Asia/Damascus\"\n    },\n    \"170017\": {\n      \"name\": \"Ḩamāh\",\n      \"country\": \"SY\",\n      \"lat\": 35.13179,\n      \"long\": 36.75783,\n      \"zone\": \"Asia/Damascus\"\n    },\n    \"170063\": {\n      \"name\": \"Aleppo\",\n      \"country\": \"SY\",\n      \"lat\": 36.20124,\n      \"long\": 37.16117,\n      \"zone\": \"Asia/Damascus\"\n    },\n    \"170592\": {\n      \"name\": \"Douma\",\n      \"country\": \"SY\",\n      \"lat\": 33.57175,\n      \"long\": 36.4027,\n      \"zone\": \"Asia/Damascus\"\n    },\n    \"170654\": {\n      \"name\": \"Damascus\",\n      \"country\": \"SY\",\n      \"lat\": 33.5102,\n      \"long\": 36.29128,\n      \"zone\": \"Asia/Damascus\"\n    },\n    \"170794\": {\n      \"name\": \"Deir ez-Zor\",\n      \"country\": \"SY\",\n      \"lat\": 35.33588,\n      \"long\": 40.14084,\n      \"zone\": \"Asia/Damascus\"\n    },\n    \"172955\": {\n      \"name\": \"Ar Raqqah\",\n      \"country\": \"SY\",\n      \"lat\": 35.95283,\n      \"long\": 39.00788,\n      \"zone\": \"Asia/Damascus\"\n    },\n    \"173576\": {\n      \"name\": \"Latakia\",\n      \"country\": \"SY\",\n      \"lat\": 35.53168,\n      \"long\": 35.79011,\n      \"zone\": \"Asia/Damascus\"\n    },\n    \"174018\": {\n      \"name\": \"Al Bāb\",\n      \"country\": \"SY\",\n      \"lat\": 36.36994,\n      \"long\": 37.51788,\n      \"zone\": \"Asia/Damascus\"\n    },\n    \"179330\": {\n      \"name\": \"Thika\",\n      \"country\": \"KE\",\n      \"lat\": -1.03326,\n      \"long\": 37.06933,\n      \"zone\": \"Africa/Nairobi\"\n    },\n    \"184622\": {\n      \"name\": \"Nakuru\",\n      \"country\": \"KE\",\n      \"lat\": -0.28333,\n      \"long\": 36.06667,\n      \"zone\": \"Africa/Nairobi\"\n    },\n    \"184745\": {\n      \"name\": \"Nairobi\",\n      \"country\": \"KE\",\n      \"lat\": -1.28333,\n      \"long\": 36.81667,\n      \"zone\": \"Africa/Nairobi\"\n    },\n    \"186301\": {\n      \"name\": \"Mombasa\",\n      \"country\": \"KE\",\n      \"lat\": -4.05466,\n      \"long\": 39.66359,\n      \"zone\": \"Africa/Nairobi\"\n    },\n    \"187968\": {\n      \"name\": \"Malindi\",\n      \"country\": \"KE\",\n      \"lat\": -3.21799,\n      \"long\": 40.11692,\n      \"zone\": \"Africa/Nairobi\"\n    },\n    \"191245\": {\n      \"name\": \"Kisumu\",\n      \"country\": \"KE\",\n      \"lat\": -0.10221,\n      \"long\": 34.76171,\n      \"zone\": \"Africa/Nairobi\"\n    },\n    \"198629\": {\n      \"name\": \"Eldoret\",\n      \"country\": \"KE\",\n      \"lat\": 0.52036,\n      \"long\": 35.26993,\n      \"zone\": \"Africa/Nairobi\"\n    },\n    \"202061\": {\n      \"name\": \"Kigali\",\n      \"country\": \"RW\",\n      \"lat\": -1.94995,\n      \"long\": 30.05885,\n      \"zone\": \"Africa/Kigali\"\n    },\n    \"204405\": {\n      \"name\": \"Uvira\",\n      \"country\": \"CD\",\n      \"lat\": -3.39534,\n      \"long\": 29.13779,\n      \"zone\": \"Africa/Lubumbashi\"\n    },\n    \"204953\": {\n      \"name\": \"Tshikapa\",\n      \"country\": \"CD\",\n      \"lat\": -6.41621,\n      \"long\": 20.79995,\n      \"zone\": \"Africa/Lubumbashi\"\n    },\n    \"207570\": {\n      \"name\": \"Mwene-Ditu\",\n      \"country\": \"CD\",\n      \"lat\": -7.00906,\n      \"long\": 23.45278,\n      \"zone\": \"Africa/Lubumbashi\"\n    },\n    \"209228\": {\n      \"name\": \"Mbuji-Mayi\",\n      \"country\": \"CD\",\n      \"lat\": -6.13603,\n      \"long\": 23.58979,\n      \"zone\": \"Africa/Lubumbashi\"\n    },\n    \"212730\": {\n      \"name\": \"Kisangani\",\n      \"country\": \"CD\",\n      \"lat\": 0.51528,\n      \"long\": 25.19099,\n      \"zone\": \"Africa/Lubumbashi\"\n    },\n    \"212902\": {\n      \"name\": \"Kindu\",\n      \"country\": \"CD\",\n      \"lat\": -2.94373,\n      \"long\": 25.92237,\n      \"zone\": \"Africa/Lubumbashi\"\n    },\n    \"214481\": {\n      \"name\": \"Kananga\",\n      \"country\": \"CD\",\n      \"lat\": -5.89624,\n      \"long\": 22.41659,\n      \"zone\": \"Africa/Lubumbashi\"\n    },\n    \"214974\": {\n      \"name\": \"Kalemie\",\n      \"country\": \"CD\",\n      \"lat\": -5.94749,\n      \"long\": 29.19471,\n      \"zone\": \"Africa/Lubumbashi\"\n    },\n    \"215771\": {\n      \"name\": \"Isiro\",\n      \"country\": \"CD\",\n      \"lat\": 2.77391,\n      \"long\": 27.61603,\n      \"zone\": \"Africa/Lubumbashi\"\n    },\n    \"215976\": {\n      \"name\": \"Ilebo\",\n      \"country\": \"CD\",\n      \"lat\": -4.33111,\n      \"long\": 20.58638,\n      \"zone\": \"Africa/Lubumbashi\"\n    },\n    \"216281\": {\n      \"name\": \"Goma\",\n      \"country\": \"CD\",\n      \"lat\": -1.67409,\n      \"long\": 29.22845,\n      \"zone\": \"Africa/Lubumbashi\"\n    },\n    \"216449\": {\n      \"name\": \"Gandajika\",\n      \"country\": \"CD\",\n      \"lat\": -6.74504,\n      \"long\": 23.95328,\n      \"zone\": \"Africa/Lubumbashi\"\n    },\n    \"217562\": {\n      \"name\": \"Butembo\",\n      \"country\": \"CD\",\n      \"lat\": 0.14164,\n      \"long\": 29.29117,\n      \"zone\": \"Africa/Lubumbashi\"\n    },\n    \"217831\": {\n      \"name\": \"Bukavu\",\n      \"country\": \"CD\",\n      \"lat\": -2.49077,\n      \"long\": 28.84281,\n      \"zone\": \"Africa/Lubumbashi\"\n    },\n    \"223817\": {\n      \"name\": \"Djibouti\",\n      \"country\": \"DJ\",\n      \"lat\": 11.58901,\n      \"long\": 43.14503,\n      \"zone\": \"Africa/Djibouti\"\n    },\n    \"230166\": {\n      \"name\": \"Lira\",\n      \"country\": \"UG\",\n      \"lat\": 2.2499,\n      \"long\": 32.89985,\n      \"zone\": \"Africa/Kampala\"\n    },\n    \"232422\": {\n      \"name\": \"Kampala\",\n      \"country\": \"UG\",\n      \"lat\": 0.31628,\n      \"long\": 32.58219,\n      \"zone\": \"Africa/Kampala\"\n    },\n    \"233346\": {\n      \"name\": \"Gulu\",\n      \"country\": \"UG\",\n      \"lat\": 2.77457,\n      \"long\": 32.29899,\n      \"zone\": \"Africa/Kampala\"\n    },\n    \"246013\": {\n      \"name\": \"Wādī as Sīr\",\n      \"country\": \"JO\",\n      \"lat\": 31.95126,\n      \"long\": 35.81979,\n      \"zone\": \"Asia/Amman\"\n    },\n    \"248946\": {\n      \"name\": \"Irbid\",\n      \"country\": \"JO\",\n      \"lat\": 32.55556,\n      \"long\": 35.85,\n      \"zone\": \"Asia/Amman\"\n    },\n    \"250090\": {\n      \"name\": \"Zarqa\",\n      \"country\": \"JO\",\n      \"lat\": 32.07275,\n      \"long\": 36.08796,\n      \"zone\": \"Asia/Amman\"\n    },\n    \"250441\": {\n      \"name\": \"Amman\",\n      \"country\": \"JO\",\n      \"lat\": 31.95522,\n      \"long\": 35.94503,\n      \"zone\": \"Asia/Amman\"\n    },\n    \"250799\": {\n      \"name\": \"‘Ajlūn\",\n      \"country\": \"JO\",\n      \"lat\": 32.33326,\n      \"long\": 35.75279,\n      \"zone\": \"Asia/Amman\"\n    },\n    \"255274\": {\n      \"name\": \"Piraeus\",\n      \"country\": \"GR\",\n      \"lat\": 37.94745,\n      \"long\": 23.63708,\n      \"zone\": \"Europe/Athens\"\n    },\n    \"255524\": {\n      \"name\": \"Peristéri\",\n      \"country\": \"GR\",\n      \"lat\": 38.01539,\n      \"long\": 23.69187,\n      \"zone\": \"Europe/Athens\"\n    },\n    \"255683\": {\n      \"name\": \"Pátra\",\n      \"country\": \"GR\",\n      \"lat\": 38.24444,\n      \"long\": 21.73444,\n      \"zone\": \"Europe/Athens\"\n    },\n    \"258576\": {\n      \"name\": \"Lárisa\",\n      \"country\": \"GR\",\n      \"lat\": 39.63689,\n      \"long\": 22.41761,\n      \"zone\": \"Europe/Athens\"\n    },\n    \"261414\": {\n      \"name\": \"Kallithéa\",\n      \"country\": \"GR\",\n      \"lat\": 37.95,\n      \"long\": 23.7,\n      \"zone\": \"Europe/Athens\"\n    },\n    \"261745\": {\n      \"name\": \"Irákleion\",\n      \"country\": \"GR\",\n      \"lat\": 35.32787,\n      \"long\": 25.14341,\n      \"zone\": \"Europe/Athens\"\n    },\n    \"264371\": {\n      \"name\": \"Athens\",\n      \"country\": \"GR\",\n      \"lat\": 37.97945,\n      \"long\": 23.71622,\n      \"zone\": \"Europe/Athens\"\n    },\n    \"266826\": {\n      \"name\": \"Tripoli\",\n      \"country\": \"LB\",\n      \"lat\": 34.43667,\n      \"long\": 35.84972,\n      \"zone\": \"Asia/Beirut\"\n    },\n    \"267008\": {\n      \"name\": \"Tyre\",\n      \"country\": \"LB\",\n      \"lat\": 33.27333,\n      \"long\": 35.19389,\n      \"zone\": \"Asia/Beirut\"\n    },\n    \"268064\": {\n      \"name\": \"Sidon\",\n      \"country\": \"LB\",\n      \"lat\": 33.55993,\n      \"long\": 35.37564,\n      \"zone\": \"Asia/Beirut\"\n    },\n    \"268743\": {\n      \"name\": \"Ra’s Bayrūt\",\n      \"country\": \"LB\",\n      \"lat\": 33.9,\n      \"long\": 35.48333,\n      \"zone\": \"Asia/Beirut\"\n    },\n    \"276781\": {\n      \"name\": \"Beirut\",\n      \"country\": \"LB\",\n      \"lat\": 33.88894,\n      \"long\": 35.49442,\n      \"zone\": \"Asia/Beirut\"\n    },\n    \"278913\": {\n      \"name\": \"Nabatîyé et Tahta\",\n      \"country\": \"LB\",\n      \"lat\": 33.37889,\n      \"long\": 35.48389,\n      \"zone\": \"Asia/Beirut\"\n    },\n    \"281102\": {\n      \"name\": \"Rafaḩ\",\n      \"country\": \"PS\",\n      \"lat\": 31.287,\n      \"long\": 34.25952,\n      \"zone\": \"Asia/Gaza\"\n    },\n    \"281124\": {\n      \"name\": \"Khān Yūnis\",\n      \"country\": \"PS\",\n      \"lat\": 31.34018,\n      \"long\": 34.30627,\n      \"zone\": \"Asia/Gaza\"\n    },\n    \"281129\": {\n      \"name\": \"Jabālyā\",\n      \"country\": \"PS\",\n      \"lat\": 31.5272,\n      \"long\": 34.48347,\n      \"zone\": \"Asia/Gaza\"\n    },\n    \"281133\": {\n      \"name\": \"Gaza\",\n      \"country\": \"PS\",\n      \"lat\": 31.5,\n      \"long\": 34.46667,\n      \"zone\": \"Asia/Gaza\"\n    },\n    \"281184\": {\n      \"name\": \"Jerusalem\",\n      \"country\": \"IL\",\n      \"lat\": 31.76904,\n      \"long\": 35.21633,\n      \"zone\": \"Asia/Jerusalem\"\n    },\n    \"282615\": {\n      \"name\": \"Nablus\",\n      \"country\": \"PS\",\n      \"lat\": 32.22111,\n      \"long\": 35.25444,\n      \"zone\": \"Asia/Hebron\"\n    },\n    \"285066\": {\n      \"name\": \"Hebron\",\n      \"country\": \"PS\",\n      \"lat\": 31.52935,\n      \"long\": 35.0938,\n      \"zone\": \"Asia/Hebron\"\n    },\n    \"285629\": {\n      \"name\": \"Ḩawallī\",\n      \"country\": \"KW\",\n      \"lat\": 29.33278,\n      \"long\": 48.02861,\n      \"zone\": \"Asia/Kuwait\"\n    },\n    \"285704\": {\n      \"name\": \"As Sālimīyah\",\n      \"country\": \"KW\",\n      \"lat\": 29.33389,\n      \"long\": 48.07611,\n      \"zone\": \"Asia/Kuwait\"\n    },\n    \"285839\": {\n      \"name\": \"Al Aḩmadī\",\n      \"country\": \"KW\",\n      \"lat\": 29.07694,\n      \"long\": 48.08389,\n      \"zone\": \"Asia/Kuwait\"\n    },\n    \"286282\": {\n      \"name\": \"Al Sohar\",\n      \"country\": \"OM\",\n      \"lat\": 24.3643,\n      \"long\": 56.74681,\n      \"zone\": \"Asia/Muscat\"\n    },\n    \"286621\": {\n      \"name\": \"Şalālah\",\n      \"country\": \"OM\",\n      \"lat\": 17.01505,\n      \"long\": 54.09237,\n      \"zone\": \"Asia/Muscat\"\n    },\n    \"287286\": {\n      \"name\": \"Muscat\",\n      \"country\": \"OM\",\n      \"lat\": 23.61387,\n      \"long\": 58.5922,\n      \"zone\": \"Asia/Muscat\"\n    },\n    \"287830\": {\n      \"name\": \"‘Ibrī\",\n      \"country\": \"OM\",\n      \"lat\": 23.22573,\n      \"long\": 56.51572,\n      \"zone\": \"Asia/Muscat\"\n    },\n    \"288764\": {\n      \"name\": \"Bawshar\",\n      \"country\": \"OM\",\n      \"lat\": 23.55563,\n      \"long\": 58.3989,\n      \"zone\": \"Asia/Muscat\"\n    },\n    \"288955\": {\n      \"name\": \"As Suwayq\",\n      \"country\": \"OM\",\n      \"lat\": 23.84944,\n      \"long\": 57.43861,\n      \"zone\": \"Asia/Muscat\"\n    },\n    \"288967\": {\n      \"name\": \"As Sīb al Jadīdah\",\n      \"country\": \"OM\",\n      \"lat\": 23.67027,\n      \"long\": 58.18911,\n      \"zone\": \"Asia/Muscat\"\n    },\n    \"289888\": {\n      \"name\": \"Ar Rayyān\",\n      \"country\": \"QA\",\n      \"lat\": 25.29194,\n      \"long\": 51.42444,\n      \"zone\": \"Asia/Qatar\"\n    },\n    \"290030\": {\n      \"name\": \"Doha\",\n      \"country\": \"QA\",\n      \"lat\": 25.27932,\n      \"long\": 51.52245,\n      \"zone\": \"Asia/Qatar\"\n    },\n    \"290340\": {\n      \"name\": \"Manama\",\n      \"country\": \"BH\",\n      \"lat\": 26.21536,\n      \"long\": 50.5832,\n      \"zone\": \"Asia/Bahrain\"\n    },\n    \"291074\": {\n      \"name\": \"Ras al-Khaimah\",\n      \"country\": \"AE\",\n      \"lat\": 25.78953,\n      \"long\": 55.9432,\n      \"zone\": \"Asia/Dubai\"\n    },\n    \"292223\": {\n      \"name\": \"Dubai\",\n      \"country\": \"AE\",\n      \"lat\": 25.0657,\n      \"long\": 55.17128,\n      \"zone\": \"Asia/Dubai\"\n    },\n    \"292672\": {\n      \"name\": \"Sharjah\",\n      \"country\": \"AE\",\n      \"lat\": 25.33737,\n      \"long\": 55.41206,\n      \"zone\": \"Asia/Dubai\"\n    },\n    \"292913\": {\n      \"name\": \"Al Ain\",\n      \"country\": \"AE\",\n      \"lat\": 24.19167,\n      \"long\": 55.76056,\n      \"zone\": \"Asia/Dubai\"\n    },\n    \"292932\": {\n      \"name\": \"Ajman\",\n      \"country\": \"AE\",\n      \"lat\": 25.41111,\n      \"long\": 55.43504,\n      \"zone\": \"Asia/Dubai\"\n    },\n    \"292968\": {\n      \"name\": \"Abu Dhabi\",\n      \"country\": \"AE\",\n      \"lat\": 24.46667,\n      \"long\": 54.36667,\n      \"zone\": \"Asia/Dubai\"\n    },\n    \"293397\": {\n      \"name\": \"Tel Aviv\",\n      \"country\": \"IL\",\n      \"lat\": 32.08088,\n      \"long\": 34.78057,\n      \"zone\": \"Asia/Jerusalem\"\n    },\n    \"293703\": {\n      \"name\": \"Rishon LeẔiyyon\",\n      \"country\": \"IL\",\n      \"lat\": 31.97102,\n      \"long\": 34.78939,\n      \"zone\": \"Asia/Jerusalem\"\n    },\n    \"293788\": {\n      \"name\": \"Ramat Gan\",\n      \"country\": \"IL\",\n      \"lat\": 32.08227,\n      \"long\": 34.81065,\n      \"zone\": \"Asia/Jerusalem\"\n    },\n    \"293918\": {\n      \"name\": \"Petaẖ Tiqwa\",\n      \"country\": \"IL\",\n      \"lat\": 32.08707,\n      \"long\": 34.88747,\n      \"zone\": \"Asia/Jerusalem\"\n    },\n    \"294071\": {\n      \"name\": \"Netanya\",\n      \"country\": \"IL\",\n      \"lat\": 32.33291,\n      \"long\": 34.85992,\n      \"zone\": \"Asia/Jerusalem\"\n    },\n    \"294751\": {\n      \"name\": \"H̱olon\",\n      \"country\": \"IL\",\n      \"lat\": 32.01034,\n      \"long\": 34.77918,\n      \"zone\": \"Asia/Jerusalem\"\n    },\n    \"294801\": {\n      \"name\": \"Haifa\",\n      \"country\": \"IL\",\n      \"lat\": 32.81841,\n      \"long\": 34.9885,\n      \"zone\": \"Asia/Jerusalem\"\n    },\n    \"295514\": {\n      \"name\": \"Bené Beraq\",\n      \"country\": \"IL\",\n      \"lat\": 32.08074,\n      \"long\": 34.8338,\n      \"zone\": \"Asia/Jerusalem\"\n    },\n    \"295530\": {\n      \"name\": \"Beersheba\",\n      \"country\": \"IL\",\n      \"lat\": 31.25181,\n      \"long\": 34.7913,\n      \"zone\": \"Asia/Jerusalem\"\n    },\n    \"295548\": {\n      \"name\": \"Bat Yam\",\n      \"country\": \"IL\",\n      \"lat\": 32.02379,\n      \"long\": 34.75185,\n      \"zone\": \"Asia/Jerusalem\"\n    },\n    \"295620\": {\n      \"name\": \"Ashqelon\",\n      \"country\": \"IL\",\n      \"lat\": 31.66926,\n      \"long\": 34.57149,\n      \"zone\": \"Asia/Jerusalem\"\n    },\n    \"295629\": {\n      \"name\": \"Ashdod\",\n      \"country\": \"IL\",\n      \"lat\": 31.79213,\n      \"long\": 34.64966,\n      \"zone\": \"Asia/Jerusalem\"\n    },\n    \"298033\": {\n      \"name\": \"Viranşehir\",\n      \"country\": \"TR\",\n      \"lat\": 37.22349,\n      \"long\": 39.75519,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"298117\": {\n      \"name\": \"Van\",\n      \"country\": \"TR\",\n      \"lat\": 38.49457,\n      \"long\": 43.38323,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"298299\": {\n      \"name\": \"Uşak\",\n      \"country\": \"TR\",\n      \"lat\": 38.67351,\n      \"long\": 29.4058,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"298333\": {\n      \"name\": \"Şanlıurfa\",\n      \"country\": \"TR\",\n      \"lat\": 37.16708,\n      \"long\": 38.79392,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"298806\": {\n      \"name\": \"Turgutlu\",\n      \"country\": \"TR\",\n      \"lat\": 38.49533,\n      \"long\": 27.6997,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"299817\": {\n      \"name\": \"Tarsus\",\n      \"country\": \"TR\",\n      \"lat\": 36.91876,\n      \"long\": 34.8784,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"300614\": {\n      \"name\": \"Siverek\",\n      \"country\": \"TR\",\n      \"lat\": 37.75503,\n      \"long\": 39.31667,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"300619\": {\n      \"name\": \"Sivas\",\n      \"country\": \"TR\",\n      \"lat\": 39.74833,\n      \"long\": 37.01611,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"300822\": {\n      \"name\": \"Siirt\",\n      \"country\": \"TR\",\n      \"lat\": 37.93262,\n      \"long\": 41.94025,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"303195\": {\n      \"name\": \"Osmaniye\",\n      \"country\": \"TR\",\n      \"lat\": 37.07417,\n      \"long\": 36.24778,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"303873\": {\n      \"name\": \"Nazilli\",\n      \"country\": \"TR\",\n      \"lat\": 37.91631,\n      \"long\": 28.32225,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"304531\": {\n      \"name\": \"Mercin\",\n      \"country\": \"TR\",\n      \"lat\": 36.79526,\n      \"long\": 34.61792,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"304827\": {\n      \"name\": \"Manisa\",\n      \"country\": \"TR\",\n      \"lat\": 38.61202,\n      \"long\": 27.42647,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"304922\": {\n      \"name\": \"Malatya\",\n      \"country\": \"TR\",\n      \"lat\": 38.35018,\n      \"long\": 38.31667,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"305268\": {\n      \"name\": \"Kütahya\",\n      \"country\": \"TR\",\n      \"lat\": 39.42417,\n      \"long\": 29.98333,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"306571\": {\n      \"name\": \"Konya\",\n      \"country\": \"TR\",\n      \"lat\": 37.87135,\n      \"long\": 32.48464,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"307084\": {\n      \"name\": \"Kızıltepe\",\n      \"country\": \"TR\",\n      \"lat\": 37.19319,\n      \"long\": 40.58799,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"307654\": {\n      \"name\": \"Kırıkkale\",\n      \"country\": \"TR\",\n      \"lat\": 39.84528,\n      \"long\": 33.50639,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"308464\": {\n      \"name\": \"Kayseri\",\n      \"country\": \"TR\",\n      \"lat\": 38.73222,\n      \"long\": 35.48528,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"309527\": {\n      \"name\": \"Karaman\",\n      \"country\": \"TR\",\n      \"lat\": 37.18111,\n      \"long\": 33.215,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"310859\": {\n      \"name\": \"Kahramanmaraş\",\n      \"country\": \"TR\",\n      \"lat\": 37.5847,\n      \"long\": 36.92641,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"311046\": {\n      \"name\": \"İzmir\",\n      \"country\": \"TR\",\n      \"lat\": 38.41273,\n      \"long\": 27.13838,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"311073\": {\n      \"name\": \"Isparta\",\n      \"country\": \"TR\",\n      \"lat\": 37.76444,\n      \"long\": 30.55222,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"311111\": {\n      \"name\": \"İskenderun\",\n      \"country\": \"TR\",\n      \"lat\": 36.58718,\n      \"long\": 36.17347,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"314830\": {\n      \"name\": \"Gaziantep\",\n      \"country\": \"TR\",\n      \"lat\": 37.05944,\n      \"long\": 37.3825,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"315202\": {\n      \"name\": \"Eskişehir\",\n      \"country\": \"TR\",\n      \"lat\": 39.77667,\n      \"long\": 30.52056,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"315368\": {\n      \"name\": \"Erzurum\",\n      \"country\": \"TR\",\n      \"lat\": 39.90861,\n      \"long\": 41.27694,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"315373\": {\n      \"name\": \"Erzincan\",\n      \"country\": \"TR\",\n      \"lat\": 39.73919,\n      \"long\": 39.49015,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"315808\": {\n      \"name\": \"Elazığ\",\n      \"country\": \"TR\",\n      \"lat\": 38.67431,\n      \"long\": 39.22321,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"316541\": {\n      \"name\": \"Diyarbakır\",\n      \"country\": \"TR\",\n      \"lat\": 37.91363,\n      \"long\": 40.21721,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"317109\": {\n      \"name\": \"Denizli\",\n      \"country\": \"TR\",\n      \"lat\": 37.77417,\n      \"long\": 29.0875,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"321836\": {\n      \"name\": \"Batman\",\n      \"country\": \"TR\",\n      \"lat\": 37.88738,\n      \"long\": 41.13221,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"322165\": {\n      \"name\": \"Balıkesir\",\n      \"country\": \"TR\",\n      \"lat\": 39.64917,\n      \"long\": 27.88611,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"322830\": {\n      \"name\": \"Aydın\",\n      \"country\": \"TR\",\n      \"lat\": 37.84501,\n      \"long\": 27.83963,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"323777\": {\n      \"name\": \"Antalya\",\n      \"country\": \"TR\",\n      \"lat\": 36.90812,\n      \"long\": 30.69556,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"323779\": {\n      \"name\": \"Antakya\",\n      \"country\": \"TR\",\n      \"lat\": 36.20655,\n      \"long\": 36.15722,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"323786\": {\n      \"name\": \"Ankara\",\n      \"country\": \"TR\",\n      \"lat\": 39.91987,\n      \"long\": 32.85427,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"324190\": {\n      \"name\": \"Alanya\",\n      \"country\": \"TR\",\n      \"lat\": 36.54375,\n      \"long\": 31.99982,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"324496\": {\n      \"name\": \"Aksaray\",\n      \"country\": \"TR\",\n      \"lat\": 38.37255,\n      \"long\": 34.02537,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"325303\": {\n      \"name\": \"Afyonkarahisar\",\n      \"country\": \"TR\",\n      \"lat\": 38.75667,\n      \"long\": 30.54333,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"325330\": {\n      \"name\": \"Adıyaman\",\n      \"country\": \"TR\",\n      \"lat\": 37.76441,\n      \"long\": 38.27629,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"325363\": {\n      \"name\": \"Adana\",\n      \"country\": \"TR\",\n      \"lat\": 37.00167,\n      \"long\": 35.32889,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"330186\": {\n      \"name\": \"Nazrēt\",\n      \"country\": \"ET\",\n      \"lat\": 8.55,\n      \"long\": 39.26667,\n      \"zone\": \"Africa/Addis_Ababa\"\n    },\n    \"331180\": {\n      \"name\": \"Mekele\",\n      \"country\": \"ET\",\n      \"lat\": 13.49667,\n      \"long\": 39.47528,\n      \"zone\": \"Africa/Addis_Ababa\"\n    },\n    \"333772\": {\n      \"name\": \"Jīma\",\n      \"country\": \"ET\",\n      \"lat\": 7.66667,\n      \"long\": 36.83333,\n      \"zone\": \"Africa/Addis_Ababa\"\n    },\n    \"336014\": {\n      \"name\": \"Gondar\",\n      \"country\": \"ET\",\n      \"lat\": 12.6,\n      \"long\": 37.46667,\n      \"zone\": \"Africa/Addis_Ababa\"\n    },\n    \"338832\": {\n      \"name\": \"Dire Dawa\",\n      \"country\": \"ET\",\n      \"lat\": 9.59306,\n      \"long\": 41.86611,\n      \"zone\": \"Africa/Addis_Ababa\"\n    },\n    \"339219\": {\n      \"name\": \"Desē\",\n      \"country\": \"ET\",\n      \"lat\": 11.13333,\n      \"long\": 39.63333,\n      \"zone\": \"Africa/Addis_Ababa\"\n    },\n    \"339666\": {\n      \"name\": \"Bishoftu\",\n      \"country\": \"ET\",\n      \"lat\": 8.75225,\n      \"long\": 38.97846,\n      \"zone\": \"Africa/Addis_Ababa\"\n    },\n    \"342884\": {\n      \"name\": \"Bahir Dar\",\n      \"country\": \"ET\",\n      \"lat\": 11.59364,\n      \"long\": 37.39077,\n      \"zone\": \"Africa/Addis_Ababa\"\n    },\n    \"343137\": {\n      \"name\": \"Hawassa\",\n      \"country\": \"ET\",\n      \"lat\": 7.06205,\n      \"long\": 38.47635,\n      \"zone\": \"Africa/Addis_Ababa\"\n    },\n    \"343300\": {\n      \"name\": \"Asmara\",\n      \"country\": \"ER\",\n      \"lat\": 15.33805,\n      \"long\": 38.93184,\n      \"zone\": \"Africa/Asmara\"\n    },\n    \"344979\": {\n      \"name\": \"Addis Ababa\",\n      \"country\": \"ET\",\n      \"lat\": 9.02497,\n      \"long\": 38.74689,\n      \"zone\": \"Africa/Addis_Ababa\"\n    },\n    \"347497\": {\n      \"name\": \"Tanda\",\n      \"country\": \"EG\",\n      \"lat\": 30.78847,\n      \"long\": 31.00192,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"347591\": {\n      \"name\": \"Ţalkhā\",\n      \"country\": \"EG\",\n      \"lat\": 31.0539,\n      \"long\": 31.37787,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"347796\": {\n      \"name\": \"Sohag\",\n      \"country\": \"EG\",\n      \"lat\": 26.55695,\n      \"long\": 31.69478,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"349158\": {\n      \"name\": \"Shibīn al Kawm\",\n      \"country\": \"EG\",\n      \"lat\": 30.55258,\n      \"long\": 31.00904,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"350550\": {\n      \"name\": \"Qinā\",\n      \"country\": \"EG\",\n      \"lat\": 26.16418,\n      \"long\": 32.72671,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"350789\": {\n      \"name\": \"Qalyūb\",\n      \"country\": \"EG\",\n      \"lat\": 30.17922,\n      \"long\": 31.2056,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"352951\": {\n      \"name\": \"Mallawī\",\n      \"country\": \"EG\",\n      \"lat\": 27.7314,\n      \"long\": 30.84165,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"354502\": {\n      \"name\": \"Kafr ash Shaykh\",\n      \"country\": \"EG\",\n      \"lat\": 31.1143,\n      \"long\": 30.94012,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"354775\": {\n      \"name\": \"Kafr ad Dawwār\",\n      \"country\": \"EG\",\n      \"lat\": 31.13385,\n      \"long\": 30.12843,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"355026\": {\n      \"name\": \"Jirjā\",\n      \"country\": \"EG\",\n      \"lat\": 26.33826,\n      \"long\": 31.89161,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"355628\": {\n      \"name\": \"Idkū\",\n      \"country\": \"EG\",\n      \"lat\": 31.30782,\n      \"long\": 30.29901,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"355795\": {\n      \"name\": \"Ḩalwān\",\n      \"country\": \"EG\",\n      \"lat\": 29.84144,\n      \"long\": 31.30084,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"358108\": {\n      \"name\": \"Disūq\",\n      \"country\": \"EG\",\n      \"lat\": 31.13305,\n      \"long\": 30.64649,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"358172\": {\n      \"name\": \"Dikirnis\",\n      \"country\": \"EG\",\n      \"lat\": 31.08898,\n      \"long\": 31.59478,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"358448\": {\n      \"name\": \"Damanhūr\",\n      \"country\": \"EG\",\n      \"lat\": 31.03408,\n      \"long\": 30.46823,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"358619\": {\n      \"name\": \"Port Said\",\n      \"country\": \"EG\",\n      \"lat\": 31.25654,\n      \"long\": 32.28411,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"358821\": {\n      \"name\": \"Bilqās\",\n      \"country\": \"EG\",\n      \"lat\": 31.21452,\n      \"long\": 31.35798,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"358840\": {\n      \"name\": \"Bilbays\",\n      \"country\": \"EG\",\n      \"lat\": 30.42039,\n      \"long\": 31.56223,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"359173\": {\n      \"name\": \"Banī Suwayf\",\n      \"country\": \"EG\",\n      \"lat\": 29.07441,\n      \"long\": 31.09785,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"359280\": {\n      \"name\": \"Banhā\",\n      \"country\": \"EG\",\n      \"lat\": 30.45906,\n      \"long\": 31.17858,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"359493\": {\n      \"name\": \"Zagazig\",\n      \"country\": \"EG\",\n      \"lat\": 30.58768,\n      \"long\": 31.502,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"359783\": {\n      \"name\": \"Asyūţ\",\n      \"country\": \"EG\",\n      \"lat\": 27.18096,\n      \"long\": 31.18368,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"359792\": {\n      \"name\": \"Aswan\",\n      \"country\": \"EG\",\n      \"lat\": 24.09082,\n      \"long\": 32.89942,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"359796\": {\n      \"name\": \"Suez\",\n      \"country\": \"EG\",\n      \"lat\": 29.97371,\n      \"long\": 32.52627,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"360502\": {\n      \"name\": \"Luxor\",\n      \"country\": \"EG\",\n      \"lat\": 25.69893,\n      \"long\": 32.6421,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"360630\": {\n      \"name\": \"Cairo\",\n      \"country\": \"EG\",\n      \"lat\": 30.06263,\n      \"long\": 31.24967,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"360686\": {\n      \"name\": \"Al Minyā\",\n      \"country\": \"EG\",\n      \"lat\": 28.10988,\n      \"long\": 30.7503,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"360761\": {\n      \"name\": \"Al Manşūrah\",\n      \"country\": \"EG\",\n      \"lat\": 31.03637,\n      \"long\": 31.38069,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"360829\": {\n      \"name\": \"Al Maḩallah al Kubrá\",\n      \"country\": \"EG\",\n      \"lat\": 30.97063,\n      \"long\": 31.1669,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"360995\": {\n      \"name\": \"Al Jīzah\",\n      \"country\": \"EG\",\n      \"lat\": 30.00808,\n      \"long\": 31.21093,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"361055\": {\n      \"name\": \"Ismailia\",\n      \"country\": \"EG\",\n      \"lat\": 30.60427,\n      \"long\": 32.27225,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"361058\": {\n      \"name\": \"Alexandria\",\n      \"country\": \"EG\",\n      \"lat\": 31.21564,\n      \"long\": 29.95527,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"361179\": {\n      \"name\": \"Al Ḩawāmidīyah\",\n      \"country\": \"EG\",\n      \"lat\": 29.9,\n      \"long\": 31.25,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"361320\": {\n      \"name\": \"Al Fayyūm\",\n      \"country\": \"EG\",\n      \"lat\": 29.30995,\n      \"long\": 30.8418,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"361546\": {\n      \"name\": \"Arish\",\n      \"country\": \"EG\",\n      \"lat\": 31.13159,\n      \"long\": 33.79844,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"362485\": {\n      \"name\": \"Abū Kabīr\",\n      \"country\": \"EG\",\n      \"lat\": 30.72508,\n      \"long\": 31.67148,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"363885\": {\n      \"name\": \"Wau\",\n      \"country\": \"SS\",\n      \"lat\": 7.70286,\n      \"long\": 27.9953,\n      \"zone\": \"Africa/Juba\"\n    },\n    \"364103\": {\n      \"name\": \"Wad Medani\",\n      \"country\": \"SD\",\n      \"lat\": 14.40118,\n      \"long\": 33.51989,\n      \"zone\": \"Africa/Khartoum\"\n    },\n    \"365137\": {\n      \"name\": \"Omdurman\",\n      \"country\": \"SD\",\n      \"lat\": 15.64453,\n      \"long\": 32.47773,\n      \"zone\": \"Africa/Khartoum\"\n    },\n    \"367644\": {\n      \"name\": \"Sinnar\",\n      \"country\": \"SD\",\n      \"lat\": 13.56907,\n      \"long\": 33.56718,\n      \"zone\": \"Africa/Khartoum\"\n    },\n    \"368277\": {\n      \"name\": \"Rabak\",\n      \"country\": \"SD\",\n      \"lat\": 13.18087,\n      \"long\": 32.73999,\n      \"zone\": \"Africa/Khartoum\"\n    },\n    \"370737\": {\n      \"name\": \"Malakal\",\n      \"country\": \"SS\",\n      \"lat\": 9.53342,\n      \"long\": 31.66049,\n      \"zone\": \"Africa/Juba\"\n    },\n    \"371760\": {\n      \"name\": \"Kosti\",\n      \"country\": \"SD\",\n      \"lat\": 13.1629,\n      \"long\": 32.66347,\n      \"zone\": \"Africa/Khartoum\"\n    },\n    \"372753\": {\n      \"name\": \"Kassala\",\n      \"country\": \"SD\",\n      \"lat\": 15.45099,\n      \"long\": 36.39998,\n      \"zone\": \"Africa/Khartoum\"\n    },\n    \"373303\": {\n      \"name\": \"Juba\",\n      \"country\": \"SS\",\n      \"lat\": 4.85165,\n      \"long\": 31.58247,\n      \"zone\": \"Africa/Juba\"\n    },\n    \"377039\": {\n      \"name\": \"Port Sudan\",\n      \"country\": \"SD\",\n      \"lat\": 19.61745,\n      \"long\": 37.21644,\n      \"zone\": \"Africa/Khartoum\"\n    },\n    \"378231\": {\n      \"name\": \"Atbara\",\n      \"country\": \"SD\",\n      \"lat\": 17.70217,\n      \"long\": 33.98638,\n      \"zone\": \"Africa/Khartoum\"\n    },\n    \"378699\": {\n      \"name\": \"An Nuhūd\",\n      \"country\": \"SD\",\n      \"lat\": 12.7,\n      \"long\": 28.43333,\n      \"zone\": \"Africa/Khartoum\"\n    },\n    \"379003\": {\n      \"name\": \"El Obeid\",\n      \"country\": \"SD\",\n      \"lat\": 13.18421,\n      \"long\": 30.21669,\n      \"zone\": \"Africa/Khartoum\"\n    },\n    \"379062\": {\n      \"name\": \"Al Qadarif\",\n      \"country\": \"SD\",\n      \"lat\": 14.03493,\n      \"long\": 35.38344,\n      \"zone\": \"Africa/Khartoum\"\n    },\n    \"379149\": {\n      \"name\": \"Al Manāqil\",\n      \"country\": \"SD\",\n      \"lat\": 14.2459,\n      \"long\": 32.9891,\n      \"zone\": \"Africa/Khartoum\"\n    },\n    \"379252\": {\n      \"name\": \"Khartoum\",\n      \"country\": \"SD\",\n      \"lat\": 15.55177,\n      \"long\": 32.53241,\n      \"zone\": \"Africa/Khartoum\"\n    },\n    \"379303\": {\n      \"name\": \"Geneina\",\n      \"country\": \"SD\",\n      \"lat\": 13.45262,\n      \"long\": 22.44725,\n      \"zone\": \"Africa/Khartoum\"\n    },\n    \"379555\": {\n      \"name\": \"El Fasher\",\n      \"country\": \"SD\",\n      \"lat\": 13.62793,\n      \"long\": 25.34936,\n      \"zone\": \"Africa/Khartoum\"\n    },\n    \"380148\": {\n      \"name\": \"El Daein\",\n      \"country\": \"SD\",\n      \"lat\": 11.46186,\n      \"long\": 26.12583,\n      \"zone\": \"Africa/Khartoum\"\n    },\n    \"380173\": {\n      \"name\": \"Ed Damer\",\n      \"country\": \"SD\",\n      \"lat\": 17.59278,\n      \"long\": 33.95917,\n      \"zone\": \"Africa/Khartoum\"\n    },\n    \"380174\": {\n      \"name\": \"Ad-Damazin\",\n      \"country\": \"SD\",\n      \"lat\": 11.7891,\n      \"long\": 34.3592,\n      \"zone\": \"Africa/Khartoum\"\n    },\n    \"388349\": {\n      \"name\": \"Al Başrah al Qadīmah\",\n      \"country\": \"IQ\",\n      \"lat\": 30.50316,\n      \"long\": 47.81507,\n      \"zone\": \"Asia/Baghdad\"\n    },\n    \"411165\": {\n      \"name\": \"Idfu\",\n      \"country\": \"EG\",\n      \"lat\": 24.98028,\n      \"long\": 32.87472,\n      \"zone\": \"Africa/Cairo\"\n    },\n    \"412800\": {\n      \"name\": \"Şabāḩ as Sālim\",\n      \"country\": \"KW\",\n      \"lat\": 29.25722,\n      \"long\": 48.05722,\n      \"zone\": \"Asia/Kuwait\"\n    },\n    \"415189\": {\n      \"name\": \"Aden\",\n      \"country\": \"YE\",\n      \"lat\": 12.77944,\n      \"long\": 45.03667,\n      \"zone\": \"Asia/Aden\"\n    },\n    \"417594\": {\n      \"name\": \"Shāhreẕā\",\n      \"country\": \"IR\",\n      \"lat\": 32.03389,\n      \"long\": 51.87944,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"418606\": {\n      \"name\": \"Najafābād\",\n      \"country\": \"IR\",\n      \"lat\": 32.6344,\n      \"long\": 51.3668,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"418710\": {\n      \"name\": \"Khomeynī Shahr\",\n      \"country\": \"IR\",\n      \"lat\": 32.6856,\n      \"long\": 51.53609,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"418863\": {\n      \"name\": \"Isfahan\",\n      \"country\": \"IR\",\n      \"lat\": 32.65246,\n      \"long\": 51.67462,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"425378\": {\n      \"name\": \"Bujumbura\",\n      \"country\": \"BI\",\n      \"lat\": -3.3822,\n      \"long\": 29.3644,\n      \"zone\": \"Africa/Bujumbura\"\n    },\n    \"442301\": {\n      \"name\": \"Batikent\",\n      \"country\": \"TR\",\n      \"lat\": 39.96833,\n      \"long\": 32.73083,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"456172\": {\n      \"name\": \"Riga\",\n      \"country\": \"LV\",\n      \"lat\": 56.946,\n      \"long\": 24.10589,\n      \"zone\": \"Europe/Riga\"\n    },\n    \"460413\": {\n      \"name\": \"Daugavpils\",\n      \"country\": \"LV\",\n      \"lat\": 55.88333,\n      \"long\": 26.53333,\n      \"zone\": \"Europe/Riga\"\n    },\n    \"461740\": {\n      \"name\": \"Zyuzino\",\n      \"country\": \"RU\",\n      \"lat\": 55.65608,\n      \"long\": 37.56846,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"461835\": {\n      \"name\": \"Zyablikovo\",\n      \"country\": \"RU\",\n      \"lat\": 55.61667,\n      \"long\": 37.76667,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"462444\": {\n      \"name\": \"Zlatoust\",\n      \"country\": \"RU\",\n      \"lat\": 55.17111,\n      \"long\": 59.65083,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"462745\": {\n      \"name\": \"Zhulebino\",\n      \"country\": \"RU\",\n      \"lat\": 55.7,\n      \"long\": 37.85,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"463355\": {\n      \"name\": \"Zheleznodorozhnyy\",\n      \"country\": \"RU\",\n      \"lat\": 55.744,\n      \"long\": 38.01684,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"463829\": {\n      \"name\": \"Zelenograd\",\n      \"country\": \"RU\",\n      \"lat\": 55.9825,\n      \"long\": 37.18139,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"466806\": {\n      \"name\": \"Yoshkar-Ola\",\n      \"country\": \"RU\",\n      \"lat\": 56.63877,\n      \"long\": 47.89078,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"467978\": {\n      \"name\": \"Yelets\",\n      \"country\": \"RU\",\n      \"lat\": 52.62366,\n      \"long\": 38.50169,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"468809\": {\n      \"name\": \"Yasenevo\",\n      \"country\": \"RU\",\n      \"lat\": 55.60686,\n      \"long\": 37.51991,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"468902\": {\n      \"name\": \"Yaroslavl\",\n      \"country\": \"RU\",\n      \"lat\": 57.62987,\n      \"long\": 39.87368,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"470451\": {\n      \"name\": \"Vykhino-Zhulebino\",\n      \"country\": \"RU\",\n      \"lat\": 55.70196,\n      \"long\": 37.81178,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"472045\": {\n      \"name\": \"Voronezh\",\n      \"country\": \"RU\",\n      \"lat\": 51.67204,\n      \"long\": 39.1843,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"472231\": {\n      \"name\": \"Volzhskiy\",\n      \"country\": \"RU\",\n      \"lat\": 48.78583,\n      \"long\": 44.77973,\n      \"zone\": \"Europe/Volgograd\"\n    },\n    \"472459\": {\n      \"name\": \"Vologda\",\n      \"country\": \"RU\",\n      \"lat\": 59.2239,\n      \"long\": 39.88398,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"472757\": {\n      \"name\": \"Volgograd\",\n      \"country\": \"RU\",\n      \"lat\": 48.71939,\n      \"long\": 44.50183,\n      \"zone\": \"Europe/Volgograd\"\n    },\n    \"472761\": {\n      \"name\": \"Volgodonsk\",\n      \"country\": \"RU\",\n      \"lat\": 47.51361,\n      \"long\": 42.15139,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"473247\": {\n      \"name\": \"Vladimir\",\n      \"country\": \"RU\",\n      \"lat\": 56.13655,\n      \"long\": 40.39658,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"473249\": {\n      \"name\": \"Vladikavkaz\",\n      \"country\": \"RU\",\n      \"lat\": 43.03667,\n      \"long\": 44.66778,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"473972\": {\n      \"name\": \"Veshnyaki\",\n      \"country\": \"RU\",\n      \"lat\": 55.72393,\n      \"long\": 37.81952,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"476077\": {\n      \"name\": \"Velikiye Luki\",\n      \"country\": \"RU\",\n      \"lat\": 56.34,\n      \"long\": 30.54517,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"479123\": {\n      \"name\": \"Ulyanovsk\",\n      \"country\": \"RU\",\n      \"lat\": 54.32824,\n      \"long\": 48.38657,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"479411\": {\n      \"name\": \"Ukhta\",\n      \"country\": \"RU\",\n      \"lat\": 63.56705,\n      \"long\": 53.68348,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"479561\": {\n      \"name\": \"Ufa\",\n      \"country\": \"RU\",\n      \"lat\": 54.74306,\n      \"long\": 55.96779,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"480060\": {\n      \"name\": \"Tver\",\n      \"country\": \"RU\",\n      \"lat\": 56.85836,\n      \"long\": 35.90057,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"480562\": {\n      \"name\": \"Tula\",\n      \"country\": \"RU\",\n      \"lat\": 54.19609,\n      \"long\": 37.61822,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"481453\": {\n      \"name\": \"Troparëvo\",\n      \"country\": \"RU\",\n      \"lat\": 55.65625,\n      \"long\": 37.48496,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"482283\": {\n      \"name\": \"Tol’yatti\",\n      \"country\": \"RU\",\n      \"lat\": 53.5303,\n      \"long\": 49.3461,\n      \"zone\": \"Europe/Samara\"\n    },\n    \"483551\": {\n      \"name\": \"Tyoply Stan\",\n      \"country\": \"RU\",\n      \"lat\": 55.62047,\n      \"long\": 37.49338,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"484646\": {\n      \"name\": \"Tambov\",\n      \"country\": \"RU\",\n      \"lat\": 52.73169,\n      \"long\": 41.44326,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"484907\": {\n      \"name\": \"Taganrog\",\n      \"country\": \"RU\",\n      \"lat\": 47.23617,\n      \"long\": 38.89688,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"484912\": {\n      \"name\": \"Taganskiy\",\n      \"country\": \"RU\",\n      \"lat\": 55.73333,\n      \"long\": 37.66667,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"484972\": {\n      \"name\": \"Syzran’\",\n      \"country\": \"RU\",\n      \"lat\": 53.1585,\n      \"long\": 48.4681,\n      \"zone\": \"Europe/Samara\"\n    },\n    \"485239\": {\n      \"name\": \"Syktyvkar\",\n      \"country\": \"RU\",\n      \"lat\": 61.67642,\n      \"long\": 50.80994,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"487150\": {\n      \"name\": \"Strogino\",\n      \"country\": \"RU\",\n      \"lat\": 55.81838,\n      \"long\": 37.41224,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"487495\": {\n      \"name\": \"Sterlitamak\",\n      \"country\": \"RU\",\n      \"lat\": 53.62462,\n      \"long\": 55.95015,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"487846\": {\n      \"name\": \"Stavropol’\",\n      \"country\": \"RU\",\n      \"lat\": 45.0428,\n      \"long\": 41.9734,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"487928\": {\n      \"name\": \"Staryy Oskol\",\n      \"country\": \"RU\",\n      \"lat\": 51.29667,\n      \"long\": 37.84167,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"490971\": {\n      \"name\": \"Solntsevo\",\n      \"country\": \"RU\",\n      \"lat\": 55.63711,\n      \"long\": 37.38115,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"491023\": {\n      \"name\": \"Solikamsk\",\n      \"country\": \"RU\",\n      \"lat\": 59.6316,\n      \"long\": 56.7685,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"491422\": {\n      \"name\": \"Sochi\",\n      \"country\": \"RU\",\n      \"lat\": 43.59917,\n      \"long\": 39.72569,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"491687\": {\n      \"name\": \"Smolensk\",\n      \"country\": \"RU\",\n      \"lat\": 54.7818,\n      \"long\": 32.0401,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"495136\": {\n      \"name\": \"Shchukino\",\n      \"country\": \"RU\",\n      \"lat\": 55.8,\n      \"long\": 37.45,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"495344\": {\n      \"name\": \"Shchelkovo\",\n      \"country\": \"RU\",\n      \"lat\": 55.92497,\n      \"long\": 37.97218,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"496015\": {\n      \"name\": \"Shakhty\",\n      \"country\": \"RU\",\n      \"lat\": 47.70911,\n      \"long\": 40.21443,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"496285\": {\n      \"name\": \"Severodvinsk\",\n      \"country\": \"RU\",\n      \"lat\": 64.5635,\n      \"long\": 39.8302,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"496348\": {\n      \"name\": \"Severnyy\",\n      \"country\": \"RU\",\n      \"lat\": 55.93583,\n      \"long\": 37.54889,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"496527\": {\n      \"name\": \"Serpukhov\",\n      \"country\": \"RU\",\n      \"lat\": 54.91578,\n      \"long\": 37.41114,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"496638\": {\n      \"name\": \"Sergiyev Posad\",\n      \"country\": \"RU\",\n      \"lat\": 56.3,\n      \"long\": 38.13333,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"498677\": {\n      \"name\": \"Saratov\",\n      \"country\": \"RU\",\n      \"lat\": 51.54056,\n      \"long\": 46.00861,\n      \"zone\": \"Europe/Volgograd\"\n    },\n    \"498698\": {\n      \"name\": \"Saransk\",\n      \"country\": \"RU\",\n      \"lat\": 54.1838,\n      \"long\": 45.1749,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"498817\": {\n      \"name\": \"Saint Petersburg\",\n      \"country\": \"RU\",\n      \"lat\": 59.93863,\n      \"long\": 30.31413,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"499099\": {\n      \"name\": \"Samara\",\n      \"country\": \"RU\",\n      \"lat\": 53.20007,\n      \"long\": 50.15,\n      \"zone\": \"Europe/Samara\"\n    },\n    \"499292\": {\n      \"name\": \"Salavat\",\n      \"country\": \"RU\",\n      \"lat\": 53.38365,\n      \"long\": 55.90773,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"500004\": {\n      \"name\": \"Rybinsk\",\n      \"country\": \"RU\",\n      \"lat\": 58.0446,\n      \"long\": 38.84259,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"500096\": {\n      \"name\": \"Ryazan’\",\n      \"country\": \"RU\",\n      \"lat\": 54.6269,\n      \"long\": 39.6916,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"501175\": {\n      \"name\": \"Rostov-na-Donu\",\n      \"country\": \"RU\",\n      \"lat\": 47.23135,\n      \"long\": 39.72328,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"502971\": {\n      \"name\": \"Ramenki\",\n      \"country\": \"RU\",\n      \"lat\": 55.7,\n      \"long\": 37.5,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"503550\": {\n      \"name\": \"Pyatigorsk\",\n      \"country\": \"RU\",\n      \"lat\": 44.04861,\n      \"long\": 43.05944,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"503977\": {\n      \"name\": \"Pushkino\",\n      \"country\": \"RU\",\n      \"lat\": 56.01722,\n      \"long\": 37.86667,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"504341\": {\n      \"name\": \"Pskov\",\n      \"country\": \"RU\",\n      \"lat\": 57.8136,\n      \"long\": 28.3496,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"508101\": {\n      \"name\": \"Podol’sk\",\n      \"country\": \"RU\",\n      \"lat\": 55.42419,\n      \"long\": 37.55472,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"508751\": {\n      \"name\": \"Ryazanskiy\",\n      \"country\": \"RU\",\n      \"lat\": 55.73333,\n      \"long\": 37.76667,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"509820\": {\n      \"name\": \"Petrozavodsk\",\n      \"country\": \"RU\",\n      \"lat\": 61.78491,\n      \"long\": 34.34691,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"510808\": {\n      \"name\": \"Pervoural’sk\",\n      \"country\": \"RU\",\n      \"lat\": 56.90528,\n      \"long\": 59.94361,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"511153\": {\n      \"name\": \"Perovo\",\n      \"country\": \"RU\",\n      \"lat\": 55.73501,\n      \"long\": 37.79088,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"511196\": {\n      \"name\": \"Perm\",\n      \"country\": \"RU\",\n      \"lat\": 58.01046,\n      \"long\": 56.25017,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"511510\": {\n      \"name\": \"Novo-Peredelkino\",\n      \"country\": \"RU\",\n      \"lat\": 55.64528,\n      \"long\": 37.33583,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"511565\": {\n      \"name\": \"Penza\",\n      \"country\": \"RU\",\n      \"lat\": 53.20066,\n      \"long\": 45.00464,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"514734\": {\n      \"name\": \"Orsk\",\n      \"country\": \"RU\",\n      \"lat\": 51.20487,\n      \"long\": 58.56685,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"515003\": {\n      \"name\": \"Orenburg\",\n      \"country\": \"RU\",\n      \"lat\": 51.7727,\n      \"long\": 55.0988,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"515012\": {\n      \"name\": \"Orël\",\n      \"country\": \"RU\",\n      \"lat\": 52.96508,\n      \"long\": 36.07849,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"515024\": {\n      \"name\": \"Orekhovo-Zuyevo\",\n      \"country\": \"RU\",\n      \"lat\": 55.80672,\n      \"long\": 38.96178,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"515027\": {\n      \"name\": \"Orekhovo-Borisovo Severnoye\",\n      \"country\": \"RU\",\n      \"lat\": 55.61667,\n      \"long\": 37.68333,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"515879\": {\n      \"name\": \"Oktyabr’skiy\",\n      \"country\": \"RU\",\n      \"lat\": 54.48147,\n      \"long\": 53.47103,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"516215\": {\n      \"name\": \"Odintsovo\",\n      \"country\": \"RU\",\n      \"lat\": 55.67798,\n      \"long\": 37.27773,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"516264\": {\n      \"name\": \"Ochakovo-Matveyevskoye\",\n      \"country\": \"RU\",\n      \"lat\": 55.68432,\n      \"long\": 37.44654,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"516436\": {\n      \"name\": \"Obninsk\",\n      \"country\": \"RU\",\n      \"lat\": 55.09681,\n      \"long\": 36.61006,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"517121\": {\n      \"name\": \"Novyye Kuz’minki\",\n      \"country\": \"RU\",\n      \"lat\": 55.7,\n      \"long\": 37.75,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"517161\": {\n      \"name\": \"Novyye Cherëmushki\",\n      \"country\": \"RU\",\n      \"lat\": 55.7,\n      \"long\": 37.58333,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"517836\": {\n      \"name\": \"Novotroitsk\",\n      \"country\": \"RU\",\n      \"lat\": 51.20301,\n      \"long\": 58.32665,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"518255\": {\n      \"name\": \"Novorossiysk\",\n      \"country\": \"RU\",\n      \"lat\": 44.72439,\n      \"long\": 37.76752,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"518557\": {\n      \"name\": \"Novomoskovsk\",\n      \"country\": \"RU\",\n      \"lat\": 54.0105,\n      \"long\": 38.2846,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"518659\": {\n      \"name\": \"Novokuybyshevsk\",\n      \"country\": \"RU\",\n      \"lat\": 53.0959,\n      \"long\": 49.9462,\n      \"zone\": \"Europe/Samara\"\n    },\n    \"518970\": {\n      \"name\": \"Novocherkassk\",\n      \"country\": \"RU\",\n      \"lat\": 47.42018,\n      \"long\": 40.09132,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"518976\": {\n      \"name\": \"Novocheboksarsk\",\n      \"country\": \"RU\",\n      \"lat\": 56.11095,\n      \"long\": 47.47755,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"519336\": {\n      \"name\": \"Velikiy Novgorod\",\n      \"country\": \"RU\",\n      \"lat\": 58.52131,\n      \"long\": 31.27104,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"520068\": {\n      \"name\": \"Noginsk\",\n      \"country\": \"RU\",\n      \"lat\": 55.86647,\n      \"long\": 38.4438,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"520494\": {\n      \"name\": \"Nizhniy Tagil\",\n      \"country\": \"RU\",\n      \"lat\": 57.91944,\n      \"long\": 59.965,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"520555\": {\n      \"name\": \"Nizhniy Novgorod\",\n      \"country\": \"RU\",\n      \"lat\": 56.32867,\n      \"long\": 44.00205,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"521118\": {\n      \"name\": \"Nizhnekamsk\",\n      \"country\": \"RU\",\n      \"lat\": 55.63657,\n      \"long\": 51.82447,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"522377\": {\n      \"name\": \"Nevinnomyssk\",\n      \"country\": \"RU\",\n      \"lat\": 44.6333,\n      \"long\": 41.9444,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"522942\": {\n      \"name\": \"Neftekamsk\",\n      \"country\": \"RU\",\n      \"lat\": 56.092,\n      \"long\": 54.2661,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"523064\": {\n      \"name\": \"Nazran’\",\n      \"country\": \"RU\",\n      \"lat\": 43.22597,\n      \"long\": 44.77323,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"523523\": {\n      \"name\": \"Nal’chik\",\n      \"country\": \"RU\",\n      \"lat\": 43.49806,\n      \"long\": 43.61889,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"523750\": {\n      \"name\": \"Naberezhnyye Chelny\",\n      \"country\": \"RU\",\n      \"lat\": 55.72545,\n      \"long\": 52.41122,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"523812\": {\n      \"name\": \"Mytishchi\",\n      \"country\": \"RU\",\n      \"lat\": 55.91163,\n      \"long\": 37.73076,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"524294\": {\n      \"name\": \"Murom\",\n      \"country\": \"RU\",\n      \"lat\": 55.575,\n      \"long\": 42.0426,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"524305\": {\n      \"name\": \"Murmansk\",\n      \"country\": \"RU\",\n      \"lat\": 68.97917,\n      \"long\": 33.09251,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"524901\": {\n      \"name\": \"Moscow\",\n      \"country\": \"RU\",\n      \"lat\": 55.75222,\n      \"long\": 37.61556,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"528293\": {\n      \"name\": \"Maykop\",\n      \"country\": \"RU\",\n      \"lat\": 44.60778,\n      \"long\": 40.10583,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"529237\": {\n      \"name\": \"Mar’ino\",\n      \"country\": \"RU\",\n      \"lat\": 55.65,\n      \"long\": 37.71667,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"532096\": {\n      \"name\": \"Makhachkala\",\n      \"country\": \"RU\",\n      \"lat\": 42.97638,\n      \"long\": 47.50236,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"532288\": {\n      \"name\": \"Magnitogorsk\",\n      \"country\": \"RU\",\n      \"lat\": 53.41861,\n      \"long\": 59.04722,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"532535\": {\n      \"name\": \"Lyublino\",\n      \"country\": \"RU\",\n      \"lat\": 55.67923,\n      \"long\": 37.7525,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"532615\": {\n      \"name\": \"Lyubertsy\",\n      \"country\": \"RU\",\n      \"lat\": 55.67719,\n      \"long\": 37.89322,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"535121\": {\n      \"name\": \"Lipetsk\",\n      \"country\": \"RU\",\n      \"lat\": 52.60311,\n      \"long\": 39.57076,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"536164\": {\n      \"name\": \"Tsaritsyno\",\n      \"country\": \"RU\",\n      \"lat\": 55.6254,\n      \"long\": 37.65032,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"537832\": {\n      \"name\": \"Kuz’minki\",\n      \"country\": \"RU\",\n      \"lat\": 55.7,\n      \"long\": 37.8,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"538560\": {\n      \"name\": \"Kursk\",\n      \"country\": \"RU\",\n      \"lat\": 51.73733,\n      \"long\": 36.18735,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"542420\": {\n      \"name\": \"Krasnodar\",\n      \"country\": \"RU\",\n      \"lat\": 45.04484,\n      \"long\": 38.97603,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"542634\": {\n      \"name\": \"Presnenskiy\",\n      \"country\": \"RU\",\n      \"lat\": 55.75,\n      \"long\": 37.55,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"543460\": {\n      \"name\": \"Kovrov\",\n      \"country\": \"RU\",\n      \"lat\": 56.35722,\n      \"long\": 41.31917,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"543878\": {\n      \"name\": \"Kostroma\",\n      \"country\": \"RU\",\n      \"lat\": 57.76647,\n      \"long\": 40.92686,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"546105\": {\n      \"name\": \"Kolpino\",\n      \"country\": \"RU\",\n      \"lat\": 59.75069,\n      \"long\": 30.58856,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"546230\": {\n      \"name\": \"Kolomna\",\n      \"country\": \"RU\",\n      \"lat\": 55.07944,\n      \"long\": 38.77833,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"548114\": {\n      \"name\": \"Kislovodsk\",\n      \"country\": \"RU\",\n      \"lat\": 43.91333,\n      \"long\": 42.72083,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"548408\": {\n      \"name\": \"Kirov\",\n      \"country\": \"RU\",\n      \"lat\": 58.59665,\n      \"long\": 49.66007,\n      \"zone\": \"Europe/Volgograd\"\n    },\n    \"549479\": {\n      \"name\": \"Khoroshëvo-Mnevniki\",\n      \"country\": \"RU\",\n      \"lat\": 55.78363,\n      \"long\": 37.47137,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"550280\": {\n      \"name\": \"Khimki\",\n      \"country\": \"RU\",\n      \"lat\": 55.89704,\n      \"long\": 37.42969,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"550478\": {\n      \"name\": \"Khasavyurt\",\n      \"country\": \"RU\",\n      \"lat\": 43.2509,\n      \"long\": 46.58766,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"551487\": {\n      \"name\": \"Kazan\",\n      \"country\": \"RU\",\n      \"lat\": 55.78874,\n      \"long\": 49.12214,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"553287\": {\n      \"name\": \"Kamyshin\",\n      \"country\": \"RU\",\n      \"lat\": 50.09833,\n      \"long\": 45.41601,\n      \"zone\": \"Europe/Volgograd\"\n    },\n    \"553915\": {\n      \"name\": \"Kaluga\",\n      \"country\": \"RU\",\n      \"lat\": 54.5293,\n      \"long\": 36.27542,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"554233\": {\n      \"name\": \"Korolev\",\n      \"country\": \"RU\",\n      \"lat\": 55.91417,\n      \"long\": 37.82556,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"554234\": {\n      \"name\": \"Kaliningrad\",\n      \"country\": \"RU\",\n      \"lat\": 54.70649,\n      \"long\": 20.51095,\n      \"zone\": \"Europe/Kaliningrad\"\n    },\n    \"554787\": {\n      \"name\": \"Izmaylovo\",\n      \"country\": \"RU\",\n      \"lat\": 55.78677,\n      \"long\": 37.80165,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"554840\": {\n      \"name\": \"Izhevsk\",\n      \"country\": \"RU\",\n      \"lat\": 56.84976,\n      \"long\": 53.20448,\n      \"zone\": \"Europe/Samara\"\n    },\n    \"555129\": {\n      \"name\": \"Ivanovskoye\",\n      \"country\": \"RU\",\n      \"lat\": 55.76667,\n      \"long\": 37.83333,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"555312\": {\n      \"name\": \"Ivanovo\",\n      \"country\": \"RU\",\n      \"lat\": 56.99719,\n      \"long\": 40.97139,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"558418\": {\n      \"name\": \"Groznyy\",\n      \"country\": \"RU\",\n      \"lat\": 43.31195,\n      \"long\": 45.68895,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"560465\": {\n      \"name\": \"Gol’yanovo\",\n      \"country\": \"RU\",\n      \"lat\": 55.82299,\n      \"long\": 37.81306,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"561347\": {\n      \"name\": \"Glazov\",\n      \"country\": \"RU\",\n      \"lat\": 58.1393,\n      \"long\": 52.658,\n      \"zone\": \"Europe/Samara\"\n    },\n    \"563464\": {\n      \"name\": \"Engel’s\",\n      \"country\": \"RU\",\n      \"lat\": 51.48389,\n      \"long\": 46.10528,\n      \"zone\": \"Europe/Volgograd\"\n    },\n    \"563514\": {\n      \"name\": \"Elista\",\n      \"country\": \"RU\",\n      \"lat\": 46.30778,\n      \"long\": 44.25583,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"563523\": {\n      \"name\": \"Elektrostal’\",\n      \"country\": \"RU\",\n      \"lat\": 55.78959,\n      \"long\": 38.44671,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"563708\": {\n      \"name\": \"Dzerzhinsk\",\n      \"country\": \"RU\",\n      \"lat\": 56.24143,\n      \"long\": 43.45539,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"566199\": {\n      \"name\": \"Dimitrovgrad\",\n      \"country\": \"RU\",\n      \"lat\": 54.21386,\n      \"long\": 49.61838,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"566532\": {\n      \"name\": \"Derbent\",\n      \"country\": \"RU\",\n      \"lat\": 42.06779,\n      \"long\": 48.28987,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"569154\": {\n      \"name\": \"Cherkessk\",\n      \"country\": \"RU\",\n      \"lat\": 44.22333,\n      \"long\": 42.05778,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"569223\": {\n      \"name\": \"Cherepovets\",\n      \"country\": \"RU\",\n      \"lat\": 59.13333,\n      \"long\": 37.9,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"569273\": {\n      \"name\": \"Cherëmushki\",\n      \"country\": \"RU\",\n      \"lat\": 55.66473,\n      \"long\": 37.56135,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"569696\": {\n      \"name\": \"Cheboksary\",\n      \"country\": \"RU\",\n      \"lat\": 56.13222,\n      \"long\": 47.25194,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"571476\": {\n      \"name\": \"Bryansk\",\n      \"country\": \"RU\",\n      \"lat\": 53.25209,\n      \"long\": 34.37167,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"571741\": {\n      \"name\": \"Brateyevo\",\n      \"country\": \"RU\",\n      \"lat\": 55.63755,\n      \"long\": 37.76438,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"575505\": {\n      \"name\": \"Bogorodskoye\",\n      \"country\": \"RU\",\n      \"lat\": 55.81353,\n      \"long\": 37.71617,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"576279\": {\n      \"name\": \"Biryulëvo\",\n      \"country\": \"RU\",\n      \"lat\": 55.58635,\n      \"long\": 37.67781,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"576432\": {\n      \"name\": \"Bibirevo\",\n      \"country\": \"RU\",\n      \"lat\": 55.88333,\n      \"long\": 37.6,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"577206\": {\n      \"name\": \"Berezniki\",\n      \"country\": \"RU\",\n      \"lat\": 59.4091,\n      \"long\": 56.8204,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"578072\": {\n      \"name\": \"Belgorod\",\n      \"country\": \"RU\",\n      \"lat\": 50.61074,\n      \"long\": 36.58015,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"578740\": {\n      \"name\": \"Bataysk\",\n      \"country\": \"RU\",\n      \"lat\": 47.13975,\n      \"long\": 39.75181,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"579464\": {\n      \"name\": \"Balashikha\",\n      \"country\": \"RU\",\n      \"lat\": 55.80945,\n      \"long\": 37.95806,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"579492\": {\n      \"name\": \"Balakovo\",\n      \"country\": \"RU\",\n      \"lat\": 52.02782,\n      \"long\": 47.8007,\n      \"zone\": \"Europe/Volgograd\"\n    },\n    \"580497\": {\n      \"name\": \"Astrakhan’\",\n      \"country\": \"RU\",\n      \"lat\": 46.34968,\n      \"long\": 48.04076,\n      \"zone\": \"Europe/Volgograd\"\n    },\n    \"580724\": {\n      \"name\": \"Arzamas\",\n      \"country\": \"RU\",\n      \"lat\": 55.39485,\n      \"long\": 43.83992,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"580922\": {\n      \"name\": \"Armavir\",\n      \"country\": \"RU\",\n      \"lat\": 44.9892,\n      \"long\": 41.1234,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"581049\": {\n      \"name\": \"Arkhangel’sk\",\n      \"country\": \"RU\",\n      \"lat\": 64.5401,\n      \"long\": 40.5433,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"582432\": {\n      \"name\": \"Al’met’yevsk\",\n      \"country\": \"RU\",\n      \"lat\": 54.90442,\n      \"long\": 52.3154,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"584923\": {\n      \"name\": \"Sumqayıt\",\n      \"country\": \"AZ\",\n      \"lat\": 40.58972,\n      \"long\": 49.66861,\n      \"zone\": \"Asia/Baku\"\n    },\n    \"586523\": {\n      \"name\": \"Ganja\",\n      \"country\": \"AZ\",\n      \"lat\": 40.68278,\n      \"long\": 46.36056,\n      \"zone\": \"Asia/Baku\"\n    },\n    \"587084\": {\n      \"name\": \"Baku\",\n      \"country\": \"AZ\",\n      \"lat\": 40.37767,\n      \"long\": 49.89201,\n      \"zone\": \"Asia/Baku\"\n    },\n    \"588335\": {\n      \"name\": \"Tartu\",\n      \"country\": \"EE\",\n      \"lat\": 58.38062,\n      \"long\": 26.72509,\n      \"zone\": \"Europe/Tallinn\"\n    },\n    \"588409\": {\n      \"name\": \"Tallinn\",\n      \"country\": \"EE\",\n      \"lat\": 59.43696,\n      \"long\": 24.75353,\n      \"zone\": \"Europe/Tallinn\"\n    },\n    \"593116\": {\n      \"name\": \"Vilnius\",\n      \"country\": \"LT\",\n      \"lat\": 54.68916,\n      \"long\": 25.2798,\n      \"zone\": \"Europe/Vilnius\"\n    },\n    \"594739\": {\n      \"name\": \"Šiauliai\",\n      \"country\": \"LT\",\n      \"lat\": 55.93333,\n      \"long\": 23.31667,\n      \"zone\": \"Europe/Vilnius\"\n    },\n    \"596128\": {\n      \"name\": \"Panevėžys\",\n      \"country\": \"LT\",\n      \"lat\": 55.73333,\n      \"long\": 24.35,\n      \"zone\": \"Europe/Vilnius\"\n    },\n    \"598098\": {\n      \"name\": \"Klaipėda\",\n      \"country\": \"LT\",\n      \"lat\": 55.71722,\n      \"long\": 21.1175,\n      \"zone\": \"Europe/Vilnius\"\n    },\n    \"598316\": {\n      \"name\": \"Kaunas\",\n      \"country\": \"LT\",\n      \"lat\": 54.9,\n      \"long\": 23.9,\n      \"zone\": \"Europe/Vilnius\"\n    },\n    \"601294\": {\n      \"name\": \"Nukus\",\n      \"country\": \"UZ\",\n      \"lat\": 42.45306,\n      \"long\": 59.61028,\n      \"zone\": \"Asia/Samarkand\"\n    },\n    \"601734\": {\n      \"name\": \"Daşoguz\",\n      \"country\": \"TM\",\n      \"lat\": 41.83625,\n      \"long\": 59.96661,\n      \"zone\": \"Asia/Ashgabat\"\n    },\n    \"607610\": {\n      \"name\": \"Zhanaozen\",\n      \"country\": \"KZ\",\n      \"lat\": 43.34116,\n      \"long\": 52.86192,\n      \"zone\": \"Asia/Aqtau\"\n    },\n    \"608668\": {\n      \"name\": \"Oral\",\n      \"country\": \"KZ\",\n      \"lat\": 51.23333,\n      \"long\": 51.36667,\n      \"zone\": \"Asia/Oral\"\n    },\n    \"609655\": {\n      \"name\": \"Karagandy\",\n      \"country\": \"KZ\",\n      \"lat\": 49.83333,\n      \"long\": 73.1658,\n      \"zone\": \"Asia/Almaty\"\n    },\n    \"610529\": {\n      \"name\": \"Atyrau\",\n      \"country\": \"KZ\",\n      \"lat\": 47.11667,\n      \"long\": 51.88333,\n      \"zone\": \"Asia/Oral\"\n    },\n    \"610611\": {\n      \"name\": \"Aqtöbe\",\n      \"country\": \"KZ\",\n      \"lat\": 50.27969,\n      \"long\": 57.20718,\n      \"zone\": \"Asia/Aqtobe\"\n    },\n    \"610612\": {\n      \"name\": \"Aktau\",\n      \"country\": \"KZ\",\n      \"lat\": 43.64806,\n      \"long\": 51.17222,\n      \"zone\": \"Asia/Aqtau\"\n    },\n    \"611717\": {\n      \"name\": \"Tbilisi\",\n      \"country\": \"GE\",\n      \"lat\": 41.69411,\n      \"long\": 44.83368,\n      \"zone\": \"Asia/Tbilisi\"\n    },\n    \"613607\": {\n      \"name\": \"Kutaisi\",\n      \"country\": \"GE\",\n      \"lat\": 42.26791,\n      \"long\": 42.69459,\n      \"zone\": \"Asia/Tbilisi\"\n    },\n    \"615532\": {\n      \"name\": \"Batumi\",\n      \"country\": \"GE\",\n      \"lat\": 41.64228,\n      \"long\": 41.63392,\n      \"zone\": \"Asia/Tbilisi\"\n    },\n    \"616052\": {\n      \"name\": \"Yerevan\",\n      \"country\": \"AM\",\n      \"lat\": 40.18111,\n      \"long\": 44.51361,\n      \"zone\": \"Asia/Yerevan\"\n    },\n    \"616530\": {\n      \"name\": \"Vanadzor\",\n      \"country\": \"AM\",\n      \"lat\": 40.80456,\n      \"long\": 44.4939,\n      \"zone\": \"Asia/Yerevan\"\n    },\n    \"616635\": {\n      \"name\": \"Gyumri\",\n      \"country\": \"AM\",\n      \"lat\": 40.7942,\n      \"long\": 43.84528,\n      \"zone\": \"Asia/Yerevan\"\n    },\n    \"617239\": {\n      \"name\": \"Tiraspolul\",\n      \"country\": \"MD\",\n      \"lat\": 46.84274,\n      \"long\": 29.62909,\n      \"zone\": \"Europe/Chisinau\"\n    },\n    \"618426\": {\n      \"name\": \"Chişinău\",\n      \"country\": \"MD\",\n      \"lat\": 47.00556,\n      \"long\": 28.8575,\n      \"zone\": \"Europe/Chisinau\"\n    },\n    \"618577\": {\n      \"name\": \"Bender\",\n      \"country\": \"MD\",\n      \"lat\": 46.83156,\n      \"long\": 29.47769,\n      \"zone\": \"Europe/Chisinau\"\n    },\n    \"618605\": {\n      \"name\": \"Bălţi\",\n      \"country\": \"MD\",\n      \"lat\": 47.76314,\n      \"long\": 27.92932,\n      \"zone\": \"Europe/Chisinau\"\n    },\n    \"620127\": {\n      \"name\": \"Vitebsk\",\n      \"country\": \"BY\",\n      \"lat\": 55.1904,\n      \"long\": 30.2049,\n      \"zone\": \"Europe/Minsk\"\n    },\n    \"622428\": {\n      \"name\": \"Salihorsk\",\n      \"country\": \"BY\",\n      \"lat\": 52.7876,\n      \"long\": 27.5415,\n      \"zone\": \"Europe/Minsk\"\n    },\n    \"623549\": {\n      \"name\": \"Pinsk\",\n      \"country\": \"BY\",\n      \"lat\": 52.1229,\n      \"long\": 26.0951,\n      \"zone\": \"Europe/Minsk\"\n    },\n    \"624079\": {\n      \"name\": \"Orsha\",\n      \"country\": \"BY\",\n      \"lat\": 54.5081,\n      \"long\": 30.4172,\n      \"zone\": \"Europe/Minsk\"\n    },\n    \"624400\": {\n      \"name\": \"Novoye Medvezhino\",\n      \"country\": \"BY\",\n      \"lat\": 53.88333,\n      \"long\": 27.45,\n      \"zone\": \"Europe/Minsk\"\n    },\n    \"624784\": {\n      \"name\": \"Navapolatsk\",\n      \"country\": \"BY\",\n      \"lat\": 55.5318,\n      \"long\": 28.5987,\n      \"zone\": \"Europe/Minsk\"\n    },\n    \"625144\": {\n      \"name\": \"Minsk\",\n      \"country\": \"BY\",\n      \"lat\": 53.9,\n      \"long\": 27.56667,\n      \"zone\": \"Europe/Minsk\"\n    },\n    \"625324\": {\n      \"name\": \"Mazyr\",\n      \"country\": \"BY\",\n      \"lat\": 52.0495,\n      \"long\": 29.2456,\n      \"zone\": \"Europe/Minsk\"\n    },\n    \"625625\": {\n      \"name\": \"Maladzyechna\",\n      \"country\": \"BY\",\n      \"lat\": 54.3167,\n      \"long\": 26.854,\n      \"zone\": \"Europe/Minsk\"\n    },\n    \"625665\": {\n      \"name\": \"Mahilyow\",\n      \"country\": \"BY\",\n      \"lat\": 53.9168,\n      \"long\": 30.3449,\n      \"zone\": \"Europe/Minsk\"\n    },\n    \"627904\": {\n      \"name\": \"Hrodna\",\n      \"country\": \"BY\",\n      \"lat\": 53.6884,\n      \"long\": 23.8258,\n      \"zone\": \"Europe/Minsk\"\n    },\n    \"627907\": {\n      \"name\": \"Gomel\",\n      \"country\": \"BY\",\n      \"lat\": 52.4345,\n      \"long\": 30.9754,\n      \"zone\": \"Europe/Minsk\"\n    },\n    \"629634\": {\n      \"name\": \"Brest\",\n      \"country\": \"BY\",\n      \"lat\": 52.09755,\n      \"long\": 23.68775,\n      \"zone\": \"Europe/Minsk\"\n    },\n    \"630429\": {\n      \"name\": \"Baranovichi\",\n      \"country\": \"BY\",\n      \"lat\": 53.1327,\n      \"long\": 26.0139,\n      \"zone\": \"Europe/Minsk\"\n    },\n    \"630468\": {\n      \"name\": \"Babruysk\",\n      \"country\": \"BY\",\n      \"lat\": 53.1384,\n      \"long\": 29.2214,\n      \"zone\": \"Europe/Minsk\"\n    },\n    \"632453\": {\n      \"name\": \"Vantaa\",\n      \"country\": \"FI\",\n      \"lat\": 60.29414,\n      \"long\": 25.04099,\n      \"zone\": \"Europe/Helsinki\"\n    },\n    \"633679\": {\n      \"name\": \"Turku\",\n      \"country\": \"FI\",\n      \"lat\": 60.45148,\n      \"long\": 22.26869,\n      \"zone\": \"Europe/Helsinki\"\n    },\n    \"634963\": {\n      \"name\": \"Tampere\",\n      \"country\": \"FI\",\n      \"lat\": 61.49911,\n      \"long\": 23.78712,\n      \"zone\": \"Europe/Helsinki\"\n    },\n    \"643492\": {\n      \"name\": \"Oulu\",\n      \"country\": \"FI\",\n      \"lat\": 65.01236,\n      \"long\": 25.46816,\n      \"zone\": \"Europe/Helsinki\"\n    },\n    \"658225\": {\n      \"name\": \"Helsinki\",\n      \"country\": \"FI\",\n      \"lat\": 60.16952,\n      \"long\": 24.93545,\n      \"zone\": \"Europe/Helsinki\"\n    },\n    \"660158\": {\n      \"name\": \"Espoo\",\n      \"country\": \"FI\",\n      \"lat\": 60.2052,\n      \"long\": 24.6522,\n      \"zone\": \"Europe/Helsinki\"\n    },\n    \"665004\": {\n      \"name\": \"Târgu-Mureş\",\n      \"country\": \"RO\",\n      \"lat\": 46.54245,\n      \"long\": 24.55747,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"665087\": {\n      \"name\": \"Timişoara\",\n      \"country\": \"RO\",\n      \"lat\": 45.75372,\n      \"long\": 21.22571,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"665850\": {\n      \"name\": \"Suceava\",\n      \"country\": \"RO\",\n      \"lat\": 47.63333,\n      \"long\": 26.25,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"667268\": {\n      \"name\": \"Sibiu\",\n      \"country\": \"RO\",\n      \"lat\": 45.8,\n      \"long\": 24.15,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"667873\": {\n      \"name\": \"Satu Mare\",\n      \"country\": \"RO\",\n      \"lat\": 47.8,\n      \"long\": 22.88333,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"668872\": {\n      \"name\": \"Râmnicu Vâlcea\",\n      \"country\": \"RO\",\n      \"lat\": 45.1,\n      \"long\": 24.36667,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"670474\": {\n      \"name\": \"Ploieşti\",\n      \"country\": \"RO\",\n      \"lat\": 44.95,\n      \"long\": 26.01667,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"670609\": {\n      \"name\": \"Piteşti\",\n      \"country\": \"RO\",\n      \"lat\": 44.85,\n      \"long\": 24.86667,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"670889\": {\n      \"name\": \"Piatra Neamţ\",\n      \"country\": \"RO\",\n      \"lat\": 46.91667,\n      \"long\": 26.33333,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"671768\": {\n      \"name\": \"Oradea\",\n      \"country\": \"RO\",\n      \"lat\": 47.06667,\n      \"long\": 21.93333,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"675810\": {\n      \"name\": \"Iaşi\",\n      \"country\": \"RO\",\n      \"lat\": 47.16667,\n      \"long\": 27.6,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"677697\": {\n      \"name\": \"Galaţi\",\n      \"country\": \"RO\",\n      \"lat\": 45.45,\n      \"long\": 28.05,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"678015\": {\n      \"name\": \"Focşani\",\n      \"country\": \"RO\",\n      \"lat\": 45.7,\n      \"long\": 27.18333,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"678817\": {\n      \"name\": \"Drobeta-Turnu Severin\",\n      \"country\": \"RO\",\n      \"lat\": 44.63194,\n      \"long\": 22.65611,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"680332\": {\n      \"name\": \"Craiova\",\n      \"country\": \"RO\",\n      \"lat\": 44.31667,\n      \"long\": 23.8,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"680963\": {\n      \"name\": \"Constanţa\",\n      \"country\": \"RO\",\n      \"lat\": 44.18073,\n      \"long\": 28.63432,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"681290\": {\n      \"name\": \"Cluj-Napoca\",\n      \"country\": \"RO\",\n      \"lat\": 46.76667,\n      \"long\": 23.6,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"683123\": {\n      \"name\": \"Buzău\",\n      \"country\": \"RO\",\n      \"lat\": 45.15,\n      \"long\": 26.83333,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"683506\": {\n      \"name\": \"Bucharest\",\n      \"country\": \"RO\",\n      \"lat\": 44.43225,\n      \"long\": 26.10626,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"683844\": {\n      \"name\": \"Braşov\",\n      \"country\": \"RO\",\n      \"lat\": 45.64861,\n      \"long\": 25.60613,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"683902\": {\n      \"name\": \"Brăila\",\n      \"country\": \"RO\",\n      \"lat\": 45.26667,\n      \"long\": 27.98333,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"684039\": {\n      \"name\": \"Botoşani\",\n      \"country\": \"RO\",\n      \"lat\": 47.75,\n      \"long\": 26.66667,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"685826\": {\n      \"name\": \"Baia Mare\",\n      \"country\": \"RO\",\n      \"lat\": 47.65729,\n      \"long\": 23.56808,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"685948\": {\n      \"name\": \"Bacău\",\n      \"country\": \"RO\",\n      \"lat\": 46.56667,\n      \"long\": 26.9,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"686254\": {\n      \"name\": \"Arad\",\n      \"country\": \"RO\",\n      \"lat\": 46.18333,\n      \"long\": 21.31667,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"686967\": {\n      \"name\": \"Zhytomyr\",\n      \"country\": \"UA\",\n      \"lat\": 50.26487,\n      \"long\": 28.67669,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"687700\": {\n      \"name\": \"Zaporizhzhya\",\n      \"country\": \"UA\",\n      \"lat\": 47.82289,\n      \"long\": 35.19031,\n      \"zone\": \"Europe/Zaporozhye\"\n    },\n    \"688105\": {\n      \"name\": \"Yevpatoriya\",\n      \"country\": \"UA\",\n      \"lat\": 45.20091,\n      \"long\": 33.36655,\n      \"zone\": \"Europe/Simferopol\"\n    },\n    \"688148\": {\n      \"name\": \"Yenakiyeve\",\n      \"country\": \"UA\",\n      \"lat\": 48.23331,\n      \"long\": 38.21137,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"689558\": {\n      \"name\": \"Vinnytsya\",\n      \"country\": \"UA\",\n      \"lat\": 49.23278,\n      \"long\": 28.48097,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"690548\": {\n      \"name\": \"Uzhhorod\",\n      \"country\": \"UA\",\n      \"lat\": 48.61667,\n      \"long\": 22.3,\n      \"zone\": \"Europe/Uzhgorod\"\n    },\n    \"691650\": {\n      \"name\": \"Ternopil’\",\n      \"country\": \"UA\",\n      \"lat\": 49.55589,\n      \"long\": 25.60556,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"691999\": {\n      \"name\": \"Syevyerodonets’k\",\n      \"country\": \"UA\",\n      \"lat\": 48.94832,\n      \"long\": 38.49166,\n      \"zone\": \"Europe/Zaporozhye\"\n    },\n    \"692194\": {\n      \"name\": \"Sumy\",\n      \"country\": \"UA\",\n      \"lat\": 50.9216,\n      \"long\": 34.80029,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"693468\": {\n      \"name\": \"Sloviansk\",\n      \"country\": \"UA\",\n      \"lat\": 48.86667,\n      \"long\": 37.61667,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"693805\": {\n      \"name\": \"Simferopol\",\n      \"country\": \"UA\",\n      \"lat\": 44.95719,\n      \"long\": 34.11079,\n      \"zone\": \"Europe/Simferopol\"\n    },\n    \"694423\": {\n      \"name\": \"Sevastopol\",\n      \"country\": \"UA\",\n      \"lat\": 44.58883,\n      \"long\": 33.5224,\n      \"zone\": \"Europe/Simferopol\"\n    },\n    \"695594\": {\n      \"name\": \"Rivne\",\n      \"country\": \"UA\",\n      \"lat\": 50.62308,\n      \"long\": 26.22743,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"696643\": {\n      \"name\": \"Poltava\",\n      \"country\": \"UA\",\n      \"lat\": 49.59373,\n      \"long\": 34.54073,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"697889\": {\n      \"name\": \"Pavlohrad\",\n      \"country\": \"UA\",\n      \"lat\": 48.53426,\n      \"long\": 35.87098,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"698625\": {\n      \"name\": \"Oleksandriya\",\n      \"country\": \"UA\",\n      \"lat\": 48.66961,\n      \"long\": 33.11593,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"698740\": {\n      \"name\": \"Odessa\",\n      \"country\": \"UA\",\n      \"lat\": 46.47747,\n      \"long\": 30.73262,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"700051\": {\n      \"name\": \"Nikopol’\",\n      \"country\": \"UA\",\n      \"lat\": 47.57119,\n      \"long\": 34.39637,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"700569\": {\n      \"name\": \"Mykolayiv\",\n      \"country\": \"UA\",\n      \"lat\": 46.96591,\n      \"long\": 31.9974,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"701404\": {\n      \"name\": \"Melitopol’\",\n      \"country\": \"UA\",\n      \"lat\": 46.84891,\n      \"long\": 35.36533,\n      \"zone\": \"Europe/Zaporozhye\"\n    },\n    \"701822\": {\n      \"name\": \"Mariupol\",\n      \"country\": \"UA\",\n      \"lat\": 47.09514,\n      \"long\": 37.54131,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"702320\": {\n      \"name\": \"Makiyivka\",\n      \"country\": \"UA\",\n      \"lat\": 48.04782,\n      \"long\": 37.92576,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"702550\": {\n      \"name\": \"L'viv\",\n      \"country\": \"UA\",\n      \"lat\": 49.83826,\n      \"long\": 24.02324,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"702569\": {\n      \"name\": \"Luts’k\",\n      \"country\": \"UA\",\n      \"lat\": 50.75932,\n      \"long\": 25.34244,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"702658\": {\n      \"name\": \"Luhansk\",\n      \"country\": \"UA\",\n      \"lat\": 48.56705,\n      \"long\": 39.31706,\n      \"zone\": \"Europe/Zaporozhye\"\n    },\n    \"702972\": {\n      \"name\": \"Lysychans’k\",\n      \"country\": \"UA\",\n      \"lat\": 48.90485,\n      \"long\": 38.44207,\n      \"zone\": \"Europe/Zaporozhye\"\n    },\n    \"703448\": {\n      \"name\": \"Kiev\",\n      \"country\": \"UA\",\n      \"lat\": 50.45466,\n      \"long\": 30.5238,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"703845\": {\n      \"name\": \"Kryvyi Rih\",\n      \"country\": \"UA\",\n      \"lat\": 47.90966,\n      \"long\": 33.38044,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"704147\": {\n      \"name\": \"Kremenchuk\",\n      \"country\": \"UA\",\n      \"lat\": 49.06802,\n      \"long\": 33.42041,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"704508\": {\n      \"name\": \"Kramators’k\",\n      \"country\": \"UA\",\n      \"lat\": 48.72305,\n      \"long\": 37.55629,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"705812\": {\n      \"name\": \"Kirovohrad\",\n      \"country\": \"UA\",\n      \"lat\": 48.5132,\n      \"long\": 32.2597,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"706369\": {\n      \"name\": \"Khmel’nyts’kyy\",\n      \"country\": \"UA\",\n      \"lat\": 49.42161,\n      \"long\": 26.99653,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"706448\": {\n      \"name\": \"Kherson\",\n      \"country\": \"UA\",\n      \"lat\": 46.65581,\n      \"long\": 32.6178,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"706483\": {\n      \"name\": \"Kharkiv\",\n      \"country\": \"UA\",\n      \"lat\": 49.98081,\n      \"long\": 36.25272,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"706524\": {\n      \"name\": \"Kerch\",\n      \"country\": \"UA\",\n      \"lat\": 45.3607,\n      \"long\": 36.4706,\n      \"zone\": \"Europe/Simferopol\"\n    },\n    \"707471\": {\n      \"name\": \"Ivano-Frankivs’k\",\n      \"country\": \"UA\",\n      \"lat\": 48.9215,\n      \"long\": 24.70972,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"707753\": {\n      \"name\": \"Horlivka\",\n      \"country\": \"UA\",\n      \"lat\": 48.33576,\n      \"long\": 38.05325,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"709717\": {\n      \"name\": \"Donetsk\",\n      \"country\": \"UA\",\n      \"lat\": 48.023,\n      \"long\": 37.80224,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"709930\": {\n      \"name\": \"Dnipropetrovsk\",\n      \"country\": \"UA\",\n      \"lat\": 48.45,\n      \"long\": 34.98333,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"709932\": {\n      \"name\": \"Dniprodzerzhyns’k\",\n      \"country\": \"UA\",\n      \"lat\": 48.51134,\n      \"long\": 34.6021,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"710719\": {\n      \"name\": \"Chernivtsi\",\n      \"country\": \"UA\",\n      \"lat\": 48.29149,\n      \"long\": 25.94034,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"710735\": {\n      \"name\": \"Chernihiv\",\n      \"country\": \"UA\",\n      \"lat\": 51.50551,\n      \"long\": 31.28487,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"710791\": {\n      \"name\": \"Cherkasy\",\n      \"country\": \"UA\",\n      \"lat\": 49.42854,\n      \"long\": 32.06207,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"712165\": {\n      \"name\": \"Bila Tserkva\",\n      \"country\": \"UA\",\n      \"lat\": 49.80939,\n      \"long\": 30.11209,\n      \"zone\": \"Europe/Kiev\"\n    },\n    \"712451\": {\n      \"name\": \"Berdyans’k\",\n      \"country\": \"UA\",\n      \"lat\": 46.76644,\n      \"long\": 36.79872,\n      \"zone\": \"Europe/Zaporozhye\"\n    },\n    \"713716\": {\n      \"name\": \"Alchevs’k\",\n      \"country\": \"UA\",\n      \"lat\": 48.46893,\n      \"long\": 38.81669,\n      \"zone\": \"Europe/Zaporozhye\"\n    },\n    \"715429\": {\n      \"name\": \"Szeged\",\n      \"country\": \"HU\",\n      \"lat\": 46.253,\n      \"long\": 20.14824,\n      \"zone\": \"Europe/Budapest\"\n    },\n    \"716935\": {\n      \"name\": \"Nyíregyháza\",\n      \"country\": \"HU\",\n      \"lat\": 47.95539,\n      \"long\": 21.71671,\n      \"zone\": \"Europe/Budapest\"\n    },\n    \"717582\": {\n      \"name\": \"Miskolc\",\n      \"country\": \"HU\",\n      \"lat\": 48.1,\n      \"long\": 20.78333,\n      \"zone\": \"Europe/Budapest\"\n    },\n    \"721472\": {\n      \"name\": \"Debrecen\",\n      \"country\": \"HU\",\n      \"lat\": 47.53333,\n      \"long\": 21.63333,\n      \"zone\": \"Europe/Budapest\"\n    },\n    \"724443\": {\n      \"name\": \"Košice\",\n      \"country\": \"SK\",\n      \"lat\": 48.71395,\n      \"long\": 21.25808,\n      \"zone\": \"Europe/Bratislava\"\n    },\n    \"726050\": {\n      \"name\": \"Varna\",\n      \"country\": \"BG\",\n      \"lat\": 43.21667,\n      \"long\": 27.91667,\n      \"zone\": \"Europe/Sofia\"\n    },\n    \"726848\": {\n      \"name\": \"Stara Zagora\",\n      \"country\": \"BG\",\n      \"lat\": 42.43278,\n      \"long\": 25.64194,\n      \"zone\": \"Europe/Sofia\"\n    },\n    \"727011\": {\n      \"name\": \"Sofia\",\n      \"country\": \"BG\",\n      \"lat\": 42.69751,\n      \"long\": 23.32415,\n      \"zone\": \"Europe/Sofia\"\n    },\n    \"727523\": {\n      \"name\": \"Ruse\",\n      \"country\": \"BG\",\n      \"lat\": 43.85639,\n      \"long\": 25.97083,\n      \"zone\": \"Europe/Sofia\"\n    },\n    \"728193\": {\n      \"name\": \"Plovdiv\",\n      \"country\": \"BG\",\n      \"lat\": 42.15,\n      \"long\": 24.75,\n      \"zone\": \"Europe/Sofia\"\n    },\n    \"728203\": {\n      \"name\": \"Pleven\",\n      \"country\": \"BG\",\n      \"lat\": 43.41667,\n      \"long\": 24.61667,\n      \"zone\": \"Europe/Sofia\"\n    },\n    \"732770\": {\n      \"name\": \"Burgas\",\n      \"country\": \"BG\",\n      \"lat\": 42.50606,\n      \"long\": 27.46781,\n      \"zone\": \"Europe/Sofia\"\n    },\n    \"734077\": {\n      \"name\": \"Thessaloníki\",\n      \"country\": \"GR\",\n      \"lat\": 40.64361,\n      \"long\": 22.93086,\n      \"zone\": \"Europe/Athens\"\n    },\n    \"737022\": {\n      \"name\": \"Zonguldak\",\n      \"country\": \"TR\",\n      \"lat\": 41.45139,\n      \"long\": 31.79305,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"737071\": {\n      \"name\": \"Zeytinburnu\",\n      \"country\": \"TR\",\n      \"lat\": 40.99441,\n      \"long\": 28.90417,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"738329\": {\n      \"name\": \"Üsküdar\",\n      \"country\": \"TR\",\n      \"lat\": 41.02252,\n      \"long\": 29.02369,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"738377\": {\n      \"name\": \"Umraniye\",\n      \"country\": \"TR\",\n      \"lat\": 41.01643,\n      \"long\": 29.12476,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"738618\": {\n      \"name\": \"Turhal\",\n      \"country\": \"TR\",\n      \"lat\": 40.3875,\n      \"long\": 36.08111,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"738648\": {\n      \"name\": \"Trabzon\",\n      \"country\": \"TR\",\n      \"lat\": 41.005,\n      \"long\": 39.72694,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"738743\": {\n      \"name\": \"Tokat\",\n      \"country\": \"TR\",\n      \"lat\": 40.31389,\n      \"long\": 36.55444,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"738927\": {\n      \"name\": \"Tekirdağ\",\n      \"country\": \"TR\",\n      \"lat\": 40.97801,\n      \"long\": 27.50852,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"739549\": {\n      \"name\": \"Şişli\",\n      \"country\": \"TR\",\n      \"lat\": 41.06046,\n      \"long\": 28.98717,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"740264\": {\n      \"name\": \"Samsun\",\n      \"country\": \"TR\",\n      \"lat\": 41.28667,\n      \"long\": 36.33,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"741100\": {\n      \"name\": \"Ordu\",\n      \"country\": \"TR\",\n      \"lat\": 40.98472,\n      \"long\": 37.87889,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"741385\": {\n      \"name\": \"Mustafakemalpaşa\",\n      \"country\": \"TR\",\n      \"lat\": 40.03815,\n      \"long\": 28.40866,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"741763\": {\n      \"name\": \"Maltepe\",\n      \"country\": \"TR\",\n      \"lat\": 40.93567,\n      \"long\": 29.15507,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"745028\": {\n      \"name\": \"İzmit\",\n      \"country\": \"TR\",\n      \"lat\": 40.76694,\n      \"long\": 29.91694,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"745044\": {\n      \"name\": \"İstanbul\",\n      \"country\": \"TR\",\n      \"lat\": 41.01384,\n      \"long\": 28.94966,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"745169\": {\n      \"name\": \"Inegol\",\n      \"country\": \"TR\",\n      \"lat\": 40.07806,\n      \"long\": 29.51333,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"747014\": {\n      \"name\": \"Gebze\",\n      \"country\": \"TR\",\n      \"lat\": 40.80276,\n      \"long\": 29.43068,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"747323\": {\n      \"name\": \"Esenyurt\",\n      \"country\": \"TR\",\n      \"lat\": 41.02697,\n      \"long\": 28.67732,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"747340\": {\n      \"name\": \"Esenler\",\n      \"country\": \"TR\",\n      \"lat\": 41.0435,\n      \"long\": 28.87619,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"747712\": {\n      \"name\": \"Edirne\",\n      \"country\": \"TR\",\n      \"lat\": 41.67719,\n      \"long\": 26.55597,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"748879\": {\n      \"name\": \"Çorum\",\n      \"country\": \"TR\",\n      \"lat\": 40.54889,\n      \"long\": 34.95333,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"748893\": {\n      \"name\": \"Çorlu\",\n      \"country\": \"TR\",\n      \"lat\": 41.15917,\n      \"long\": 27.8,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"750269\": {\n      \"name\": \"Bursa\",\n      \"country\": \"TR\",\n      \"lat\": 40.19266,\n      \"long\": 29.08403,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"751077\": {\n      \"name\": \"Bandırma\",\n      \"country\": \"TR\",\n      \"lat\": 40.35222,\n      \"long\": 27.97667,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"751324\": {\n      \"name\": \"Bağcılar\",\n      \"country\": \"TR\",\n      \"lat\": 41.03903,\n      \"long\": 28.85671,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"752850\": {\n      \"name\": \"Adapazarı\",\n      \"country\": \"TR\",\n      \"lat\": 40.78056,\n      \"long\": 30.40333,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"755330\": {\n      \"name\": \"Wola\",\n      \"country\": \"PL\",\n      \"lat\": 52.2401,\n      \"long\": 20.98869,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"756135\": {\n      \"name\": \"Warsaw\",\n      \"country\": \"PL\",\n      \"lat\": 52.22977,\n      \"long\": 21.01178,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"757026\": {\n      \"name\": \"Tarnów\",\n      \"country\": \"PL\",\n      \"lat\": 50.01381,\n      \"long\": 20.98698,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"757065\": {\n      \"name\": \"Targówek\",\n      \"country\": \"PL\",\n      \"lat\": 52.29185,\n      \"long\": 21.04845,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"758470\": {\n      \"name\": \"Śródmieście\",\n      \"country\": \"PL\",\n      \"lat\": 52.22904,\n      \"long\": 21.01644,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"759734\": {\n      \"name\": \"Rzeszów\",\n      \"country\": \"PL\",\n      \"lat\": 50.04132,\n      \"long\": 21.99901,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"760778\": {\n      \"name\": \"Radom\",\n      \"country\": \"PL\",\n      \"lat\": 51.40253,\n      \"long\": 21.14714,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"763166\": {\n      \"name\": \"Olsztyn\",\n      \"country\": \"PL\",\n      \"lat\": 53.77995,\n      \"long\": 20.49416,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"764484\": {\n      \"name\": \"Mokotów\",\n      \"country\": \"PL\",\n      \"lat\": 52.1934,\n      \"long\": 21.03487,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"765876\": {\n      \"name\": \"Lublin\",\n      \"country\": \"PL\",\n      \"lat\": 51.25,\n      \"long\": 22.56667,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"769250\": {\n      \"name\": \"Kielce\",\n      \"country\": \"PL\",\n      \"lat\": 50.87033,\n      \"long\": 20.62752,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"776029\": {\n      \"name\": \"Bielany\",\n      \"country\": \"PL\",\n      \"lat\": 52.29242,\n      \"long\": 20.93531,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"776069\": {\n      \"name\": \"Białystok\",\n      \"country\": \"PL\",\n      \"lat\": 53.13333,\n      \"long\": 23.16433,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"776251\": {\n      \"name\": \"Bemowo\",\n      \"country\": \"PL\",\n      \"lat\": 52.2546,\n      \"long\": 20.90844,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"783263\": {\n      \"name\": \"Elbasan\",\n      \"country\": \"AL\",\n      \"lat\": 41.1125,\n      \"long\": 20.08222,\n      \"zone\": \"Europe/Tirane\"\n    },\n    \"783920\": {\n      \"name\": \"Zemun\",\n      \"country\": \"RS\",\n      \"lat\": 44.84306,\n      \"long\": 20.40111,\n      \"zone\": \"Europe/Belgrade\"\n    },\n    \"785842\": {\n      \"name\": \"Skopje\",\n      \"country\": \"MK\",\n      \"lat\": 41.99646,\n      \"long\": 21.43141,\n      \"zone\": \"Europe/Skopje\"\n    },\n    \"786712\": {\n      \"name\": \"Prizren\",\n      \"country\": \"XK\",\n      \"lat\": 42.21389,\n      \"long\": 20.73972,\n      \"zone\": \"Europe/Belgrade\"\n    },\n    \"786714\": {\n      \"name\": \"Pristina\",\n      \"country\": \"XK\",\n      \"lat\": 42.67272,\n      \"long\": 21.16688,\n      \"zone\": \"Europe/Belgrade\"\n    },\n    \"787657\": {\n      \"name\": \"Niš\",\n      \"country\": \"RS\",\n      \"lat\": 43.32472,\n      \"long\": 21.90333,\n      \"zone\": \"Europe/Belgrade\"\n    },\n    \"789128\": {\n      \"name\": \"Kragujevac\",\n      \"country\": \"RS\",\n      \"lat\": 44.01667,\n      \"long\": 20.91667,\n      \"zone\": \"Europe/Belgrade\"\n    },\n    \"789225\": {\n      \"name\": \"Mitrovicë\",\n      \"country\": \"XK\",\n      \"lat\": 42.88333,\n      \"long\": 20.86667,\n      \"zone\": \"Europe/Belgrade\"\n    },\n    \"792078\": {\n      \"name\": \"Čačak\",\n      \"country\": \"RS\",\n      \"lat\": 43.89139,\n      \"long\": 20.34972,\n      \"zone\": \"Europe/Belgrade\"\n    },\n    \"792680\": {\n      \"name\": \"Belgrade\",\n      \"country\": \"RS\",\n      \"lat\": 44.80401,\n      \"long\": 20.46513,\n      \"zone\": \"Europe/Belgrade\"\n    },\n    \"877401\": {\n      \"name\": \"Songea\",\n      \"country\": \"TZ\",\n      \"lat\": -10.68333,\n      \"long\": 35.65,\n      \"zone\": \"Africa/Dar_es_Salaam\"\n    },\n    \"884979\": {\n      \"name\": \"Mutare\",\n      \"country\": \"ZW\",\n      \"lat\": -18.9707,\n      \"long\": 32.67086,\n      \"zone\": \"Africa/Harare\"\n    },\n    \"890299\": {\n      \"name\": \"Harare\",\n      \"country\": \"ZW\",\n      \"lat\": -17.82772,\n      \"long\": 31.05337,\n      \"zone\": \"Africa/Harare\"\n    },\n    \"890422\": {\n      \"name\": \"Gweru\",\n      \"country\": \"ZW\",\n      \"lat\": -19.45,\n      \"long\": 29.81667,\n      \"zone\": \"Africa/Harare\"\n    },\n    \"894701\": {\n      \"name\": \"Bulawayo\",\n      \"country\": \"ZW\",\n      \"lat\": -20.15,\n      \"long\": 28.58333,\n      \"zone\": \"Africa/Harare\"\n    },\n    \"901344\": {\n      \"name\": \"Ndola\",\n      \"country\": \"ZM\",\n      \"lat\": -12.95867,\n      \"long\": 28.63659,\n      \"zone\": \"Africa/Lusaka\"\n    },\n    \"905395\": {\n      \"name\": \"Mufulira\",\n      \"country\": \"ZM\",\n      \"lat\": -12.54982,\n      \"long\": 28.24071,\n      \"zone\": \"Africa/Lusaka\"\n    },\n    \"909137\": {\n      \"name\": \"Lusaka\",\n      \"country\": \"ZM\",\n      \"lat\": -15.40669,\n      \"long\": 28.28713,\n      \"zone\": \"Africa/Lusaka\"\n    },\n    \"909863\": {\n      \"name\": \"Luanshya\",\n      \"country\": \"ZM\",\n      \"lat\": -13.13667,\n      \"long\": 28.41661,\n      \"zone\": \"Africa/Lusaka\"\n    },\n    \"910111\": {\n      \"name\": \"Livingstone\",\n      \"country\": \"ZM\",\n      \"lat\": -17.84194,\n      \"long\": 25.85425,\n      \"zone\": \"Africa/Lusaka\"\n    },\n    \"911148\": {\n      \"name\": \"Kitwe\",\n      \"country\": \"ZM\",\n      \"lat\": -12.80243,\n      \"long\": 28.21323,\n      \"zone\": \"Africa/Lusaka\"\n    },\n    \"916095\": {\n      \"name\": \"Kabwe\",\n      \"country\": \"ZM\",\n      \"lat\": -14.4469,\n      \"long\": 28.44644,\n      \"zone\": \"Africa/Lusaka\"\n    },\n    \"919009\": {\n      \"name\": \"Chingola\",\n      \"country\": \"ZM\",\n      \"lat\": -12.52897,\n      \"long\": 27.88382,\n      \"zone\": \"Africa/Lusaka\"\n    },\n    \"922704\": {\n      \"name\": \"Lubumbashi\",\n      \"country\": \"CD\",\n      \"lat\": -11.66089,\n      \"long\": 27.47938,\n      \"zone\": \"Africa/Lubumbashi\"\n    },\n    \"922741\": {\n      \"name\": \"Likasi\",\n      \"country\": \"CD\",\n      \"lat\": -10.98303,\n      \"long\": 26.7384,\n      \"zone\": \"Africa/Lubumbashi\"\n    },\n    \"922773\": {\n      \"name\": \"Kolwezi\",\n      \"country\": \"CD\",\n      \"lat\": -10.71484,\n      \"long\": 25.46674,\n      \"zone\": \"Africa/Lubumbashi\"\n    },\n    \"925475\": {\n      \"name\": \"Mzuzu\",\n      \"country\": \"MW\",\n      \"lat\": -11.46556,\n      \"long\": 34.02071,\n      \"zone\": \"Africa/Blantyre\"\n    },\n    \"927967\": {\n      \"name\": \"Lilongwe\",\n      \"country\": \"MW\",\n      \"lat\": -13.96692,\n      \"long\": 33.78725,\n      \"zone\": \"Africa/Blantyre\"\n    },\n    \"931755\": {\n      \"name\": \"Blantyre\",\n      \"country\": \"MW\",\n      \"lat\": -15.78499,\n      \"long\": 35.00854,\n      \"zone\": \"Africa/Blantyre\"\n    },\n    \"932505\": {\n      \"name\": \"Maseru\",\n      \"country\": \"LS\",\n      \"lat\": -29.31667,\n      \"long\": 27.48333,\n      \"zone\": \"Africa/Maseru\"\n    },\n    \"933773\": {\n      \"name\": \"Gaborone\",\n      \"country\": \"BW\",\n      \"lat\": -24.65451,\n      \"long\": 25.90859,\n      \"zone\": \"Africa/Gaborone\"\n    },\n    \"933945\": {\n      \"name\": \"Vacoas\",\n      \"country\": \"MU\",\n      \"lat\": -20.29806,\n      \"long\": 57.47833,\n      \"zone\": \"Indian/Mauritius\"\n    },\n    \"934154\": {\n      \"name\": \"Port Louis\",\n      \"country\": \"MU\",\n      \"lat\": -20.16194,\n      \"long\": 57.49889,\n      \"zone\": \"Indian/Mauritius\"\n    },\n    \"934995\": {\n      \"name\": \"Manzini\",\n      \"country\": \"SZ\",\n      \"lat\": -26.49884,\n      \"long\": 31.38004,\n      \"zone\": \"Africa/Mbabane\"\n    },\n    \"935264\": {\n      \"name\": \"Saint-Denis\",\n      \"country\": \"RE\",\n      \"lat\": -20.88231,\n      \"long\": 55.4504,\n      \"zone\": \"Indian/Reunion\"\n    },\n    \"936374\": {\n      \"name\": \"Roodepoort\",\n      \"country\": \"ZA\",\n      \"lat\": -26.1625,\n      \"long\": 27.8725,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"939270\": {\n      \"name\": \"Witbank\",\n      \"country\": \"ZA\",\n      \"lat\": -25.87133,\n      \"long\": 29.23323,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"940316\": {\n      \"name\": \"Westonaria\",\n      \"country\": \"ZA\",\n      \"lat\": -26.31905,\n      \"long\": 27.6486,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"940909\": {\n      \"name\": \"Welkom\",\n      \"country\": \"ZA\",\n      \"lat\": -27.97742,\n      \"long\": 26.73506,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"942470\": {\n      \"name\": \"Vryheid\",\n      \"country\": \"ZA\",\n      \"lat\": -27.76952,\n      \"long\": 30.79165,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"943882\": {\n      \"name\": \"Virginia\",\n      \"country\": \"ZA\",\n      \"lat\": -28.10391,\n      \"long\": 26.86593,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"944385\": {\n      \"name\": \"Vereeniging\",\n      \"country\": \"ZA\",\n      \"lat\": -26.67313,\n      \"long\": 27.92615,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"944986\": {\n      \"name\": \"Vanderbijlpark\",\n      \"country\": \"ZA\",\n      \"lat\": -26.71171,\n      \"long\": 27.83795,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"946877\": {\n      \"name\": \"Uitenhage\",\n      \"country\": \"ZA\",\n      \"lat\": -33.75757,\n      \"long\": 25.3971,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"949880\": {\n      \"name\": \"Tembisa\",\n      \"country\": \"ZA\",\n      \"lat\": -25.99636,\n      \"long\": 28.2268,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"952865\": {\n      \"name\": \"Springs\",\n      \"country\": \"ZA\",\n      \"lat\": -26.25,\n      \"long\": 28.4,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"953781\": {\n      \"name\": \"Soweto\",\n      \"country\": \"ZA\",\n      \"lat\": -26.26781,\n      \"long\": 27.85849,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"958724\": {\n      \"name\": \"Rustenburg\",\n      \"country\": \"ZA\",\n      \"lat\": -25.66756,\n      \"long\": 27.24208,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"962367\": {\n      \"name\": \"Richards Bay\",\n      \"country\": \"ZA\",\n      \"lat\": -28.78301,\n      \"long\": 32.03768,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"963230\": {\n      \"name\": \"Randfontein\",\n      \"country\": \"ZA\",\n      \"lat\": -26.1844,\n      \"long\": 27.70203,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"963516\": {\n      \"name\": \"Queenstown\",\n      \"country\": \"ZA\",\n      \"lat\": -31.89756,\n      \"long\": 26.87533,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"964137\": {\n      \"name\": \"Pretoria\",\n      \"country\": \"ZA\",\n      \"lat\": -25.74486,\n      \"long\": 28.18783,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"964315\": {\n      \"name\": \"Mokopane\",\n      \"country\": \"ZA\",\n      \"lat\": -24.19436,\n      \"long\": 29.00974,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"964349\": {\n      \"name\": \"Potchefstroom\",\n      \"country\": \"ZA\",\n      \"lat\": -26.71667,\n      \"long\": 27.1,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"964420\": {\n      \"name\": \"Port Elizabeth\",\n      \"country\": \"ZA\",\n      \"lat\": -33.91799,\n      \"long\": 25.57007,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"965289\": {\n      \"name\": \"Polokwane\",\n      \"country\": \"ZA\",\n      \"lat\": -23.90449,\n      \"long\": 29.46885,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"965301\": {\n      \"name\": \"Pietermaritzburg\",\n      \"country\": \"ZA\",\n      \"lat\": -29.61679,\n      \"long\": 30.39278,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"965528\": {\n      \"name\": \"Phalaborwa\",\n      \"country\": \"ZA\",\n      \"lat\": -23.94299,\n      \"long\": 31.14107,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"967476\": {\n      \"name\": \"Orkney\",\n      \"country\": \"ZA\",\n      \"lat\": -26.98023,\n      \"long\": 26.67272,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"970566\": {\n      \"name\": \"Nigel\",\n      \"country\": \"ZA\",\n      \"lat\": -26.43138,\n      \"long\": 28.47713,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"971421\": {\n      \"name\": \"Newcastle\",\n      \"country\": \"ZA\",\n      \"lat\": -27.75796,\n      \"long\": 29.9318,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"971534\": {\n      \"name\": \"Nelspruit\",\n      \"country\": \"ZA\",\n      \"lat\": -25.47448,\n      \"long\": 30.97033,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"973111\": {\n      \"name\": \"Mpumalanga\",\n      \"country\": \"ZA\",\n      \"lat\": -29.81292,\n      \"long\": 30.63646,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"973709\": {\n      \"name\": \"Mossel Bay\",\n      \"country\": \"ZA\",\n      \"lat\": -34.18307,\n      \"long\": 22.14605,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"976361\": {\n      \"name\": \"Middelburg\",\n      \"country\": \"ZA\",\n      \"lat\": -25.77507,\n      \"long\": 29.46482,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"986822\": {\n      \"name\": \"Krugersdorp\",\n      \"country\": \"ZA\",\n      \"lat\": -26.08577,\n      \"long\": 27.77515,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"986846\": {\n      \"name\": \"Kroonstad\",\n      \"country\": \"ZA\",\n      \"lat\": -27.65036,\n      \"long\": 27.23488,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"989921\": {\n      \"name\": \"Klerksdorp\",\n      \"country\": \"ZA\",\n      \"lat\": -26.85213,\n      \"long\": 26.66672,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"990930\": {\n      \"name\": \"Kimberley\",\n      \"country\": \"ZA\",\n      \"lat\": -28.73226,\n      \"long\": 24.76232,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"993800\": {\n      \"name\": \"Johannesburg\",\n      \"country\": \"ZA\",\n      \"lat\": -26.20227,\n      \"long\": 28.04363,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"1002145\": {\n      \"name\": \"George\",\n      \"country\": \"ZA\",\n      \"lat\": -33.963,\n      \"long\": 22.46173,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"1005646\": {\n      \"name\": \"eMbalenhle\",\n      \"country\": \"ZA\",\n      \"lat\": -26.53333,\n      \"long\": 29.06667,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"1006984\": {\n      \"name\": \"East London\",\n      \"country\": \"ZA\",\n      \"lat\": -33.01529,\n      \"long\": 27.91162,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"1007311\": {\n      \"name\": \"Durban\",\n      \"country\": \"ZA\",\n      \"lat\": -29.8579,\n      \"long\": 31.0292,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"1014073\": {\n      \"name\": \"Carletonville\",\n      \"country\": \"ZA\",\n      \"lat\": -26.36094,\n      \"long\": 27.39767,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"1015621\": {\n      \"name\": \"Brits\",\n      \"country\": \"ZA\",\n      \"lat\": -25.63473,\n      \"long\": 27.78022,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"1016181\": {\n      \"name\": \"Brakpan\",\n      \"country\": \"ZA\",\n      \"lat\": -26.23656,\n      \"long\": 28.36938,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"1016670\": {\n      \"name\": \"Botshabelo\",\n      \"country\": \"ZA\",\n      \"lat\": -29.27016,\n      \"long\": 26.7052,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"1017780\": {\n      \"name\": \"Boksburg\",\n      \"country\": \"ZA\",\n      \"lat\": -26.21197,\n      \"long\": 28.25958,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"1018725\": {\n      \"name\": \"Bloemfontein\",\n      \"country\": \"ZA\",\n      \"lat\": -29.12107,\n      \"long\": 26.214,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"1019330\": {\n      \"name\": \"Bhisho\",\n      \"country\": \"ZA\",\n      \"lat\": -32.84721,\n      \"long\": 27.44218,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"1019760\": {\n      \"name\": \"Bethal\",\n      \"country\": \"ZA\",\n      \"lat\": -26.45794,\n      \"long\": 29.46553,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"1020098\": {\n      \"name\": \"Benoni\",\n      \"country\": \"ZA\",\n      \"lat\": -26.18848,\n      \"long\": 28.32078,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"1024552\": {\n      \"name\": \"Xai-Xai\",\n      \"country\": \"MZ\",\n      \"lat\": -25.05194,\n      \"long\": 33.64417,\n      \"zone\": \"Africa/Maputo\"\n    },\n    \"1026014\": {\n      \"name\": \"Tete\",\n      \"country\": \"MZ\",\n      \"lat\": -16.15639,\n      \"long\": 33.58667,\n      \"zone\": \"Africa/Maputo\"\n    },\n    \"1028079\": {\n      \"name\": \"Ressano Garcia\",\n      \"country\": \"MZ\",\n      \"lat\": -25.44278,\n      \"long\": 31.99528,\n      \"zone\": \"Africa/Maputo\"\n    },\n    \"1028434\": {\n      \"name\": \"Quelimane\",\n      \"country\": \"MZ\",\n      \"lat\": -17.87861,\n      \"long\": 36.88833,\n      \"zone\": \"Africa/Maputo\"\n    },\n    \"1028918\": {\n      \"name\": \"Pemba\",\n      \"country\": \"MZ\",\n      \"lat\": -12.97395,\n      \"long\": 40.51775,\n      \"zone\": \"Africa/Maputo\"\n    },\n    \"1033356\": {\n      \"name\": \"Nampula\",\n      \"country\": \"MZ\",\n      \"lat\": -15.11646,\n      \"long\": 39.2666,\n      \"zone\": \"Africa/Maputo\"\n    },\n    \"1035025\": {\n      \"name\": \"Nacala\",\n      \"country\": \"MZ\",\n      \"lat\": -14.56257,\n      \"long\": 40.68538,\n      \"zone\": \"Africa/Maputo\"\n    },\n    \"1039536\": {\n      \"name\": \"Maxixe\",\n      \"country\": \"MZ\",\n      \"lat\": -23.85972,\n      \"long\": 35.34722,\n      \"zone\": \"Africa/Maputo\"\n    },\n    \"1039854\": {\n      \"name\": \"Matola\",\n      \"country\": \"MZ\",\n      \"lat\": -25.96222,\n      \"long\": 32.45889,\n      \"zone\": \"Africa/Maputo\"\n    },\n    \"1040652\": {\n      \"name\": \"Maputo\",\n      \"country\": \"MZ\",\n      \"lat\": -25.96553,\n      \"long\": 32.58322,\n      \"zone\": \"Africa/Maputo\"\n    },\n    \"1043893\": {\n      \"name\": \"Lichinga\",\n      \"country\": \"MZ\",\n      \"lat\": -13.31278,\n      \"long\": 35.24056,\n      \"zone\": \"Africa/Maputo\"\n    },\n    \"1049261\": {\n      \"name\": \"Chimoio\",\n      \"country\": \"MZ\",\n      \"lat\": -19.11639,\n      \"long\": 33.48333,\n      \"zone\": \"Africa/Maputo\"\n    },\n    \"1052373\": {\n      \"name\": \"Beira\",\n      \"country\": \"MZ\",\n      \"lat\": -19.84361,\n      \"long\": 34.83889,\n      \"zone\": \"Africa/Maputo\"\n    },\n    \"1053384\": {\n      \"name\": \"Toamasina\",\n      \"country\": \"MG\",\n      \"lat\": -18.1492,\n      \"long\": 49.40234,\n      \"zone\": \"Indian/Antananarivo\"\n    },\n    \"1055429\": {\n      \"name\": \"Toliara\",\n      \"country\": \"MG\",\n      \"lat\": -23.35,\n      \"long\": 43.66667,\n      \"zone\": \"Indian/Antananarivo\"\n    },\n    \"1062663\": {\n      \"name\": \"Mahajanga\",\n      \"country\": \"MG\",\n      \"lat\": -15.71667,\n      \"long\": 46.31667,\n      \"zone\": \"Indian/Antananarivo\"\n    },\n    \"1064890\": {\n      \"name\": \"Fianarantsoa\",\n      \"country\": \"MG\",\n      \"lat\": -21.45267,\n      \"long\": 47.08569,\n      \"zone\": \"Indian/Antananarivo\"\n    },\n    \"1069166\": {\n      \"name\": \"Antsirabe\",\n      \"country\": \"MG\",\n      \"lat\": -19.86586,\n      \"long\": 47.03333,\n      \"zone\": \"Indian/Antananarivo\"\n    },\n    \"1070940\": {\n      \"name\": \"Antananarivo\",\n      \"country\": \"MG\",\n      \"lat\": -18.91368,\n      \"long\": 47.53613,\n      \"zone\": \"Indian/Antananarivo\"\n    },\n    \"1085510\": {\n      \"name\": \"Epworth\",\n      \"country\": \"ZW\",\n      \"lat\": -17.89,\n      \"long\": 31.1475,\n      \"zone\": \"Africa/Harare\"\n    },\n    \"1105776\": {\n      \"name\": \"Midrand\",\n      \"country\": \"ZA\",\n      \"lat\": -25.98953,\n      \"long\": 28.12843,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"1105777\": {\n      \"name\": \"Centurion\",\n      \"country\": \"ZA\",\n      \"lat\": -25.85891,\n      \"long\": 28.18577,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"1106542\": {\n      \"name\": \"Chitungwiza\",\n      \"country\": \"ZW\",\n      \"lat\": -18.01274,\n      \"long\": 31.07555,\n      \"zone\": \"Africa/Harare\"\n    },\n    \"1113217\": {\n      \"name\": \"Zābol\",\n      \"country\": \"IR\",\n      \"lat\": 31.0306,\n      \"long\": 61.4949,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"1133616\": {\n      \"name\": \"Mazār-e Sharīf\",\n      \"country\": \"AF\",\n      \"lat\": 36.70904,\n      \"long\": 67.11087,\n      \"zone\": \"Asia/Kabul\"\n    },\n    \"1135689\": {\n      \"name\": \"Kunduz\",\n      \"country\": \"AF\",\n      \"lat\": 36.72895,\n      \"long\": 68.857,\n      \"zone\": \"Asia/Kabul\"\n    },\n    \"1138336\": {\n      \"name\": \"Kandahār\",\n      \"country\": \"AF\",\n      \"lat\": 31.61332,\n      \"long\": 65.71013,\n      \"zone\": \"Asia/Kabul\"\n    },\n    \"1138958\": {\n      \"name\": \"Kabul\",\n      \"country\": \"AF\",\n      \"lat\": 34.52813,\n      \"long\": 69.17233,\n      \"zone\": \"Asia/Kabul\"\n    },\n    \"1139715\": {\n      \"name\": \"Jalālābād\",\n      \"country\": \"AF\",\n      \"lat\": 34.42647,\n      \"long\": 70.45153,\n      \"zone\": \"Asia/Kabul\"\n    },\n    \"1140026\": {\n      \"name\": \"Herāt\",\n      \"country\": \"AF\",\n      \"lat\": 34.34817,\n      \"long\": 62.19967,\n      \"zone\": \"Asia/Kabul\"\n    },\n    \"1141269\": {\n      \"name\": \"Ghazni\",\n      \"country\": \"AF\",\n      \"lat\": 33.55391,\n      \"long\": 68.42096,\n      \"zone\": \"Asia/Kabul\"\n    },\n    \"1141857\": {\n      \"name\": \"Gardēz\",\n      \"country\": \"AF\",\n      \"lat\": 33.59744,\n      \"long\": 69.22592,\n      \"zone\": \"Asia/Kabul\"\n    },\n    \"1147290\": {\n      \"name\": \"Balkh\",\n      \"country\": \"AF\",\n      \"lat\": 36.75635,\n      \"long\": 66.8972,\n      \"zone\": \"Asia/Kabul\"\n    },\n    \"1147540\": {\n      \"name\": \"Baghlān\",\n      \"country\": \"AF\",\n      \"lat\": 36.13068,\n      \"long\": 68.70829,\n      \"zone\": \"Asia/Kabul\"\n    },\n    \"1150515\": {\n      \"name\": \"Surat Thani\",\n      \"country\": \"TH\",\n      \"lat\": 9.14011,\n      \"long\": 99.33311,\n      \"zone\": \"Asia/Bangkok\"\n    },\n    \"1151933\": {\n      \"name\": \"Nakhon Si Thammarat\",\n      \"country\": \"TH\",\n      \"lat\": 8.43333,\n      \"long\": 99.96667,\n      \"zone\": \"Asia/Bangkok\"\n    },\n    \"1152473\": {\n      \"name\": \"Lampang\",\n      \"country\": \"TH\",\n      \"lat\": 18.29232,\n      \"long\": 99.49277,\n      \"zone\": \"Asia/Bangkok\"\n    },\n    \"1153671\": {\n      \"name\": \"Chiang Mai\",\n      \"country\": \"TH\",\n      \"lat\": 18.79038,\n      \"long\": 98.98468,\n      \"zone\": \"Asia/Bangkok\"\n    },\n    \"1159301\": {\n      \"name\": \"Zahedan\",\n      \"country\": \"IR\",\n      \"lat\": 29.4963,\n      \"long\": 60.8629,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"1160939\": {\n      \"name\": \"Īrānshahr\",\n      \"country\": \"IR\",\n      \"lat\": 27.20245,\n      \"long\": 60.68476,\n      \"zone\": \"Asia/Tehran\"\n    },\n    \"1162004\": {\n      \"name\": \"Khairpur\",\n      \"country\": \"PK\",\n      \"lat\": 27.52948,\n      \"long\": 68.7617,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1162456\": {\n      \"name\": \"Wazīrābād\",\n      \"country\": \"PK\",\n      \"lat\": 32.44583,\n      \"long\": 74.11594,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1162813\": {\n      \"name\": \"Vihāri\",\n      \"country\": \"PK\",\n      \"lat\": 30.03333,\n      \"long\": 72.35,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1163965\": {\n      \"name\": \"Tando Allāhyār\",\n      \"country\": \"PK\",\n      \"lat\": 25.46263,\n      \"long\": 68.71923,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1163967\": {\n      \"name\": \"Tando Ādam\",\n      \"country\": \"PK\",\n      \"lat\": 25.76374,\n      \"long\": 68.66098,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1164408\": {\n      \"name\": \"Sukkur\",\n      \"country\": \"PK\",\n      \"lat\": 27.70516,\n      \"long\": 68.85738,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1164909\": {\n      \"name\": \"Sialkot\",\n      \"country\": \"PK\",\n      \"lat\": 32.49268,\n      \"long\": 74.53134,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1165108\": {\n      \"name\": \"Shikārpur\",\n      \"country\": \"PK\",\n      \"lat\": 27.95706,\n      \"long\": 68.63789,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1165221\": {\n      \"name\": \"Sheikhupura\",\n      \"country\": \"PK\",\n      \"lat\": 31.71306,\n      \"long\": 73.97833,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1165569\": {\n      \"name\": \"Shahkot\",\n      \"country\": \"PK\",\n      \"lat\": 31.5709,\n      \"long\": 73.48531,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1166000\": {\n      \"name\": \"Sargodha\",\n      \"country\": \"PK\",\n      \"lat\": 32.08361,\n      \"long\": 72.67111,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1166548\": {\n      \"name\": \"Sahiwal\",\n      \"country\": \"PK\",\n      \"lat\": 30.66667,\n      \"long\": 73.1,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1166652\": {\n      \"name\": \"Sādiqābād\",\n      \"country\": \"PK\",\n      \"lat\": 28.30623,\n      \"long\": 70.13065,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1166993\": {\n      \"name\": \"Rawalpindi\",\n      \"country\": \"PK\",\n      \"lat\": 33.6007,\n      \"long\": 73.0679,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1167528\": {\n      \"name\": \"Quetta\",\n      \"country\": \"PK\",\n      \"lat\": 30.199,\n      \"long\": 67.00971,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1168197\": {\n      \"name\": \"Peshawar\",\n      \"country\": \"PK\",\n      \"lat\": 34.008,\n      \"long\": 71.57849,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1168555\": {\n      \"name\": \"Pākpattan\",\n      \"country\": \"PK\",\n      \"lat\": 30.34104,\n      \"long\": 73.38664,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1168718\": {\n      \"name\": \"Okāra\",\n      \"country\": \"PK\",\n      \"lat\": 30.80806,\n      \"long\": 73.44583,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1169116\": {\n      \"name\": \"Nawābshāh\",\n      \"country\": \"PK\",\n      \"lat\": 26.24833,\n      \"long\": 68.40955,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1169605\": {\n      \"name\": \"Muzaffargarh\",\n      \"country\": \"PK\",\n      \"lat\": 30.07537,\n      \"long\": 71.19213,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1169607\": {\n      \"name\": \"Muzaffarābād\",\n      \"country\": \"PK\",\n      \"lat\": 34.37002,\n      \"long\": 73.47082,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1169692\": {\n      \"name\": \"Murīdke\",\n      \"country\": \"PK\",\n      \"lat\": 31.8025,\n      \"long\": 74.26167,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1169825\": {\n      \"name\": \"Multān\",\n      \"country\": \"PK\",\n      \"lat\": 30.19556,\n      \"long\": 71.47528,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1170295\": {\n      \"name\": \"Mirpur Khas\",\n      \"country\": \"PK\",\n      \"lat\": 25.5251,\n      \"long\": 69.0159,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1170395\": {\n      \"name\": \"Mingora\",\n      \"country\": \"PK\",\n      \"lat\": 34.7795,\n      \"long\": 72.36265,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1170880\": {\n      \"name\": \"Mardan\",\n      \"country\": \"PK\",\n      \"lat\": 34.20195,\n      \"long\": 72.05254,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1171123\": {\n      \"name\": \"Mandi Bahāuddīn\",\n      \"country\": \"PK\",\n      \"lat\": 32.58339,\n      \"long\": 73.48431,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1171305\": {\n      \"name\": \"Malir Cantonment\",\n      \"country\": \"PK\",\n      \"lat\": 24.9424,\n      \"long\": 67.2066,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1172128\": {\n      \"name\": \"Lārkāna\",\n      \"country\": \"PK\",\n      \"lat\": 27.55508,\n      \"long\": 68.21414,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1172451\": {\n      \"name\": \"Lahore\",\n      \"country\": \"PK\",\n      \"lat\": 31.54972,\n      \"long\": 74.34361,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1173055\": {\n      \"name\": \"Kotli\",\n      \"country\": \"PK\",\n      \"lat\": 33.51667,\n      \"long\": 73.91667,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1173378\": {\n      \"name\": \"Kot Addu\",\n      \"country\": \"PK\",\n      \"lat\": 30.4692,\n      \"long\": 70.96714,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1173491\": {\n      \"name\": \"Kohāt\",\n      \"country\": \"PK\",\n      \"lat\": 33.58196,\n      \"long\": 71.44929,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1173687\": {\n      \"name\": \"Khushāb\",\n      \"country\": \"PK\",\n      \"lat\": 32.29667,\n      \"long\": 72.3525,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1174167\": {\n      \"name\": \"Khānpur\",\n      \"country\": \"PK\",\n      \"lat\": 28.64534,\n      \"long\": 70.6567,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1174625\": {\n      \"name\": \"Kasūr\",\n      \"country\": \"PK\",\n      \"lat\": 31.11556,\n      \"long\": 74.44667,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1174872\": {\n      \"name\": \"Karachi\",\n      \"country\": \"PK\",\n      \"lat\": 24.9056,\n      \"long\": 67.0822,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1175088\": {\n      \"name\": \"Kamoke\",\n      \"country\": \"PK\",\n      \"lat\": 31.97444,\n      \"long\": 74.22444,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1175156\": {\n      \"name\": \"Kamālia\",\n      \"country\": \"PK\",\n      \"lat\": 30.73333,\n      \"long\": 72.65,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1175864\": {\n      \"name\": \"Jhelum\",\n      \"country\": \"PK\",\n      \"lat\": 32.93313,\n      \"long\": 73.72637,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1175892\": {\n      \"name\": \"Jhang Sadr\",\n      \"country\": \"PK\",\n      \"lat\": 31.27154,\n      \"long\": 72.32842,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1176106\": {\n      \"name\": \"Jarānwāla\",\n      \"country\": \"PK\",\n      \"lat\": 31.33333,\n      \"long\": 73.43333,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1176515\": {\n      \"name\": \"Jacobābād\",\n      \"country\": \"PK\",\n      \"lat\": 28.281,\n      \"long\": 68.43876,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1176615\": {\n      \"name\": \"Islamabad\",\n      \"country\": \"PK\",\n      \"lat\": 33.72148,\n      \"long\": 73.04329,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1176734\": {\n      \"name\": \"Hyderabad\",\n      \"country\": \"PK\",\n      \"lat\": 25.39242,\n      \"long\": 68.37366,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1177384\": {\n      \"name\": \"Hāfizābād\",\n      \"country\": \"PK\",\n      \"lat\": 32.06786,\n      \"long\": 73.68545,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1177654\": {\n      \"name\": \"Gujrāt\",\n      \"country\": \"PK\",\n      \"lat\": 32.57284,\n      \"long\": 74.07897,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1177662\": {\n      \"name\": \"Gujrānwāla\",\n      \"country\": \"PK\",\n      \"lat\": 32.16167,\n      \"long\": 74.18831,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1178231\": {\n      \"name\": \"Gojra\",\n      \"country\": \"PK\",\n      \"lat\": 31.14874,\n      \"long\": 72.68656,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1179400\": {\n      \"name\": \"Faisalābād\",\n      \"country\": \"PK\",\n      \"lat\": 31.41667,\n      \"long\": 73.08333,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1180281\": {\n      \"name\": \"Dera Ismāīl Khān\",\n      \"country\": \"PK\",\n      \"lat\": 31.83269,\n      \"long\": 70.9024,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1180289\": {\n      \"name\": \"Dera Ghazi Khan\",\n      \"country\": \"PK\",\n      \"lat\": 30.05614,\n      \"long\": 70.63477,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1180436\": {\n      \"name\": \"Daska\",\n      \"country\": \"PK\",\n      \"lat\": 32.32426,\n      \"long\": 74.34974,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1180809\": {\n      \"name\": \"Dadu\",\n      \"country\": \"PK\",\n      \"lat\": 26.73287,\n      \"long\": 67.77631,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1181073\": {\n      \"name\": \"Chishtiān Mandi\",\n      \"country\": \"PK\",\n      \"lat\": 29.8,\n      \"long\": 72.86667,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1181096\": {\n      \"name\": \"Chiniot\",\n      \"country\": \"PK\",\n      \"lat\": 31.72,\n      \"long\": 72.97889,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1181636\": {\n      \"name\": \"Chakwāl\",\n      \"country\": \"PK\",\n      \"lat\": 32.93338,\n      \"long\": 72.85853,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1182092\": {\n      \"name\": \"Būrewāla\",\n      \"country\": \"PK\",\n      \"lat\": 30.16667,\n      \"long\": 72.65,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1182637\": {\n      \"name\": \"Bhimbar\",\n      \"country\": \"PK\",\n      \"lat\": 32.97568,\n      \"long\": 74.07926,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1183880\": {\n      \"name\": \"Bahāwalpur\",\n      \"country\": \"PK\",\n      \"lat\": 29.4,\n      \"long\": 71.68333,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1183883\": {\n      \"name\": \"Bahāwalnagar\",\n      \"country\": \"PK\",\n      \"lat\": 29.99866,\n      \"long\": 73.2536,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1184845\": {\n      \"name\": \"Ahmadpur East\",\n      \"country\": \"PK\",\n      \"lat\": 29.14309,\n      \"long\": 71.25976,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1185056\": {\n      \"name\": \"Abbottābād\",\n      \"country\": \"PK\",\n      \"lat\": 34.14685,\n      \"long\": 73.21449,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1185098\": {\n      \"name\": \"Tungi\",\n      \"country\": \"BD\",\n      \"lat\": 23.89154,\n      \"long\": 90.40232,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1185099\": {\n      \"name\": \"Sylhet\",\n      \"country\": \"BD\",\n      \"lat\": 24.89904,\n      \"long\": 91.87198,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1185106\": {\n      \"name\": \"Jamālpur\",\n      \"country\": \"BD\",\n      \"lat\": 24.91965,\n      \"long\": 89.94812,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1185111\": {\n      \"name\": \"Sātkhira\",\n      \"country\": \"BD\",\n      \"lat\": 22.70817,\n      \"long\": 89.07185,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1185115\": {\n      \"name\": \"Sirājganj\",\n      \"country\": \"BD\",\n      \"lat\": 24.45771,\n      \"long\": 89.70802,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1185117\": {\n      \"name\": \"Narsingdi\",\n      \"country\": \"BD\",\n      \"lat\": 23.92298,\n      \"long\": 90.71768,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1185121\": {\n      \"name\": \"Shāhzādpur\",\n      \"country\": \"BD\",\n      \"lat\": 24.17687,\n      \"long\": 89.5988,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1185128\": {\n      \"name\": \"Rājshāhi\",\n      \"country\": \"BD\",\n      \"lat\": 24.374,\n      \"long\": 88.60114,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1185155\": {\n      \"name\": \"Nārāyanganj\",\n      \"country\": \"BD\",\n      \"lat\": 23.61352,\n      \"long\": 90.50298,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1185159\": {\n      \"name\": \"Nāgarpur\",\n      \"country\": \"BD\",\n      \"lat\": 24.05783,\n      \"long\": 89.87696,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1185162\": {\n      \"name\": \"Mymensingh\",\n      \"country\": \"BD\",\n      \"lat\": 24.75636,\n      \"long\": 90.40646,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1185186\": {\n      \"name\": \"Comilla\",\n      \"country\": \"BD\",\n      \"lat\": 23.46186,\n      \"long\": 91.18503,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1185188\": {\n      \"name\": \"Rangpur\",\n      \"country\": \"BD\",\n      \"lat\": 25.74664,\n      \"long\": 89.25166,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1185191\": {\n      \"name\": \"Kushtia\",\n      \"country\": \"BD\",\n      \"lat\": 23.9028,\n      \"long\": 89.11943,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1185241\": {\n      \"name\": \"Dhaka\",\n      \"country\": \"BD\",\n      \"lat\": 23.7104,\n      \"long\": 90.40744,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1185263\": {\n      \"name\": \"Bhairab Bāzār\",\n      \"country\": \"BD\",\n      \"lat\": 24.0524,\n      \"long\": 90.9764,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1192366\": {\n      \"name\": \"Pār Naogaon\",\n      \"country\": \"BD\",\n      \"lat\": 24.80418,\n      \"long\": 88.94875,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1203344\": {\n      \"name\": \"Farīdpur\",\n      \"country\": \"BD\",\n      \"lat\": 23.60612,\n      \"long\": 89.84064,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1203891\": {\n      \"name\": \"Dinājpur\",\n      \"country\": \"BD\",\n      \"lat\": 25.62745,\n      \"long\": 88.63779,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1205733\": {\n      \"name\": \"Chittagong\",\n      \"country\": \"BD\",\n      \"lat\": 22.3384,\n      \"long\": 91.83168,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1213500\": {\n      \"name\": \"Tebingtinggi\",\n      \"country\": \"ID\",\n      \"lat\": 3.3285,\n      \"long\": 99.1625,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1213547\": {\n      \"name\": \"Tanjungbalai\",\n      \"country\": \"ID\",\n      \"lat\": 2.96667,\n      \"long\": 99.8,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1213614\": {\n      \"name\": \"Sunggal\",\n      \"country\": \"ID\",\n      \"lat\": 3.5765,\n      \"long\": 98.6151,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1214073\": {\n      \"name\": \"Rantauprapat\",\n      \"country\": \"ID\",\n      \"lat\": 2.1,\n      \"long\": 99.83333,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1214189\": {\n      \"name\": \"Percut\",\n      \"country\": \"ID\",\n      \"lat\": 3.6253,\n      \"long\": 98.864,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1214191\": {\n      \"name\": \"Perbaungan\",\n      \"country\": \"ID\",\n      \"lat\": 3.5679,\n      \"long\": 98.956,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1214204\": {\n      \"name\": \"Pematangsiantar\",\n      \"country\": \"ID\",\n      \"lat\": 2.9595,\n      \"long\": 99.0687,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1214369\": {\n      \"name\": \"Padangsidempuan\",\n      \"country\": \"ID\",\n      \"lat\": 1.37952,\n      \"long\": 99.27146,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1214520\": {\n      \"name\": \"Medan\",\n      \"country\": \"ID\",\n      \"lat\": 3.58333,\n      \"long\": 98.66667,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1214882\": {\n      \"name\": \"Kisaran\",\n      \"country\": \"ID\",\n      \"lat\": 2.9845,\n      \"long\": 99.6158,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1215355\": {\n      \"name\": \"Binjai\",\n      \"country\": \"ID\",\n      \"lat\": 3.6001,\n      \"long\": 98.4854,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1215412\": {\n      \"name\": \"Belawan\",\n      \"country\": \"ID\",\n      \"lat\": 3.7755,\n      \"long\": 98.6832,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1215502\": {\n      \"name\": \"Banda Aceh\",\n      \"country\": \"ID\",\n      \"lat\": 5.5577,\n      \"long\": 95.3222,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1215957\": {\n      \"name\": \"Tirmiz\",\n      \"country\": \"UZ\",\n      \"lat\": 37.22417,\n      \"long\": 67.27833,\n      \"zone\": \"Asia/Samarkand\"\n    },\n    \"1216265\": {\n      \"name\": \"Samarqand\",\n      \"country\": \"UZ\",\n      \"lat\": 39.65417,\n      \"long\": 66.95972,\n      \"zone\": \"Asia/Samarkand\"\n    },\n    \"1216311\": {\n      \"name\": \"Qarshi\",\n      \"country\": \"UZ\",\n      \"lat\": 38.86056,\n      \"long\": 65.78905,\n      \"zone\": \"Asia/Samarkand\"\n    },\n    \"1217662\": {\n      \"name\": \"Bukhara\",\n      \"country\": \"UZ\",\n      \"lat\": 39.77472,\n      \"long\": 64.42861,\n      \"zone\": \"Asia/Samarkand\"\n    },\n    \"1218667\": {\n      \"name\": \"Mary\",\n      \"country\": \"TM\",\n      \"lat\": 37.59378,\n      \"long\": 61.83031,\n      \"zone\": \"Asia/Ashgabat\"\n    },\n    \"1219649\": {\n      \"name\": \"Türkmenabat\",\n      \"country\": \"TM\",\n      \"lat\": 39.07328,\n      \"long\": 63.57861,\n      \"zone\": \"Asia/Ashgabat\"\n    },\n    \"1221874\": {\n      \"name\": \"Dushanbe\",\n      \"country\": \"TJ\",\n      \"lat\": 38.53575,\n      \"long\": 68.77905,\n      \"zone\": \"Asia/Dushanbe\"\n    },\n    \"1226260\": {\n      \"name\": \"Trincomalee\",\n      \"country\": \"LK\",\n      \"lat\": 8.5711,\n      \"long\": 81.2335,\n      \"zone\": \"Asia/Colombo\"\n    },\n    \"1230089\": {\n      \"name\": \"Pita Kotte\",\n      \"country\": \"LK\",\n      \"lat\": 6.8905,\n      \"long\": 79.9015,\n      \"zone\": \"Asia/Colombo\"\n    },\n    \"1233369\": {\n      \"name\": \"Negombo\",\n      \"country\": \"LK\",\n      \"lat\": 7.2083,\n      \"long\": 79.8358,\n      \"zone\": \"Asia/Colombo\"\n    },\n    \"1234633\": {\n      \"name\": \"Moratuwa\",\n      \"country\": \"LK\",\n      \"lat\": 6.773,\n      \"long\": 79.8816,\n      \"zone\": \"Asia/Colombo\"\n    },\n    \"1238992\": {\n      \"name\": \"Sri Jayewardenepura Kotte\",\n      \"country\": \"LK\",\n      \"lat\": 6.88297,\n      \"long\": 79.90708,\n      \"zone\": \"Asia/Colombo\"\n    },\n    \"1241622\": {\n      \"name\": \"Kandy\",\n      \"country\": \"LK\",\n      \"lat\": 7.2955,\n      \"long\": 80.6356,\n      \"zone\": \"Asia/Colombo\"\n    },\n    \"1242110\": {\n      \"name\": \"Kalmunai\",\n      \"country\": \"LK\",\n      \"lat\": 7.40902,\n      \"long\": 81.83472,\n      \"zone\": \"Asia/Colombo\"\n    },\n    \"1242833\": {\n      \"name\": \"Jaffna\",\n      \"country\": \"LK\",\n      \"lat\": 9.66845,\n      \"long\": 80.00742,\n      \"zone\": \"Asia/Colombo\"\n    },\n    \"1246321\": {\n      \"name\": \"Galkissa\",\n      \"country\": \"LK\",\n      \"lat\": 6.8293,\n      \"long\": 79.863,\n      \"zone\": \"Asia/Colombo\"\n    },\n    \"1248991\": {\n      \"name\": \"Colombo\",\n      \"country\": \"LK\",\n      \"lat\": 6.93194,\n      \"long\": 79.84778,\n      \"zone\": \"Asia/Colombo\"\n    },\n    \"1252758\": {\n      \"name\": \"Yelahanka\",\n      \"country\": \"IN\",\n      \"lat\": 13.10129,\n      \"long\": 77.59626,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1252770\": {\n      \"name\": \"Yavatmāl\",\n      \"country\": \"IN\",\n      \"lat\": 20.39324,\n      \"long\": 78.13201,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1252797\": {\n      \"name\": \"Yamunānagar\",\n      \"country\": \"IN\",\n      \"lat\": 30.12796,\n      \"long\": 77.28371,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1252942\": {\n      \"name\": \"Wardha\",\n      \"country\": \"IN\",\n      \"lat\": 20.73807,\n      \"long\": 78.59671,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1252948\": {\n      \"name\": \"Warangal\",\n      \"country\": \"IN\",\n      \"lat\": 18,\n      \"long\": 79.58333,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1253084\": {\n      \"name\": \"Vizianagaram\",\n      \"country\": \"IN\",\n      \"lat\": 18.11692,\n      \"long\": 83.41148,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1253102\": {\n      \"name\": \"Visakhapatnam\",\n      \"country\": \"IN\",\n      \"lat\": 17.68009,\n      \"long\": 83.20161,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1253133\": {\n      \"name\": \"Virār\",\n      \"country\": \"IN\",\n      \"lat\": 19.45591,\n      \"long\": 72.81136,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1253184\": {\n      \"name\": \"Vijayawāda\",\n      \"country\": \"IN\",\n      \"lat\": 16.51928,\n      \"long\": 80.63049,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1253200\": {\n      \"name\": \"Vidisha\",\n      \"country\": \"IN\",\n      \"lat\": 23.52435,\n      \"long\": 77.80972,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1253237\": {\n      \"name\": \"Verāval\",\n      \"country\": \"IN\",\n      \"lat\": 20.9077,\n      \"long\": 70.36786,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1253286\": {\n      \"name\": \"Vellore\",\n      \"country\": \"IN\",\n      \"lat\": 12.9184,\n      \"long\": 79.13255,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1253315\": {\n      \"name\": \"Vejalpur\",\n      \"country\": \"IN\",\n      \"lat\": 22.69021,\n      \"long\": 73.56299,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1253367\": {\n      \"name\": \"Vāsco Da Gāma\",\n      \"country\": \"IN\",\n      \"lat\": 15.39585,\n      \"long\": 73.81568,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1253405\": {\n      \"name\": \"Varanasi\",\n      \"country\": \"IN\",\n      \"lat\": 25.31668,\n      \"long\": 83.01041,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1253573\": {\n      \"name\": \"Vadodara\",\n      \"country\": \"IN\",\n      \"lat\": 22.29941,\n      \"long\": 73.20812,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1253744\": {\n      \"name\": \"Uppal Kalan\",\n      \"country\": \"IN\",\n      \"lat\": 17.40577,\n      \"long\": 78.55911,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1253747\": {\n      \"name\": \"Unnāo\",\n      \"country\": \"IN\",\n      \"lat\": 26.54706,\n      \"long\": 80.48781,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1253894\": {\n      \"name\": \"Ulhasnagar\",\n      \"country\": \"IN\",\n      \"lat\": 19.21667,\n      \"long\": 73.15,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1253914\": {\n      \"name\": \"Ujjain\",\n      \"country\": \"IN\",\n      \"lat\": 23.18239,\n      \"long\": 75.77643,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1253952\": {\n      \"name\": \"Udipi\",\n      \"country\": \"IN\",\n      \"lat\": 13.33467,\n      \"long\": 74.74617,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1253958\": {\n      \"name\": \"Udgīr\",\n      \"country\": \"IN\",\n      \"lat\": 18.39258,\n      \"long\": 77.11756,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1253986\": {\n      \"name\": \"Udaipur\",\n      \"country\": \"IN\",\n      \"lat\": 24.57117,\n      \"long\": 73.69183,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1254089\": {\n      \"name\": \"Tumkūr\",\n      \"country\": \"IN\",\n      \"lat\": 13.34149,\n      \"long\": 77.101,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1254163\": {\n      \"name\": \"Thiruvananthapuram\",\n      \"country\": \"IN\",\n      \"lat\": 8.4855,\n      \"long\": 76.94924,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1254187\": {\n      \"name\": \"Trichūr\",\n      \"country\": \"IN\",\n      \"lat\": 10.51667,\n      \"long\": 76.21667,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1254241\": {\n      \"name\": \"Tonk\",\n      \"country\": \"IN\",\n      \"lat\": 26.16638,\n      \"long\": 75.78824,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1254309\": {\n      \"name\": \"Titāgarh\",\n      \"country\": \"IN\",\n      \"lat\": 22.74252,\n      \"long\": 88.37326,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1254320\": {\n      \"name\": \"Tiruvottiyūr\",\n      \"country\": \"IN\",\n      \"lat\": 13.15823,\n      \"long\": 80.30181,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1254327\": {\n      \"name\": \"Tiruvannāmalai\",\n      \"country\": \"IN\",\n      \"lat\": 12.22662,\n      \"long\": 79.07461,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1254348\": {\n      \"name\": \"Tiruppur\",\n      \"country\": \"IN\",\n      \"lat\": 11.11541,\n      \"long\": 77.35456,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1254360\": {\n      \"name\": \"Tirupati\",\n      \"country\": \"IN\",\n      \"lat\": 13.63551,\n      \"long\": 79.41989,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1254361\": {\n      \"name\": \"Tirunelveli\",\n      \"country\": \"IN\",\n      \"lat\": 8.72518,\n      \"long\": 77.68452,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1254388\": {\n      \"name\": \"Tiruchirappalli\",\n      \"country\": \"IN\",\n      \"lat\": 10.8155,\n      \"long\": 78.69651,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1254649\": {\n      \"name\": \"Thanjāvūr\",\n      \"country\": \"IN\",\n      \"lat\": 10.78523,\n      \"long\": 79.13909,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1254657\": {\n      \"name\": \"Thānesar\",\n      \"country\": \"IN\",\n      \"lat\": 29.97323,\n      \"long\": 76.83214,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1254661\": {\n      \"name\": \"Thāne\",\n      \"country\": \"IN\",\n      \"lat\": 19.19704,\n      \"long\": 72.96355,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1254745\": {\n      \"name\": \"Teni\",\n      \"country\": \"IN\",\n      \"lat\": 10.01531,\n      \"long\": 77.482,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1255264\": {\n      \"name\": \"Tādepallegūdem\",\n      \"country\": \"IN\",\n      \"lat\": 16.81304,\n      \"long\": 81.52874,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1255344\": {\n      \"name\": \"Suriāpet\",\n      \"country\": \"IN\",\n      \"lat\": 17.14054,\n      \"long\": 79.62045,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1255349\": {\n      \"name\": \"Surendranagar\",\n      \"country\": \"IN\",\n      \"lat\": 22.72706,\n      \"long\": 71.64856,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1255364\": {\n      \"name\": \"Sūrat\",\n      \"country\": \"IN\",\n      \"lat\": 21.19594,\n      \"long\": 72.83023,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1255491\": {\n      \"name\": \"Sultānpur\",\n      \"country\": \"IN\",\n      \"lat\": 26.25996,\n      \"long\": 82.07314,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1255560\": {\n      \"name\": \"Sūjāngarh\",\n      \"country\": \"IN\",\n      \"lat\": 27.7,\n      \"long\": 74.46667,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1255634\": {\n      \"name\": \"Srinagar\",\n      \"country\": \"IN\",\n      \"lat\": 34.08842,\n      \"long\": 74.80298,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1255647\": {\n      \"name\": \"Srīkākulam\",\n      \"country\": \"IN\",\n      \"lat\": 18.29692,\n      \"long\": 83.89732,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1255744\": {\n      \"name\": \"Sonīpat\",\n      \"country\": \"IN\",\n      \"lat\": 28.99478,\n      \"long\": 77.01937,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1255927\": {\n      \"name\": \"Siwān\",\n      \"country\": \"IN\",\n      \"lat\": 26.22152,\n      \"long\": 84.35879,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1255969\": {\n      \"name\": \"Sītāpur\",\n      \"country\": \"IN\",\n      \"lat\": 27.56192,\n      \"long\": 80.68265,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1256052\": {\n      \"name\": \"Sirsa\",\n      \"country\": \"IN\",\n      \"lat\": 29.53489,\n      \"long\": 75.02898,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1256237\": {\n      \"name\": \"Shimla\",\n      \"country\": \"IN\",\n      \"lat\": 31.10442,\n      \"long\": 77.16662,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1256287\": {\n      \"name\": \"Silchar\",\n      \"country\": \"IN\",\n      \"lat\": 24.82733,\n      \"long\": 92.79787,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1256320\": {\n      \"name\": \"Sīkar\",\n      \"country\": \"IN\",\n      \"lat\": 27.61206,\n      \"long\": 75.13996,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1256409\": {\n      \"name\": \"Shyamnagar\",\n      \"country\": \"IN\",\n      \"lat\": 22.83333,\n      \"long\": 88.36667,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1256422\": {\n      \"name\": \"Shrīrāmpur\",\n      \"country\": \"IN\",\n      \"lat\": 22.75278,\n      \"long\": 88.34222,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1256436\": {\n      \"name\": \"Solāpur\",\n      \"country\": \"IN\",\n      \"lat\": 17.67152,\n      \"long\": 75.91044,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1256451\": {\n      \"name\": \"Shivpurī\",\n      \"country\": \"IN\",\n      \"lat\": 25.42348,\n      \"long\": 77.66067,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1256515\": {\n      \"name\": \"Shimoga\",\n      \"country\": \"IN\",\n      \"lat\": 13.93157,\n      \"long\": 75.56791,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1256523\": {\n      \"name\": \"Shillong\",\n      \"country\": \"IN\",\n      \"lat\": 25.56892,\n      \"long\": 91.88313,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1256525\": {\n      \"name\": \"Shiliguri\",\n      \"country\": \"IN\",\n      \"lat\": 26.71004,\n      \"long\": 88.42851,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1256639\": {\n      \"name\": \"Shāntipur\",\n      \"country\": \"IN\",\n      \"lat\": 23.24723,\n      \"long\": 88.43302,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1256728\": {\n      \"name\": \"Shāhjahānpur\",\n      \"country\": \"IN\",\n      \"lat\": 27.88142,\n      \"long\": 79.9109,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1256826\": {\n      \"name\": \"Seonī\",\n      \"country\": \"IN\",\n      \"lat\": 22.08664,\n      \"long\": 79.55043,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1256922\": {\n      \"name\": \"Secunderabad\",\n      \"country\": \"IN\",\n      \"lat\": 17.50427,\n      \"long\": 78.54263,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1256949\": {\n      \"name\": \"Sawāi Mādhopur\",\n      \"country\": \"IN\",\n      \"lat\": 26.02301,\n      \"long\": 76.34408,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1257022\": {\n      \"name\": \"Satna\",\n      \"country\": \"IN\",\n      \"lat\": 24.58225,\n      \"long\": 80.8248,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1257055\": {\n      \"name\": \"Sātāra\",\n      \"country\": \"IN\",\n      \"lat\": 17.68589,\n      \"long\": 73.99333,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1257416\": {\n      \"name\": \"Sāngli\",\n      \"country\": \"IN\",\n      \"lat\": 16.85438,\n      \"long\": 74.56417,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1257540\": {\n      \"name\": \"Sambhal\",\n      \"country\": \"IN\",\n      \"lat\": 28.58323,\n      \"long\": 78.56689,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1257542\": {\n      \"name\": \"Sambalpur\",\n      \"country\": \"IN\",\n      \"lat\": 21.45,\n      \"long\": 83.96667,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1257629\": {\n      \"name\": \"Salem\",\n      \"country\": \"IN\",\n      \"lat\": 11.65117,\n      \"long\": 78.15867,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1257804\": {\n      \"name\": \"Saharsa\",\n      \"country\": \"IN\",\n      \"lat\": 25.88505,\n      \"long\": 86.59471,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1257806\": {\n      \"name\": \"Sahāranpur\",\n      \"country\": \"IN\",\n      \"lat\": 29.9679,\n      \"long\": 77.54522,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1257845\": {\n      \"name\": \"Sāgar\",\n      \"country\": \"IN\",\n      \"lat\": 23.84251,\n      \"long\": 78.74386,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1258044\": {\n      \"name\": \"Roorkee\",\n      \"country\": \"IN\",\n      \"lat\": 29.86632,\n      \"long\": 77.89118,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1258076\": {\n      \"name\": \"Rohtak\",\n      \"country\": \"IN\",\n      \"lat\": 28.89447,\n      \"long\": 76.58917,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1258109\": {\n      \"name\": \"Robertsonpet\",\n      \"country\": \"IN\",\n      \"lat\": 12.95629,\n      \"long\": 78.27543,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1258126\": {\n      \"name\": \"Rishra\",\n      \"country\": \"IN\",\n      \"lat\": 22.72394,\n      \"long\": 88.34563,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1258178\": {\n      \"name\": \"Rewāri\",\n      \"country\": \"IN\",\n      \"lat\": 28.199,\n      \"long\": 76.6183,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1258182\": {\n      \"name\": \"Rewa\",\n      \"country\": \"IN\",\n      \"lat\": 24.53399,\n      \"long\": 81.29596,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1258342\": {\n      \"name\": \"Ratlām\",\n      \"country\": \"IN\",\n      \"lat\": 23.33033,\n      \"long\": 75.04032,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1258470\": {\n      \"name\": \"Rānīganj\",\n      \"country\": \"IN\",\n      \"lat\": 23.6164,\n      \"long\": 87.13061,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1258526\": {\n      \"name\": \"Ranchi\",\n      \"country\": \"IN\",\n      \"lat\": 23.34777,\n      \"long\": 85.33856,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1258599\": {\n      \"name\": \"Rāmpur\",\n      \"country\": \"IN\",\n      \"lat\": 28.80904,\n      \"long\": 79.02895,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1258662\": {\n      \"name\": \"Rāmgundam\",\n      \"country\": \"IN\",\n      \"lat\": 18.80084,\n      \"long\": 79.45206,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1258831\": {\n      \"name\": \"Rāj Nāndgaon\",\n      \"country\": \"IN\",\n      \"lat\": 21.1,\n      \"long\": 81.03333,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1258847\": {\n      \"name\": \"Rājkot\",\n      \"country\": \"IN\",\n      \"lat\": 22.29161,\n      \"long\": 70.79322,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1258916\": {\n      \"name\": \"Rajapalaiyam\",\n      \"country\": \"IN\",\n      \"lat\": 9.45296,\n      \"long\": 77.55335,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1258932\": {\n      \"name\": \"Rājahmundry\",\n      \"country\": \"IN\",\n      \"lat\": 17.00517,\n      \"long\": 81.77784,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1258980\": {\n      \"name\": \"Raipur\",\n      \"country\": \"IN\",\n      \"lat\": 21.23333,\n      \"long\": 81.63333,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1259005\": {\n      \"name\": \"Raigarh\",\n      \"country\": \"IN\",\n      \"lat\": 21.9,\n      \"long\": 83.4,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1259009\": {\n      \"name\": \"Rāiganj\",\n      \"country\": \"IN\",\n      \"lat\": 25.61281,\n      \"long\": 88.12449,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1259012\": {\n      \"name\": \"Rāichūr\",\n      \"country\": \"IN\",\n      \"lat\": 16.2047,\n      \"long\": 77.354,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1259064\": {\n      \"name\": \"Rāe Bareli\",\n      \"country\": \"IN\",\n      \"lat\": 26.2191,\n      \"long\": 81.24499,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1259091\": {\n      \"name\": \"Kollam\",\n      \"country\": \"IN\",\n      \"lat\": 8.88113,\n      \"long\": 76.58469,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1259163\": {\n      \"name\": \"Puruliya\",\n      \"country\": \"IN\",\n      \"lat\": 23.33062,\n      \"long\": 86.36303,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1259166\": {\n      \"name\": \"Purnia\",\n      \"country\": \"IN\",\n      \"lat\": 25.77895,\n      \"long\": 87.47422,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1259184\": {\n      \"name\": \"Puri\",\n      \"country\": \"IN\",\n      \"lat\": 19.79825,\n      \"long\": 85.82494,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1259229\": {\n      \"name\": \"Pune\",\n      \"country\": \"IN\",\n      \"lat\": 18.51957,\n      \"long\": 73.85535,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1259239\": {\n      \"name\": \"Punāsa\",\n      \"country\": \"IN\",\n      \"lat\": 22.23544,\n      \"long\": 76.39295,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1259297\": {\n      \"name\": \"Pudukkottai\",\n      \"country\": \"IN\",\n      \"lat\": 10.38128,\n      \"long\": 78.82141,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1259312\": {\n      \"name\": \"Proddatūr\",\n      \"country\": \"IN\",\n      \"lat\": 14.7502,\n      \"long\": 78.54813,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1259385\": {\n      \"name\": \"Port Blair\",\n      \"country\": \"IN\",\n      \"lat\": 11.66667,\n      \"long\": 92.75,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1259395\": {\n      \"name\": \"Porbandar\",\n      \"country\": \"IN\",\n      \"lat\": 21.64219,\n      \"long\": 69.60929,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1259411\": {\n      \"name\": \"Ponnāni\",\n      \"country\": \"IN\",\n      \"lat\": 10.76695,\n      \"long\": 75.92523,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1259425\": {\n      \"name\": \"Puducherry\",\n      \"country\": \"IN\",\n      \"lat\": 11.93381,\n      \"long\": 79.82979,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1259652\": {\n      \"name\": \"Pimpri\",\n      \"country\": \"IN\",\n      \"lat\": 18.62292,\n      \"long\": 73.80696,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1259686\": {\n      \"name\": \"Pīlībhīt\",\n      \"country\": \"IN\",\n      \"lat\": 28.63098,\n      \"long\": 79.80338,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1259827\": {\n      \"name\": \"Phagwāra\",\n      \"country\": \"IN\",\n      \"lat\": 31.2185,\n      \"long\": 75.77166,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1260086\": {\n      \"name\": \"Patna\",\n      \"country\": \"IN\",\n      \"lat\": 25.60222,\n      \"long\": 85.11936,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1260107\": {\n      \"name\": \"Patiāla\",\n      \"country\": \"IN\",\n      \"lat\": 30.32715,\n      \"long\": 76.40266,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1260137\": {\n      \"name\": \"Pathankot\",\n      \"country\": \"IN\",\n      \"lat\": 32.27306,\n      \"long\": 75.65256,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1260173\": {\n      \"name\": \"Pātan\",\n      \"country\": \"IN\",\n      \"lat\": 23.8507,\n      \"long\": 72.12963,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1260341\": {\n      \"name\": \"Parbhani\",\n      \"country\": \"IN\",\n      \"lat\": 19.26855,\n      \"long\": 76.77081,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1260434\": {\n      \"name\": \"Panvel\",\n      \"country\": \"IN\",\n      \"lat\": 18.98878,\n      \"long\": 73.11013,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1260476\": {\n      \"name\": \"Pānīpat\",\n      \"country\": \"IN\",\n      \"lat\": 29.39005,\n      \"long\": 76.96949,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1260482\": {\n      \"name\": \"Pānihāti\",\n      \"country\": \"IN\",\n      \"lat\": 22.69089,\n      \"long\": 88.37404,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1260637\": {\n      \"name\": \"Palwal\",\n      \"country\": \"IN\",\n      \"lat\": 28.14327,\n      \"long\": 77.32698,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1260692\": {\n      \"name\": \"Pallāvaram\",\n      \"country\": \"IN\",\n      \"lat\": 12.96796,\n      \"long\": 80.15025,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1260716\": {\n      \"name\": \"Pāli\",\n      \"country\": \"IN\",\n      \"lat\": 25.77276,\n      \"long\": 73.32335,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1260728\": {\n      \"name\": \"Palakkad\",\n      \"country\": \"IN\",\n      \"lat\": 10.7744,\n      \"long\": 76.65625,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1260777\": {\n      \"name\": \"Pālanpur\",\n      \"country\": \"IN\",\n      \"lat\": 24.17097,\n      \"long\": 72.43821,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1261039\": {\n      \"name\": \"Orai\",\n      \"country\": \"IN\",\n      \"lat\": 25.99074,\n      \"long\": 79.45315,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1261045\": {\n      \"name\": \"Ongole\",\n      \"country\": \"IN\",\n      \"lat\": 15.50642,\n      \"long\": 80.04867,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1261162\": {\n      \"name\": \"Nowrangapur\",\n      \"country\": \"IN\",\n      \"lat\": 19.23114,\n      \"long\": 82.54826,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1261258\": {\n      \"name\": \"Nizāmābād\",\n      \"country\": \"IN\",\n      \"lat\": 18.67154,\n      \"long\": 78.0988,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1261481\": {\n      \"name\": \"New Delhi\",\n      \"country\": \"IN\",\n      \"lat\": 28.63576,\n      \"long\": 77.22445,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1261529\": {\n      \"name\": \"Nellore\",\n      \"country\": \"IN\",\n      \"lat\": 14.45363,\n      \"long\": 79.98674,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1261669\": {\n      \"name\": \"Navadwīp\",\n      \"country\": \"IN\",\n      \"lat\": 23.4067,\n      \"long\": 88.36861,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1261731\": {\n      \"name\": \"Nashik\",\n      \"country\": \"IN\",\n      \"lat\": 19.99727,\n      \"long\": 73.79096,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1261913\": {\n      \"name\": \"Nāngloi Jāt\",\n      \"country\": \"IN\",\n      \"lat\": 28.67957,\n      \"long\": 77.06799,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1261927\": {\n      \"name\": \"Nandyāl\",\n      \"country\": \"IN\",\n      \"lat\": 15.48879,\n      \"long\": 78.48648,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1261931\": {\n      \"name\": \"Nandurbār\",\n      \"country\": \"IN\",\n      \"lat\": 21.36608,\n      \"long\": 74.23955,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1261977\": {\n      \"name\": \"Nanded\",\n      \"country\": \"IN\",\n      \"lat\": 19.16023,\n      \"long\": 77.31497,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1262067\": {\n      \"name\": \"Nalgonda\",\n      \"country\": \"IN\",\n      \"lat\": 17.05439,\n      \"long\": 79.26707,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1262131\": {\n      \"name\": \"Naihāti\",\n      \"country\": \"IN\",\n      \"lat\": 22.89396,\n      \"long\": 88.41521,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1262180\": {\n      \"name\": \"Nagpur\",\n      \"country\": \"IN\",\n      \"lat\": 21.14631,\n      \"long\": 79.08491,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1262204\": {\n      \"name\": \"Nāgercoil\",\n      \"country\": \"IN\",\n      \"lat\": 8.17731,\n      \"long\": 77.43437,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1262209\": {\n      \"name\": \"Nagda\",\n      \"country\": \"IN\",\n      \"lat\": 23.45834,\n      \"long\": 75.41759,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1262292\": {\n      \"name\": \"Nadiād\",\n      \"country\": \"IN\",\n      \"lat\": 22.69385,\n      \"long\": 72.86157,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1262321\": {\n      \"name\": \"Mysore\",\n      \"country\": \"IN\",\n      \"lat\": 12.29791,\n      \"long\": 76.63925,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1262330\": {\n      \"name\": \"Muzaffarpur\",\n      \"country\": \"IN\",\n      \"lat\": 26.12259,\n      \"long\": 85.39055,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1262332\": {\n      \"name\": \"Muzaffarnagar\",\n      \"country\": \"IN\",\n      \"lat\": 29.47394,\n      \"long\": 77.70414,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1262395\": {\n      \"name\": \"Murwāra\",\n      \"country\": \"IN\",\n      \"lat\": 23.83677,\n      \"long\": 80.39482,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1262482\": {\n      \"name\": \"Munger\",\n      \"country\": \"IN\",\n      \"lat\": 25.37556,\n      \"long\": 86.47352,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1262710\": {\n      \"name\": \"Motīhāri\",\n      \"country\": \"IN\",\n      \"lat\": 26.65738,\n      \"long\": 84.91922,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1262771\": {\n      \"name\": \"Morena\",\n      \"country\": \"IN\",\n      \"lat\": 26.50286,\n      \"long\": 78.00163,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1262775\": {\n      \"name\": \"Morbi\",\n      \"country\": \"IN\",\n      \"lat\": 22.81731,\n      \"long\": 70.8377,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1262801\": {\n      \"name\": \"Morādābād\",\n      \"country\": \"IN\",\n      \"lat\": 28.83893,\n      \"long\": 78.77684,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1262951\": {\n      \"name\": \"Moga\",\n      \"country\": \"IN\",\n      \"lat\": 30.81383,\n      \"long\": 75.16878,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1262995\": {\n      \"name\": \"Mirzāpur\",\n      \"country\": \"IN\",\n      \"lat\": 25.14582,\n      \"long\": 82.56975,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1263012\": {\n      \"name\": \"Miriālgūda\",\n      \"country\": \"IN\",\n      \"lat\": 16.8722,\n      \"long\": 79.56247,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1263214\": {\n      \"name\": \"Meerut\",\n      \"country\": \"IN\",\n      \"lat\": 28.98002,\n      \"long\": 77.70636,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1263220\": {\n      \"name\": \"Medinīpur\",\n      \"country\": \"IN\",\n      \"lat\": 22.42114,\n      \"long\": 87.32257,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1263311\": {\n      \"name\": \"Mau\",\n      \"country\": \"IN\",\n      \"lat\": 25.94167,\n      \"long\": 83.56111,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1263364\": {\n      \"name\": \"Mathura\",\n      \"country\": \"IN\",\n      \"lat\": 27.50199,\n      \"long\": 77.6833,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1263494\": {\n      \"name\": \"Marmagao\",\n      \"country\": \"IN\",\n      \"lat\": 15.40927,\n      \"long\": 73.78869,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1263780\": {\n      \"name\": \"Mangalore\",\n      \"country\": \"IN\",\n      \"lat\": 12.91723,\n      \"long\": 74.85603,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1263814\": {\n      \"name\": \"Mandya\",\n      \"country\": \"IN\",\n      \"lat\": 12.52145,\n      \"long\": 76.89527,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1263833\": {\n      \"name\": \"Māndu\",\n      \"country\": \"IN\",\n      \"lat\": 22.36667,\n      \"long\": 75.38333,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1263834\": {\n      \"name\": \"Mandsaur\",\n      \"country\": \"IN\",\n      \"lat\": 24.07184,\n      \"long\": 75.06986,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1264111\": {\n      \"name\": \"Māler Kotla\",\n      \"country\": \"IN\",\n      \"lat\": 30.5309,\n      \"long\": 75.87949,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1264115\": {\n      \"name\": \"Mālegaon\",\n      \"country\": \"IN\",\n      \"lat\": 20.5537,\n      \"long\": 74.52881,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1264407\": {\n      \"name\": \"Mahbūbnagar\",\n      \"country\": \"IN\",\n      \"lat\": 16.74385,\n      \"long\": 77.98597,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1264521\": {\n      \"name\": \"Madurai\",\n      \"country\": \"IN\",\n      \"lat\": 9.91735,\n      \"long\": 78.11962,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1264527\": {\n      \"name\": \"Chennai\",\n      \"country\": \"IN\",\n      \"lat\": 13.08784,\n      \"long\": 80.27847,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1264543\": {\n      \"name\": \"Madhyamgram\",\n      \"country\": \"IN\",\n      \"lat\": 22.68944,\n      \"long\": 88.44594,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1264621\": {\n      \"name\": \"Madanapalle\",\n      \"country\": \"IN\",\n      \"lat\": 13.5503,\n      \"long\": 78.50288,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1264637\": {\n      \"name\": \"Machilīpatnam\",\n      \"country\": \"IN\",\n      \"lat\": 16.18747,\n      \"long\": 81.13888,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1264728\": {\n      \"name\": \"Ludhiāna\",\n      \"country\": \"IN\",\n      \"lat\": 30.91204,\n      \"long\": 75.85379,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1264733\": {\n      \"name\": \"Lucknow\",\n      \"country\": \"IN\",\n      \"lat\": 26.83928,\n      \"long\": 80.92313,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1264773\": {\n      \"name\": \"Loni\",\n      \"country\": \"IN\",\n      \"lat\": 28.75143,\n      \"long\": 77.29023,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1265014\": {\n      \"name\": \"Latur\",\n      \"country\": \"IN\",\n      \"lat\": 18.39721,\n      \"long\": 76.56784,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1265157\": {\n      \"name\": \"Lalitpur\",\n      \"country\": \"IN\",\n      \"lat\": 24.69055,\n      \"long\": 78.41888,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1265242\": {\n      \"name\": \"Lakhīmpur\",\n      \"country\": \"IN\",\n      \"lat\": 27.952,\n      \"long\": 80.78257,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1265683\": {\n      \"name\": \"Kumbakonam\",\n      \"country\": \"IN\",\n      \"lat\": 10.96209,\n      \"long\": 79.39124,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1265711\": {\n      \"name\": \"Kulti\",\n      \"country\": \"IN\",\n      \"lat\": 23.73166,\n      \"long\": 86.84372,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1265767\": {\n      \"name\": \"Kūkatpalli\",\n      \"country\": \"IN\",\n      \"lat\": 17.48486,\n      \"long\": 78.41376,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1265859\": {\n      \"name\": \"Krishnanagar\",\n      \"country\": \"IN\",\n      \"lat\": 23.40576,\n      \"long\": 88.49073,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1265873\": {\n      \"name\": \"Kozhikode\",\n      \"country\": \"IN\",\n      \"lat\": 11.24802,\n      \"long\": 75.7804,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1266049\": {\n      \"name\": \"Kota\",\n      \"country\": \"IN\",\n      \"lat\": 25.18254,\n      \"long\": 75.83907,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1266122\": {\n      \"name\": \"Korba\",\n      \"country\": \"IN\",\n      \"lat\": 22.3458,\n      \"long\": 82.69633,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1266285\": {\n      \"name\": \"Kolhāpur\",\n      \"country\": \"IN\",\n      \"lat\": 16.69563,\n      \"long\": 74.23167,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1266305\": {\n      \"name\": \"Kolār\",\n      \"country\": \"IN\",\n      \"lat\": 13.13671,\n      \"long\": 78.12917,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1266486\": {\n      \"name\": \"Kishangarh\",\n      \"country\": \"IN\",\n      \"lat\": 26.5741,\n      \"long\": 74.86685,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1266607\": {\n      \"name\": \"Khurja\",\n      \"country\": \"IN\",\n      \"lat\": 28.25436,\n      \"long\": 77.85436,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1266945\": {\n      \"name\": \"Khardah\",\n      \"country\": \"IN\",\n      \"lat\": 22.71861,\n      \"long\": 88.37806,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1266976\": {\n      \"name\": \"Kharagpur\",\n      \"country\": \"IN\",\n      \"lat\": 22.33971,\n      \"long\": 87.32501,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1267016\": {\n      \"name\": \"Khanna\",\n      \"country\": \"IN\",\n      \"lat\": 30.703,\n      \"long\": 76.22106,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1267031\": {\n      \"name\": \"Khandwa\",\n      \"country\": \"IN\",\n      \"lat\": 21.82451,\n      \"long\": 76.35202,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1267076\": {\n      \"name\": \"Khammam\",\n      \"country\": \"IN\",\n      \"lat\": 17.24767,\n      \"long\": 80.14368,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1267480\": {\n      \"name\": \"Katihar\",\n      \"country\": \"IN\",\n      \"lat\": 25.53852,\n      \"long\": 87.57044,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1267579\": {\n      \"name\": \"Kashipur\",\n      \"country\": \"IN\",\n      \"lat\": 29.21399,\n      \"long\": 78.95693,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1267696\": {\n      \"name\": \"Karol Bāgh\",\n      \"country\": \"IN\",\n      \"lat\": 28.65136,\n      \"long\": 77.19072,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1267708\": {\n      \"name\": \"Karnāl\",\n      \"country\": \"IN\",\n      \"lat\": 29.69197,\n      \"long\": 76.98448,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1267755\": {\n      \"name\": \"Karīmnagar\",\n      \"country\": \"IN\",\n      \"lat\": 18.43915,\n      \"long\": 79.12856,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1267995\": {\n      \"name\": \"Kānpur\",\n      \"country\": \"IN\",\n      \"lat\": 26.4478,\n      \"long\": 80.34627,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1268159\": {\n      \"name\": \"Kānchipuram\",\n      \"country\": \"IN\",\n      \"lat\": 12.83515,\n      \"long\": 79.70006,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1268257\": {\n      \"name\": \"Kāmārhāti\",\n      \"country\": \"IN\",\n      \"lat\": 22.67111,\n      \"long\": 88.37472,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1268295\": {\n      \"name\": \"Kalyān\",\n      \"country\": \"IN\",\n      \"lat\": 19.2437,\n      \"long\": 73.13554,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1268561\": {\n      \"name\": \"Kākināda\",\n      \"country\": \"IN\",\n      \"lat\": 16.96036,\n      \"long\": 82.23809,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1268593\": {\n      \"name\": \"Kaithal\",\n      \"country\": \"IN\",\n      \"lat\": 29.8019,\n      \"long\": 76.39667,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1268715\": {\n      \"name\": \"Kānchrāpāra\",\n      \"country\": \"IN\",\n      \"lat\": 22.95998,\n      \"long\": 88.42849,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1268773\": {\n      \"name\": \"Jūnāgadh\",\n      \"country\": \"IN\",\n      \"lat\": 21.51966,\n      \"long\": 70.45981,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1268782\": {\n      \"name\": \"Jalandhar\",\n      \"country\": \"IN\",\n      \"lat\": 31.32556,\n      \"long\": 75.57917,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1268865\": {\n      \"name\": \"Jodhpur\",\n      \"country\": \"IN\",\n      \"lat\": 26.26841,\n      \"long\": 73.00594,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1268907\": {\n      \"name\": \"Jīnd\",\n      \"country\": \"IN\",\n      \"lat\": 29.31617,\n      \"long\": 76.31436,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1268936\": {\n      \"name\": \"Jhunjhunūn\",\n      \"country\": \"IN\",\n      \"lat\": 28.12559,\n      \"long\": 75.39797,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269006\": {\n      \"name\": \"Jhānsi\",\n      \"country\": \"IN\",\n      \"lat\": 25.45446,\n      \"long\": 78.58221,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269065\": {\n      \"name\": \"Jetpur\",\n      \"country\": \"IN\",\n      \"lat\": 21.75482,\n      \"long\": 70.62347,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269135\": {\n      \"name\": \"Jaunpur\",\n      \"country\": \"IN\",\n      \"lat\": 25.75506,\n      \"long\": 82.68361,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269280\": {\n      \"name\": \"Jāmuria\",\n      \"country\": \"IN\",\n      \"lat\": 23.70468,\n      \"long\": 87.07872,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269300\": {\n      \"name\": \"Jamshedpur\",\n      \"country\": \"IN\",\n      \"lat\": 22.80278,\n      \"long\": 86.18545,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269317\": {\n      \"name\": \"Jāmnagar\",\n      \"country\": \"IN\",\n      \"lat\": 22.47292,\n      \"long\": 70.06673,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269321\": {\n      \"name\": \"Jammu\",\n      \"country\": \"IN\",\n      \"lat\": 32.73569,\n      \"long\": 74.86911,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269374\": {\n      \"name\": \"Jamālpur\",\n      \"country\": \"IN\",\n      \"lat\": 25.31258,\n      \"long\": 86.48888,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269388\": {\n      \"name\": \"Jalpāiguri\",\n      \"country\": \"IN\",\n      \"lat\": 26.51667,\n      \"long\": 88.73333,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269395\": {\n      \"name\": \"Jālna\",\n      \"country\": \"IN\",\n      \"lat\": 19.84102,\n      \"long\": 75.88636,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269407\": {\n      \"name\": \"Jālgaon\",\n      \"country\": \"IN\",\n      \"lat\": 21.01009,\n      \"long\": 75.56843,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269515\": {\n      \"name\": \"Jaipur\",\n      \"country\": \"IN\",\n      \"lat\": 26.91962,\n      \"long\": 75.78781,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269605\": {\n      \"name\": \"Jagādhri\",\n      \"country\": \"IN\",\n      \"lat\": 30.16719,\n      \"long\": 77.30367,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269633\": {\n      \"name\": \"Jabalpur\",\n      \"country\": \"IN\",\n      \"lat\": 23.16697,\n      \"long\": 79.95006,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269653\": {\n      \"name\": \"Itārsi\",\n      \"country\": \"IN\",\n      \"lat\": 22.61477,\n      \"long\": 77.76222,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269723\": {\n      \"name\": \"Ingrāj Bāzār\",\n      \"country\": \"IN\",\n      \"lat\": 25.00447,\n      \"long\": 88.14573,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269743\": {\n      \"name\": \"Indore\",\n      \"country\": \"IN\",\n      \"lat\": 22.71792,\n      \"long\": 75.8333,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269771\": {\n      \"name\": \"Imphal\",\n      \"country\": \"IN\",\n      \"lat\": 24.80805,\n      \"long\": 93.9442,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269834\": {\n      \"name\": \"Ichalkaranji\",\n      \"country\": \"IN\",\n      \"lat\": 16.69117,\n      \"long\": 74.46054,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269843\": {\n      \"name\": \"Hyderabad\",\n      \"country\": \"IN\",\n      \"lat\": 17.38405,\n      \"long\": 78.45636,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269910\": {\n      \"name\": \"Hugli\",\n      \"country\": \"IN\",\n      \"lat\": 22.90877,\n      \"long\": 88.39674,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269920\": {\n      \"name\": \"Hubli\",\n      \"country\": \"IN\",\n      \"lat\": 15.34776,\n      \"long\": 75.13378,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269934\": {\n      \"name\": \"Hosūr\",\n      \"country\": \"IN\",\n      \"lat\": 12.73647,\n      \"long\": 77.83264,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269935\": {\n      \"name\": \"Hospet\",\n      \"country\": \"IN\",\n      \"lat\": 15.26954,\n      \"long\": 76.3871,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269937\": {\n      \"name\": \"Hoshiārpur\",\n      \"country\": \"IN\",\n      \"lat\": 31.53238,\n      \"long\": 75.90799,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1269939\": {\n      \"name\": \"Hoshangābād\",\n      \"country\": \"IN\",\n      \"lat\": 22.75357,\n      \"long\": 77.72249,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270022\": {\n      \"name\": \"Hisar\",\n      \"country\": \"IN\",\n      \"lat\": 29.15394,\n      \"long\": 75.72294,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270079\": {\n      \"name\": \"Hindupur\",\n      \"country\": \"IN\",\n      \"lat\": 13.82908,\n      \"long\": 77.4924,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270164\": {\n      \"name\": \"Hazārībāg\",\n      \"country\": \"IN\",\n      \"lat\": 23.99507,\n      \"long\": 85.36109,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270216\": {\n      \"name\": \"Hāthras\",\n      \"country\": \"IN\",\n      \"lat\": 27.59621,\n      \"long\": 78.05237,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270239\": {\n      \"name\": \"Hassan\",\n      \"country\": \"IN\",\n      \"lat\": 13.00715,\n      \"long\": 76.0962,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270351\": {\n      \"name\": \"Haridwar\",\n      \"country\": \"IN\",\n      \"lat\": 29.94791,\n      \"long\": 78.16025,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270370\": {\n      \"name\": \"Hardoī\",\n      \"country\": \"IN\",\n      \"lat\": 27.39433,\n      \"long\": 80.1311,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270393\": {\n      \"name\": \"Hāpur\",\n      \"country\": \"IN\",\n      \"lat\": 28.73041,\n      \"long\": 77.78141,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270396\": {\n      \"name\": \"Hāora\",\n      \"country\": \"IN\",\n      \"lat\": 22.57688,\n      \"long\": 88.31857,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270407\": {\n      \"name\": \"Hanumāngarh\",\n      \"country\": \"IN\",\n      \"lat\": 29.58182,\n      \"long\": 74.32938,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270484\": {\n      \"name\": \"Hālīsahar\",\n      \"country\": \"IN\",\n      \"lat\": 22.93218,\n      \"long\": 88.41859,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270498\": {\n      \"name\": \"Haldwani\",\n      \"country\": \"IN\",\n      \"lat\": 29.22254,\n      \"long\": 79.5286,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270525\": {\n      \"name\": \"Hājīpur\",\n      \"country\": \"IN\",\n      \"lat\": 25.69003,\n      \"long\": 85.20954,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270568\": {\n      \"name\": \"Hābra\",\n      \"country\": \"IN\",\n      \"lat\": 22.84202,\n      \"long\": 88.65606,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270583\": {\n      \"name\": \"Gwalior\",\n      \"country\": \"IN\",\n      \"lat\": 26.22983,\n      \"long\": 78.17337,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270642\": {\n      \"name\": \"Gurgaon\",\n      \"country\": \"IN\",\n      \"lat\": 28.4601,\n      \"long\": 77.02635,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270668\": {\n      \"name\": \"Guntūr\",\n      \"country\": \"IN\",\n      \"lat\": 16.29974,\n      \"long\": 80.45729,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270670\": {\n      \"name\": \"Guntakal\",\n      \"country\": \"IN\",\n      \"lat\": 15.17126,\n      \"long\": 77.36565,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270711\": {\n      \"name\": \"Guna\",\n      \"country\": \"IN\",\n      \"lat\": 24.64761,\n      \"long\": 77.31191,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270752\": {\n      \"name\": \"Gulbarga\",\n      \"country\": \"IN\",\n      \"lat\": 17.33763,\n      \"long\": 76.83787,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270801\": {\n      \"name\": \"Gudivāda\",\n      \"country\": \"IN\",\n      \"lat\": 16.43171,\n      \"long\": 80.9963,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270896\": {\n      \"name\": \"Gosāba\",\n      \"country\": \"IN\",\n      \"lat\": 22.16547,\n      \"long\": 88.8007,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270926\": {\n      \"name\": \"Gorakhpur\",\n      \"country\": \"IN\",\n      \"lat\": 29.44768,\n      \"long\": 75.67206,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270927\": {\n      \"name\": \"Gorakhpur\",\n      \"country\": \"IN\",\n      \"lat\": 26.75479,\n      \"long\": 83.37235,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270990\": {\n      \"name\": \"Gondia\",\n      \"country\": \"IN\",\n      \"lat\": 21.46015,\n      \"long\": 80.19203,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270994\": {\n      \"name\": \"Gondal\",\n      \"country\": \"IN\",\n      \"lat\": 21.96074,\n      \"long\": 70.80255,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1270996\": {\n      \"name\": \"Gonda\",\n      \"country\": \"IN\",\n      \"lat\": 27.13253,\n      \"long\": 81.96897,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1271107\": {\n      \"name\": \"Godhra\",\n      \"country\": \"IN\",\n      \"lat\": 22.77547,\n      \"long\": 73.61488,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1271306\": {\n      \"name\": \"Ghāzīpur\",\n      \"country\": \"IN\",\n      \"lat\": 25.58052,\n      \"long\": 83.58058,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1271308\": {\n      \"name\": \"Ghāziābād\",\n      \"country\": \"IN\",\n      \"lat\": 28.66535,\n      \"long\": 77.43915,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1271439\": {\n      \"name\": \"Gaya\",\n      \"country\": \"IN\",\n      \"lat\": 24.79686,\n      \"long\": 85.00385,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1271476\": {\n      \"name\": \"Guwahati\",\n      \"country\": \"IN\",\n      \"lat\": 26.1844,\n      \"long\": 91.7458,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1271662\": {\n      \"name\": \"Gangāwati\",\n      \"country\": \"IN\",\n      \"lat\": 15.43342,\n      \"long\": 76.5293,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1271675\": {\n      \"name\": \"Gangāpur\",\n      \"country\": \"IN\",\n      \"lat\": 26.47249,\n      \"long\": 76.71744,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1271685\": {\n      \"name\": \"Gangānagar\",\n      \"country\": \"IN\",\n      \"lat\": 29.92009,\n      \"long\": 73.87496,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1271715\": {\n      \"name\": \"Ghandinagar\",\n      \"country\": \"IN\",\n      \"lat\": 23.21667,\n      \"long\": 72.68333,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1271717\": {\n      \"name\": \"Gāndhīdhām\",\n      \"country\": \"IN\",\n      \"lat\": 23.08333,\n      \"long\": 70.13333,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1271850\": {\n      \"name\": \"Gadag\",\n      \"country\": \"IN\",\n      \"lat\": 15.42977,\n      \"long\": 75.62971,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1271883\": {\n      \"name\": \"Fīrozpur\",\n      \"country\": \"IN\",\n      \"lat\": 30.92574,\n      \"long\": 74.61311,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1271885\": {\n      \"name\": \"Fīrozābād\",\n      \"country\": \"IN\",\n      \"lat\": 27.14941,\n      \"long\": 78.4018,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1271912\": {\n      \"name\": \"Fatehpur\",\n      \"country\": \"IN\",\n      \"lat\": 25.93036,\n      \"long\": 80.8139,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1271942\": {\n      \"name\": \"Farrukhābād\",\n      \"country\": \"IN\",\n      \"lat\": 27.39048,\n      \"long\": 79.58007,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1271951\": {\n      \"name\": \"Farīdābād\",\n      \"country\": \"IN\",\n      \"lat\": 28.41124,\n      \"long\": 77.31316,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1271976\": {\n      \"name\": \"Faizābād\",\n      \"country\": \"IN\",\n      \"lat\": 26.77691,\n      \"long\": 82.13292,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1271987\": {\n      \"name\": \"Etāwah\",\n      \"country\": \"IN\",\n      \"lat\": 26.7778,\n      \"long\": 79.02159,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1272013\": {\n      \"name\": \"Erode\",\n      \"country\": \"IN\",\n      \"lat\": 11.3428,\n      \"long\": 77.72741,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1272051\": {\n      \"name\": \"Elūru\",\n      \"country\": \"IN\",\n      \"lat\": 16.71084,\n      \"long\": 81.10559,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1272175\": {\n      \"name\": \"Durgāpur\",\n      \"country\": \"IN\",\n      \"lat\": 23.49957,\n      \"long\": 87.32155,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1272181\": {\n      \"name\": \"Durg\",\n      \"country\": \"IN\",\n      \"lat\": 21.18333,\n      \"long\": 81.28333,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1272243\": {\n      \"name\": \"Dam Dam\",\n      \"country\": \"IN\",\n      \"lat\": 22.63341,\n      \"long\": 88.42286,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1272423\": {\n      \"name\": \"Dombivli\",\n      \"country\": \"IN\",\n      \"lat\": 19.21667,\n      \"long\": 73.08333,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1272543\": {\n      \"name\": \"Dindigul\",\n      \"country\": \"IN\",\n      \"lat\": 10.36896,\n      \"long\": 77.98036,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1272552\": {\n      \"name\": \"Dimāpur\",\n      \"country\": \"IN\",\n      \"lat\": 25.91174,\n      \"long\": 93.7217,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1272648\": {\n      \"name\": \"Dibrugarh\",\n      \"country\": \"IN\",\n      \"lat\": 27.47989,\n      \"long\": 94.90837,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1272691\": {\n      \"name\": \"Dhule\",\n      \"country\": \"IN\",\n      \"lat\": 20.90251,\n      \"long\": 74.77735,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1272805\": {\n      \"name\": \"Dhaulpur\",\n      \"country\": \"IN\",\n      \"lat\": 26.69286,\n      \"long\": 77.87968,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1272842\": {\n      \"name\": \"Dharmavaram\",\n      \"country\": \"IN\",\n      \"lat\": 14.41494,\n      \"long\": 77.71995,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1272979\": {\n      \"name\": \"Dhanbād\",\n      \"country\": \"IN\",\n      \"lat\": 23.80199,\n      \"long\": 86.44324,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1273066\": {\n      \"name\": \"Dewas\",\n      \"country\": \"IN\",\n      \"lat\": 22.96585,\n      \"long\": 76.05526,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1273193\": {\n      \"name\": \"Deoria\",\n      \"country\": \"IN\",\n      \"lat\": 26.50167,\n      \"long\": 83.77936,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1273294\": {\n      \"name\": \"Delhi\",\n      \"country\": \"IN\",\n      \"lat\": 28.65195,\n      \"long\": 77.23149,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1273309\": {\n      \"name\": \"Dehri\",\n      \"country\": \"IN\",\n      \"lat\": 24.90504,\n      \"long\": 84.18289,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1273313\": {\n      \"name\": \"Dehradun\",\n      \"country\": \"IN\",\n      \"lat\": 30.32443,\n      \"long\": 78.03392,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1273467\": {\n      \"name\": \"Dārjiling\",\n      \"country\": \"IN\",\n      \"lat\": 27.03333,\n      \"long\": 88.26667,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1273491\": {\n      \"name\": \"Darbhanga\",\n      \"country\": \"IN\",\n      \"lat\": 26.15216,\n      \"long\": 85.89707,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1273581\": {\n      \"name\": \"Dānāpur\",\n      \"country\": \"IN\",\n      \"lat\": 25.6368,\n      \"long\": 85.04586,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1273587\": {\n      \"name\": \"Damoh\",\n      \"country\": \"IN\",\n      \"lat\": 23.83653,\n      \"long\": 79.44134,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1273780\": {\n      \"name\": \"Cuttack\",\n      \"country\": \"IN\",\n      \"lat\": 20.46497,\n      \"long\": 85.87927,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1273800\": {\n      \"name\": \"Cuddapah\",\n      \"country\": \"IN\",\n      \"lat\": 14.4775,\n      \"long\": 78.82353,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1273802\": {\n      \"name\": \"Cuddalore\",\n      \"country\": \"IN\",\n      \"lat\": 11.74629,\n      \"long\": 79.76436,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1273865\": {\n      \"name\": \"Coimbatore\",\n      \"country\": \"IN\",\n      \"lat\": 11.00555,\n      \"long\": 76.96612,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1273874\": {\n      \"name\": \"Cochin\",\n      \"country\": \"IN\",\n      \"lat\": 9.93988,\n      \"long\": 76.26022,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1273892\": {\n      \"name\": \"Chūru\",\n      \"country\": \"IN\",\n      \"lat\": 28.30415,\n      \"long\": 74.96718,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1274040\": {\n      \"name\": \"Chittaurgarh\",\n      \"country\": \"IN\",\n      \"lat\": 24.88963,\n      \"long\": 74.62403,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1274056\": {\n      \"name\": \"Chitradurga\",\n      \"country\": \"IN\",\n      \"lat\": 14.22262,\n      \"long\": 76.40038,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1274220\": {\n      \"name\": \"Chikmagalūr\",\n      \"country\": \"IN\",\n      \"lat\": 13.32231,\n      \"long\": 75.774,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1274304\": {\n      \"name\": \"Chhindwāra\",\n      \"country\": \"IN\",\n      \"lat\": 22.05697,\n      \"long\": 78.93958,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1274337\": {\n      \"name\": \"Chhatarpur\",\n      \"country\": \"IN\",\n      \"lat\": 24.91422,\n      \"long\": 79.58781,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1274353\": {\n      \"name\": \"Chhapra\",\n      \"country\": \"IN\",\n      \"lat\": 25.781,\n      \"long\": 84.73089,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1274553\": {\n      \"name\": \"Chās\",\n      \"country\": \"IN\",\n      \"lat\": 23.63556,\n      \"long\": 86.16712,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1274693\": {\n      \"name\": \"Chandrapur\",\n      \"country\": \"IN\",\n      \"lat\": 19.94711,\n      \"long\": 79.29607,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1274746\": {\n      \"name\": \"Chandigarh\",\n      \"country\": \"IN\",\n      \"lat\": 30.73629,\n      \"long\": 76.7884,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1274767\": {\n      \"name\": \"Chandausi\",\n      \"country\": \"IN\",\n      \"lat\": 28.45302,\n      \"long\": 78.78295,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1274784\": {\n      \"name\": \"Chandannagar\",\n      \"country\": \"IN\",\n      \"lat\": 22.86225,\n      \"long\": 88.36796,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1275004\": {\n      \"name\": \"Kolkata\",\n      \"country\": \"IN\",\n      \"lat\": 22.56263,\n      \"long\": 88.36304,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1275068\": {\n      \"name\": \"Burhānpur\",\n      \"country\": \"IN\",\n      \"lat\": 21.30898,\n      \"long\": 76.22996,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1275120\": {\n      \"name\": \"Bulandshahr\",\n      \"country\": \"IN\",\n      \"lat\": 28.40296,\n      \"long\": 77.85824,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1275163\": {\n      \"name\": \"Budaun\",\n      \"country\": \"IN\",\n      \"lat\": 28.0362,\n      \"long\": 79.12631,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1275198\": {\n      \"name\": \"Brahmapur\",\n      \"country\": \"IN\",\n      \"lat\": 19.31151,\n      \"long\": 84.7929,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1275218\": {\n      \"name\": \"Botād\",\n      \"country\": \"IN\",\n      \"lat\": 22.16917,\n      \"long\": 71.66671,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1275248\": {\n      \"name\": \"Borivli\",\n      \"country\": \"IN\",\n      \"lat\": 19.23496,\n      \"long\": 72.85976,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1275339\": {\n      \"name\": \"Mumbai\",\n      \"country\": \"IN\",\n      \"lat\": 19.07283,\n      \"long\": 72.88261,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1275362\": {\n      \"name\": \"Bokāro\",\n      \"country\": \"IN\",\n      \"lat\": 23.78732,\n      \"long\": 85.95622,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1275610\": {\n      \"name\": \"Bilimora\",\n      \"country\": \"IN\",\n      \"lat\": 20.76957,\n      \"long\": 72.96134,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1275637\": {\n      \"name\": \"Bilāspur\",\n      \"country\": \"IN\",\n      \"lat\": 22.07402,\n      \"long\": 82.1566,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1275665\": {\n      \"name\": \"Bīkāner\",\n      \"country\": \"IN\",\n      \"lat\": 28.02094,\n      \"long\": 73.30749,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1275701\": {\n      \"name\": \"Bijapur\",\n      \"country\": \"IN\",\n      \"lat\": 16.82442,\n      \"long\": 75.71537,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1275716\": {\n      \"name\": \"Bihār Sharīf\",\n      \"country\": \"IN\",\n      \"lat\": 25.19729,\n      \"long\": 85.52374,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1275738\": {\n      \"name\": \"Bīdar\",\n      \"country\": \"IN\",\n      \"lat\": 17.91331,\n      \"long\": 77.53011,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1275778\": {\n      \"name\": \"Bhusāwal\",\n      \"country\": \"IN\",\n      \"lat\": 21.04658,\n      \"long\": 75.78175,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1275812\": {\n      \"name\": \"Bhuj\",\n      \"country\": \"IN\",\n      \"lat\": 23.25397,\n      \"long\": 69.66928,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1275817\": {\n      \"name\": \"Bhubaneshwar\",\n      \"country\": \"IN\",\n      \"lat\": 20.27241,\n      \"long\": 85.83385,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1275841\": {\n      \"name\": \"Bhopal\",\n      \"country\": \"IN\",\n      \"lat\": 23.25469,\n      \"long\": 77.40289,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1275899\": {\n      \"name\": \"Bhiwāni\",\n      \"country\": \"IN\",\n      \"lat\": 28.79776,\n      \"long\": 76.13833,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1275901\": {\n      \"name\": \"Bhiwandi\",\n      \"country\": \"IN\",\n      \"lat\": 19.30023,\n      \"long\": 73.05881,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1275926\": {\n      \"name\": \"Bhind\",\n      \"country\": \"IN\",\n      \"lat\": 26.56671,\n      \"long\": 78.78728,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1275947\": {\n      \"name\": \"Bhīmavaram\",\n      \"country\": \"IN\",\n      \"lat\": 16.54078,\n      \"long\": 81.52322,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1275960\": {\n      \"name\": \"Bhīlwāra\",\n      \"country\": \"IN\",\n      \"lat\": 25.34644,\n      \"long\": 74.63523,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1275971\": {\n      \"name\": \"Bhilai\",\n      \"country\": \"IN\",\n      \"lat\": 21.21667,\n      \"long\": 81.43333,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1276014\": {\n      \"name\": \"Bhayandar\",\n      \"country\": \"IN\",\n      \"lat\": 19.30157,\n      \"long\": 72.85107,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1276032\": {\n      \"name\": \"Bhāvnagar\",\n      \"country\": \"IN\",\n      \"lat\": 21.77445,\n      \"long\": 72.1525,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1276058\": {\n      \"name\": \"Bhātpāra\",\n      \"country\": \"IN\",\n      \"lat\": 22.86643,\n      \"long\": 88.40113,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1276070\": {\n      \"name\": \"Bhatinda\",\n      \"country\": \"IN\",\n      \"lat\": 30.20747,\n      \"long\": 74.93893,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1276100\": {\n      \"name\": \"Bharūch\",\n      \"country\": \"IN\",\n      \"lat\": 21.69482,\n      \"long\": 72.9805,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1276128\": {\n      \"name\": \"Bharatpur\",\n      \"country\": \"IN\",\n      \"lat\": 27.21731,\n      \"long\": 77.49009,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1276300\": {\n      \"name\": \"Bhāgalpur\",\n      \"country\": \"IN\",\n      \"lat\": 25.24446,\n      \"long\": 86.97183,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1276320\": {\n      \"name\": \"Bhadreswar\",\n      \"country\": \"IN\",\n      \"lat\": 22.82449,\n      \"long\": 88.33841,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1276321\": {\n      \"name\": \"Bhadrāvati\",\n      \"country\": \"IN\",\n      \"lat\": 13.84846,\n      \"long\": 75.70502,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1276393\": {\n      \"name\": \"Bettiah\",\n      \"country\": \"IN\",\n      \"lat\": 26.8024,\n      \"long\": 84.49873,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1276509\": {\n      \"name\": \"Bellary\",\n      \"country\": \"IN\",\n      \"lat\": 15.14575,\n      \"long\": 76.91751,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1276533\": {\n      \"name\": \"Belgaum\",\n      \"country\": \"IN\",\n      \"lat\": 15.85212,\n      \"long\": 74.50447,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1276609\": {\n      \"name\": \"Begusarai\",\n      \"country\": \"IN\",\n      \"lat\": 25.41853,\n      \"long\": 86.13389,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1276634\": {\n      \"name\": \"Beāwar\",\n      \"country\": \"IN\",\n      \"lat\": 26.10119,\n      \"long\": 74.32028,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1276720\": {\n      \"name\": \"Batāla\",\n      \"country\": \"IN\",\n      \"lat\": 31.81861,\n      \"long\": 75.20278,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1276736\": {\n      \"name\": \"Basti\",\n      \"country\": \"IN\",\n      \"lat\": 26.79446,\n      \"long\": 82.73285,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1276856\": {\n      \"name\": \"Bārsi\",\n      \"country\": \"IN\",\n      \"lat\": 18.23454,\n      \"long\": 75.69275,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1276895\": {\n      \"name\": \"Barnāla\",\n      \"country\": \"IN\",\n      \"lat\": 30.37451,\n      \"long\": 75.5487,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1277013\": {\n      \"name\": \"Bareilly\",\n      \"country\": \"IN\",\n      \"lat\": 28.34702,\n      \"long\": 79.42193,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1277029\": {\n      \"name\": \"Barddhamān\",\n      \"country\": \"IN\",\n      \"lat\": 23.25572,\n      \"long\": 87.85691,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1277065\": {\n      \"name\": \"Bārāsat\",\n      \"country\": \"IN\",\n      \"lat\": 22.72154,\n      \"long\": 88.48198,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1277066\": {\n      \"name\": \"Bārāsat\",\n      \"country\": \"IN\",\n      \"lat\": 22.22516,\n      \"long\": 88.45086,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1277082\": {\n      \"name\": \"Baranagar\",\n      \"country\": \"IN\",\n      \"lat\": 22.64132,\n      \"long\": 88.37727,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1277100\": {\n      \"name\": \"Bārākpur\",\n      \"country\": \"IN\",\n      \"lat\": 22.76602,\n      \"long\": 88.36336,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1277240\": {\n      \"name\": \"Bānsbāria\",\n      \"country\": \"IN\",\n      \"lat\": 22.95387,\n      \"long\": 88.40098,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1277264\": {\n      \"name\": \"Bānkura\",\n      \"country\": \"IN\",\n      \"lat\": 23.23241,\n      \"long\": 87.0716,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1277324\": {\n      \"name\": \"Bangaon\",\n      \"country\": \"IN\",\n      \"lat\": 23.04553,\n      \"long\": 88.83084,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1277333\": {\n      \"name\": \"Bangalore\",\n      \"country\": \"IN\",\n      \"lat\": 12.97194,\n      \"long\": 77.59369,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1277397\": {\n      \"name\": \"Bānda\",\n      \"country\": \"IN\",\n      \"lat\": 25.47534,\n      \"long\": 80.3358,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1277508\": {\n      \"name\": \"Bālurghāt\",\n      \"country\": \"IN\",\n      \"lat\": 25.22099,\n      \"long\": 88.77732,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1277539\": {\n      \"name\": \"Bāli\",\n      \"country\": \"IN\",\n      \"lat\": 22.64859,\n      \"long\": 88.34115,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1277599\": {\n      \"name\": \"Balasore\",\n      \"country\": \"IN\",\n      \"lat\": 21.49266,\n      \"long\": 86.93348,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1277780\": {\n      \"name\": \"Baidyabāti\",\n      \"country\": \"IN\",\n      \"lat\": 22.78498,\n      \"long\": 88.32586,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1277799\": {\n      \"name\": \"Bahraich\",\n      \"country\": \"IN\",\n      \"lat\": 27.5743,\n      \"long\": 81.59588,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1277820\": {\n      \"name\": \"Baharampur\",\n      \"country\": \"IN\",\n      \"lat\": 24.10473,\n      \"long\": 88.25155,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1277835\": {\n      \"name\": \"Bahādurgarh\",\n      \"country\": \"IN\",\n      \"lat\": 28.69108,\n      \"long\": 76.9316,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1277939\": {\n      \"name\": \"Bagaha\",\n      \"country\": \"IN\",\n      \"lat\": 27.09918,\n      \"long\": 84.09003,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1277976\": {\n      \"name\": \"Badlapur\",\n      \"country\": \"IN\",\n      \"lat\": 19.15516,\n      \"long\": 73.26553,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1278083\": {\n      \"name\": \"Āzamgarh\",\n      \"country\": \"IN\",\n      \"lat\": 26.06758,\n      \"long\": 83.18364,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1278130\": {\n      \"name\": \"Āvadi\",\n      \"country\": \"IN\",\n      \"lat\": 13.1147,\n      \"long\": 80.10981,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1278149\": {\n      \"name\": \"Aurangabad\",\n      \"country\": \"IN\",\n      \"lat\": 19.87757,\n      \"long\": 75.34226,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1278314\": {\n      \"name\": \"Āsansol\",\n      \"country\": \"IN\",\n      \"lat\": 23.68333,\n      \"long\": 86.98333,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1278483\": {\n      \"name\": \"Ara\",\n      \"country\": \"IN\",\n      \"lat\": 25.56314,\n      \"long\": 84.67137,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1278672\": {\n      \"name\": \"Anantapur\",\n      \"country\": \"IN\",\n      \"lat\": 14.6794,\n      \"long\": 77.59877,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1278685\": {\n      \"name\": \"Ānand\",\n      \"country\": \"IN\",\n      \"lat\": 22.55251,\n      \"long\": 72.9552,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1278708\": {\n      \"name\": \"Amroha\",\n      \"country\": \"IN\",\n      \"lat\": 28.90314,\n      \"long\": 78.46984,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1278710\": {\n      \"name\": \"Amritsar\",\n      \"country\": \"IN\",\n      \"lat\": 31.63661,\n      \"long\": 74.87476,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1278718\": {\n      \"name\": \"Amrāvati\",\n      \"country\": \"IN\",\n      \"lat\": 20.93333,\n      \"long\": 77.75,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1278815\": {\n      \"name\": \"Ambur\",\n      \"country\": \"IN\",\n      \"lat\": 12.79163,\n      \"long\": 78.71644,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1278840\": {\n      \"name\": \"Ambattūr\",\n      \"country\": \"IN\",\n      \"lat\": 13.09818,\n      \"long\": 80.16152,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1278860\": {\n      \"name\": \"Ambāla\",\n      \"country\": \"IN\",\n      \"lat\": 30.36285,\n      \"long\": 76.79516,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1278903\": {\n      \"name\": \"Amarnāth\",\n      \"country\": \"IN\",\n      \"lat\": 19.2,\n      \"long\": 73.16667,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1278946\": {\n      \"name\": \"Alwar\",\n      \"country\": \"IN\",\n      \"lat\": 27.56246,\n      \"long\": 76.625,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1278985\": {\n      \"name\": \"Alleppey\",\n      \"country\": \"IN\",\n      \"lat\": 9.49004,\n      \"long\": 76.3264,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1278994\": {\n      \"name\": \"Allahābād\",\n      \"country\": \"IN\",\n      \"lat\": 25.44894,\n      \"long\": 81.83329,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1279017\": {\n      \"name\": \"Alīgarh\",\n      \"country\": \"IN\",\n      \"lat\": 27.88334,\n      \"long\": 78.07475,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1279064\": {\n      \"name\": \"Alandur\",\n      \"country\": \"IN\",\n      \"lat\": 13.0025,\n      \"long\": 80.20611,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1279105\": {\n      \"name\": \"Akola\",\n      \"country\": \"IN\",\n      \"lat\": 20.70957,\n      \"long\": 76.9981,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1279159\": {\n      \"name\": \"Ajmer\",\n      \"country\": \"IN\",\n      \"lat\": 26.44976,\n      \"long\": 74.64116,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1279186\": {\n      \"name\": \"Aizawl\",\n      \"country\": \"IN\",\n      \"lat\": 23.72894,\n      \"long\": 92.71791,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1279228\": {\n      \"name\": \"Ahmadnagar\",\n      \"country\": \"IN\",\n      \"lat\": 19.09457,\n      \"long\": 74.73843,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1279233\": {\n      \"name\": \"Ahmedabad\",\n      \"country\": \"IN\",\n      \"lat\": 23.02579,\n      \"long\": 72.58727,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1279259\": {\n      \"name\": \"Āgra\",\n      \"country\": \"IN\",\n      \"lat\": 27.18333,\n      \"long\": 78.01667,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1279290\": {\n      \"name\": \"Agartala\",\n      \"country\": \"IN\",\n      \"lat\": 23.83605,\n      \"long\": 91.27939,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1279335\": {\n      \"name\": \"Ādoni\",\n      \"country\": \"IN\",\n      \"lat\": 15.62509,\n      \"long\": 77.27536,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1279344\": {\n      \"name\": \"Ādilābād\",\n      \"country\": \"IN\",\n      \"lat\": 19.67203,\n      \"long\": 78.5359,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1279390\": {\n      \"name\": \"Achalpur\",\n      \"country\": \"IN\",\n      \"lat\": 21.25722,\n      \"long\": 77.50861,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1279403\": {\n      \"name\": \"Abohar\",\n      \"country\": \"IN\",\n      \"lat\": 30.14453,\n      \"long\": 74.19552,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1280737\": {\n      \"name\": \"Lhasa\",\n      \"country\": \"CN\",\n      \"lat\": 29.65,\n      \"long\": 91.1,\n      \"zone\": \"Asia/Urumqi\"\n    },\n    \"1280849\": {\n      \"name\": \"Kashi\",\n      \"country\": \"CN\",\n      \"lat\": 39.47066,\n      \"long\": 75.98951,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1280957\": {\n      \"name\": \"Jiayuguan\",\n      \"country\": \"CN\",\n      \"lat\": 39.81121,\n      \"long\": 98.28618,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1281019\": {\n      \"name\": \"Hotan\",\n      \"country\": \"CN\",\n      \"lat\": 37.1075,\n      \"long\": 79.93548,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1282027\": {\n      \"name\": \"Male\",\n      \"country\": \"MV\",\n      \"lat\": 4.1748,\n      \"long\": 73.50888,\n      \"zone\": \"Indian/Maldives\"\n    },\n    \"1282898\": {\n      \"name\": \"Pokhara\",\n      \"country\": \"NP\",\n      \"lat\": 28.26689,\n      \"long\": 83.96851,\n      \"zone\": \"Asia/Kathmandu\"\n    },\n    \"1282931\": {\n      \"name\": \"Pātan\",\n      \"country\": \"NP\",\n      \"lat\": 27.67658,\n      \"long\": 85.31417,\n      \"zone\": \"Asia/Kathmandu\"\n    },\n    \"1283240\": {\n      \"name\": \"Kathmandu\",\n      \"country\": \"NP\",\n      \"lat\": 27.70169,\n      \"long\": 85.3206,\n      \"zone\": \"Asia/Kathmandu\"\n    },\n    \"1283460\": {\n      \"name\": \"Dharān Bāzār\",\n      \"country\": \"NP\",\n      \"lat\": 26.81248,\n      \"long\": 87.28355,\n      \"zone\": \"Asia/Kathmandu\"\n    },\n    \"1283581\": {\n      \"name\": \"Bīrganj\",\n      \"country\": \"NP\",\n      \"lat\": 27.01043,\n      \"long\": 84.87735,\n      \"zone\": \"Asia/Kathmandu\"\n    },\n    \"1283582\": {\n      \"name\": \"Birātnagar\",\n      \"country\": \"NP\",\n      \"lat\": 26.4831,\n      \"long\": 87.28337,\n      \"zone\": \"Asia/Kathmandu\"\n    },\n    \"1283613\": {\n      \"name\": \"Bharatpur\",\n      \"country\": \"NP\",\n      \"lat\": 27.68333,\n      \"long\": 84.43333,\n      \"zone\": \"Asia/Kathmandu\"\n    },\n    \"1285173\": {\n      \"name\": \"Yenangyaung\",\n      \"country\": \"MM\",\n      \"lat\": 20.46504,\n      \"long\": 94.8712,\n      \"zone\": \"Asia/Rangoon\"\n    },\n    \"1290596\": {\n      \"name\": \"Taungoo\",\n      \"country\": \"MM\",\n      \"lat\": 18.94291,\n      \"long\": 96.43408,\n      \"zone\": \"Asia/Rangoon\"\n    },\n    \"1292288\": {\n      \"name\": \"Thaton\",\n      \"country\": \"MM\",\n      \"lat\": 16.91867,\n      \"long\": 97.37001,\n      \"zone\": \"Asia/Rangoon\"\n    },\n    \"1293625\": {\n      \"name\": \"Dawei\",\n      \"country\": \"MM\",\n      \"lat\": 14.07375,\n      \"long\": 98.19423,\n      \"zone\": \"Asia/Rangoon\"\n    },\n    \"1293960\": {\n      \"name\": \"Taunggyi\",\n      \"country\": \"MM\",\n      \"lat\": 20.78919,\n      \"long\": 97.03776,\n      \"zone\": \"Asia/Rangoon\"\n    },\n    \"1295765\": {\n      \"name\": \"Sittwe\",\n      \"country\": \"MM\",\n      \"lat\": 20.14624,\n      \"long\": 92.89835,\n      \"zone\": \"Asia/Rangoon\"\n    },\n    \"1298824\": {\n      \"name\": \"Yangon\",\n      \"country\": \"MM\",\n      \"lat\": 16.80528,\n      \"long\": 96.15611,\n      \"zone\": \"Asia/Rangoon\"\n    },\n    \"1299154\": {\n      \"name\": \"Pyay\",\n      \"country\": \"MM\",\n      \"lat\": 18.82464,\n      \"long\": 95.22216,\n      \"zone\": \"Asia/Rangoon\"\n    },\n    \"1300466\": {\n      \"name\": \"Bago\",\n      \"country\": \"MM\",\n      \"lat\": 17.33521,\n      \"long\": 96.48135,\n      \"zone\": \"Asia/Rangoon\"\n    },\n    \"1302439\": {\n      \"name\": \"Pakokku\",\n      \"country\": \"MM\",\n      \"lat\": 21.33489,\n      \"long\": 95.08438,\n      \"zone\": \"Asia/Rangoon\"\n    },\n    \"1307835\": {\n      \"name\": \"Myingyan\",\n      \"country\": \"MM\",\n      \"lat\": 21.46002,\n      \"long\": 95.3884,\n      \"zone\": \"Asia/Rangoon\"\n    },\n    \"1308465\": {\n      \"name\": \"Mawlamyine\",\n      \"country\": \"MM\",\n      \"lat\": 16.49051,\n      \"long\": 97.62825,\n      \"zone\": \"Asia/Rangoon\"\n    },\n    \"1308522\": {\n      \"name\": \"Monywa\",\n      \"country\": \"MM\",\n      \"lat\": 22.10856,\n      \"long\": 95.13583,\n      \"zone\": \"Asia/Rangoon\"\n    },\n    \"1309611\": {\n      \"name\": \"Myeik\",\n      \"country\": \"MM\",\n      \"lat\": 12.43954,\n      \"long\": 98.60028,\n      \"zone\": \"Asia/Rangoon\"\n    },\n    \"1309793\": {\n      \"name\": \"Meiktila\",\n      \"country\": \"MM\",\n      \"lat\": 20.87776,\n      \"long\": 95.85844,\n      \"zone\": \"Asia/Rangoon\"\n    },\n    \"1309937\": {\n      \"name\": \"Pyin Oo Lwin\",\n      \"country\": \"MM\",\n      \"lat\": 22.03501,\n      \"long\": 96.45683,\n      \"zone\": \"Asia/Rangoon\"\n    },\n    \"1311874\": {\n      \"name\": \"Mandalay\",\n      \"country\": \"MM\",\n      \"lat\": 21.97473,\n      \"long\": 96.08359,\n      \"zone\": \"Asia/Rangoon\"\n    },\n    \"1314759\": {\n      \"name\": \"Lashio\",\n      \"country\": \"MM\",\n      \"lat\": 22.9359,\n      \"long\": 97.7498,\n      \"zone\": \"Asia/Rangoon\"\n    },\n    \"1325211\": {\n      \"name\": \"Hinthada\",\n      \"country\": \"MM\",\n      \"lat\": 17.64944,\n      \"long\": 95.45705,\n      \"zone\": \"Asia/Rangoon\"\n    },\n    \"1328421\": {\n      \"name\": \"Pathein\",\n      \"country\": \"MM\",\n      \"lat\": 16.77919,\n      \"long\": 94.73212,\n      \"zone\": \"Asia/Rangoon\"\n    },\n    \"1332083\": {\n      \"name\": \"Bahāwalnagar\",\n      \"country\": \"PK\",\n      \"lat\": 30.55083,\n      \"long\": 73.39083,\n      \"zone\": \"Asia/Karachi\"\n    },\n    \"1336134\": {\n      \"name\": \"Cox’s Bāzār\",\n      \"country\": \"BD\",\n      \"lat\": 21.45388,\n      \"long\": 91.96765,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1336135\": {\n      \"name\": \"Khulna\",\n      \"country\": \"BD\",\n      \"lat\": 22.80979,\n      \"long\": 89.56439,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1336137\": {\n      \"name\": \"Barisāl\",\n      \"country\": \"BD\",\n      \"lat\": 22.70497,\n      \"long\": 90.37013,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1336140\": {\n      \"name\": \"Jessore\",\n      \"country\": \"BD\",\n      \"lat\": 23.16971,\n      \"long\": 89.21371,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1336143\": {\n      \"name\": \"Pābna\",\n      \"country\": \"BD\",\n      \"lat\": 24.00644,\n      \"long\": 89.2372,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1336144\": {\n      \"name\": \"Tāngāil\",\n      \"country\": \"BD\",\n      \"lat\": 24.24984,\n      \"long\": 89.91655,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1337233\": {\n      \"name\": \"Bogra\",\n      \"country\": \"BD\",\n      \"lat\": 24.85098,\n      \"long\": 89.37108,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1337240\": {\n      \"name\": \"Nawābganj\",\n      \"country\": \"BD\",\n      \"lat\": 24.59025,\n      \"long\": 88.27444,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1337248\": {\n      \"name\": \"Sherpur\",\n      \"country\": \"BD\",\n      \"lat\": 25.01881,\n      \"long\": 90.01751,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"1344377\": {\n      \"name\": \"Haldia\",\n      \"country\": \"IN\",\n      \"lat\": 22.06046,\n      \"long\": 88.10975,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1348818\": {\n      \"name\": \"Nangi\",\n      \"country\": \"IN\",\n      \"lat\": 22.50833,\n      \"long\": 88.21528,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1430991\": {\n      \"name\": \"Soyībug\",\n      \"country\": \"IN\",\n      \"lat\": 34.08049,\n      \"long\": 74.70871,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"1486209\": {\n      \"name\": \"Yekaterinburg\",\n      \"country\": \"RU\",\n      \"lat\": 56.8519,\n      \"long\": 60.6122,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"1488754\": {\n      \"name\": \"Tyumen\",\n      \"country\": \"RU\",\n      \"lat\": 57.15222,\n      \"long\": 65.52722,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"1489425\": {\n      \"name\": \"Tomsk\",\n      \"country\": \"RU\",\n      \"lat\": 56.49771,\n      \"long\": 84.97437,\n      \"zone\": \"Asia/Novosibirsk\"\n    },\n    \"1489530\": {\n      \"name\": \"Tobol’sk\",\n      \"country\": \"RU\",\n      \"lat\": 58.19807,\n      \"long\": 68.25457,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"1490624\": {\n      \"name\": \"Surgut\",\n      \"country\": \"RU\",\n      \"lat\": 61.25,\n      \"long\": 73.41667,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"1493467\": {\n      \"name\": \"Rubtsovsk\",\n      \"country\": \"RU\",\n      \"lat\": 51.51473,\n      \"long\": 81.20613,\n      \"zone\": \"Asia/Omsk\"\n    },\n    \"1494114\": {\n      \"name\": \"Prokop’yevsk\",\n      \"country\": \"RU\",\n      \"lat\": 53.9059,\n      \"long\": 86.719,\n      \"zone\": \"Asia/Novokuznetsk\"\n    },\n    \"1496153\": {\n      \"name\": \"Omsk\",\n      \"country\": \"RU\",\n      \"lat\": 54.99244,\n      \"long\": 73.36859,\n      \"zone\": \"Asia/Omsk\"\n    },\n    \"1496503\": {\n      \"name\": \"Noyabrsk\",\n      \"country\": \"RU\",\n      \"lat\": 63.19309,\n      \"long\": 75.43728,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"1496747\": {\n      \"name\": \"Novosibirsk\",\n      \"country\": \"RU\",\n      \"lat\": 55.0415,\n      \"long\": 82.9346,\n      \"zone\": \"Asia/Novosibirsk\"\n    },\n    \"1496990\": {\n      \"name\": \"Novokuznetsk\",\n      \"country\": \"RU\",\n      \"lat\": 53.7557,\n      \"long\": 87.1099,\n      \"zone\": \"Asia/Novokuznetsk\"\n    },\n    \"1497337\": {\n      \"name\": \"Norilsk\",\n      \"country\": \"RU\",\n      \"lat\": 69.3535,\n      \"long\": 88.2027,\n      \"zone\": \"Asia/Krasnoyarsk\"\n    },\n    \"1497543\": {\n      \"name\": \"Nizhnevartovsk\",\n      \"country\": \"RU\",\n      \"lat\": 60.9344,\n      \"long\": 76.5531,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"1497917\": {\n      \"name\": \"Nefteyugansk\",\n      \"country\": \"RU\",\n      \"lat\": 61.09979,\n      \"long\": 72.60349,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"1498894\": {\n      \"name\": \"Miass\",\n      \"country\": \"RU\",\n      \"lat\": 55.045,\n      \"long\": 60.10833,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"1498920\": {\n      \"name\": \"Mezhdurechensk\",\n      \"country\": \"RU\",\n      \"lat\": 53.69417,\n      \"long\": 88.06028,\n      \"zone\": \"Asia/Novokuznetsk\"\n    },\n    \"1500665\": {\n      \"name\": \"Leninsk-Kuznetsky\",\n      \"country\": \"RU\",\n      \"lat\": 54.6567,\n      \"long\": 86.1737,\n      \"zone\": \"Asia/Novokuznetsk\"\n    },\n    \"1500973\": {\n      \"name\": \"Kyzyl\",\n      \"country\": \"RU\",\n      \"lat\": 51.71472,\n      \"long\": 94.45338,\n      \"zone\": \"Asia/Krasnoyarsk\"\n    },\n    \"1501321\": {\n      \"name\": \"Kurgan\",\n      \"country\": \"RU\",\n      \"lat\": 55.45,\n      \"long\": 65.33333,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"1502026\": {\n      \"name\": \"Krasnoyarsk\",\n      \"country\": \"RU\",\n      \"lat\": 56.01839,\n      \"long\": 92.86717,\n      \"zone\": \"Asia/Krasnoyarsk\"\n    },\n    \"1503277\": {\n      \"name\": \"Kiselëvsk\",\n      \"country\": \"RU\",\n      \"lat\": 53.99,\n      \"long\": 86.6621,\n      \"zone\": \"Asia/Novokuznetsk\"\n    },\n    \"1503901\": {\n      \"name\": \"Kemerovo\",\n      \"country\": \"RU\",\n      \"lat\": 55.33333,\n      \"long\": 86.08333,\n      \"zone\": \"Asia/Novokuznetsk\"\n    },\n    \"1504682\": {\n      \"name\": \"Kansk\",\n      \"country\": \"RU\",\n      \"lat\": 56.20167,\n      \"long\": 95.7175,\n      \"zone\": \"Asia/Krasnoyarsk\"\n    },\n    \"1504826\": {\n      \"name\": \"Kamensk-Ural’skiy\",\n      \"country\": \"RU\",\n      \"lat\": 56.4185,\n      \"long\": 61.9329,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"1508291\": {\n      \"name\": \"Chelyabinsk\",\n      \"country\": \"RU\",\n      \"lat\": 55.15402,\n      \"long\": 61.42915,\n      \"zone\": \"Asia/Yekaterinburg\"\n    },\n    \"1510018\": {\n      \"name\": \"Biysk\",\n      \"country\": \"RU\",\n      \"lat\": 52.53639,\n      \"long\": 85.20722,\n      \"zone\": \"Asia/Omsk\"\n    },\n    \"1510853\": {\n      \"name\": \"Barnaul\",\n      \"country\": \"RU\",\n      \"lat\": 53.36056,\n      \"long\": 83.76361,\n      \"zone\": \"Asia/Omsk\"\n    },\n    \"1512165\": {\n      \"name\": \"Achinsk\",\n      \"country\": \"RU\",\n      \"lat\": 56.2694,\n      \"long\": 90.4993,\n      \"zone\": \"Asia/Krasnoyarsk\"\n    },\n    \"1512236\": {\n      \"name\": \"Abakan\",\n      \"country\": \"RU\",\n      \"lat\": 53.71556,\n      \"long\": 91.42917,\n      \"zone\": \"Asia/Krasnoyarsk\"\n    },\n    \"1512473\": {\n      \"name\": \"Urganch\",\n      \"country\": \"UZ\",\n      \"lat\": 41.55,\n      \"long\": 60.63333,\n      \"zone\": \"Asia/Samarkand\"\n    },\n    \"1512569\": {\n      \"name\": \"Tashkent\",\n      \"country\": \"UZ\",\n      \"lat\": 41.26465,\n      \"long\": 69.21627,\n      \"zone\": \"Asia/Tashkent\"\n    },\n    \"1512979\": {\n      \"name\": \"Qo‘qon\",\n      \"country\": \"UZ\",\n      \"lat\": 40.52861,\n      \"long\": 70.9425,\n      \"zone\": \"Asia/Tashkent\"\n    },\n    \"1513064\": {\n      \"name\": \"Olmaliq\",\n      \"country\": \"UZ\",\n      \"lat\": 40.84472,\n      \"long\": 69.59833,\n      \"zone\": \"Asia/Tashkent\"\n    },\n    \"1513131\": {\n      \"name\": \"Navoiy\",\n      \"country\": \"UZ\",\n      \"lat\": 40.08444,\n      \"long\": 65.37917,\n      \"zone\": \"Asia/Samarkand\"\n    },\n    \"1513157\": {\n      \"name\": \"Namangan\",\n      \"country\": \"UZ\",\n      \"lat\": 40.9983,\n      \"long\": 71.67257,\n      \"zone\": \"Asia/Tashkent\"\n    },\n    \"1513243\": {\n      \"name\": \"Marg‘ilon\",\n      \"country\": \"UZ\",\n      \"lat\": 40.47111,\n      \"long\": 71.72472,\n      \"zone\": \"Asia/Tashkent\"\n    },\n    \"1513886\": {\n      \"name\": \"Jizzax\",\n      \"country\": \"UZ\",\n      \"lat\": 40.11583,\n      \"long\": 67.84222,\n      \"zone\": \"Asia/Samarkand\"\n    },\n    \"1514019\": {\n      \"name\": \"Fergana\",\n      \"country\": \"UZ\",\n      \"lat\": 40.38421,\n      \"long\": 71.78432,\n      \"zone\": \"Asia/Tashkent\"\n    },\n    \"1514210\": {\n      \"name\": \"Chirchiq\",\n      \"country\": \"UZ\",\n      \"lat\": 41.46889,\n      \"long\": 69.58222,\n      \"zone\": \"Asia/Tashkent\"\n    },\n    \"1514581\": {\n      \"name\": \"Angren\",\n      \"country\": \"UZ\",\n      \"lat\": 41.01667,\n      \"long\": 70.14361,\n      \"zone\": \"Asia/Tashkent\"\n    },\n    \"1514588\": {\n      \"name\": \"Andijon\",\n      \"country\": \"UZ\",\n      \"lat\": 40.78206,\n      \"long\": 72.34424,\n      \"zone\": \"Asia/Tashkent\"\n    },\n    \"1514879\": {\n      \"name\": \"Khŭjand\",\n      \"country\": \"TJ\",\n      \"lat\": 40.28256,\n      \"long\": 69.62216,\n      \"zone\": \"Asia/Dushanbe\"\n    },\n    \"1516589\": {\n      \"name\": \"Zhezqazghan\",\n      \"country\": \"KZ\",\n      \"lat\": 47.78333,\n      \"long\": 67.76667,\n      \"zone\": \"Asia/Almaty\"\n    },\n    \"1516905\": {\n      \"name\": \"Taraz\",\n      \"country\": \"KZ\",\n      \"lat\": 42.9,\n      \"long\": 71.36667,\n      \"zone\": \"Asia/Almaty\"\n    },\n    \"1518262\": {\n      \"name\": \"Temirtau\",\n      \"country\": \"KZ\",\n      \"lat\": 50.05494,\n      \"long\": 72.96464,\n      \"zone\": \"Asia/Almaty\"\n    },\n    \"1518542\": {\n      \"name\": \"Taldykorgan\",\n      \"country\": \"KZ\",\n      \"lat\": 45.01556,\n      \"long\": 78.37389,\n      \"zone\": \"Asia/Almaty\"\n    },\n    \"1518543\": {\n      \"name\": \"Taldyqorghan\",\n      \"country\": \"KZ\",\n      \"lat\": 45,\n      \"long\": 77.91667,\n      \"zone\": \"Asia/Almaty\"\n    },\n    \"1518980\": {\n      \"name\": \"Shymkent\",\n      \"country\": \"KZ\",\n      \"lat\": 42.3,\n      \"long\": 69.6,\n      \"zone\": \"Asia/Almaty\"\n    },\n    \"1519422\": {\n      \"name\": \"Semey\",\n      \"country\": \"KZ\",\n      \"lat\": 50.42675,\n      \"long\": 80.26669,\n      \"zone\": \"Asia/Almaty\"\n    },\n    \"1519843\": {\n      \"name\": \"Rudnyy\",\n      \"country\": \"KZ\",\n      \"lat\": 52.9729,\n      \"long\": 63.11677,\n      \"zone\": \"Asia/Qyzylorda\"\n    },\n    \"1519922\": {\n      \"name\": \"Kyzylorda\",\n      \"country\": \"KZ\",\n      \"lat\": 44.85278,\n      \"long\": 65.50917,\n      \"zone\": \"Asia/Qyzylorda\"\n    },\n    \"1519928\": {\n      \"name\": \"Kostanay\",\n      \"country\": \"KZ\",\n      \"lat\": 53.21435,\n      \"long\": 63.62463,\n      \"zone\": \"Asia/Qyzylorda\"\n    },\n    \"1520172\": {\n      \"name\": \"Petropavlovsk\",\n      \"country\": \"KZ\",\n      \"lat\": 54.87279,\n      \"long\": 69.143,\n      \"zone\": \"Asia/Almaty\"\n    },\n    \"1520240\": {\n      \"name\": \"Pavlodar\",\n      \"country\": \"KZ\",\n      \"lat\": 52.27401,\n      \"long\": 77.00438,\n      \"zone\": \"Asia/Almaty\"\n    },\n    \"1520316\": {\n      \"name\": \"Ust-Kamenogorsk\",\n      \"country\": \"KZ\",\n      \"lat\": 49.97143,\n      \"long\": 82.60586,\n      \"zone\": \"Asia/Almaty\"\n    },\n    \"1522203\": {\n      \"name\": \"Kokshetau\",\n      \"country\": \"KZ\",\n      \"lat\": 53.28245,\n      \"long\": 69.39692,\n      \"zone\": \"Asia/Almaty\"\n    },\n    \"1524325\": {\n      \"name\": \"Ekibastuz\",\n      \"country\": \"KZ\",\n      \"lat\": 51.72371,\n      \"long\": 75.32287,\n      \"zone\": \"Asia/Almaty\"\n    },\n    \"1526273\": {\n      \"name\": \"Astana\",\n      \"country\": \"KZ\",\n      \"lat\": 51.1801,\n      \"long\": 71.44598,\n      \"zone\": \"Asia/Almaty\"\n    },\n    \"1526384\": {\n      \"name\": \"Almaty\",\n      \"country\": \"KZ\",\n      \"lat\": 43.25654,\n      \"long\": 76.92848,\n      \"zone\": \"Asia/Almaty\"\n    },\n    \"1527534\": {\n      \"name\": \"Osh\",\n      \"country\": \"KG\",\n      \"lat\": 40.52828,\n      \"long\": 72.7985,\n      \"zone\": \"Asia/Bishkek\"\n    },\n    \"1528675\": {\n      \"name\": \"Bishkek\",\n      \"country\": \"KG\",\n      \"lat\": 42.87,\n      \"long\": 74.59,\n      \"zone\": \"Asia/Bishkek\"\n    },\n    \"1529102\": {\n      \"name\": \"Ürümqi\",\n      \"country\": \"CN\",\n      \"lat\": 43.80096,\n      \"long\": 87.60046,\n      \"zone\": \"Asia/Urumqi\"\n    },\n    \"1529114\": {\n      \"name\": \"Laochenglu\",\n      \"country\": \"CN\",\n      \"lat\": 42.94769,\n      \"long\": 89.17886,\n      \"zone\": \"Asia/Urumqi\"\n    },\n    \"1529195\": {\n      \"name\": \"Shihezi\",\n      \"country\": \"CN\",\n      \"lat\": 44.3023,\n      \"long\": 86.03694,\n      \"zone\": \"Asia/Urumqi\"\n    },\n    \"1529376\": {\n      \"name\": \"Sayibage\",\n      \"country\": \"CN\",\n      \"lat\": 41.76055,\n      \"long\": 86.15231,\n      \"zone\": \"Asia/Urumqi\"\n    },\n    \"1529484\": {\n      \"name\": \"Hami\",\n      \"country\": \"CN\",\n      \"lat\": 42.83393,\n      \"long\": 93.50601,\n      \"zone\": \"Asia/Urumqi\"\n    },\n    \"1529569\": {\n      \"name\": \"Changji\",\n      \"country\": \"CN\",\n      \"lat\": 44.00782,\n      \"long\": 87.30461,\n      \"zone\": \"Asia/Urumqi\"\n    },\n    \"1529641\": {\n      \"name\": \"Aral\",\n      \"country\": \"CN\",\n      \"lat\": 40.54184,\n      \"long\": 81.26566,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1529651\": {\n      \"name\": \"Altay\",\n      \"country\": \"CN\",\n      \"lat\": 47.84864,\n      \"long\": 88.13361,\n      \"zone\": \"Asia/Urumqi\"\n    },\n    \"1529660\": {\n      \"name\": \"Yingbazha\",\n      \"country\": \"CN\",\n      \"lat\": 41.18418,\n      \"long\": 80.27921,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1538229\": {\n      \"name\": \"Navoiy Shahri\",\n      \"country\": \"UZ\",\n      \"lat\": 40.09294,\n      \"long\": 65.3712,\n      \"zone\": \"Asia/Samarkand\"\n    },\n    \"1538637\": {\n      \"name\": \"Seversk\",\n      \"country\": \"RU\",\n      \"lat\": 56.60056,\n      \"long\": 84.88639,\n      \"zone\": \"Asia/Novosibirsk\"\n    },\n    \"1560037\": {\n      \"name\": \"Yên Vinh\",\n      \"country\": \"VN\",\n      \"lat\": 18.66667,\n      \"long\": 105.66667,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1562414\": {\n      \"name\": \"Vũng Tàu\",\n      \"country\": \"VN\",\n      \"lat\": 10.34599,\n      \"long\": 107.08426,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1562693\": {\n      \"name\": \"Vĩnh Long\",\n      \"country\": \"VN\",\n      \"lat\": 10.25369,\n      \"long\": 105.9722,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1562798\": {\n      \"name\": \"Vinh\",\n      \"country\": \"VN\",\n      \"lat\": 18.67337,\n      \"long\": 105.69232,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1566083\": {\n      \"name\": \"Ho Chi Minh City\",\n      \"country\": \"VN\",\n      \"lat\": 10.82302,\n      \"long\": 106.62965,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1566166\": {\n      \"name\": \"Thanh Hóa\",\n      \"country\": \"VN\",\n      \"lat\": 19.8,\n      \"long\": 105.76667,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1566319\": {\n      \"name\": \"Thành Phố Thái Nguyên\",\n      \"country\": \"VN\",\n      \"lat\": 21.59422,\n      \"long\": 105.84817,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1567788\": {\n      \"name\": \"Sóc Trăng\",\n      \"country\": \"VN\",\n      \"lat\": 9.59995,\n      \"long\": 105.97193,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1568043\": {\n      \"name\": \"Sa Pá\",\n      \"country\": \"VN\",\n      \"lat\": 22.34023,\n      \"long\": 103.84415,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1568510\": {\n      \"name\": \"Rạch Giá\",\n      \"country\": \"VN\",\n      \"lat\": 10.01245,\n      \"long\": 105.08091,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1568574\": {\n      \"name\": \"Qui Nhon\",\n      \"country\": \"VN\",\n      \"lat\": 13.77648,\n      \"long\": 109.22367,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1569684\": {\n      \"name\": \"Pleiku\",\n      \"country\": \"VN\",\n      \"lat\": 13.98333,\n      \"long\": 108,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1571058\": {\n      \"name\": \"Phan Thiết\",\n      \"country\": \"VN\",\n      \"lat\": 10.92889,\n      \"long\": 108.10208,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1572151\": {\n      \"name\": \"Nha Trang\",\n      \"country\": \"VN\",\n      \"lat\": 12.24507,\n      \"long\": 109.19432,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1573517\": {\n      \"name\": \"Thành Phố Nam Định\",\n      \"country\": \"VN\",\n      \"lat\": 20.43389,\n      \"long\": 106.17729,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1574023\": {\n      \"name\": \"Mỹ Tho\",\n      \"country\": \"VN\",\n      \"lat\": 10.36004,\n      \"long\": 106.35996,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1575627\": {\n      \"name\": \"Long Xuyên\",\n      \"country\": \"VN\",\n      \"lat\": 10.38639,\n      \"long\": 105.43518,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1577995\": {\n      \"name\": \"La Gi\",\n      \"country\": \"VN\",\n      \"lat\": 10.65993,\n      \"long\": 107.77206,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1580240\": {\n      \"name\": \"Huế\",\n      \"country\": \"VN\",\n      \"lat\": 16.4619,\n      \"long\": 107.59546,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1580410\": {\n      \"name\": \"Thành Phố Hạ Long\",\n      \"country\": \"VN\",\n      \"lat\": 20.95045,\n      \"long\": 107.07336,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1580830\": {\n      \"name\": \"Thành Phố Hòa Bình\",\n      \"country\": \"VN\",\n      \"lat\": 20.81717,\n      \"long\": 105.33759,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1581130\": {\n      \"name\": \"Hanoi\",\n      \"country\": \"VN\",\n      \"lat\": 21.0245,\n      \"long\": 105.84117,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1581298\": {\n      \"name\": \"Haiphong\",\n      \"country\": \"VN\",\n      \"lat\": 20.86481,\n      \"long\": 106.68345,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1583992\": {\n      \"name\": \"Da Nang\",\n      \"country\": \"VN\",\n      \"lat\": 16.06778,\n      \"long\": 108.22083,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1584071\": {\n      \"name\": \"Ðà Lạt\",\n      \"country\": \"VN\",\n      \"lat\": 11.94646,\n      \"long\": 108.44193,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1586203\": {\n      \"name\": \"Cần Thơ\",\n      \"country\": \"VN\",\n      \"lat\": 10.03711,\n      \"long\": 105.78825,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1586296\": {\n      \"name\": \"Cần Giuộc\",\n      \"country\": \"VN\",\n      \"lat\": 10.60857,\n      \"long\": 106.67135,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1586350\": {\n      \"name\": \"Cam Ranh\",\n      \"country\": \"VN\",\n      \"lat\": 11.92144,\n      \"long\": 109.15913,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1586357\": {\n      \"name\": \"Cẩm Phả Mines\",\n      \"country\": \"VN\",\n      \"lat\": 21.01667,\n      \"long\": 107.3,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1586443\": {\n      \"name\": \"Cà Mau\",\n      \"country\": \"VN\",\n      \"lat\": 9.17682,\n      \"long\": 105.15242,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1586896\": {\n      \"name\": \"Buôn Ma Thuột\",\n      \"country\": \"VN\",\n      \"lat\": 12.66747,\n      \"long\": 108.03775,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1587923\": {\n      \"name\": \"Biên Hòa\",\n      \"country\": \"VN\",\n      \"lat\": 10.94469,\n      \"long\": 106.82432,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1588275\": {\n      \"name\": \"Bảo Lộc\",\n      \"country\": \"VN\",\n      \"lat\": 11.54798,\n      \"long\": 107.80772,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1591474\": {\n      \"name\": \"Thành phố Bạc Liêu\",\n      \"country\": \"VN\",\n      \"lat\": 9.29414,\n      \"long\": 105.72776,\n      \"zone\": \"Asia/Ho_Chi_Minh\"\n    },\n    \"1605239\": {\n      \"name\": \"Udon Thani\",\n      \"country\": \"TH\",\n      \"lat\": 17.41567,\n      \"long\": 102.78589,\n      \"zone\": \"Asia/Bangkok\"\n    },\n    \"1605245\": {\n      \"name\": \"Ubon Ratchathani\",\n      \"country\": \"TH\",\n      \"lat\": 15.23844,\n      \"long\": 104.84866,\n      \"zone\": \"Asia/Bangkok\"\n    },\n    \"1606250\": {\n      \"name\": \"Si Racha\",\n      \"country\": \"TH\",\n      \"lat\": 13.17372,\n      \"long\": 100.93111,\n      \"zone\": \"Asia/Bangkok\"\n    },\n    \"1606590\": {\n      \"name\": \"Samut Prakan\",\n      \"country\": \"TH\",\n      \"lat\": 13.59934,\n      \"long\": 100.59675,\n      \"zone\": \"Asia/Bangkok\"\n    },\n    \"1607017\": {\n      \"name\": \"Rayong\",\n      \"country\": \"TH\",\n      \"lat\": 12.68095,\n      \"long\": 101.25798,\n      \"zone\": \"Asia/Bangkok\"\n    },\n    \"1607508\": {\n      \"name\": \"Phra Pradaeng\",\n      \"country\": \"TH\",\n      \"lat\": 13.65855,\n      \"long\": 100.53362,\n      \"zone\": \"Asia/Bangkok\"\n    },\n    \"1607708\": {\n      \"name\": \"Phitsanulok\",\n      \"country\": \"TH\",\n      \"lat\": 16.82481,\n      \"long\": 100.25858,\n      \"zone\": \"Asia/Bangkok\"\n    },\n    \"1608048\": {\n      \"name\": \"Pak Kret\",\n      \"country\": \"TH\",\n      \"lat\": 13.91301,\n      \"long\": 100.49883,\n      \"zone\": \"Asia/Bangkok\"\n    },\n    \"1608133\": {\n      \"name\": \"Mueang Nonthaburi\",\n      \"country\": \"TH\",\n      \"lat\": 13.86075,\n      \"long\": 100.51477,\n      \"zone\": \"Asia/Bangkok\"\n    },\n    \"1608529\": {\n      \"name\": \"Nakhon Ratchasima\",\n      \"country\": \"TH\",\n      \"lat\": 14.97066,\n      \"long\": 102.10196,\n      \"zone\": \"Asia/Bangkok\"\n    },\n    \"1608534\": {\n      \"name\": \"Nakhon Pathom\",\n      \"country\": \"TH\",\n      \"lat\": 13.8196,\n      \"long\": 100.04427,\n      \"zone\": \"Asia/Bangkok\"\n    },\n    \"1609350\": {\n      \"name\": \"Bangkok\",\n      \"country\": \"TH\",\n      \"lat\": 13.75398,\n      \"long\": 100.50144,\n      \"zone\": \"Asia/Bangkok\"\n    },\n    \"1609776\": {\n      \"name\": \"Khon Kaen\",\n      \"country\": \"TH\",\n      \"lat\": 16.44671,\n      \"long\": 102.833,\n      \"zone\": \"Asia/Bangkok\"\n    },\n    \"1609899\": {\n      \"name\": \"Khlong Luang\",\n      \"country\": \"TH\",\n      \"lat\": 14.06467,\n      \"long\": 100.64578,\n      \"zone\": \"Asia/Bangkok\"\n    },\n    \"1610780\": {\n      \"name\": \"Hat Yai\",\n      \"country\": \"TH\",\n      \"lat\": 7.00836,\n      \"long\": 100.47668,\n      \"zone\": \"Asia/Bangkok\"\n    },\n    \"1611110\": {\n      \"name\": \"Chon Buri\",\n      \"country\": \"TH\",\n      \"lat\": 13.3622,\n      \"long\": 100.98345,\n      \"zone\": \"Asia/Bangkok\"\n    },\n    \"1613769\": {\n      \"name\": \"Ban Rangsit\",\n      \"country\": \"TH\",\n      \"lat\": 14.02775,\n      \"long\": 100.75603,\n      \"zone\": \"Asia/Bangkok\"\n    },\n    \"1621177\": {\n      \"name\": \"Yogyakarta\",\n      \"country\": \"ID\",\n      \"lat\": -7.78278,\n      \"long\": 110.36083,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1621613\": {\n      \"name\": \"Weru\",\n      \"country\": \"ID\",\n      \"lat\": -6.711,\n      \"long\": 108.5037,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1622636\": {\n      \"name\": \"Ungaran\",\n      \"country\": \"ID\",\n      \"lat\": -7.13972,\n      \"long\": 110.405,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1622786\": {\n      \"name\": \"Makassar\",\n      \"country\": \"ID\",\n      \"lat\": -5.14,\n      \"long\": 119.4221,\n      \"zone\": \"Asia/Makassar\"\n    },\n    \"1624041\": {\n      \"name\": \"Ternate\",\n      \"country\": \"ID\",\n      \"lat\": 0.79065,\n      \"long\": 127.38424,\n      \"zone\": \"Asia/Jayapura\"\n    },\n    \"1624494\": {\n      \"name\": \"Tegal\",\n      \"country\": \"ID\",\n      \"lat\": -6.8694,\n      \"long\": 109.1402,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1624647\": {\n      \"name\": \"Tasikmalaya\",\n      \"country\": \"ID\",\n      \"lat\": -7.3274,\n      \"long\": 108.2207,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1624863\": {\n      \"name\": \"Tanjungpinang\",\n      \"country\": \"ID\",\n      \"lat\": 0.91667,\n      \"long\": 104.45,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1624917\": {\n      \"name\": \"Bandarlampung\",\n      \"country\": \"ID\",\n      \"lat\": -5.42544,\n      \"long\": 105.25803,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1625084\": {\n      \"name\": \"Tangerang\",\n      \"country\": \"ID\",\n      \"lat\": -6.17806,\n      \"long\": 106.63,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1625812\": {\n      \"name\": \"Surakarta\",\n      \"country\": \"ID\",\n      \"lat\": -7.55611,\n      \"long\": 110.83167,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1625822\": {\n      \"name\": \"Surabaya\",\n      \"country\": \"ID\",\n      \"lat\": -7.24917,\n      \"long\": 112.75083,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1626100\": {\n      \"name\": \"Sumedang Utara\",\n      \"country\": \"ID\",\n      \"lat\": -6.85,\n      \"long\": 107.91667,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1626381\": {\n      \"name\": \"Sukabumi\",\n      \"country\": \"ID\",\n      \"lat\": -6.91806,\n      \"long\": 106.92667,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1626542\": {\n      \"name\": \"Sorong\",\n      \"country\": \"ID\",\n      \"lat\": -0.87956,\n      \"long\": 131.26104,\n      \"zone\": \"Asia/Jayapura\"\n    },\n    \"1626560\": {\n      \"name\": \"Soreang\",\n      \"country\": \"ID\",\n      \"lat\": -7.03306,\n      \"long\": 107.51833,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1626801\": {\n      \"name\": \"Situbondo\",\n      \"country\": \"ID\",\n      \"lat\": -7.70623,\n      \"long\": 114.00976,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1626916\": {\n      \"name\": \"Singkawang\",\n      \"country\": \"ID\",\n      \"lat\": 0.90925,\n      \"long\": 108.98463,\n      \"zone\": \"Asia/Pontianak\"\n    },\n    \"1626932\": {\n      \"name\": \"Singaraja\",\n      \"country\": \"ID\",\n      \"lat\": -8.112,\n      \"long\": 115.08818,\n      \"zone\": \"Asia/Makassar\"\n    },\n    \"1627253\": {\n      \"name\": \"Sidoarjo\",\n      \"country\": \"ID\",\n      \"lat\": -7.4478,\n      \"long\": 112.7183,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1627549\": {\n      \"name\": \"Serang\",\n      \"country\": \"ID\",\n      \"lat\": -6.1149,\n      \"long\": 106.1502,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1627610\": {\n      \"name\": \"Sepatan\",\n      \"country\": \"ID\",\n      \"lat\": -6.11889,\n      \"long\": 106.575,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1627896\": {\n      \"name\": \"Semarang\",\n      \"country\": \"ID\",\n      \"lat\": -6.9932,\n      \"long\": 110.4203,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1628453\": {\n      \"name\": \"Sawangan\",\n      \"country\": \"ID\",\n      \"lat\": -6.40278,\n      \"long\": 106.77444,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1629001\": {\n      \"name\": \"Samarinda\",\n      \"country\": \"ID\",\n      \"lat\": -0.48585,\n      \"long\": 117.1466,\n      \"zone\": \"Asia/Makassar\"\n    },\n    \"1629131\": {\n      \"name\": \"Salatiga\",\n      \"country\": \"ID\",\n      \"lat\": -7.33194,\n      \"long\": 110.49278,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1629710\": {\n      \"name\": \"Rengasdengklok\",\n      \"country\": \"ID\",\n      \"lat\": -6.15917,\n      \"long\": 107.29806,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1630058\": {\n      \"name\": \"Rangkasbitung\",\n      \"country\": \"ID\",\n      \"lat\": -6.3591,\n      \"long\": 106.2494,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1630328\": {\n      \"name\": \"Purwokerto\",\n      \"country\": \"ID\",\n      \"lat\": -7.42139,\n      \"long\": 109.23444,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1630333\": {\n      \"name\": \"Purwodadi\",\n      \"country\": \"ID\",\n      \"lat\": -7.0868,\n      \"long\": 110.9158,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1630341\": {\n      \"name\": \"Purwakarta\",\n      \"country\": \"ID\",\n      \"lat\": -6.55694,\n      \"long\": 107.44333,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1630634\": {\n      \"name\": \"Probolinggo\",\n      \"country\": \"ID\",\n      \"lat\": -7.7543,\n      \"long\": 113.2159,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1630789\": {\n      \"name\": \"Pontianak\",\n      \"country\": \"ID\",\n      \"lat\": -0.03109,\n      \"long\": 109.32199,\n      \"zone\": \"Asia/Pontianak\"\n    },\n    \"1630997\": {\n      \"name\": \"Plumbon\",\n      \"country\": \"ID\",\n      \"lat\": -6.705,\n      \"long\": 108.47278,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1631393\": {\n      \"name\": \"Prabumulih\",\n      \"country\": \"ID\",\n      \"lat\": -3.43447,\n      \"long\": 104.23056,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1631648\": {\n      \"name\": \"Pemalang\",\n      \"country\": \"ID\",\n      \"lat\": -6.9,\n      \"long\": 109.36667,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1631761\": {\n      \"name\": \"Pekanbaru\",\n      \"country\": \"ID\",\n      \"lat\": 0.53333,\n      \"long\": 101.45,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1631766\": {\n      \"name\": \"Pekalongan\",\n      \"country\": \"ID\",\n      \"lat\": -6.8886,\n      \"long\": 109.6753,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1631905\": {\n      \"name\": \"Payakumbuh\",\n      \"country\": \"ID\",\n      \"lat\": -0.2159,\n      \"long\": 100.6334,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1631992\": {\n      \"name\": \"Pati\",\n      \"country\": \"ID\",\n      \"lat\": -6.7559,\n      \"long\": 111.038,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1632033\": {\n      \"name\": \"Pasuruan\",\n      \"country\": \"ID\",\n      \"lat\": -7.6453,\n      \"long\": 112.9075,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1632197\": {\n      \"name\": \"Paseh\",\n      \"country\": \"ID\",\n      \"lat\": -7.1026,\n      \"long\": 107.7641,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1632228\": {\n      \"name\": \"Pasarkemis\",\n      \"country\": \"ID\",\n      \"lat\": -6.17028,\n      \"long\": 106.53028,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1632276\": {\n      \"name\": \"Parung\",\n      \"country\": \"ID\",\n      \"lat\": -6.42139,\n      \"long\": 106.73306,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1632353\": {\n      \"name\": \"Parepare\",\n      \"country\": \"ID\",\n      \"lat\": -4.0135,\n      \"long\": 119.6255,\n      \"zone\": \"Asia/Makassar\"\n    },\n    \"1632654\": {\n      \"name\": \"Pangkalpinang\",\n      \"country\": \"ID\",\n      \"lat\": -2.12914,\n      \"long\": 106.11377,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1632937\": {\n      \"name\": \"Pamulang\",\n      \"country\": \"ID\",\n      \"lat\": -6.34278,\n      \"long\": 106.73833,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1632998\": {\n      \"name\": \"Pamanukan\",\n      \"country\": \"ID\",\n      \"lat\": -6.28417,\n      \"long\": 107.81056,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1633034\": {\n      \"name\": \"Palu\",\n      \"country\": \"ID\",\n      \"lat\": -0.8917,\n      \"long\": 119.8707,\n      \"zone\": \"Asia/Makassar\"\n    },\n    \"1633037\": {\n      \"name\": \"Palopo\",\n      \"country\": \"ID\",\n      \"lat\": -2.9925,\n      \"long\": 120.19694,\n      \"zone\": \"Asia/Makassar\"\n    },\n    \"1633070\": {\n      \"name\": \"Palembang\",\n      \"country\": \"ID\",\n      \"lat\": -2.91673,\n      \"long\": 104.7458,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1633118\": {\n      \"name\": \"Palangkaraya\",\n      \"country\": \"ID\",\n      \"lat\": -2.2136,\n      \"long\": 113.9108,\n      \"zone\": \"Asia/Pontianak\"\n    },\n    \"1633419\": {\n      \"name\": \"Padang\",\n      \"country\": \"ID\",\n      \"lat\": -0.94924,\n      \"long\": 100.35427,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1635111\": {\n      \"name\": \"Mojokerto\",\n      \"country\": \"ID\",\n      \"lat\": -7.4664,\n      \"long\": 112.4338,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1635283\": {\n      \"name\": \"Metro\",\n      \"country\": \"ID\",\n      \"lat\": -5.11306,\n      \"long\": 105.30667,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1635882\": {\n      \"name\": \"Mataram\",\n      \"country\": \"ID\",\n      \"lat\": -8.58333,\n      \"long\": 116.11667,\n      \"zone\": \"Asia/Makassar\"\n    },\n    \"1636022\": {\n      \"name\": \"Martapura\",\n      \"country\": \"ID\",\n      \"lat\": -3.4109,\n      \"long\": 114.8642,\n      \"zone\": \"Asia/Makassar\"\n    },\n    \"1636544\": {\n      \"name\": \"Manado\",\n      \"country\": \"ID\",\n      \"lat\": 1.48218,\n      \"long\": 124.84892,\n      \"zone\": \"Asia/Makassar\"\n    },\n    \"1636722\": {\n      \"name\": \"Malang\",\n      \"country\": \"ID\",\n      \"lat\": -7.9797,\n      \"long\": 112.6304,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1636884\": {\n      \"name\": \"Magelang\",\n      \"country\": \"ID\",\n      \"lat\": -7.47056,\n      \"long\": 110.21778,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1636930\": {\n      \"name\": \"Madiun\",\n      \"country\": \"ID\",\n      \"lat\": -7.6298,\n      \"long\": 111.5239,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1637090\": {\n      \"name\": \"Lumajang\",\n      \"country\": \"ID\",\n      \"lat\": -8.1335,\n      \"long\": 113.2248,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1637158\": {\n      \"name\": \"Lubuklinggau\",\n      \"country\": \"ID\",\n      \"lat\": -3.2945,\n      \"long\": 102.8614,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1637510\": {\n      \"name\": \"Loa Janan\",\n      \"country\": \"ID\",\n      \"lat\": -0.58295,\n      \"long\": 117.09503,\n      \"zone\": \"Asia/Makassar\"\n    },\n    \"1638063\": {\n      \"name\": \"Lembang\",\n      \"country\": \"ID\",\n      \"lat\": -6.81167,\n      \"long\": 107.6175,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1638284\": {\n      \"name\": \"Lawang\",\n      \"country\": \"ID\",\n      \"lat\": -7.8353,\n      \"long\": 112.6947,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1638868\": {\n      \"name\": \"Labuhanbajo\",\n      \"country\": \"ID\",\n      \"lat\": -8.4964,\n      \"long\": 119.8877,\n      \"zone\": \"Asia/Makassar\"\n    },\n    \"1639362\": {\n      \"name\": \"Kresek\",\n      \"country\": \"ID\",\n      \"lat\": -6.13139,\n      \"long\": 106.37972,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1639900\": {\n      \"name\": \"Klaten\",\n      \"country\": \"ID\",\n      \"lat\": -7.70583,\n      \"long\": 110.60639,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1640344\": {\n      \"name\": \"Kendari\",\n      \"country\": \"ID\",\n      \"lat\": -3.9778,\n      \"long\": 122.51507,\n      \"zone\": \"Asia/Makassar\"\n    },\n    \"1640581\": {\n      \"name\": \"Kedungwuni\",\n      \"country\": \"ID\",\n      \"lat\": -6.97038,\n      \"long\": 109.64794,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1640660\": {\n      \"name\": \"Kediri\",\n      \"country\": \"ID\",\n      \"lat\": -7.81667,\n      \"long\": 112.01667,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1642414\": {\n      \"name\": \"Jombang\",\n      \"country\": \"ID\",\n      \"lat\": -7.54595,\n      \"long\": 112.23307,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1642588\": {\n      \"name\": \"Jember\",\n      \"country\": \"ID\",\n      \"lat\": -8.17211,\n      \"long\": 113.69953,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1642858\": {\n      \"name\": \"Jambi City\",\n      \"country\": \"ID\",\n      \"lat\": -1.6,\n      \"long\": 103.61667,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1642911\": {\n      \"name\": \"Jakarta\",\n      \"country\": \"ID\",\n      \"lat\": -6.21462,\n      \"long\": 106.84513,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1643078\": {\n      \"name\": \"Indramayu\",\n      \"country\": \"ID\",\n      \"lat\": -6.32639,\n      \"long\": 108.32,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1643761\": {\n      \"name\": \"Grogol\",\n      \"country\": \"ID\",\n      \"lat\": -7.60111,\n      \"long\": 110.81861,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1643837\": {\n      \"name\": \"Gorontalo\",\n      \"country\": \"ID\",\n      \"lat\": 0.5412,\n      \"long\": 123.0595,\n      \"zone\": \"Asia/Makassar\"\n    },\n    \"1645133\": {\n      \"name\": \"Dumai\",\n      \"country\": \"ID\",\n      \"lat\": 1.66711,\n      \"long\": 101.44316,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1645457\": {\n      \"name\": \"Dili\",\n      \"country\": \"TL\",\n      \"lat\": -8.55861,\n      \"long\": 125.57361,\n      \"zone\": \"Asia/Dili\"\n    },\n    \"1645518\": {\n      \"name\": \"Depok\",\n      \"country\": \"ID\",\n      \"lat\": -7.7625,\n      \"long\": 110.43167,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1645524\": {\n      \"name\": \"Depok\",\n      \"country\": \"ID\",\n      \"lat\": -6.4,\n      \"long\": 106.81861,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1645528\": {\n      \"name\": \"Denpasar\",\n      \"country\": \"ID\",\n      \"lat\": -8.65,\n      \"long\": 115.21667,\n      \"zone\": \"Asia/Makassar\"\n    },\n    \"1645895\": {\n      \"name\": \"Curug\",\n      \"country\": \"ID\",\n      \"lat\": -6.26583,\n      \"long\": 106.55639,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1646034\": {\n      \"name\": \"Citeureup\",\n      \"country\": \"ID\",\n      \"lat\": -6.48556,\n      \"long\": 106.88194,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1646170\": {\n      \"name\": \"Cirebon\",\n      \"country\": \"ID\",\n      \"lat\": -6.7063,\n      \"long\": 108.557,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1646194\": {\n      \"name\": \"Ciputat\",\n      \"country\": \"ID\",\n      \"lat\": -6.2375,\n      \"long\": 106.69556,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1646448\": {\n      \"name\": \"Cimahi\",\n      \"country\": \"ID\",\n      \"lat\": -6.87222,\n      \"long\": 107.5425,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1646492\": {\n      \"name\": \"Cileunyi\",\n      \"country\": \"ID\",\n      \"lat\": -6.93889,\n      \"long\": 107.75278,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1646494\": {\n      \"name\": \"Cileungsir\",\n      \"country\": \"ID\",\n      \"lat\": -6.39472,\n      \"long\": 106.95917,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1646678\": {\n      \"name\": \"Cikarang\",\n      \"country\": \"ID\",\n      \"lat\": -6.26111,\n      \"long\": 107.15278,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1646698\": {\n      \"name\": \"Cikampek\",\n      \"country\": \"ID\",\n      \"lat\": -6.41972,\n      \"long\": 107.45583,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1647003\": {\n      \"name\": \"Cibinong\",\n      \"country\": \"ID\",\n      \"lat\": -6.48167,\n      \"long\": 106.85417,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1647149\": {\n      \"name\": \"Ciamis\",\n      \"country\": \"ID\",\n      \"lat\": -7.3257,\n      \"long\": 108.3534,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1647383\": {\n      \"name\": \"Ciampea\",\n      \"country\": \"ID\",\n      \"lat\": -6.55472,\n      \"long\": 106.70083,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1648186\": {\n      \"name\": \"Bontang\",\n      \"country\": \"ID\",\n      \"lat\": 0.1324,\n      \"long\": 117.4854,\n      \"zone\": \"Asia/Makassar\"\n    },\n    \"1648473\": {\n      \"name\": \"Bogor\",\n      \"country\": \"ID\",\n      \"lat\": -6.59444,\n      \"long\": 106.78917,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1648580\": {\n      \"name\": \"Blitar\",\n      \"country\": \"ID\",\n      \"lat\": -8.0983,\n      \"long\": 112.1681,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1648636\": {\n      \"name\": \"Bitung\",\n      \"country\": \"ID\",\n      \"lat\": 1.45697,\n      \"long\": 125.1895,\n      \"zone\": \"Asia/Makassar\"\n    },\n    \"1649150\": {\n      \"name\": \"Bengkulu\",\n      \"country\": \"ID\",\n      \"lat\": -3.80044,\n      \"long\": 102.26554,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1649378\": {\n      \"name\": \"Bekasi\",\n      \"country\": \"ID\",\n      \"lat\": -6.2349,\n      \"long\": 106.9896,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1649593\": {\n      \"name\": \"Baturaja\",\n      \"country\": \"ID\",\n      \"lat\": -4.12891,\n      \"long\": 104.16695,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1649881\": {\n      \"name\": \"Batang\",\n      \"country\": \"ID\",\n      \"lat\": -6.4846,\n      \"long\": 110.7083,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1650077\": {\n      \"name\": \"Banyuwangi\",\n      \"country\": \"ID\",\n      \"lat\": -8.2325,\n      \"long\": 114.35755,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1650213\": {\n      \"name\": \"Banjarmasin\",\n      \"country\": \"ID\",\n      \"lat\": -3.31987,\n      \"long\": 114.59075,\n      \"zone\": \"Asia/Makassar\"\n    },\n    \"1650227\": {\n      \"name\": \"Banjaran\",\n      \"country\": \"ID\",\n      \"lat\": -7.04528,\n      \"long\": 107.58778,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1650319\": {\n      \"name\": \"Bangil\",\n      \"country\": \"ID\",\n      \"lat\": -7.59939,\n      \"long\": 112.8186,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1650357\": {\n      \"name\": \"Bandung\",\n      \"country\": \"ID\",\n      \"lat\": -6.90389,\n      \"long\": 107.61861,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1650527\": {\n      \"name\": \"Balikpapan\",\n      \"country\": \"ID\",\n      \"lat\": -1.26753,\n      \"long\": 116.82887,\n      \"zone\": \"Asia/Makassar\"\n    },\n    \"1651112\": {\n      \"name\": \"Astanajapura\",\n      \"country\": \"ID\",\n      \"lat\": -6.8017,\n      \"long\": 108.6311,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1651226\": {\n      \"name\": \"Arjawinangun\",\n      \"country\": \"ID\",\n      \"lat\": -6.64528,\n      \"long\": 108.41028,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1651531\": {\n      \"name\": \"Ambon\",\n      \"country\": \"ID\",\n      \"lat\": -3.69543,\n      \"long\": 128.18141,\n      \"zone\": \"Asia/Jayapura\"\n    },\n    \"1651887\": {\n      \"name\": \"Adiwerna\",\n      \"country\": \"ID\",\n      \"lat\": -6.9375,\n      \"long\": 109.1325,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1651944\": {\n      \"name\": \"Vientiane\",\n      \"country\": \"LA\",\n      \"lat\": 17.96667,\n      \"long\": 102.6,\n      \"zone\": \"Asia/Vientiane\"\n    },\n    \"1665196\": {\n      \"name\": \"Douliu\",\n      \"country\": \"TW\",\n      \"lat\": 23.70944,\n      \"long\": 120.54333,\n      \"zone\": \"Asia/Taipei\"\n    },\n    \"1668341\": {\n      \"name\": \"Taipei\",\n      \"country\": \"TW\",\n      \"lat\": 25.04776,\n      \"long\": 121.53185,\n      \"zone\": \"Asia/Taipei\"\n    },\n    \"1668355\": {\n      \"name\": \"Tainan\",\n      \"country\": \"TW\",\n      \"lat\": 22.99083,\n      \"long\": 120.21333,\n      \"zone\": \"Asia/Taipei\"\n    },\n    \"1668399\": {\n      \"name\": \"Taichung\",\n      \"country\": \"TW\",\n      \"lat\": 24.1469,\n      \"long\": 120.6839,\n      \"zone\": \"Asia/Taipei\"\n    },\n    \"1670029\": {\n      \"name\": \"Banqiao\",\n      \"country\": \"TW\",\n      \"lat\": 25.01427,\n      \"long\": 121.46719,\n      \"zone\": \"Asia/Taipei\"\n    },\n    \"1671566\": {\n      \"name\": \"Nantou\",\n      \"country\": \"TW\",\n      \"lat\": 23.91566,\n      \"long\": 120.66387,\n      \"zone\": \"Asia/Taipei\"\n    },\n    \"1673820\": {\n      \"name\": \"Kaohsiung\",\n      \"country\": \"TW\",\n      \"lat\": 22.61626,\n      \"long\": 120.31333,\n      \"zone\": \"Asia/Taipei\"\n    },\n    \"1674504\": {\n      \"name\": \"Hualian\",\n      \"country\": \"TW\",\n      \"lat\": 23.97694,\n      \"long\": 121.60444,\n      \"zone\": \"Asia/Taipei\"\n    },\n    \"1675151\": {\n      \"name\": \"Hsinchu\",\n      \"country\": \"TW\",\n      \"lat\": 24.80361,\n      \"long\": 120.96861,\n      \"zone\": \"Asia/Taipei\"\n    },\n    \"1678228\": {\n      \"name\": \"Keelung\",\n      \"country\": \"TW\",\n      \"lat\": 25.12825,\n      \"long\": 121.7419,\n      \"zone\": \"Asia/Taipei\"\n    },\n    \"1679432\": {\n      \"name\": \"Zamboanga\",\n      \"country\": \"PH\",\n      \"lat\": 6.91028,\n      \"long\": 122.07389,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1680197\": {\n      \"name\": \"Urdaneta\",\n      \"country\": \"PH\",\n      \"lat\": 15.97611,\n      \"long\": 120.57111,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1680932\": {\n      \"name\": \"Tuguegarao City\",\n      \"country\": \"PH\",\n      \"lat\": 17.61306,\n      \"long\": 121.72694,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1681602\": {\n      \"name\": \"Toledo\",\n      \"country\": \"PH\",\n      \"lat\": 10.3773,\n      \"long\": 123.6386,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1682598\": {\n      \"name\": \"Taytay\",\n      \"country\": \"PH\",\n      \"lat\": 14.55883,\n      \"long\": 121.13285,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1682812\": {\n      \"name\": \"Tarlac City\",\n      \"country\": \"PH\",\n      \"lat\": 15.48017,\n      \"long\": 120.59794,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1683013\": {\n      \"name\": \"Tanza\",\n      \"country\": \"PH\",\n      \"lat\": 14.6753,\n      \"long\": 120.9389,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1683881\": {\n      \"name\": \"Talisay\",\n      \"country\": \"PH\",\n      \"lat\": 10.24472,\n      \"long\": 123.84944,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1684269\": {\n      \"name\": \"Tagum\",\n      \"country\": \"PH\",\n      \"lat\": 7.44778,\n      \"long\": 125.80778,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1684308\": {\n      \"name\": \"Taguig\",\n      \"country\": \"PH\",\n      \"lat\": 14.5243,\n      \"long\": 121.0792,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1686547\": {\n      \"name\": \"Silang\",\n      \"country\": \"PH\",\n      \"lat\": 14.21567,\n      \"long\": 120.97137,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1687687\": {\n      \"name\": \"Santol\",\n      \"country\": \"PH\",\n      \"lat\": 15.16222,\n      \"long\": 120.5675,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1687801\": {\n      \"name\": \"Santiago\",\n      \"country\": \"PH\",\n      \"lat\": 16.68808,\n      \"long\": 121.5487,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1687894\": {\n      \"name\": \"Santa Rosa\",\n      \"country\": \"PH\",\n      \"lat\": 14.31222,\n      \"long\": 121.11139,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1688253\": {\n      \"name\": \"Santa Cruz\",\n      \"country\": \"PH\",\n      \"lat\": 14.2814,\n      \"long\": 121.4161,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1688749\": {\n      \"name\": \"San Pedro\",\n      \"country\": \"PH\",\n      \"lat\": 14.3595,\n      \"long\": 121.0473,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1688830\": {\n      \"name\": \"San Pablo\",\n      \"country\": \"PH\",\n      \"lat\": 14.0683,\n      \"long\": 121.3256,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1689056\": {\n      \"name\": \"San Mateo\",\n      \"country\": \"PH\",\n      \"lat\": 14.6982,\n      \"long\": 121.1236,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1689286\": {\n      \"name\": \"San Juan\",\n      \"country\": \"PH\",\n      \"lat\": 14.6,\n      \"long\": 121.0333,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1689395\": {\n      \"name\": \"San Jose del Monte\",\n      \"country\": \"PH\",\n      \"lat\": 14.81389,\n      \"long\": 121.04528,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1689510\": {\n      \"name\": \"San Jose\",\n      \"country\": \"PH\",\n      \"lat\": 12.35275,\n      \"long\": 121.06761,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1690039\": {\n      \"name\": \"San Fernando\",\n      \"country\": \"PH\",\n      \"lat\": 15.0286,\n      \"long\": 120.6898,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1691444\": {\n      \"name\": \"Roxas City\",\n      \"country\": \"PH\",\n      \"lat\": 11.58528,\n      \"long\": 122.75111,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1692192\": {\n      \"name\": \"Quezon City\",\n      \"country\": \"PH\",\n      \"lat\": 14.6488,\n      \"long\": 121.0509,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1692520\": {\n      \"name\": \"Pulong Santa Cruz\",\n      \"country\": \"PH\",\n      \"lat\": 14.27324,\n      \"long\": 121.07643,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1692685\": {\n      \"name\": \"Puerto Princesa\",\n      \"country\": \"PH\",\n      \"lat\": 9.73917,\n      \"long\": 118.73528,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1695743\": {\n      \"name\": \"Panalanoy\",\n      \"country\": \"PH\",\n      \"lat\": 11.25111,\n      \"long\": 125.00639,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1696710\": {\n      \"name\": \"Pagadian\",\n      \"country\": \"PH\",\n      \"lat\": 7.8257,\n      \"long\": 123.437,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1697018\": {\n      \"name\": \"Ormoc\",\n      \"country\": \"PH\",\n      \"lat\": 11.00639,\n      \"long\": 124.6075,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1697175\": {\n      \"name\": \"Olongapo\",\n      \"country\": \"PH\",\n      \"lat\": 14.82917,\n      \"long\": 120.28278,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1698829\": {\n      \"name\": \"Naga\",\n      \"country\": \"PH\",\n      \"lat\": 13.61917,\n      \"long\": 123.18139,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1699054\": {\n      \"name\": \"Muricay\",\n      \"country\": \"PH\",\n      \"lat\": 7.8275,\n      \"long\": 123.4782,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1699296\": {\n      \"name\": \"Rodriguez\",\n      \"country\": \"PH\",\n      \"lat\": 14.76011,\n      \"long\": 121.19993,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1699802\": {\n      \"name\": \"Meycauayan\",\n      \"country\": \"PH\",\n      \"lat\": 14.73694,\n      \"long\": 120.96083,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1700360\": {\n      \"name\": \"Mati\",\n      \"country\": \"PH\",\n      \"lat\": 6.95508,\n      \"long\": 126.21655,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1701053\": {\n      \"name\": \"Marawi City\",\n      \"country\": \"PH\",\n      \"lat\": 8.0034,\n      \"long\": 124.28395,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1701472\": {\n      \"name\": \"Mantampay\",\n      \"country\": \"PH\",\n      \"lat\": 8.16667,\n      \"long\": 124.21667,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1701500\": {\n      \"name\": \"Mansilingan\",\n      \"country\": \"PH\",\n      \"lat\": 10.63111,\n      \"long\": 122.97889,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1701668\": {\n      \"name\": \"Manila\",\n      \"country\": \"PH\",\n      \"lat\": 14.6042,\n      \"long\": 120.9822,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1701947\": {\n      \"name\": \"Mandaue City\",\n      \"country\": \"PH\",\n      \"lat\": 10.32361,\n      \"long\": 123.92222,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1701966\": {\n      \"name\": \"Mandaluyong City\",\n      \"country\": \"PH\",\n      \"lat\": 14.5832,\n      \"long\": 121.0409,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1702540\": {\n      \"name\": \"Malolos\",\n      \"country\": \"PH\",\n      \"lat\": 14.8443,\n      \"long\": 120.81039,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1703417\": {\n      \"name\": \"Makati City\",\n      \"country\": \"PH\",\n      \"lat\": 14.55027,\n      \"long\": 121.03269,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1704703\": {\n      \"name\": \"Mabalacat City\",\n      \"country\": \"PH\",\n      \"lat\": 15.22303,\n      \"long\": 120.57117,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1705357\": {\n      \"name\": \"Lucena\",\n      \"country\": \"PH\",\n      \"lat\": 13.93139,\n      \"long\": 121.61722,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1706090\": {\n      \"name\": \"Lipa City\",\n      \"country\": \"PH\",\n      \"lat\": 13.9411,\n      \"long\": 121.1631,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1706684\": {\n      \"name\": \"Libertad\",\n      \"country\": \"PH\",\n      \"lat\": 8.94417,\n      \"long\": 125.50194,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1706889\": {\n      \"name\": \"Legaspi\",\n      \"country\": \"PH\",\n      \"lat\": 13.13722,\n      \"long\": 123.73444,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1707267\": {\n      \"name\": \"Lapu-Lapu City\",\n      \"country\": \"PH\",\n      \"lat\": 10.31028,\n      \"long\": 123.94944,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1707404\": {\n      \"name\": \"Laoag\",\n      \"country\": \"PH\",\n      \"lat\": 18.1978,\n      \"long\": 120.5957,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1708522\": {\n      \"name\": \"Koronadal\",\n      \"country\": \"PH\",\n      \"lat\": 6.50306,\n      \"long\": 124.84694,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1709968\": {\n      \"name\": \"Kabankalan\",\n      \"country\": \"PH\",\n      \"lat\": 9.9839,\n      \"long\": 122.81423,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1710141\": {\n      \"name\": \"Jolo\",\n      \"country\": \"PH\",\n      \"lat\": 6.05222,\n      \"long\": 121.00222,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1710914\": {\n      \"name\": \"Imus\",\n      \"country\": \"PH\",\n      \"lat\": 14.42972,\n      \"long\": 120.93667,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1711005\": {\n      \"name\": \"Iloilo\",\n      \"country\": \"PH\",\n      \"lat\": 10.69694,\n      \"long\": 122.56444,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1711082\": {\n      \"name\": \"Iligan City\",\n      \"country\": \"PH\",\n      \"lat\": 8.25,\n      \"long\": 124.4,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1711982\": {\n      \"name\": \"Hagonoy\",\n      \"country\": \"PH\",\n      \"lat\": 14.83413,\n      \"long\": 120.73271,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1712051\": {\n      \"name\": \"Guyong\",\n      \"country\": \"PH\",\n      \"lat\": 14.8361,\n      \"long\": 120.97844,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1713022\": {\n      \"name\": \"General Santos\",\n      \"country\": \"PH\",\n      \"lat\": 6.11278,\n      \"long\": 125.17167,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1714201\": {\n      \"name\": \"Dumaguete\",\n      \"country\": \"PH\",\n      \"lat\": 9.30722,\n      \"long\": 123.30261,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1714956\": {\n      \"name\": \"Digos\",\n      \"country\": \"PH\",\n      \"lat\": 6.74972,\n      \"long\": 125.35722,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1715348\": {\n      \"name\": \"Davao\",\n      \"country\": \"PH\",\n      \"lat\": 7.07306,\n      \"long\": 125.61278,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1715430\": {\n      \"name\": \"Dasmariñas\",\n      \"country\": \"PH\",\n      \"lat\": 14.32944,\n      \"long\": 120.93667,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1716771\": {\n      \"name\": \"Cotabato\",\n      \"country\": \"PH\",\n      \"lat\": 7.22361,\n      \"long\": 124.24639,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1717512\": {\n      \"name\": \"Cebu City\",\n      \"country\": \"PH\",\n      \"lat\": 10.31672,\n      \"long\": 123.89071,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1717641\": {\n      \"name\": \"Cavite City\",\n      \"country\": \"PH\",\n      \"lat\": 14.48369,\n      \"long\": 120.89878,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1720681\": {\n      \"name\": \"Calamba\",\n      \"country\": \"PH\",\n      \"lat\": 14.21167,\n      \"long\": 121.16528,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1720840\": {\n      \"name\": \"Cainta\",\n      \"country\": \"PH\",\n      \"lat\": 14.5786,\n      \"long\": 121.1222,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1721080\": {\n      \"name\": \"Cagayan de Oro\",\n      \"country\": \"PH\",\n      \"lat\": 8.48222,\n      \"long\": 124.64722,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1721168\": {\n      \"name\": \"Cadiz\",\n      \"country\": \"PH\",\n      \"lat\": 10.9465,\n      \"long\": 123.288,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1721906\": {\n      \"name\": \"Cabanatuan City\",\n      \"country\": \"PH\",\n      \"lat\": 15.48586,\n      \"long\": 120.96648,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1722186\": {\n      \"name\": \"Butuan\",\n      \"country\": \"PH\",\n      \"lat\": 8.94917,\n      \"long\": 125.54361,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1722930\": {\n      \"name\": \"Bulaon\",\n      \"country\": \"PH\",\n      \"lat\": 15.08262,\n      \"long\": 120.66288,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1723510\": {\n      \"name\": \"Budta\",\n      \"country\": \"PH\",\n      \"lat\": 7.20417,\n      \"long\": 124.43972,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1725094\": {\n      \"name\": \"Binangonan\",\n      \"country\": \"PH\",\n      \"lat\": 14.4646,\n      \"long\": 121.1929,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1726280\": {\n      \"name\": \"Batangas\",\n      \"country\": \"PH\",\n      \"lat\": 13.7567,\n      \"long\": 121.0584,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1727995\": {\n      \"name\": \"Baliuag\",\n      \"country\": \"PH\",\n      \"lat\": 14.95472,\n      \"long\": 120.89694,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1728930\": {\n      \"name\": \"Baguio\",\n      \"country\": \"PH\",\n      \"lat\": 16.41639,\n      \"long\": 120.59306,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1729085\": {\n      \"name\": \"Bago City\",\n      \"country\": \"PH\",\n      \"lat\": 10.53333,\n      \"long\": 122.83333,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1729524\": {\n      \"name\": \"Bacoor\",\n      \"country\": \"PH\",\n      \"lat\": 14.45903,\n      \"long\": 120.92903,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1729564\": {\n      \"name\": \"Bacolod City\",\n      \"country\": \"PH\",\n      \"lat\": 10.66667,\n      \"long\": 122.95,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1730501\": {\n      \"name\": \"Antipolo\",\n      \"country\": \"PH\",\n      \"lat\": 14.62578,\n      \"long\": 121.12251,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1730737\": {\n      \"name\": \"Angeles City\",\n      \"country\": \"PH\",\n      \"lat\": 15.15,\n      \"long\": 120.58333,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1732687\": {\n      \"name\": \"Batu Pahat\",\n      \"country\": \"MY\",\n      \"lat\": 1.8548,\n      \"long\": 102.9325,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1732721\": {\n      \"name\": \"Kampung Pasir Gudang Baru\",\n      \"country\": \"MY\",\n      \"lat\": 1.4726,\n      \"long\": 103.878,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1732745\": {\n      \"name\": \"Skudai\",\n      \"country\": \"MY\",\n      \"lat\": 1.53741,\n      \"long\": 103.65779,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1732752\": {\n      \"name\": \"Johor Bahru\",\n      \"country\": \"MY\",\n      \"lat\": 1.4655,\n      \"long\": 103.7578,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1732811\": {\n      \"name\": \"Kluang\",\n      \"country\": \"MY\",\n      \"lat\": 2.03046,\n      \"long\": 103.31689,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1732869\": {\n      \"name\": \"Muar\",\n      \"country\": \"MY\",\n      \"lat\": 2.0442,\n      \"long\": 102.5689,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1732903\": {\n      \"name\": \"Shah Alam\",\n      \"country\": \"MY\",\n      \"lat\": 3.08507,\n      \"long\": 101.53281,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1732905\": {\n      \"name\": \"Klang\",\n      \"country\": \"MY\",\n      \"lat\": 3.03333,\n      \"long\": 101.45,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1733432\": {\n      \"name\": \"Kota Kinabalu\",\n      \"country\": \"MY\",\n      \"lat\": 5.9749,\n      \"long\": 116.0724,\n      \"zone\": \"Asia/Kuching\"\n    },\n    \"1733953\": {\n      \"name\": \"Lahad Datu\",\n      \"country\": \"MY\",\n      \"lat\": 5.0268,\n      \"long\": 118.327,\n      \"zone\": \"Asia/Kuching\"\n    },\n    \"1734052\": {\n      \"name\": \"Sandakan\",\n      \"country\": \"MY\",\n      \"lat\": 5.8402,\n      \"long\": 118.1179,\n      \"zone\": \"Asia/Kuching\"\n    },\n    \"1734199\": {\n      \"name\": \"Tawau\",\n      \"country\": \"MY\",\n      \"lat\": 4.24482,\n      \"long\": 117.89115,\n      \"zone\": \"Asia/Kuching\"\n    },\n    \"1734393\": {\n      \"name\": \"Kulim\",\n      \"country\": \"MY\",\n      \"lat\": 5.36499,\n      \"long\": 100.56177,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1734586\": {\n      \"name\": \"Taiping\",\n      \"country\": \"MY\",\n      \"lat\": 4.85,\n      \"long\": 100.73333,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1734634\": {\n      \"name\": \"Ipoh\",\n      \"country\": \"MY\",\n      \"lat\": 4.5841,\n      \"long\": 101.0829,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1734705\": {\n      \"name\": \"Kuala Terengganu\",\n      \"country\": \"MY\",\n      \"lat\": 5.3302,\n      \"long\": 103.1408,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1734759\": {\n      \"name\": \"Malacca\",\n      \"country\": \"MY\",\n      \"lat\": 2.196,\n      \"long\": 102.2405,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1734810\": {\n      \"name\": \"Seremban\",\n      \"country\": \"MY\",\n      \"lat\": 2.7297,\n      \"long\": 101.9381,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1735076\": {\n      \"name\": \"Butterworth\",\n      \"country\": \"MY\",\n      \"lat\": 5.3991,\n      \"long\": 100.36382,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1735079\": {\n      \"name\": \"Bukit Mertajam\",\n      \"country\": \"MY\",\n      \"lat\": 5.36301,\n      \"long\": 100.4667,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1735093\": {\n      \"name\": \"Tasek Glugor\",\n      \"country\": \"MY\",\n      \"lat\": 5.48032,\n      \"long\": 100.49849,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1735106\": {\n      \"name\": \"George Town\",\n      \"country\": \"MY\",\n      \"lat\": 5.41123,\n      \"long\": 100.33543,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1735150\": {\n      \"name\": \"Rawang\",\n      \"country\": \"MY\",\n      \"lat\": 3.3213,\n      \"long\": 101.5767,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1735158\": {\n      \"name\": \"Petaling Jaya\",\n      \"country\": \"MY\",\n      \"lat\": 3.10726,\n      \"long\": 101.60671,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1735161\": {\n      \"name\": \"Kuala Lumpur\",\n      \"country\": \"MY\",\n      \"lat\": 3.1412,\n      \"long\": 101.68653,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1735227\": {\n      \"name\": \"Kuantan\",\n      \"country\": \"MY\",\n      \"lat\": 3.8077,\n      \"long\": 103.326,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1735498\": {\n      \"name\": \"Sungai Petani\",\n      \"country\": \"MY\",\n      \"lat\": 5.647,\n      \"long\": 100.48772,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1735634\": {\n      \"name\": \"Kuching\",\n      \"country\": \"MY\",\n      \"lat\": 1.55,\n      \"long\": 110.33333,\n      \"zone\": \"Asia/Kuching\"\n    },\n    \"1735902\": {\n      \"name\": \"Sibu\",\n      \"country\": \"MY\",\n      \"lat\": 2.3,\n      \"long\": 111.81667,\n      \"zone\": \"Asia/Kuching\"\n    },\n    \"1736309\": {\n      \"name\": \"Alor Setar\",\n      \"country\": \"MY\",\n      \"lat\": 6.12104,\n      \"long\": 100.36014,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1736376\": {\n      \"name\": \"Kota Bharu\",\n      \"country\": \"MY\",\n      \"lat\": 6.13328,\n      \"long\": 102.2386,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1737486\": {\n      \"name\": \"Bintulu\",\n      \"country\": \"MY\",\n      \"lat\": 3.16667,\n      \"long\": 113.03333,\n      \"zone\": \"Asia/Kuching\"\n    },\n    \"1738050\": {\n      \"name\": \"Miri\",\n      \"country\": \"MY\",\n      \"lat\": 4.4148,\n      \"long\": 114.0089,\n      \"zone\": \"Asia/Kuching\"\n    },\n    \"1764160\": {\n      \"name\": \"Kampung Sungai Ara\",\n      \"country\": \"MY\",\n      \"lat\": 5.32699,\n      \"long\": 100.27348,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1771023\": {\n      \"name\": \"Kampung Baru Subang\",\n      \"country\": \"MY\",\n      \"lat\": 3.15,\n      \"long\": 101.53333,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"1783621\": {\n      \"name\": \"Zunyi\",\n      \"country\": \"CN\",\n      \"lat\": 27.68667,\n      \"long\": 106.90722,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1783633\": {\n      \"name\": \"Zoucheng\",\n      \"country\": \"CN\",\n      \"lat\": 35.40056,\n      \"long\": 116.96556,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1783745\": {\n      \"name\": \"Zigong\",\n      \"country\": \"CN\",\n      \"lat\": 29.34162,\n      \"long\": 104.77689,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1783763\": {\n      \"name\": \"Zhuzhou\",\n      \"country\": \"CN\",\n      \"lat\": 27.83333,\n      \"long\": 113.15,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1783873\": {\n      \"name\": \"Zhumadian\",\n      \"country\": \"CN\",\n      \"lat\": 32.97944,\n      \"long\": 114.02944,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1783934\": {\n      \"name\": \"Shangqiu\",\n      \"country\": \"CN\",\n      \"lat\": 34.45,\n      \"long\": 115.65,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1783940\": {\n      \"name\": \"Zhuji\",\n      \"country\": \"CN\",\n      \"lat\": 29.71877,\n      \"long\": 120.24233,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1783988\": {\n      \"name\": \"Mizhou\",\n      \"country\": \"CN\",\n      \"lat\": 35.99472,\n      \"long\": 119.3975,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1784130\": {\n      \"name\": \"Zhoukou\",\n      \"country\": \"CN\",\n      \"lat\": 33.63333,\n      \"long\": 114.63333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1784178\": {\n      \"name\": \"Zhoucun\",\n      \"country\": \"CN\",\n      \"lat\": 36.81667,\n      \"long\": 117.81667,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1784185\": {\n      \"name\": \"Yuxi\",\n      \"country\": \"CN\",\n      \"lat\": 24.355,\n      \"long\": 102.54222,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1784554\": {\n      \"name\": \"Zhicheng\",\n      \"country\": \"CN\",\n      \"lat\": 30.29556,\n      \"long\": 111.50472,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1784580\": {\n      \"name\": \"Zhenzhou\",\n      \"country\": \"CN\",\n      \"lat\": 32.28034,\n      \"long\": 119.16999,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1784642\": {\n      \"name\": \"Zhenjiang\",\n      \"country\": \"CN\",\n      \"lat\": 32.21086,\n      \"long\": 119.45508,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1784658\": {\n      \"name\": \"Zhengzhou\",\n      \"country\": \"CN\",\n      \"lat\": 34.75778,\n      \"long\": 113.64861,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1784820\": {\n      \"name\": \"Xinghua\",\n      \"country\": \"CN\",\n      \"lat\": 32.93917,\n      \"long\": 119.83417,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1784841\": {\n      \"name\": \"Zhaotong\",\n      \"country\": \"CN\",\n      \"lat\": 27.31667,\n      \"long\": 103.71667,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1784853\": {\n      \"name\": \"Zhaoqing\",\n      \"country\": \"CN\",\n      \"lat\": 23.05116,\n      \"long\": 112.45972,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1784953\": {\n      \"name\": \"Luofeng\",\n      \"country\": \"CN\",\n      \"lat\": 37.36497,\n      \"long\": 120.40997,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1784990\": {\n      \"name\": \"Zhanjiang\",\n      \"country\": \"CN\",\n      \"lat\": 21.28145,\n      \"long\": 110.34271,\n      \"zone\": \"Asia/Urumqi\"\n    },\n    \"1785018\": {\n      \"name\": \"Zhangzhou\",\n      \"country\": \"CN\",\n      \"lat\": 24.51333,\n      \"long\": 117.65556,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1785286\": {\n      \"name\": \"Zibo\",\n      \"country\": \"CN\",\n      \"lat\": 36.79056,\n      \"long\": 118.06333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1785294\": {\n      \"name\": \"Anyang\",\n      \"country\": \"CN\",\n      \"lat\": 36.09944,\n      \"long\": 114.32889,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1785453\": {\n      \"name\": \"Zaozhuang\",\n      \"country\": \"CN\",\n      \"lat\": 34.86472,\n      \"long\": 117.55417,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1785462\": {\n      \"name\": \"Zaoyang\",\n      \"country\": \"CN\",\n      \"lat\": 32.12722,\n      \"long\": 112.75417,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1785545\": {\n      \"name\": \"Yuyao\",\n      \"country\": \"CN\",\n      \"lat\": 30.05,\n      \"long\": 121.14944,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1785623\": {\n      \"name\": \"Kunshan\",\n      \"country\": \"CN\",\n      \"lat\": 31.37762,\n      \"long\": 120.95431,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1785725\": {\n      \"name\": \"Yunfu\",\n      \"country\": \"CN\",\n      \"lat\": 22.92833,\n      \"long\": 112.03954,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1785738\": {\n      \"name\": \"Yuncheng\",\n      \"country\": \"CN\",\n      \"lat\": 35.02306,\n      \"long\": 110.99278,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1785781\": {\n      \"name\": \"Yulin\",\n      \"country\": \"CN\",\n      \"lat\": 22.63333,\n      \"long\": 110.15,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1785974\": {\n      \"name\": \"Yuci\",\n      \"country\": \"CN\",\n      \"lat\": 37.68028,\n      \"long\": 112.73194,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1786067\": {\n      \"name\": \"Qianjiang\",\n      \"country\": \"CN\",\n      \"lat\": 30.421,\n      \"long\": 112.8919,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1786546\": {\n      \"name\": \"Zhongxiang\",\n      \"country\": \"CN\",\n      \"lat\": 31.16611,\n      \"long\": 112.58306,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1786640\": {\n      \"name\": \"Chengzhong\",\n      \"country\": \"CN\",\n      \"lat\": 30.94454,\n      \"long\": 113.55284,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1786657\": {\n      \"name\": \"Yinchuan\",\n      \"country\": \"CN\",\n      \"lat\": 38.46806,\n      \"long\": 106.27306,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1786731\": {\n      \"name\": \"Qingzhou\",\n      \"country\": \"CN\",\n      \"lat\": 36.69667,\n      \"long\": 118.47972,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1786746\": {\n      \"name\": \"Yichun\",\n      \"country\": \"CN\",\n      \"lat\": 27.83333,\n      \"long\": 114.4,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1786764\": {\n      \"name\": \"Yichang\",\n      \"country\": \"CN\",\n      \"lat\": 30.71444,\n      \"long\": 111.28472,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1786770\": {\n      \"name\": \"Yibin\",\n      \"country\": \"CN\",\n      \"lat\": 28.76667,\n      \"long\": 104.62383,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1787093\": {\n      \"name\": \"Yantai\",\n      \"country\": \"CN\",\n      \"lat\": 37.47649,\n      \"long\": 121.44081,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1787227\": {\n      \"name\": \"Yangzhou\",\n      \"country\": \"CN\",\n      \"lat\": 32.39722,\n      \"long\": 119.43583,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1787323\": {\n      \"name\": \"Yangshuo\",\n      \"country\": \"CN\",\n      \"lat\": 24.78081,\n      \"long\": 110.48967,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1787351\": {\n      \"name\": \"Yangquan\",\n      \"country\": \"CN\",\n      \"lat\": 37.8575,\n      \"long\": 113.56333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1787746\": {\n      \"name\": \"Yancheng\",\n      \"country\": \"CN\",\n      \"lat\": 33.3575,\n      \"long\": 120.1573,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1787824\": {\n      \"name\": \"Tongshan\",\n      \"country\": \"CN\",\n      \"lat\": 34.18045,\n      \"long\": 117.15707,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1787858\": {\n      \"name\": \"Shangrao\",\n      \"country\": \"CN\",\n      \"lat\": 28.45322,\n      \"long\": 117.9686,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1788046\": {\n      \"name\": \"Xuchang\",\n      \"country\": \"CN\",\n      \"lat\": 34.01667,\n      \"long\": 113.81667,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1788081\": {\n      \"name\": \"Xuanzhou\",\n      \"country\": \"CN\",\n      \"lat\": 30.9525,\n      \"long\": 118.75528,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1788245\": {\n      \"name\": \"Xiuying\",\n      \"country\": \"CN\",\n      \"lat\": 20.00073,\n      \"long\": 110.29359,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1788268\": {\n      \"name\": \"Xiulin\",\n      \"country\": \"CN\",\n      \"lat\": 29.71667,\n      \"long\": 112.4,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1788450\": {\n      \"name\": \"Xinzhou\",\n      \"country\": \"CN\",\n      \"lat\": 38.40917,\n      \"long\": 112.73333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1788534\": {\n      \"name\": \"Xinyang\",\n      \"country\": \"CN\",\n      \"lat\": 32.12278,\n      \"long\": 114.06556,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1788572\": {\n      \"name\": \"Xinxiang\",\n      \"country\": \"CN\",\n      \"lat\": 35.30889,\n      \"long\": 113.86722,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1788618\": {\n      \"name\": \"Xintai\",\n      \"country\": \"CN\",\n      \"lat\": 35.90056,\n      \"long\": 117.75194,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1788694\": {\n      \"name\": \"Xinpu\",\n      \"country\": \"CN\",\n      \"lat\": 34.59972,\n      \"long\": 119.15944,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1788816\": {\n      \"name\": \"Xinji\",\n      \"country\": \"CN\",\n      \"lat\": 37.90278,\n      \"long\": 115.20361,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1788852\": {\n      \"name\": \"Xining\",\n      \"country\": \"CN\",\n      \"lat\": 36.62554,\n      \"long\": 101.75739,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1788927\": {\n      \"name\": \"Xingtai\",\n      \"country\": \"CN\",\n      \"lat\": 37.06306,\n      \"long\": 114.49417,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1789065\": {\n      \"name\": \"Ankang\",\n      \"country\": \"CN\",\n      \"lat\": 32.68,\n      \"long\": 109.01722,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1789137\": {\n      \"name\": \"Xindi\",\n      \"country\": \"CN\",\n      \"lat\": 29.81667,\n      \"long\": 113.46667,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1789273\": {\n      \"name\": \"Sanshui\",\n      \"country\": \"CN\",\n      \"lat\": 23.15486,\n      \"long\": 112.89161,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1789647\": {\n      \"name\": \"Xichang\",\n      \"country\": \"CN\",\n      \"lat\": 27.89642,\n      \"long\": 102.26341,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1789703\": {\n      \"name\": \"Xiazhen\",\n      \"country\": \"CN\",\n      \"lat\": 34.80222,\n      \"long\": 117.11167,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1790254\": {\n      \"name\": \"Xiaogan\",\n      \"country\": \"CN\",\n      \"lat\": 30.92689,\n      \"long\": 113.92221,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1790353\": {\n      \"name\": \"Xianyang\",\n      \"country\": \"CN\",\n      \"lat\": 34.33778,\n      \"long\": 108.70261,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1790371\": {\n      \"name\": \"Xiantao\",\n      \"country\": \"CN\",\n      \"lat\": 30.3708,\n      \"long\": 113.44294,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1790396\": {\n      \"name\": \"Xianning\",\n      \"country\": \"CN\",\n      \"lat\": 29.88333,\n      \"long\": 114.21667,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1790437\": {\n      \"name\": \"Zhuhai\",\n      \"country\": \"CN\",\n      \"lat\": 22.27694,\n      \"long\": 113.56778,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1790492\": {\n      \"name\": \"Xiangtan\",\n      \"country\": \"CN\",\n      \"lat\": 27.85,\n      \"long\": 112.9,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1790587\": {\n      \"name\": \"Xiangyang\",\n      \"country\": \"CN\",\n      \"lat\": 32.0422,\n      \"long\": 112.14479,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1790630\": {\n      \"name\": \"Xi’an\",\n      \"country\": \"CN\",\n      \"lat\": 34.25833,\n      \"long\": 108.92861,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1790645\": {\n      \"name\": \"Xiamen\",\n      \"country\": \"CN\",\n      \"lat\": 24.47979,\n      \"long\": 118.08187,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1790840\": {\n      \"name\": \"Wuzhou\",\n      \"country\": \"CN\",\n      \"lat\": 23.48333,\n      \"long\": 111.31667,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1790894\": {\n      \"name\": \"Wuxue\",\n      \"country\": \"CN\",\n      \"lat\": 29.85058,\n      \"long\": 115.5525,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1790923\": {\n      \"name\": \"Wuxi\",\n      \"country\": \"CN\",\n      \"lat\": 31.56887,\n      \"long\": 120.28857,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1791056\": {\n      \"name\": \"Dongyang\",\n      \"country\": \"CN\",\n      \"lat\": 29.26778,\n      \"long\": 120.22528,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1791121\": {\n      \"name\": \"Changde\",\n      \"country\": \"CN\",\n      \"lat\": 29.04638,\n      \"long\": 111.6783,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1791236\": {\n      \"name\": \"Wuhu\",\n      \"country\": \"CN\",\n      \"lat\": 31.33728,\n      \"long\": 118.37351,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1791247\": {\n      \"name\": \"Wuhan\",\n      \"country\": \"CN\",\n      \"lat\": 30.58333,\n      \"long\": 114.26667,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1791249\": {\n      \"name\": \"Wuhai\",\n      \"country\": \"CN\",\n      \"lat\": 39.68442,\n      \"long\": 106.81583,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1791325\": {\n      \"name\": \"Wuda\",\n      \"country\": \"CN\",\n      \"lat\": 39.49944,\n      \"long\": 106.71167,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1791388\": {\n      \"name\": \"Wenzhou\",\n      \"country\": \"CN\",\n      \"lat\": 27.99942,\n      \"long\": 120.66682,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1791536\": {\n      \"name\": \"Tianfu\",\n      \"country\": \"CN\",\n      \"lat\": 37.19723,\n      \"long\": 122.05228,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1791636\": {\n      \"name\": \"Weinan\",\n      \"country\": \"CN\",\n      \"lat\": 34.50355,\n      \"long\": 109.50891,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1791673\": {\n      \"name\": \"Weihai\",\n      \"country\": \"CN\",\n      \"lat\": 37.50914,\n      \"long\": 122.11356,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1791681\": {\n      \"name\": \"Weifang\",\n      \"country\": \"CN\",\n      \"lat\": 36.71,\n      \"long\": 119.10194,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1791748\": {\n      \"name\": \"Wanxian\",\n      \"country\": \"CN\",\n      \"lat\": 30.81544,\n      \"long\": 108.37089,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1792260\": {\n      \"name\": \"Wafangdian\",\n      \"country\": \"CN\",\n      \"lat\": 39.61833,\n      \"long\": 122.00806,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1792520\": {\n      \"name\": \"Tongzhou\",\n      \"country\": \"CN\",\n      \"lat\": 39.90395,\n      \"long\": 116.66183,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1792621\": {\n      \"name\": \"Wusong\",\n      \"country\": \"CN\",\n      \"lat\": 30.95,\n      \"long\": 117.78333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1792892\": {\n      \"name\": \"Tianshui\",\n      \"country\": \"CN\",\n      \"lat\": 34.57952,\n      \"long\": 105.74238,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1792947\": {\n      \"name\": \"Tianjin\",\n      \"country\": \"CN\",\n      \"lat\": 39.14222,\n      \"long\": 117.17667,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1793036\": {\n      \"name\": \"Tengzhou\",\n      \"country\": \"CN\",\n      \"lat\": 35.07706,\n      \"long\": 117.15176,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1793346\": {\n      \"name\": \"Tangshan\",\n      \"country\": \"CN\",\n      \"lat\": 39.63333,\n      \"long\": 118.18333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1793424\": {\n      \"name\": \"Tanggu\",\n      \"country\": \"CN\",\n      \"lat\": 39.02111,\n      \"long\": 117.64694,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1793505\": {\n      \"name\": \"Taizhou\",\n      \"country\": \"CN\",\n      \"lat\": 32.49069,\n      \"long\": 119.90812,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1793511\": {\n      \"name\": \"Taiyuan\",\n      \"country\": \"CN\",\n      \"lat\": 37.86944,\n      \"long\": 112.56028,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1793700\": {\n      \"name\": \"Taishan\",\n      \"country\": \"CN\",\n      \"lat\": 22.25135,\n      \"long\": 112.7799,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1793724\": {\n      \"name\": \"Tai’an\",\n      \"country\": \"CN\",\n      \"lat\": 36.18528,\n      \"long\": 117.12,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1793743\": {\n      \"name\": \"Suzhou\",\n      \"country\": \"CN\",\n      \"lat\": 33.63611,\n      \"long\": 116.97889,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1793879\": {\n      \"name\": \"Suizhou\",\n      \"country\": \"CN\",\n      \"lat\": 31.71111,\n      \"long\": 113.36306,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1793900\": {\n      \"name\": \"Suining\",\n      \"country\": \"CN\",\n      \"lat\": 30.50802,\n      \"long\": 105.57332,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1794035\": {\n      \"name\": \"Songjiang\",\n      \"country\": \"CN\",\n      \"lat\": 31.03595,\n      \"long\": 121.2146,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1794806\": {\n      \"name\": \"Shizuishan\",\n      \"country\": \"CN\",\n      \"lat\": 39.23333,\n      \"long\": 106.76944,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1794903\": {\n      \"name\": \"Shiyan\",\n      \"country\": \"CN\",\n      \"lat\": 32.6475,\n      \"long\": 110.77806,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1794904\": {\n      \"name\": \"Shiyan\",\n      \"country\": \"CN\",\n      \"lat\": 32.56667,\n      \"long\": 110.78333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1795055\": {\n      \"name\": \"Shiqiao\",\n      \"country\": \"CN\",\n      \"lat\": 22.9464,\n      \"long\": 113.35769,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1795060\": {\n      \"name\": \"Shiqi\",\n      \"country\": \"CN\",\n      \"lat\": 22.51682,\n      \"long\": 113.38521,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1795184\": {\n      \"name\": \"Shilong\",\n      \"country\": \"CN\",\n      \"lat\": 23.11444,\n      \"long\": 113.84722,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1795196\": {\n      \"name\": \"Tongchuan\",\n      \"country\": \"CN\",\n      \"lat\": 35.08056,\n      \"long\": 109.08972,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1795270\": {\n      \"name\": \"Shijiazhuang\",\n      \"country\": \"CN\",\n      \"lat\": 38.04139,\n      \"long\": 114.47861,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1795565\": {\n      \"name\": \"Shenzhen\",\n      \"country\": \"CN\",\n      \"lat\": 22.54554,\n      \"long\": 114.0683,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1795816\": {\n      \"name\": \"Shashi\",\n      \"country\": \"CN\",\n      \"lat\": 30.30722,\n      \"long\": 112.24472,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1795842\": {\n      \"name\": \"Shaping\",\n      \"country\": \"CN\",\n      \"lat\": 22.77019,\n      \"long\": 112.95776,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1795855\": {\n      \"name\": \"Shaoxing\",\n      \"country\": \"CN\",\n      \"lat\": 30.00237,\n      \"long\": 120.57864,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1795857\": {\n      \"name\": \"Shaowu\",\n      \"country\": \"CN\",\n      \"lat\": 27.34089,\n      \"long\": 117.4831,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1795874\": {\n      \"name\": \"Shaoguan\",\n      \"country\": \"CN\",\n      \"lat\": 24.8,\n      \"long\": 113.58333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1795928\": {\n      \"name\": \"Shanwei\",\n      \"country\": \"CN\",\n      \"lat\": 22.78199,\n      \"long\": 115.3475,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1795940\": {\n      \"name\": \"Shantou\",\n      \"country\": \"CN\",\n      \"lat\": 23.36814,\n      \"long\": 116.71479,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1796236\": {\n      \"name\": \"Shanghai\",\n      \"country\": \"CN\",\n      \"lat\": 31.22222,\n      \"long\": 121.45806,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1796421\": {\n      \"name\": \"Shahecheng\",\n      \"country\": \"CN\",\n      \"lat\": 36.93833,\n      \"long\": 114.50583,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1796556\": {\n      \"name\": \"Sanya\",\n      \"country\": \"CN\",\n      \"lat\": 18.24306,\n      \"long\": 109.505,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1796663\": {\n      \"name\": \"Sanming\",\n      \"country\": \"CN\",\n      \"lat\": 26.24861,\n      \"long\": 117.61861,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1797121\": {\n      \"name\": \"Jieyang\",\n      \"country\": \"CN\",\n      \"lat\": 23.5418,\n      \"long\": 116.36581,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1797132\": {\n      \"name\": \"Rizhao\",\n      \"country\": \"CN\",\n      \"lat\": 35.4275,\n      \"long\": 119.45528,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1797318\": {\n      \"name\": \"Qujing\",\n      \"country\": \"CN\",\n      \"lat\": 25.48333,\n      \"long\": 103.78333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1797353\": {\n      \"name\": \"Quanzhou\",\n      \"country\": \"CN\",\n      \"lat\": 24.91389,\n      \"long\": 118.58583,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1797551\": {\n      \"name\": \"Qinzhou\",\n      \"country\": \"CN\",\n      \"lat\": 21.97296,\n      \"long\": 108.62612,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1797595\": {\n      \"name\": \"Qinhuangdao\",\n      \"country\": \"CN\",\n      \"lat\": 39.93167,\n      \"long\": 119.58833,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1797873\": {\n      \"name\": \"Huai'an\",\n      \"country\": \"CN\",\n      \"lat\": 33.58861,\n      \"long\": 119.01917,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1797929\": {\n      \"name\": \"Qingdao\",\n      \"country\": \"CN\",\n      \"lat\": 36.06605,\n      \"long\": 120.36939,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1797945\": {\n      \"name\": \"Qingyuan\",\n      \"country\": \"CN\",\n      \"lat\": 23.7,\n      \"long\": 113.03333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1798422\": {\n      \"name\": \"Puyang Chengguanzhen\",\n      \"country\": \"CN\",\n      \"lat\": 35.70506,\n      \"long\": 115.01409,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1798425\": {\n      \"name\": \"Puyang\",\n      \"country\": \"CN\",\n      \"lat\": 29.45679,\n      \"long\": 119.88872,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1798449\": {\n      \"name\": \"Putian\",\n      \"country\": \"CN\",\n      \"lat\": 25.43944,\n      \"long\": 119.01028,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1798473\": {\n      \"name\": \"Puqi\",\n      \"country\": \"CN\",\n      \"lat\": 29.71667,\n      \"long\": 113.88333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1798490\": {\n      \"name\": \"Pulandian\",\n      \"country\": \"CN\",\n      \"lat\": 39.39528,\n      \"long\": 121.96694,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1798654\": {\n      \"name\": \"Pingxiang\",\n      \"country\": \"CN\",\n      \"lat\": 27.61672,\n      \"long\": 113.85353,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1798713\": {\n      \"name\": \"Pingshan\",\n      \"country\": \"CN\",\n      \"lat\": 22.99376,\n      \"long\": 114.71311,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1798760\": {\n      \"name\": \"Pingliang\",\n      \"country\": \"CN\",\n      \"lat\": 35.53917,\n      \"long\": 106.68611,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1798827\": {\n      \"name\": \"Pingdingshan\",\n      \"country\": \"CN\",\n      \"lat\": 33.73847,\n      \"long\": 113.30119,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1798998\": {\n      \"name\": \"Dadukou\",\n      \"country\": \"CN\",\n      \"lat\": 26.5479,\n      \"long\": 101.70539,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1799397\": {\n      \"name\": \"Ningbo\",\n      \"country\": \"CN\",\n      \"lat\": 29.87819,\n      \"long\": 121.54945,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1799491\": {\n      \"name\": \"Neijiang\",\n      \"country\": \"CN\",\n      \"lat\": 29.58354,\n      \"long\": 105.06216,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1799629\": {\n      \"name\": \"Nanyang\",\n      \"country\": \"CN\",\n      \"lat\": 32.99472,\n      \"long\": 112.53278,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1799722\": {\n      \"name\": \"Nantong\",\n      \"country\": \"CN\",\n      \"lat\": 32.03028,\n      \"long\": 120.87472,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1799846\": {\n      \"name\": \"Nanping\",\n      \"country\": \"CN\",\n      \"lat\": 26.645,\n      \"long\": 118.17361,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1799869\": {\n      \"name\": \"Nanning\",\n      \"country\": \"CN\",\n      \"lat\": 22.81667,\n      \"long\": 108.31667,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1799962\": {\n      \"name\": \"Nanjing\",\n      \"country\": \"CN\",\n      \"lat\": 32.06167,\n      \"long\": 118.77778,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1800146\": {\n      \"name\": \"Nanchong\",\n      \"country\": \"CN\",\n      \"lat\": 30.79508,\n      \"long\": 106.08473,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1800163\": {\n      \"name\": \"Nanchang\",\n      \"country\": \"CN\",\n      \"lat\": 28.68396,\n      \"long\": 115.85306,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1800498\": {\n      \"name\": \"Mingshui\",\n      \"country\": \"CN\",\n      \"lat\": 36.71667,\n      \"long\": 117.5,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1800627\": {\n      \"name\": \"Mianyang\",\n      \"country\": \"CN\",\n      \"lat\": 31.45934,\n      \"long\": 104.75423,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1800657\": {\n      \"name\": \"Mentougou\",\n      \"country\": \"CN\",\n      \"lat\": 39.93819,\n      \"long\": 116.09307,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1800779\": {\n      \"name\": \"Meizhou\",\n      \"country\": \"CN\",\n      \"lat\": 24.29769,\n      \"long\": 116.10724,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1800829\": {\n      \"name\": \"Wuchuan\",\n      \"country\": \"CN\",\n      \"lat\": 21.45713,\n      \"long\": 110.76591,\n      \"zone\": \"Asia/Urumqi\"\n    },\n    \"1801401\": {\n      \"name\": \"Majie\",\n      \"country\": \"CN\",\n      \"lat\": 25.0319,\n      \"long\": 102.638,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1801582\": {\n      \"name\": \"Macheng\",\n      \"country\": \"CN\",\n      \"lat\": 31.18013,\n      \"long\": 115.02213,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1801615\": {\n      \"name\": \"Maba\",\n      \"country\": \"CN\",\n      \"lat\": 24.68413,\n      \"long\": 113.59839,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1801757\": {\n      \"name\": \"Luqiao\",\n      \"country\": \"CN\",\n      \"lat\": 28.58023,\n      \"long\": 121.37491,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1801792\": {\n      \"name\": \"Luoyang\",\n      \"country\": \"CN\",\n      \"lat\": 34.68361,\n      \"long\": 112.45361,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1801799\": {\n      \"name\": \"Luoyang\",\n      \"country\": \"CN\",\n      \"lat\": 23.16244,\n      \"long\": 114.27342,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1801934\": {\n      \"name\": \"Luohe\",\n      \"country\": \"CN\",\n      \"lat\": 33.57167,\n      \"long\": 114.03528,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1802204\": {\n      \"name\": \"Luancheng\",\n      \"country\": \"CN\",\n      \"lat\": 37.87917,\n      \"long\": 114.65167,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1802238\": {\n      \"name\": \"Loudi\",\n      \"country\": \"CN\",\n      \"lat\": 27.73444,\n      \"long\": 111.99444,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1802875\": {\n      \"name\": \"Guankou\",\n      \"country\": \"CN\",\n      \"lat\": 28.15861,\n      \"long\": 113.62709,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1802940\": {\n      \"name\": \"Puning\",\n      \"country\": \"CN\",\n      \"lat\": 23.31072,\n      \"long\": 116.16869,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1803318\": {\n      \"name\": \"Linyi\",\n      \"country\": \"CN\",\n      \"lat\": 35.06306,\n      \"long\": 118.34278,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1803331\": {\n      \"name\": \"Linxia Chengguanzhen\",\n      \"country\": \"CN\",\n      \"lat\": 35.60028,\n      \"long\": 103.20639,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1803334\": {\n      \"name\": \"Linxi\",\n      \"country\": \"CN\",\n      \"lat\": 39.71183,\n      \"long\": 118.44954,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1803352\": {\n      \"name\": \"Linshui\",\n      \"country\": \"CN\",\n      \"lat\": 36.42472,\n      \"long\": 114.20472,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1803367\": {\n      \"name\": \"Qingnian\",\n      \"country\": \"CN\",\n      \"lat\": 36.84032,\n      \"long\": 115.71183,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1803422\": {\n      \"name\": \"Linhai\",\n      \"country\": \"CN\",\n      \"lat\": 28.84815,\n      \"long\": 121.12807,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1803567\": {\n      \"name\": \"Linfen\",\n      \"country\": \"CN\",\n      \"lat\": 36.08889,\n      \"long\": 111.51889,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1803791\": {\n      \"name\": \"Licheng\",\n      \"country\": \"CN\",\n      \"lat\": 23.29549,\n      \"long\": 113.82465,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1803834\": {\n      \"name\": \"Liaocheng\",\n      \"country\": \"CN\",\n      \"lat\": 36.45596,\n      \"long\": 115.97766,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1803886\": {\n      \"name\": \"Lianran\",\n      \"country\": \"CN\",\n      \"lat\": 24.92271,\n      \"long\": 102.48496,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1803936\": {\n      \"name\": \"Wuwei\",\n      \"country\": \"CN\",\n      \"lat\": 37.92672,\n      \"long\": 102.63202,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1804120\": {\n      \"name\": \"Lianjiang\",\n      \"country\": \"CN\",\n      \"lat\": 21.64673,\n      \"long\": 110.28172,\n      \"zone\": \"Asia/Urumqi\"\n    },\n    \"1804153\": {\n      \"name\": \"Leshan\",\n      \"country\": \"CN\",\n      \"lat\": 29.56227,\n      \"long\": 103.76386,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1804169\": {\n      \"name\": \"Lengshuijiang\",\n      \"country\": \"CN\",\n      \"lat\": 27.68806,\n      \"long\": 111.42944,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1804208\": {\n      \"name\": \"Leiyang\",\n      \"country\": \"CN\",\n      \"lat\": 26.40238,\n      \"long\": 112.85908,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1804252\": {\n      \"name\": \"Lecheng\",\n      \"country\": \"CN\",\n      \"lat\": 25.128,\n      \"long\": 113.35041,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1804386\": {\n      \"name\": \"Laohekou\",\n      \"country\": \"CN\",\n      \"lat\": 32.38583,\n      \"long\": 111.66778,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1804430\": {\n      \"name\": \"Lanzhou\",\n      \"country\": \"CN\",\n      \"lat\": 36.05701,\n      \"long\": 103.83987,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1804540\": {\n      \"name\": \"Langfang\",\n      \"country\": \"CN\",\n      \"lat\": 39.50972,\n      \"long\": 116.69472,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1804586\": {\n      \"name\": \"Laiyang\",\n      \"country\": \"CN\",\n      \"lat\": 36.97583,\n      \"long\": 120.71361,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1804591\": {\n      \"name\": \"Laiwu\",\n      \"country\": \"CN\",\n      \"lat\": 36.19278,\n      \"long\": 117.65694,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1804651\": {\n      \"name\": \"Kunming\",\n      \"country\": \"CN\",\n      \"lat\": 25.03889,\n      \"long\": 102.71833,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1804850\": {\n      \"name\": \"Kaiyuan\",\n      \"country\": \"CN\",\n      \"lat\": 23.69767,\n      \"long\": 103.30372,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1804879\": {\n      \"name\": \"Kaifeng\",\n      \"country\": \"CN\",\n      \"lat\": 34.7986,\n      \"long\": 114.30742,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1805179\": {\n      \"name\": \"Jiujiang\",\n      \"country\": \"CN\",\n      \"lat\": 29.70475,\n      \"long\": 116.00206,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1805270\": {\n      \"name\": \"Qianzhou\",\n      \"country\": \"CN\",\n      \"lat\": 28.31925,\n      \"long\": 109.73346,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1805298\": {\n      \"name\": \"Jinzhou\",\n      \"country\": \"CN\",\n      \"lat\": 39.1,\n      \"long\": 121.71667,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1805518\": {\n      \"name\": \"Jining\",\n      \"country\": \"CN\",\n      \"lat\": 35.405,\n      \"long\": 116.58139,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1805528\": {\n      \"name\": \"Jinhua\",\n      \"country\": \"CN\",\n      \"lat\": 29.10678,\n      \"long\": 119.64421,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1805540\": {\n      \"name\": \"Jingzhou\",\n      \"country\": \"CN\",\n      \"lat\": 30.35028,\n      \"long\": 112.19028,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1805611\": {\n      \"name\": \"Jingmen\",\n      \"country\": \"CN\",\n      \"lat\": 31.03361,\n      \"long\": 112.20472,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1805618\": {\n      \"name\": \"Jingling\",\n      \"country\": \"CN\",\n      \"lat\": 30.65,\n      \"long\": 113.1,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1805680\": {\n      \"name\": \"Jingdezhen\",\n      \"country\": \"CN\",\n      \"lat\": 29.2947,\n      \"long\": 117.20789,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1805733\": {\n      \"name\": \"Jinchang\",\n      \"country\": \"CN\",\n      \"lat\": 38.50062,\n      \"long\": 102.19379,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1805741\": {\n      \"name\": \"Jincheng\",\n      \"country\": \"CN\",\n      \"lat\": 35.50222,\n      \"long\": 112.83278,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1805753\": {\n      \"name\": \"Jinan\",\n      \"country\": \"CN\",\n      \"lat\": 36.66833,\n      \"long\": 116.99722,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1805844\": {\n      \"name\": \"Jieshou\",\n      \"country\": \"CN\",\n      \"lat\": 33.26338,\n      \"long\": 115.36108,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1805857\": {\n      \"name\": \"Jieshi\",\n      \"country\": \"CN\",\n      \"lat\": 22.81027,\n      \"long\": 115.83058,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1805935\": {\n      \"name\": \"Jiazi\",\n      \"country\": \"CN\",\n      \"lat\": 22.87932,\n      \"long\": 116.07318,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1805953\": {\n      \"name\": \"Jiaxing\",\n      \"country\": \"CN\",\n      \"lat\": 30.7522,\n      \"long\": 120.75,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1805987\": {\n      \"name\": \"Jiaozuo\",\n      \"country\": \"CN\",\n      \"lat\": 35.23972,\n      \"long\": 113.23306,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1806096\": {\n      \"name\": \"Jiaozhou\",\n      \"country\": \"CN\",\n      \"lat\": 36.28389,\n      \"long\": 120.00333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1806299\": {\n      \"name\": \"Jiangmen\",\n      \"country\": \"CN\",\n      \"lat\": 22.58333,\n      \"long\": 113.08333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1806408\": {\n      \"name\": \"Yangjiang\",\n      \"country\": \"CN\",\n      \"lat\": 21.85563,\n      \"long\": 111.96272,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1806445\": {\n      \"name\": \"Ji’an\",\n      \"country\": \"CN\",\n      \"lat\": 27.11716,\n      \"long\": 114.97927,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1806466\": {\n      \"name\": \"Guangyuan\",\n      \"country\": \"CN\",\n      \"lat\": 32.44201,\n      \"long\": 105.823,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1806535\": {\n      \"name\": \"Huzhou\",\n      \"country\": \"CN\",\n      \"lat\": 30.8703,\n      \"long\": 120.0933,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1806696\": {\n      \"name\": \"Humen\",\n      \"country\": \"CN\",\n      \"lat\": 22.81899,\n      \"long\": 113.67306,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1806776\": {\n      \"name\": \"Huizhou\",\n      \"country\": \"CN\",\n      \"lat\": 23.11147,\n      \"long\": 114.41523,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1806881\": {\n      \"name\": \"Huicheng\",\n      \"country\": \"CN\",\n      \"lat\": 23.03845,\n      \"long\": 116.28988,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1806882\": {\n      \"name\": \"Xinhui\",\n      \"country\": \"CN\",\n      \"lat\": 22.456,\n      \"long\": 113.0482,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1807112\": {\n      \"name\": \"Huangzhou\",\n      \"country\": \"CN\",\n      \"lat\": 30.45,\n      \"long\": 114.8,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1807143\": {\n      \"name\": \"Huangyan\",\n      \"country\": \"CN\",\n      \"lat\": 28.6501,\n      \"long\": 121.26591,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1807234\": {\n      \"name\": \"Huangshi\",\n      \"country\": \"CN\",\n      \"lat\": 30.24706,\n      \"long\": 115.04814,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1807301\": {\n      \"name\": \"Dasha\",\n      \"country\": \"CN\",\n      \"lat\": 23.11037,\n      \"long\": 113.4418,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1807508\": {\n      \"name\": \"Huanggang\",\n      \"country\": \"CN\",\n      \"lat\": 23.67704,\n      \"long\": 116.99961,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1807544\": {\n      \"name\": \"Daxing\",\n      \"country\": \"CN\",\n      \"lat\": 39.74025,\n      \"long\": 116.32693,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1807681\": {\n      \"name\": \"Huainan\",\n      \"country\": \"CN\",\n      \"lat\": 32.62639,\n      \"long\": 116.99694,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1807689\": {\n      \"name\": \"Huaihua\",\n      \"country\": \"CN\",\n      \"lat\": 27.54944,\n      \"long\": 109.95917,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1807700\": {\n      \"name\": \"Huaibei\",\n      \"country\": \"CN\",\n      \"lat\": 33.97444,\n      \"long\": 116.79167,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1808198\": {\n      \"name\": \"Heze\",\n      \"country\": \"CN\",\n      \"lat\": 35.23929,\n      \"long\": 115.47358,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1808316\": {\n      \"name\": \"Yiyang\",\n      \"country\": \"CN\",\n      \"lat\": 28.58917,\n      \"long\": 112.32833,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1808336\": {\n      \"name\": \"Hepo\",\n      \"country\": \"CN\",\n      \"lat\": 23.43077,\n      \"long\": 115.82991,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1808370\": {\n      \"name\": \"Hengyang\",\n      \"country\": \"CN\",\n      \"lat\": 26.88946,\n      \"long\": 112.61888,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1808392\": {\n      \"name\": \"Hengshui\",\n      \"country\": \"CN\",\n      \"lat\": 37.73222,\n      \"long\": 115.70111,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1808722\": {\n      \"name\": \"Hefei\",\n      \"country\": \"CN\",\n      \"lat\": 31.86389,\n      \"long\": 117.28083,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1808770\": {\n      \"name\": \"Hebi\",\n      \"country\": \"CN\",\n      \"lat\": 35.89917,\n      \"long\": 114.1925,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1808857\": {\n      \"name\": \"Hanzhong\",\n      \"country\": \"CN\",\n      \"lat\": 33.07278,\n      \"long\": 107.03028,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1808926\": {\n      \"name\": \"Hangzhou\",\n      \"country\": \"CN\",\n      \"lat\": 30.29365,\n      \"long\": 120.16142,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1808931\": {\n      \"name\": \"Hangu\",\n      \"country\": \"CN\",\n      \"lat\": 39.24889,\n      \"long\": 117.78917,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1808963\": {\n      \"name\": \"Handan\",\n      \"country\": \"CN\",\n      \"lat\": 36.60056,\n      \"long\": 114.46778,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1809061\": {\n      \"name\": \"Jiaojiang\",\n      \"country\": \"CN\",\n      \"lat\": 28.68028,\n      \"long\": 121.44278,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1809062\": {\n      \"name\": \"Haimen\",\n      \"country\": \"CN\",\n      \"lat\": 23.19346,\n      \"long\": 116.61219,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1809077\": {\n      \"name\": \"Haikou\",\n      \"country\": \"CN\",\n      \"lat\": 24.77985,\n      \"long\": 102.57548,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1809078\": {\n      \"name\": \"Haikou\",\n      \"country\": \"CN\",\n      \"lat\": 20.04583,\n      \"long\": 110.34167,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1809412\": {\n      \"name\": \"Guli\",\n      \"country\": \"CN\",\n      \"lat\": 28.88162,\n      \"long\": 120.03308,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1809461\": {\n      \"name\": \"Guiyang\",\n      \"country\": \"CN\",\n      \"lat\": 26.58333,\n      \"long\": 106.71667,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1809498\": {\n      \"name\": \"Guilin\",\n      \"country\": \"CN\",\n      \"lat\": 25.28194,\n      \"long\": 110.28639,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1809858\": {\n      \"name\": \"Guangzhou\",\n      \"country\": \"CN\",\n      \"lat\": 23.11667,\n      \"long\": 113.25,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1809879\": {\n      \"name\": \"Guangshui\",\n      \"country\": \"CN\",\n      \"lat\": 31.6199,\n      \"long\": 113.9978,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1810240\": {\n      \"name\": \"Gejiu\",\n      \"country\": \"CN\",\n      \"lat\": 23.36085,\n      \"long\": 103.15372,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1810295\": {\n      \"name\": \"Gaozhou\",\n      \"country\": \"CN\",\n      \"lat\": 21.93924,\n      \"long\": 110.84607,\n      \"zone\": \"Asia/Urumqi\"\n    },\n    \"1810437\": {\n      \"name\": \"Gaoping\",\n      \"country\": \"CN\",\n      \"lat\": 30.77576,\n      \"long\": 106.10294,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1810458\": {\n      \"name\": \"Gaomi\",\n      \"country\": \"CN\",\n      \"lat\": 36.38333,\n      \"long\": 119.75278,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1810821\": {\n      \"name\": \"Fuzhou\",\n      \"country\": \"CN\",\n      \"lat\": 26.06139,\n      \"long\": 119.30611,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1810845\": {\n      \"name\": \"Fuyang\",\n      \"country\": \"CN\",\n      \"lat\": 32.9,\n      \"long\": 115.81667,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1810979\": {\n      \"name\": \"Fuling\",\n      \"country\": \"CN\",\n      \"lat\": 29.706,\n      \"long\": 107.39575,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1811103\": {\n      \"name\": \"Foshan\",\n      \"country\": \"CN\",\n      \"lat\": 23.02677,\n      \"long\": 113.13148,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1811619\": {\n      \"name\": \"Ezhou\",\n      \"country\": \"CN\",\n      \"lat\": 30.4,\n      \"long\": 114.83333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1811729\": {\n      \"name\": \"Encheng\",\n      \"country\": \"CN\",\n      \"lat\": 22.18659,\n      \"long\": 112.30424,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1812101\": {\n      \"name\": \"Shengli\",\n      \"country\": \"CN\",\n      \"lat\": 37.46271,\n      \"long\": 118.49165,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1812228\": {\n      \"name\": \"Dongtai\",\n      \"country\": \"CN\",\n      \"lat\": 32.85231,\n      \"long\": 120.30947,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1812521\": {\n      \"name\": \"Donghai\",\n      \"country\": \"CN\",\n      \"lat\": 22.94593,\n      \"long\": 115.64204,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1812545\": {\n      \"name\": \"Dongguan\",\n      \"country\": \"CN\",\n      \"lat\": 23.04889,\n      \"long\": 113.74472,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1812728\": {\n      \"name\": \"Dingzhou\",\n      \"country\": \"CN\",\n      \"lat\": 38.51306,\n      \"long\": 114.99556,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1812955\": {\n      \"name\": \"Dezhou\",\n      \"country\": \"CN\",\n      \"lat\": 37.45127,\n      \"long\": 116.31046,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1812961\": {\n      \"name\": \"Deyang\",\n      \"country\": \"CN\",\n      \"lat\": 31.13019,\n      \"long\": 104.38198,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1813253\": {\n      \"name\": \"Lijiang\",\n      \"country\": \"CN\",\n      \"lat\": 26.86879,\n      \"long\": 100.22072,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1813325\": {\n      \"name\": \"Dazhou\",\n      \"country\": \"CN\",\n      \"lat\": 31.21592,\n      \"long\": 107.50092,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1813344\": {\n      \"name\": \"Dawukou\",\n      \"country\": \"CN\",\n      \"lat\": 39.04194,\n      \"long\": 106.39583,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1813812\": {\n      \"name\": \"Danshui\",\n      \"country\": \"CN\",\n      \"lat\": 22.7984,\n      \"long\": 114.46716,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1814082\": {\n      \"name\": \"Daliang\",\n      \"country\": \"CN\",\n      \"lat\": 22.84067,\n      \"long\": 113.2503,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1814087\": {\n      \"name\": \"Dalian\",\n      \"country\": \"CN\",\n      \"lat\": 38.91222,\n      \"long\": 121.60222,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1814093\": {\n      \"name\": \"Dali\",\n      \"country\": \"CN\",\n      \"lat\": 25.58474,\n      \"long\": 100.21229,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1814757\": {\n      \"name\": \"Chuzhou\",\n      \"country\": \"CN\",\n      \"lat\": 32.32194,\n      \"long\": 118.29778,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1814786\": {\n      \"name\": \"Yangchun\",\n      \"country\": \"CN\",\n      \"lat\": 22.16667,\n      \"long\": 111.78333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1814906\": {\n      \"name\": \"Chongqing\",\n      \"country\": \"CN\",\n      \"lat\": 29.56278,\n      \"long\": 106.55278,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1814934\": {\n      \"name\": \"Chizhou\",\n      \"country\": \"CN\",\n      \"lat\": 30.66134,\n      \"long\": 117.47783,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1815059\": {\n      \"name\": \"Chenzhou\",\n      \"country\": \"CN\",\n      \"lat\": 25.8,\n      \"long\": 113.03333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1815251\": {\n      \"name\": \"Jiangyin\",\n      \"country\": \"CN\",\n      \"lat\": 31.91102,\n      \"long\": 120.26302,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1815286\": {\n      \"name\": \"Chengdu\",\n      \"country\": \"CN\",\n      \"lat\": 30.66667,\n      \"long\": 104.06667,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1815302\": {\n      \"name\": \"Chenghua\",\n      \"country\": \"CN\",\n      \"lat\": 23.46132,\n      \"long\": 116.77007,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1815395\": {\n      \"name\": \"Chaozhou\",\n      \"country\": \"CN\",\n      \"lat\": 23.65396,\n      \"long\": 116.62262,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1815427\": {\n      \"name\": \"Chaohu\",\n      \"country\": \"CN\",\n      \"lat\": 31.6,\n      \"long\": 117.86667,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1815456\": {\n      \"name\": \"Changzhou\",\n      \"country\": \"CN\",\n      \"lat\": 31.77359,\n      \"long\": 119.95401,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1815463\": {\n      \"name\": \"Changzhi\",\n      \"country\": \"CN\",\n      \"lat\": 35.20889,\n      \"long\": 111.73861,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1815577\": {\n      \"name\": \"Changsha\",\n      \"country\": \"CN\",\n      \"lat\": 28.19874,\n      \"long\": 112.97087,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1816080\": {\n      \"name\": \"Cangzhou\",\n      \"country\": \"CN\",\n      \"lat\": 38.31667,\n      \"long\": 116.86667,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1816221\": {\n      \"name\": \"Buhe\",\n      \"country\": \"CN\",\n      \"lat\": 30.28757,\n      \"long\": 112.22979,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1816234\": {\n      \"name\": \"Bozhou\",\n      \"country\": \"CN\",\n      \"lat\": 33.87722,\n      \"long\": 115.77028,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1816265\": {\n      \"name\": \"Boshan\",\n      \"country\": \"CN\",\n      \"lat\": 36.48333,\n      \"long\": 117.83333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1816336\": {\n      \"name\": \"Binzhou\",\n      \"country\": \"CN\",\n      \"lat\": 37.36667,\n      \"long\": 118.01667,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1816440\": {\n      \"name\": \"Bengbu\",\n      \"country\": \"CN\",\n      \"lat\": 32.94083,\n      \"long\": 117.36083,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1816670\": {\n      \"name\": \"Beijing\",\n      \"country\": \"CN\",\n      \"lat\": 39.9075,\n      \"long\": 116.39723,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1816705\": {\n      \"name\": \"Beihai\",\n      \"country\": \"CN\",\n      \"lat\": 21.48333,\n      \"long\": 109.1,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1816790\": {\n      \"name\": \"Beibei\",\n      \"country\": \"CN\",\n      \"lat\": 29.82739,\n      \"long\": 106.43645,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1816971\": {\n      \"name\": \"Baoding\",\n      \"country\": \"CN\",\n      \"lat\": 38.85111,\n      \"long\": 115.49028,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1817240\": {\n      \"name\": \"Baiyin\",\n      \"country\": \"CN\",\n      \"lat\": 36.54696,\n      \"long\": 104.17023,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1817720\": {\n      \"name\": \"Shangyu\",\n      \"country\": \"CN\",\n      \"lat\": 30.01556,\n      \"long\": 120.87111,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1817968\": {\n      \"name\": \"Anshun\",\n      \"country\": \"CN\",\n      \"lat\": 26.25,\n      \"long\": 105.93333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1817990\": {\n      \"name\": \"Anqiu\",\n      \"country\": \"CN\",\n      \"lat\": 36.43417,\n      \"long\": 119.1925,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1817993\": {\n      \"name\": \"Anqing\",\n      \"country\": \"CN\",\n      \"lat\": 30.51365,\n      \"long\": 117.04723,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1818116\": {\n      \"name\": \"Anbu\",\n      \"country\": \"CN\",\n      \"lat\": 23.44895,\n      \"long\": 116.68092,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1818209\": {\n      \"name\": \"Tsuen Wan\",\n      \"country\": \"HK\",\n      \"lat\": 22.37066,\n      \"long\": 114.10479,\n      \"zone\": \"Asia/Hong_Kong\"\n    },\n    \"1818223\": {\n      \"name\": \"Yuen Long Kau Hui\",\n      \"country\": \"HK\",\n      \"lat\": 22.45,\n      \"long\": 114.03333,\n      \"zone\": \"Asia/Hong_Kong\"\n    },\n    \"1819609\": {\n      \"name\": \"Kowloon\",\n      \"country\": \"HK\",\n      \"lat\": 22.31667,\n      \"long\": 114.18333,\n      \"zone\": \"Asia/Hong_Kong\"\n    },\n    \"1819729\": {\n      \"name\": \"Hong Kong\",\n      \"country\": \"HK\",\n      \"lat\": 22.28552,\n      \"long\": 114.15769,\n      \"zone\": \"Asia/Hong_Kong\"\n    },\n    \"1821274\": {\n      \"name\": \"Macau\",\n      \"country\": \"MO\",\n      \"lat\": 22.20056,\n      \"long\": 113.54611,\n      \"zone\": \"Asia/Macau\"\n    },\n    \"1821306\": {\n      \"name\": \"Phnom Penh\",\n      \"country\": \"KH\",\n      \"lat\": 11.56245,\n      \"long\": 104.91601,\n      \"zone\": \"Asia/Phnom_Penh\"\n    },\n    \"1821940\": {\n      \"name\": \"Takeo\",\n      \"country\": \"KH\",\n      \"lat\": 10.99081,\n      \"long\": 104.78498,\n      \"zone\": \"Asia/Phnom_Penh\"\n    },\n    \"1822214\": {\n      \"name\": \"Siem Reap\",\n      \"country\": \"KH\",\n      \"lat\": 13.36179,\n      \"long\": 103.86056,\n      \"zone\": \"Asia/Phnom_Penh\"\n    },\n    \"1831142\": {\n      \"name\": \"Sihanoukville\",\n      \"country\": \"KH\",\n      \"lat\": 10.60932,\n      \"long\": 103.52958,\n      \"zone\": \"Asia/Phnom_Penh\"\n    },\n    \"1831797\": {\n      \"name\": \"Battambang\",\n      \"country\": \"KH\",\n      \"lat\": 13.10271,\n      \"long\": 103.19822,\n      \"zone\": \"Asia/Phnom_Penh\"\n    },\n    \"1832847\": {\n      \"name\": \"Yangju\",\n      \"country\": \"KR\",\n      \"lat\": 37.83311,\n      \"long\": 127.06169,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1833105\": {\n      \"name\": \"Wŏnju\",\n      \"country\": \"KR\",\n      \"lat\": 37.35139,\n      \"long\": 127.94528,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1833747\": {\n      \"name\": \"Ulsan\",\n      \"country\": \"KR\",\n      \"lat\": 35.53722,\n      \"long\": 129.31667,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1833788\": {\n      \"name\": \"Uijeongbu-si\",\n      \"country\": \"KR\",\n      \"lat\": 37.7415,\n      \"long\": 127.0474,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1835235\": {\n      \"name\": \"Daejeon\",\n      \"country\": \"KR\",\n      \"lat\": 36.32139,\n      \"long\": 127.41972,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1835329\": {\n      \"name\": \"Daegu\",\n      \"country\": \"KR\",\n      \"lat\": 35.87028,\n      \"long\": 128.59111,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1835553\": {\n      \"name\": \"Suwon-si\",\n      \"country\": \"KR\",\n      \"lat\": 37.29111,\n      \"long\": 127.00889,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1835648\": {\n      \"name\": \"Suncheon\",\n      \"country\": \"KR\",\n      \"lat\": 34.94808,\n      \"long\": 127.48947,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1835848\": {\n      \"name\": \"Seoul\",\n      \"country\": \"KR\",\n      \"lat\": 37.566,\n      \"long\": 126.9784,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1838524\": {\n      \"name\": \"Busan\",\n      \"country\": \"KR\",\n      \"lat\": 35.10278,\n      \"long\": 129.04028,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1838716\": {\n      \"name\": \"Bucheon-si\",\n      \"country\": \"KR\",\n      \"lat\": 37.49889,\n      \"long\": 126.78306,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1839071\": {\n      \"name\": \"Pohang\",\n      \"country\": \"KR\",\n      \"lat\": 36.03222,\n      \"long\": 129.365,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1839652\": {\n      \"name\": \"Osan\",\n      \"country\": \"KR\",\n      \"lat\": 37.15222,\n      \"long\": 127.07056,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1841066\": {\n      \"name\": \"Moppo\",\n      \"country\": \"KR\",\n      \"lat\": 34.79361,\n      \"long\": 126.38861,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1841598\": {\n      \"name\": \"Gyeongsan-si\",\n      \"country\": \"KR\",\n      \"lat\": 35.82333,\n      \"long\": 128.73778,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1841603\": {\n      \"name\": \"Kyonju\",\n      \"country\": \"KR\",\n      \"lat\": 35.84278,\n      \"long\": 129.21167,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1841811\": {\n      \"name\": \"Gwangju\",\n      \"country\": \"KR\",\n      \"lat\": 35.15472,\n      \"long\": 126.91556,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1841988\": {\n      \"name\": \"Guri-si\",\n      \"country\": \"KR\",\n      \"lat\": 37.5986,\n      \"long\": 127.1394,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1842025\": {\n      \"name\": \"Kunsan\",\n      \"country\": \"KR\",\n      \"lat\": 35.97861,\n      \"long\": 126.71139,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1842225\": {\n      \"name\": \"Gumi\",\n      \"country\": \"KR\",\n      \"lat\": 36.1136,\n      \"long\": 128.336,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1842485\": {\n      \"name\": \"Goyang-si\",\n      \"country\": \"KR\",\n      \"lat\": 37.65639,\n      \"long\": 126.835,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1842943\": {\n      \"name\": \"Kimhae\",\n      \"country\": \"KR\",\n      \"lat\": 35.23417,\n      \"long\": 128.88111,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1842944\": {\n      \"name\": \"Gimcheon\",\n      \"country\": \"KR\",\n      \"lat\": 36.12176,\n      \"long\": 128.11981,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1843137\": {\n      \"name\": \"Kang-neung\",\n      \"country\": \"KR\",\n      \"lat\": 37.75556,\n      \"long\": 128.89611,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1843491\": {\n      \"name\": \"Iksan\",\n      \"country\": \"KR\",\n      \"lat\": 35.94389,\n      \"long\": 126.95444,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1843564\": {\n      \"name\": \"Incheon\",\n      \"country\": \"KR\",\n      \"lat\": 37.45646,\n      \"long\": 126.70515,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1843702\": {\n      \"name\": \"Icheon-si\",\n      \"country\": \"KR\",\n      \"lat\": 37.27917,\n      \"long\": 127.4425,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1843847\": {\n      \"name\": \"Hwaseong-si\",\n      \"country\": \"KR\",\n      \"lat\": 37.20682,\n      \"long\": 126.8169,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1845136\": {\n      \"name\": \"Chuncheon\",\n      \"country\": \"KR\",\n      \"lat\": 37.87472,\n      \"long\": 127.73417,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1845457\": {\n      \"name\": \"Jeonju\",\n      \"country\": \"KR\",\n      \"lat\": 35.82194,\n      \"long\": 127.14889,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1845604\": {\n      \"name\": \"Cheongju-si\",\n      \"country\": \"KR\",\n      \"lat\": 36.63722,\n      \"long\": 127.48972,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1845759\": {\n      \"name\": \"Cheonan\",\n      \"country\": \"KR\",\n      \"lat\": 36.8065,\n      \"long\": 127.1522,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1846052\": {\n      \"name\": \"Chinju\",\n      \"country\": \"KR\",\n      \"lat\": 35.19278,\n      \"long\": 128.08472,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1846266\": {\n      \"name\": \"Jeju-si\",\n      \"country\": \"KR\",\n      \"lat\": 33.50972,\n      \"long\": 126.52194,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1846326\": {\n      \"name\": \"Changwon\",\n      \"country\": \"KR\",\n      \"lat\": 35.22806,\n      \"long\": 128.68111,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1846898\": {\n      \"name\": \"Anyang-si\",\n      \"country\": \"KR\",\n      \"lat\": 37.3925,\n      \"long\": 126.92694,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1846918\": {\n      \"name\": \"Ansan-si\",\n      \"country\": \"KR\",\n      \"lat\": 37.32361,\n      \"long\": 126.82194,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1846986\": {\n      \"name\": \"Andong\",\n      \"country\": \"KR\",\n      \"lat\": 36.56556,\n      \"long\": 128.725,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1847963\": {\n      \"name\": \"Atsugi\",\n      \"country\": \"JP\",\n      \"lat\": 35.43889,\n      \"long\": 139.35972,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1847966\": {\n      \"name\": \"Akashi\",\n      \"country\": \"JP\",\n      \"lat\": 34.63333,\n      \"long\": 134.98333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1848004\": {\n      \"name\": \"Zama\",\n      \"country\": \"JP\",\n      \"lat\": 35.48889,\n      \"long\": 139.38861,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1848254\": {\n      \"name\": \"Yono\",\n      \"country\": \"JP\",\n      \"lat\": 35.88333,\n      \"long\": 139.63333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1848277\": {\n      \"name\": \"Yonago\",\n      \"country\": \"JP\",\n      \"lat\": 35.43333,\n      \"long\": 133.33333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1848313\": {\n      \"name\": \"Yokosuka\",\n      \"country\": \"JP\",\n      \"lat\": 35.28361,\n      \"long\": 139.66722,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1848354\": {\n      \"name\": \"Yokohama\",\n      \"country\": \"JP\",\n      \"lat\": 35.44778,\n      \"long\": 139.6425,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1848373\": {\n      \"name\": \"Yokkaichi\",\n      \"country\": \"JP\",\n      \"lat\": 34.96667,\n      \"long\": 136.61667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1848445\": {\n      \"name\": \"Yatsushiro\",\n      \"country\": \"JP\",\n      \"lat\": 32.5045,\n      \"long\": 130.60066,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1848522\": {\n      \"name\": \"Yao\",\n      \"country\": \"JP\",\n      \"lat\": 34.61667,\n      \"long\": 135.6,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1848689\": {\n      \"name\": \"Yamaguchi-shi\",\n      \"country\": \"JP\",\n      \"lat\": 34.18583,\n      \"long\": 131.47139,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1848774\": {\n      \"name\": \"Yaizu\",\n      \"country\": \"JP\",\n      \"lat\": 34.86877,\n      \"long\": 138.31952,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1849053\": {\n      \"name\": \"Utsunomiya-shi\",\n      \"country\": \"JP\",\n      \"lat\": 36.56583,\n      \"long\": 139.88361,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1849186\": {\n      \"name\": \"Urayasu\",\n      \"country\": \"JP\",\n      \"lat\": 35.67056,\n      \"long\": 139.88861,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1849372\": {\n      \"name\": \"Uji\",\n      \"country\": \"JP\",\n      \"lat\": 34.89044,\n      \"long\": 135.80325,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1849429\": {\n      \"name\": \"Ueda\",\n      \"country\": \"JP\",\n      \"lat\": 36.40265,\n      \"long\": 138.28161,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1849498\": {\n      \"name\": \"Ube\",\n      \"country\": \"JP\",\n      \"lat\": 33.94306,\n      \"long\": 131.25111,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1849796\": {\n      \"name\": \"Tsu-shi\",\n      \"country\": \"JP\",\n      \"lat\": 34.73028,\n      \"long\": 136.50861,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1849814\": {\n      \"name\": \"Toyota\",\n      \"country\": \"JP\",\n      \"lat\": 35.08333,\n      \"long\": 137.15,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1849837\": {\n      \"name\": \"Toyonaka\",\n      \"country\": \"JP\",\n      \"lat\": 34.78244,\n      \"long\": 135.46932,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1849845\": {\n      \"name\": \"Toyokawa\",\n      \"country\": \"JP\",\n      \"lat\": 34.81667,\n      \"long\": 137.4,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1849846\": {\n      \"name\": \"Toyohashi\",\n      \"country\": \"JP\",\n      \"lat\": 34.76667,\n      \"long\": 137.38333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1849876\": {\n      \"name\": \"Toyama-shi\",\n      \"country\": \"JP\",\n      \"lat\": 36.69528,\n      \"long\": 137.21139,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1849892\": {\n      \"name\": \"Tottori\",\n      \"country\": \"JP\",\n      \"lat\": 35.5,\n      \"long\": 134.23333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1850034\": {\n      \"name\": \"Tondabayashichō\",\n      \"country\": \"JP\",\n      \"lat\": 34.50065,\n      \"long\": 135.60211,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1850147\": {\n      \"name\": \"Tokyo\",\n      \"country\": \"JP\",\n      \"lat\": 35.6895,\n      \"long\": 139.69171,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1850152\": {\n      \"name\": \"Tokuyama\",\n      \"country\": \"JP\",\n      \"lat\": 34.05,\n      \"long\": 131.81667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1850158\": {\n      \"name\": \"Tokushima-shi\",\n      \"country\": \"JP\",\n      \"lat\": 34.06583,\n      \"long\": 134.55945,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1850181\": {\n      \"name\": \"Tokorozawa\",\n      \"country\": \"JP\",\n      \"lat\": 35.79916,\n      \"long\": 139.46903,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1850692\": {\n      \"name\": \"Nishi-Tokyo-shi\",\n      \"country\": \"JP\",\n      \"lat\": 35.72526,\n      \"long\": 139.5383,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1850910\": {\n      \"name\": \"Takatsuki\",\n      \"country\": \"JP\",\n      \"lat\": 34.84833,\n      \"long\": 135.61678,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1851002\": {\n      \"name\": \"Takasaki\",\n      \"country\": \"JP\",\n      \"lat\": 36.33333,\n      \"long\": 139.01667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1851012\": {\n      \"name\": \"Takarazuka\",\n      \"country\": \"JP\",\n      \"lat\": 34.79936,\n      \"long\": 135.35697,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1851032\": {\n      \"name\": \"Takaoka\",\n      \"country\": \"JP\",\n      \"lat\": 36.75,\n      \"long\": 137.01667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1851100\": {\n      \"name\": \"Takamatsu-shi\",\n      \"country\": \"JP\",\n      \"lat\": 34.34028,\n      \"long\": 134.04333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1851193\": {\n      \"name\": \"Tajimi\",\n      \"country\": \"JP\",\n      \"lat\": 35.31667,\n      \"long\": 137.13333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1851348\": {\n      \"name\": \"Suzuka\",\n      \"country\": \"JP\",\n      \"lat\": 34.88333,\n      \"long\": 136.58333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1851483\": {\n      \"name\": \"Suita\",\n      \"country\": \"JP\",\n      \"lat\": 34.76143,\n      \"long\": 135.51567,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1851604\": {\n      \"name\": \"Sōka\",\n      \"country\": \"JP\",\n      \"lat\": 35.82028,\n      \"long\": 139.80444,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1851717\": {\n      \"name\": \"Shizuoka-shi\",\n      \"country\": \"JP\",\n      \"lat\": 34.97695,\n      \"long\": 138.38306,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1852225\": {\n      \"name\": \"Shimonoseki\",\n      \"country\": \"JP\",\n      \"lat\": 33.95,\n      \"long\": 130.95,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1852383\": {\n      \"name\": \"Minato\",\n      \"country\": \"JP\",\n      \"lat\": 34.2152,\n      \"long\": 135.1501,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1852663\": {\n      \"name\": \"Seto\",\n      \"country\": \"JP\",\n      \"lat\": 35.23333,\n      \"long\": 137.1,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1852899\": {\n      \"name\": \"Sasebo\",\n      \"country\": \"JP\",\n      \"lat\": 33.15917,\n      \"long\": 129.72278,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1853008\": {\n      \"name\": \"Sandachō\",\n      \"country\": \"JP\",\n      \"lat\": 34.88444,\n      \"long\": 135.22694,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1853140\": {\n      \"name\": \"Sakata\",\n      \"country\": \"JP\",\n      \"lat\": 38.91667,\n      \"long\": 139.855,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1853195\": {\n      \"name\": \"Sakai\",\n      \"country\": \"JP\",\n      \"lat\": 34.58333,\n      \"long\": 135.46667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1853303\": {\n      \"name\": \"Saga-shi\",\n      \"country\": \"JP\",\n      \"lat\": 33.24932,\n      \"long\": 130.2988,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1853483\": {\n      \"name\": \"Oyama\",\n      \"country\": \"JP\",\n      \"lat\": 36.3,\n      \"long\": 139.8,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1853574\": {\n      \"name\": \"Ōtsu-shi\",\n      \"country\": \"JP\",\n      \"lat\": 35.00444,\n      \"long\": 135.86833,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1853677\": {\n      \"name\": \"Ōta\",\n      \"country\": \"JP\",\n      \"lat\": 36.3,\n      \"long\": 139.36667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1853909\": {\n      \"name\": \"Ōsaka-shi\",\n      \"country\": \"JP\",\n      \"lat\": 34.69374,\n      \"long\": 135.50218,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1854083\": {\n      \"name\": \"Ōmuta\",\n      \"country\": \"JP\",\n      \"lat\": 33.03333,\n      \"long\": 130.45,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1854162\": {\n      \"name\": \"Ōme\",\n      \"country\": \"JP\",\n      \"lat\": 35.78389,\n      \"long\": 139.24306,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1854376\": {\n      \"name\": \"Okazaki\",\n      \"country\": \"JP\",\n      \"lat\": 34.95,\n      \"long\": 137.16667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1854383\": {\n      \"name\": \"Okayama-shi\",\n      \"country\": \"JP\",\n      \"lat\": 34.66167,\n      \"long\": 133.935,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1854487\": {\n      \"name\": \"Ōita\",\n      \"country\": \"JP\",\n      \"lat\": 33.23806,\n      \"long\": 131.6125,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1854703\": {\n      \"name\": \"Ōgaki\",\n      \"country\": \"JP\",\n      \"lat\": 35.35,\n      \"long\": 136.61667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1854747\": {\n      \"name\": \"Odawara\",\n      \"country\": \"JP\",\n      \"lat\": 35.25556,\n      \"long\": 139.15972,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1854902\": {\n      \"name\": \"Numazu\",\n      \"country\": \"JP\",\n      \"lat\": 35.1,\n      \"long\": 138.86667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1855078\": {\n      \"name\": \"Noda\",\n      \"country\": \"JP\",\n      \"lat\": 35.94111,\n      \"long\": 139.85806,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1855095\": {\n      \"name\": \"Nobeoka\",\n      \"country\": \"JP\",\n      \"lat\": 32.58333,\n      \"long\": 131.66667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1855189\": {\n      \"name\": \"Nishio\",\n      \"country\": \"JP\",\n      \"lat\": 34.86667,\n      \"long\": 137.05,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1855207\": {\n      \"name\": \"Nishinomiya-hama\",\n      \"country\": \"JP\",\n      \"lat\": 34.71562,\n      \"long\": 135.33199,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1855425\": {\n      \"name\": \"Niihama\",\n      \"country\": \"JP\",\n      \"lat\": 33.96047,\n      \"long\": 133.30522,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1855431\": {\n      \"name\": \"Niigata-shi\",\n      \"country\": \"JP\",\n      \"lat\": 37.90222,\n      \"long\": 139.02361,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1855612\": {\n      \"name\": \"Nara-shi\",\n      \"country\": \"JP\",\n      \"lat\": 34.68505,\n      \"long\": 135.80485,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1856035\": {\n      \"name\": \"Naha-shi\",\n      \"country\": \"JP\",\n      \"lat\": 26.2125,\n      \"long\": 127.68111,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1856057\": {\n      \"name\": \"Nagoya-shi\",\n      \"country\": \"JP\",\n      \"lat\": 35.18147,\n      \"long\": 136.90641,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1856177\": {\n      \"name\": \"Nagasaki-shi\",\n      \"country\": \"JP\",\n      \"lat\": 32.74472,\n      \"long\": 129.87361,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1856184\": {\n      \"name\": \"Nagareyama\",\n      \"country\": \"JP\",\n      \"lat\": 35.8563,\n      \"long\": 139.90266,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1856199\": {\n      \"name\": \"Nagaoka\",\n      \"country\": \"JP\",\n      \"lat\": 37.45,\n      \"long\": 138.85,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1856215\": {\n      \"name\": \"Nagano-shi\",\n      \"country\": \"JP\",\n      \"lat\": 36.65139,\n      \"long\": 138.18111,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1856367\": {\n      \"name\": \"Musashino\",\n      \"country\": \"JP\",\n      \"lat\": 35.70611,\n      \"long\": 139.55944,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1856584\": {\n      \"name\": \"Moriguchi\",\n      \"country\": \"JP\",\n      \"lat\": 34.73333,\n      \"long\": 135.56667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1856717\": {\n      \"name\": \"Miyazaki-shi\",\n      \"country\": \"JP\",\n      \"lat\": 31.91111,\n      \"long\": 131.42389,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1856775\": {\n      \"name\": \"Miyakonojō\",\n      \"country\": \"JP\",\n      \"lat\": 31.73333,\n      \"long\": 131.06667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1856942\": {\n      \"name\": \"Mitaka-shi\",\n      \"country\": \"JP\",\n      \"lat\": 35.68351,\n      \"long\": 139.55963,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1856977\": {\n      \"name\": \"Mishima\",\n      \"country\": \"JP\",\n      \"lat\": 35.11667,\n      \"long\": 138.91667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1857046\": {\n      \"name\": \"Mino\",\n      \"country\": \"JP\",\n      \"lat\": 34.82691,\n      \"long\": 135.47057,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1857144\": {\n      \"name\": \"Minami-rinkan\",\n      \"country\": \"JP\",\n      \"lat\": 35.48333,\n      \"long\": 139.45,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1857519\": {\n      \"name\": \"Matsumoto\",\n      \"country\": \"JP\",\n      \"lat\": 36.23333,\n      \"long\": 137.96667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1857550\": {\n      \"name\": \"Matsue-shi\",\n      \"country\": \"JP\",\n      \"lat\": 35.47222,\n      \"long\": 133.05056,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1857553\": {\n      \"name\": \"Matsudo\",\n      \"country\": \"JP\",\n      \"lat\": 35.78333,\n      \"long\": 139.9,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1857568\": {\n      \"name\": \"Matsubara\",\n      \"country\": \"JP\",\n      \"lat\": 34.56667,\n      \"long\": 135.55,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1857843\": {\n      \"name\": \"Maebashi-shi\",\n      \"country\": \"JP\",\n      \"lat\": 36.39111,\n      \"long\": 139.06083,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1857871\": {\n      \"name\": \"Machida\",\n      \"country\": \"JP\",\n      \"lat\": 35.54028,\n      \"long\": 139.45083,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1857910\": {\n      \"name\": \"Kyoto\",\n      \"country\": \"JP\",\n      \"lat\": 35.02107,\n      \"long\": 135.75385,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1858067\": {\n      \"name\": \"Kusatsu\",\n      \"country\": \"JP\",\n      \"lat\": 35.01667,\n      \"long\": 135.96667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1858088\": {\n      \"name\": \"Kurume\",\n      \"country\": \"JP\",\n      \"lat\": 33.31667,\n      \"long\": 130.51667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1858296\": {\n      \"name\": \"Kure\",\n      \"country\": \"JP\",\n      \"lat\": 34.23222,\n      \"long\": 132.56658,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1858311\": {\n      \"name\": \"Kurashiki\",\n      \"country\": \"JP\",\n      \"lat\": 34.58333,\n      \"long\": 133.76667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1858421\": {\n      \"name\": \"Kumamoto\",\n      \"country\": \"JP\",\n      \"lat\": 32.80589,\n      \"long\": 130.69181,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1858428\": {\n      \"name\": \"Kumagaya\",\n      \"country\": \"JP\",\n      \"lat\": 36.13497,\n      \"long\": 139.39004,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1858729\": {\n      \"name\": \"Koshigaya\",\n      \"country\": \"JP\",\n      \"lat\": 35.88333,\n      \"long\": 139.78333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1858836\": {\n      \"name\": \"Kōnan\",\n      \"country\": \"JP\",\n      \"lat\": 35.33165,\n      \"long\": 136.87042,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1858910\": {\n      \"name\": \"Komatsu\",\n      \"country\": \"JP\",\n      \"lat\": 36.40263,\n      \"long\": 136.45088,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1858926\": {\n      \"name\": \"Komaki\",\n      \"country\": \"JP\",\n      \"lat\": 35.28333,\n      \"long\": 136.91667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1858964\": {\n      \"name\": \"Kokubunji\",\n      \"country\": \"JP\",\n      \"lat\": 35.70222,\n      \"long\": 139.47556,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1859100\": {\n      \"name\": \"Kōfu-shi\",\n      \"country\": \"JP\",\n      \"lat\": 35.66389,\n      \"long\": 138.56833,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1859146\": {\n      \"name\": \"Kōchi-shi\",\n      \"country\": \"JP\",\n      \"lat\": 33.55972,\n      \"long\": 133.53111,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1859171\": {\n      \"name\": \"Kobe\",\n      \"country\": \"JP\",\n      \"lat\": 34.6913,\n      \"long\": 135.183,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1859307\": {\n      \"name\": \"Kitakyūshū\",\n      \"country\": \"JP\",\n      \"lat\": 33.83333,\n      \"long\": 130.83333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1859383\": {\n      \"name\": \"Kishiwada\",\n      \"country\": \"JP\",\n      \"lat\": 34.46667,\n      \"long\": 135.36667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1859393\": {\n      \"name\": \"Kisarazu\",\n      \"country\": \"JP\",\n      \"lat\": 35.37472,\n      \"long\": 139.9225,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1859405\": {\n      \"name\": \"Kiryū\",\n      \"country\": \"JP\",\n      \"lat\": 36.4,\n      \"long\": 139.33333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1859642\": {\n      \"name\": \"Kawasaki\",\n      \"country\": \"JP\",\n      \"lat\": 35.52056,\n      \"long\": 139.71722,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1859675\": {\n      \"name\": \"Kawanishi\",\n      \"country\": \"JP\",\n      \"lat\": 34.81667,\n      \"long\": 135.41667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1859730\": {\n      \"name\": \"Kawaguchi\",\n      \"country\": \"JP\",\n      \"lat\": 35.80521,\n      \"long\": 139.71072,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1859740\": {\n      \"name\": \"Kawagoe\",\n      \"country\": \"JP\",\n      \"lat\": 35.90861,\n      \"long\": 139.48528,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1859884\": {\n      \"name\": \"Kasukabe\",\n      \"country\": \"JP\",\n      \"lat\": 35.98122,\n      \"long\": 139.74424,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1859891\": {\n      \"name\": \"Kasugai\",\n      \"country\": \"JP\",\n      \"lat\": 35.24762,\n      \"long\": 136.97229,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1859924\": {\n      \"name\": \"Kashiwa\",\n      \"country\": \"JP\",\n      \"lat\": 35.85444,\n      \"long\": 139.96889,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1859951\": {\n      \"name\": \"Kashihara-shi\",\n      \"country\": \"JP\",\n      \"lat\": 34.50896,\n      \"long\": 135.7929,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1860034\": {\n      \"name\": \"Kariya\",\n      \"country\": \"JP\",\n      \"lat\": 34.98333,\n      \"long\": 136.98333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1860243\": {\n      \"name\": \"Kanazawa-shi\",\n      \"country\": \"JP\",\n      \"lat\": 36.59445,\n      \"long\": 136.62556,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1860437\": {\n      \"name\": \"Kamirenjaku\",\n      \"country\": \"JP\",\n      \"lat\": 35.70034,\n      \"long\": 139.55665,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1860672\": {\n      \"name\": \"Kamakura\",\n      \"country\": \"JP\",\n      \"lat\": 35.30889,\n      \"long\": 139.55028,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1860704\": {\n      \"name\": \"Kakogawachō-honmachi\",\n      \"country\": \"JP\",\n      \"lat\": 34.76943,\n      \"long\": 134.82905,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1860735\": {\n      \"name\": \"Kakamigahara\",\n      \"country\": \"JP\",\n      \"lat\": 35.41667,\n      \"long\": 136.86667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1860827\": {\n      \"name\": \"Kagoshima-shi\",\n      \"country\": \"JP\",\n      \"lat\": 31.56019,\n      \"long\": 130.55814,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1860871\": {\n      \"name\": \"Kadoma\",\n      \"country\": \"JP\",\n      \"lat\": 34.7381,\n      \"long\": 135.57442,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1861107\": {\n      \"name\": \"Izumi\",\n      \"country\": \"JP\",\n      \"lat\": 34.48333,\n      \"long\": 135.43333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1861164\": {\n      \"name\": \"Iwatsuki\",\n      \"country\": \"JP\",\n      \"lat\": 35.95225,\n      \"long\": 139.68502,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1861212\": {\n      \"name\": \"Iwakuni\",\n      \"country\": \"JP\",\n      \"lat\": 34.16297,\n      \"long\": 132.22,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1861310\": {\n      \"name\": \"Itami\",\n      \"country\": \"JP\",\n      \"lat\": 34.78427,\n      \"long\": 135.40126,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1861436\": {\n      \"name\": \"Isesaki\",\n      \"country\": \"JP\",\n      \"lat\": 36.31667,\n      \"long\": 139.2,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1861449\": {\n      \"name\": \"Isehara\",\n      \"country\": \"JP\",\n      \"lat\": 35.39056,\n      \"long\": 139.30778,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1861602\": {\n      \"name\": \"Inazawa\",\n      \"country\": \"JP\",\n      \"lat\": 35.25,\n      \"long\": 136.78333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1861749\": {\n      \"name\": \"Ikoma\",\n      \"country\": \"JP\",\n      \"lat\": 34.68333,\n      \"long\": 135.7,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1861864\": {\n      \"name\": \"Iida\",\n      \"country\": \"JP\",\n      \"lat\": 35.51965,\n      \"long\": 137.82074,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1861949\": {\n      \"name\": \"Ichinomiya\",\n      \"country\": \"JP\",\n      \"lat\": 35.3,\n      \"long\": 136.8,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1862033\": {\n      \"name\": \"Ibaraki\",\n      \"country\": \"JP\",\n      \"lat\": 34.81641,\n      \"long\": 135.56828,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1862302\": {\n      \"name\": \"Hōfu\",\n      \"country\": \"JP\",\n      \"lat\": 34.05,\n      \"long\": 131.56667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1862415\": {\n      \"name\": \"Hiroshima-shi\",\n      \"country\": \"JP\",\n      \"lat\": 34.39627,\n      \"long\": 132.45937,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1862462\": {\n      \"name\": \"Hiratsuka\",\n      \"country\": \"JP\",\n      \"lat\": 35.32306,\n      \"long\": 139.34222,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1862540\": {\n      \"name\": \"Hirakata\",\n      \"country\": \"JP\",\n      \"lat\": 34.81352,\n      \"long\": 135.64914,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1862599\": {\n      \"name\": \"Hino\",\n      \"country\": \"JP\",\n      \"lat\": 35.67306,\n      \"long\": 139.40028,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1862627\": {\n      \"name\": \"Himeji\",\n      \"country\": \"JP\",\n      \"lat\": 34.81667,\n      \"long\": 134.7,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1862636\": {\n      \"name\": \"Hikone\",\n      \"country\": \"JP\",\n      \"lat\": 35.25,\n      \"long\": 136.25,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1863209\": {\n      \"name\": \"Handa\",\n      \"country\": \"JP\",\n      \"lat\": 34.88333,\n      \"long\": 136.93333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1863289\": {\n      \"name\": \"Hamamatsu\",\n      \"country\": \"JP\",\n      \"lat\": 34.7,\n      \"long\": 137.73333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1863431\": {\n      \"name\": \"Hadano\",\n      \"country\": \"JP\",\n      \"lat\": 35.37111,\n      \"long\": 139.22361,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1863440\": {\n      \"name\": \"Hachiōji\",\n      \"country\": \"JP\",\n      \"lat\": 35.65583,\n      \"long\": 139.32389,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1863641\": {\n      \"name\": \"Gifu-shi\",\n      \"country\": \"JP\",\n      \"lat\": 35.42291,\n      \"long\": 136.76039,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1863905\": {\n      \"name\": \"Funabashi\",\n      \"country\": \"JP\",\n      \"lat\": 35.69306,\n      \"long\": 139.98333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1863917\": {\n      \"name\": \"Fukuyama\",\n      \"country\": \"JP\",\n      \"lat\": 34.48333,\n      \"long\": 133.36667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1863967\": {\n      \"name\": \"Fukuoka-shi\",\n      \"country\": \"JP\",\n      \"lat\": 33.60639,\n      \"long\": 130.41806,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1863985\": {\n      \"name\": \"Fukui-shi\",\n      \"country\": \"JP\",\n      \"lat\": 36.06443,\n      \"long\": 136.22257,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1864031\": {\n      \"name\": \"Fukayachō\",\n      \"country\": \"JP\",\n      \"lat\": 36.2,\n      \"long\": 139.28333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1864092\": {\n      \"name\": \"Fujisawa\",\n      \"country\": \"JP\",\n      \"lat\": 35.34194,\n      \"long\": 139.47,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1864105\": {\n      \"name\": \"Fujinomiya\",\n      \"country\": \"JP\",\n      \"lat\": 35.21667,\n      \"long\": 138.61667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1864132\": {\n      \"name\": \"Fujieda\",\n      \"country\": \"JP\",\n      \"lat\": 34.86667,\n      \"long\": 138.26667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1864134\": {\n      \"name\": \"Fuji\",\n      \"country\": \"JP\",\n      \"lat\": 35.16667,\n      \"long\": 138.68333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1864416\": {\n      \"name\": \"Daitōchō\",\n      \"country\": \"JP\",\n      \"lat\": 34.71378,\n      \"long\": 135.62033,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1864518\": {\n      \"name\": \"Chōfugaoka\",\n      \"country\": \"JP\",\n      \"lat\": 35.65924,\n      \"long\": 139.54837,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1864572\": {\n      \"name\": \"Chikushino-shi\",\n      \"country\": \"JP\",\n      \"lat\": 33.49631,\n      \"long\": 130.5156,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1864624\": {\n      \"name\": \"Chigasaki\",\n      \"country\": \"JP\",\n      \"lat\": 35.32611,\n      \"long\": 139.40389,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1864750\": {\n      \"name\": \"Beppu\",\n      \"country\": \"JP\",\n      \"lat\": 33.27945,\n      \"long\": 131.49751,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1865005\": {\n      \"name\": \"Ashikaga\",\n      \"country\": \"JP\",\n      \"lat\": 36.33333,\n      \"long\": 139.45,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1865294\": {\n      \"name\": \"Anjō\",\n      \"country\": \"JP\",\n      \"lat\": 34.95828,\n      \"long\": 137.08054,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1865387\": {\n      \"name\": \"Amagasaki\",\n      \"country\": \"JP\",\n      \"lat\": 34.71667,\n      \"long\": 135.41667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1865714\": {\n      \"name\": \"Ageoshimo\",\n      \"country\": \"JP\",\n      \"lat\": 35.97145,\n      \"long\": 139.61382,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1866923\": {\n      \"name\": \"Wŏnsan\",\n      \"country\": \"KP\",\n      \"lat\": 39.15278,\n      \"long\": 127.44361,\n      \"zone\": \"Asia/Pyongyang\"\n    },\n    \"1869446\": {\n      \"name\": \"Songnim\",\n      \"country\": \"KP\",\n      \"lat\": 38.75417,\n      \"long\": 125.645,\n      \"zone\": \"Asia/Pyongyang\"\n    },\n    \"1870883\": {\n      \"name\": \"Sariwŏn\",\n      \"country\": \"KP\",\n      \"lat\": 38.50722,\n      \"long\": 125.75583,\n      \"zone\": \"Asia/Pyongyang\"\n    },\n    \"1871859\": {\n      \"name\": \"Pyongyang\",\n      \"country\": \"KP\",\n      \"lat\": 39.03385,\n      \"long\": 125.75432,\n      \"zone\": \"Asia/Pyongyang\"\n    },\n    \"1873757\": {\n      \"name\": \"Namp’o\",\n      \"country\": \"KP\",\n      \"lat\": 38.7375,\n      \"long\": 125.40778,\n      \"zone\": \"Asia/Pyongyang\"\n    },\n    \"1876373\": {\n      \"name\": \"Kaesŏng\",\n      \"country\": \"KP\",\n      \"lat\": 37.97083,\n      \"long\": 126.55444,\n      \"zone\": \"Asia/Pyongyang\"\n    },\n    \"1877030\": {\n      \"name\": \"Hŭngnam\",\n      \"country\": \"KP\",\n      \"lat\": 39.83167,\n      \"long\": 127.61861,\n      \"zone\": \"Asia/Pyongyang\"\n    },\n    \"1877449\": {\n      \"name\": \"Hamhŭng\",\n      \"country\": \"KP\",\n      \"lat\": 39.91833,\n      \"long\": 127.53639,\n      \"zone\": \"Asia/Pyongyang\"\n    },\n    \"1877615\": {\n      \"name\": \"Haeju\",\n      \"country\": \"KP\",\n      \"lat\": 38.04056,\n      \"long\": 125.71472,\n      \"zone\": \"Asia/Pyongyang\"\n    },\n    \"1880252\": {\n      \"name\": \"Singapore\",\n      \"country\": \"SG\",\n      \"lat\": 1.28967,\n      \"long\": 103.85007,\n      \"zone\": \"Asia/Singapore\"\n    },\n    \"1884138\": {\n      \"name\": \"Yeosu\",\n      \"country\": \"KR\",\n      \"lat\": 34.76278,\n      \"long\": 127.66528,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1885823\": {\n      \"name\": \"Jiangyou\",\n      \"country\": \"CN\",\n      \"lat\": 31.76667,\n      \"long\": 104.71667,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1886760\": {\n      \"name\": \"Suzhou\",\n      \"country\": \"CN\",\n      \"lat\": 31.30408,\n      \"long\": 120.59538,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1892823\": {\n      \"name\": \"Tonghae\",\n      \"country\": \"KR\",\n      \"lat\": 37.54389,\n      \"long\": 129.10694,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1894616\": {\n      \"name\": \"Okinawa\",\n      \"country\": \"JP\",\n      \"lat\": 26.33583,\n      \"long\": 127.80139,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1897000\": {\n      \"name\": \"Seongnam-si\",\n      \"country\": \"KR\",\n      \"lat\": 37.43861,\n      \"long\": 127.13778,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1897007\": {\n      \"name\": \"Hanam\",\n      \"country\": \"KR\",\n      \"lat\": 37.54,\n      \"long\": 127.20556,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1897118\": {\n      \"name\": \"Hwado\",\n      \"country\": \"KR\",\n      \"lat\": 37.6525,\n      \"long\": 127.3075,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1907146\": {\n      \"name\": \"Sayama\",\n      \"country\": \"JP\",\n      \"lat\": 35.85295,\n      \"long\": 139.41212,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1907299\": {\n      \"name\": \"Asaka\",\n      \"country\": \"JP\",\n      \"lat\": 35.80472,\n      \"long\": 139.60194,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1907301\": {\n      \"name\": \"Shimotoda\",\n      \"country\": \"JP\",\n      \"lat\": 35.81251,\n      \"long\": 139.6856,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1915223\": {\n      \"name\": \"Zhongshan\",\n      \"country\": \"CN\",\n      \"lat\": 21.31992,\n      \"long\": 110.5723,\n      \"zone\": \"Asia/Urumqi\"\n    },\n    \"1919014\": {\n      \"name\": \"Lianghu\",\n      \"country\": \"CN\",\n      \"lat\": 29.99152,\n      \"long\": 120.89845,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1926004\": {\n      \"name\": \"Wakayama-shi\",\n      \"country\": \"JP\",\n      \"lat\": 34.22611,\n      \"long\": 135.1675,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1926099\": {\n      \"name\": \"Matsuyama\",\n      \"country\": \"JP\",\n      \"lat\": 33.83916,\n      \"long\": 132.76574,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"1927639\": {\n      \"name\": \"Yueyang\",\n      \"country\": \"CN\",\n      \"lat\": 29.37455,\n      \"long\": 113.09481,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"1948005\": {\n      \"name\": \"Kwangmyŏng\",\n      \"country\": \"KR\",\n      \"lat\": 37.47722,\n      \"long\": 126.86639,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"1963770\": {\n      \"name\": \"Padalarang\",\n      \"country\": \"ID\",\n      \"lat\": -6.83778,\n      \"long\": 107.47278,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1978681\": {\n      \"name\": \"Malingao\",\n      \"country\": \"PH\",\n      \"lat\": 7.16083,\n      \"long\": 124.475,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"1985663\": {\n      \"name\": \"Cikupa\",\n      \"country\": \"ID\",\n      \"lat\": -6.23639,\n      \"long\": 106.50833,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"1990589\": {\n      \"name\": \"Teluknaga\",\n      \"country\": \"ID\",\n      \"lat\": -6.09889,\n      \"long\": 106.63806,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"2013159\": {\n      \"name\": \"Yakutsk\",\n      \"country\": \"RU\",\n      \"lat\": 62.03389,\n      \"long\": 129.73306,\n      \"zone\": \"Asia/Yakutsk\"\n    },\n    \"2013348\": {\n      \"name\": \"Vladivostok\",\n      \"country\": \"RU\",\n      \"lat\": 43.10562,\n      \"long\": 131.87353,\n      \"zone\": \"Asia/Vladivostok\"\n    },\n    \"2013952\": {\n      \"name\": \"Ust’-Ilimsk\",\n      \"country\": \"RU\",\n      \"lat\": 58.00056,\n      \"long\": 102.66194,\n      \"zone\": \"Asia/Irkutsk\"\n    },\n    \"2014006\": {\n      \"name\": \"Ussuriysk\",\n      \"country\": \"RU\",\n      \"lat\": 43.80291,\n      \"long\": 131.94578,\n      \"zone\": \"Asia/Vladivostok\"\n    },\n    \"2014407\": {\n      \"name\": \"Ulan-Ude\",\n      \"country\": \"RU\",\n      \"lat\": 51.82721,\n      \"long\": 107.60627,\n      \"zone\": \"Asia/Irkutsk\"\n    },\n    \"2019528\": {\n      \"name\": \"Nakhodka\",\n      \"country\": \"RU\",\n      \"lat\": 42.81384,\n      \"long\": 132.87348,\n      \"zone\": \"Asia/Vladivostok\"\n    },\n    \"2021851\": {\n      \"name\": \"Komsomolsk-on-Amur\",\n      \"country\": \"RU\",\n      \"lat\": 50.55034,\n      \"long\": 137.00995,\n      \"zone\": \"Asia/Vladivostok\"\n    },\n    \"2022890\": {\n      \"name\": \"Khabarovsk\",\n      \"country\": \"RU\",\n      \"lat\": 48.48271,\n      \"long\": 135.08379,\n      \"zone\": \"Asia/Vladivostok\"\n    },\n    \"2023469\": {\n      \"name\": \"Irkutsk\",\n      \"country\": \"RU\",\n      \"lat\": 52.29778,\n      \"long\": 104.29639,\n      \"zone\": \"Asia/Irkutsk\"\n    },\n    \"2025339\": {\n      \"name\": \"Chita\",\n      \"country\": \"RU\",\n      \"lat\": 52.03171,\n      \"long\": 113.50087,\n      \"zone\": \"Asia/Yakutsk\"\n    },\n    \"2026609\": {\n      \"name\": \"Blagoveshchensk\",\n      \"country\": \"RU\",\n      \"lat\": 50.27961,\n      \"long\": 127.5405,\n      \"zone\": \"Asia/Yakutsk\"\n    },\n    \"2027456\": {\n      \"name\": \"Artëm\",\n      \"country\": \"RU\",\n      \"lat\": 43.3595,\n      \"long\": 132.18887,\n      \"zone\": \"Asia/Vladivostok\"\n    },\n    \"2027667\": {\n      \"name\": \"Angarsk\",\n      \"country\": \"RU\",\n      \"lat\": 52.53667,\n      \"long\": 103.88639,\n      \"zone\": \"Asia/Irkutsk\"\n    },\n    \"2028462\": {\n      \"name\": \"Ulaanbaatar\",\n      \"country\": \"MN\",\n      \"lat\": 47.90771,\n      \"long\": 106.88324,\n      \"zone\": \"Asia/Ulaanbaatar\"\n    },\n    \"2033168\": {\n      \"name\": \"Zhaodong\",\n      \"country\": \"CN\",\n      \"lat\": 46.06771,\n      \"long\": 125.98263,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2033196\": {\n      \"name\": \"Zhangjiakou\",\n      \"country\": \"CN\",\n      \"lat\": 40.81,\n      \"long\": 114.87944,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2033225\": {\n      \"name\": \"Zalantun\",\n      \"country\": \"CN\",\n      \"lat\": 48,\n      \"long\": 122.71667,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2033242\": {\n      \"name\": \"Yushu\",\n      \"country\": \"CN\",\n      \"lat\": 44.8,\n      \"long\": 126.53333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2033370\": {\n      \"name\": \"Yingkou\",\n      \"country\": \"CN\",\n      \"lat\": 40.66482,\n      \"long\": 122.22833,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2033413\": {\n      \"name\": \"Yichun\",\n      \"country\": \"CN\",\n      \"lat\": 47.72143,\n      \"long\": 128.87529,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2033467\": {\n      \"name\": \"Yanji\",\n      \"country\": \"CN\",\n      \"lat\": 42.9075,\n      \"long\": 129.50778,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2033536\": {\n      \"name\": \"Yakeshi\",\n      \"country\": \"CN\",\n      \"lat\": 49.28333,\n      \"long\": 120.73333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2033574\": {\n      \"name\": \"Zhangjiakou Shi Xuanhua Qu\",\n      \"country\": \"CN\",\n      \"lat\": 40.61028,\n      \"long\": 115.04472,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2033824\": {\n      \"name\": \"Xilin Hot\",\n      \"country\": \"CN\",\n      \"lat\": 43.96667,\n      \"long\": 116.03333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2034312\": {\n      \"name\": \"Ulanhot\",\n      \"country\": \"CN\",\n      \"lat\": 46.08333,\n      \"long\": 122.08333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2034400\": {\n      \"name\": \"Tongliao\",\n      \"country\": \"CN\",\n      \"lat\": 43.6125,\n      \"long\": 122.26528,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2034439\": {\n      \"name\": \"Tieling\",\n      \"country\": \"CN\",\n      \"lat\": 42.29306,\n      \"long\": 123.84139,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2034440\": {\n      \"name\": \"Tieli\",\n      \"country\": \"CN\",\n      \"lat\": 46.98043,\n      \"long\": 128.04497,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2034497\": {\n      \"name\": \"Guangming\",\n      \"country\": \"CN\",\n      \"lat\": 45.33333,\n      \"long\": 122.78333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2034638\": {\n      \"name\": \"Sujiatun\",\n      \"country\": \"CN\",\n      \"lat\": 41.65917,\n      \"long\": 123.33917,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2034655\": {\n      \"name\": \"Suihua\",\n      \"country\": \"CN\",\n      \"lat\": 46.63954,\n      \"long\": 126.99508,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2034714\": {\n      \"name\": \"Siping\",\n      \"country\": \"CN\",\n      \"lat\": 43.16143,\n      \"long\": 124.37785,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2034754\": {\n      \"name\": \"Shunyi\",\n      \"country\": \"CN\",\n      \"lat\": 40.12175,\n      \"long\": 116.64783,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2034786\": {\n      \"name\": \"Shuangyashan\",\n      \"country\": \"CN\",\n      \"lat\": 46.63611,\n      \"long\": 131.15389,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2034834\": {\n      \"name\": \"Shuangcheng\",\n      \"country\": \"CN\",\n      \"lat\": 45.35,\n      \"long\": 126.28333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2034937\": {\n      \"name\": \"Shenyang\",\n      \"country\": \"CN\",\n      \"lat\": 41.79222,\n      \"long\": 123.43278,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2034996\": {\n      \"name\": \"Shanhaiguan\",\n      \"country\": \"CN\",\n      \"lat\": 40.0025,\n      \"long\": 119.74889,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2035225\": {\n      \"name\": \"Fendou\",\n      \"country\": \"CN\",\n      \"lat\": 46.64142,\n      \"long\": 124.86283,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2035261\": {\n      \"name\": \"Taihe\",\n      \"country\": \"CN\",\n      \"lat\": 45.76195,\n      \"long\": 130.85131,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2035265\": {\n      \"name\": \"Qiqihar\",\n      \"country\": \"CN\",\n      \"lat\": 47.34088,\n      \"long\": 123.96045,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2035399\": {\n      \"name\": \"Qianguo\",\n      \"country\": \"CN\",\n      \"lat\": 45.11711,\n      \"long\": 124.85676,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2035513\": {\n      \"name\": \"Panshan\",\n      \"country\": \"CN\",\n      \"lat\": 41.18806,\n      \"long\": 122.04944,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2035610\": {\n      \"name\": \"Nehe\",\n      \"country\": \"CN\",\n      \"lat\": 48.48333,\n      \"long\": 124.83333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2035644\": {\n      \"name\": \"Nanpiao\",\n      \"country\": \"CN\",\n      \"lat\": 41.09822,\n      \"long\": 120.74792,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2035669\": {\n      \"name\": \"Lianhe\",\n      \"country\": \"CN\",\n      \"lat\": 47.13333,\n      \"long\": 129.27426,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2035715\": {\n      \"name\": \"Mudanjiang\",\n      \"country\": \"CN\",\n      \"lat\": 44.58333,\n      \"long\": 129.6,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2035966\": {\n      \"name\": \"Longjing\",\n      \"country\": \"CN\",\n      \"lat\": 42.77139,\n      \"long\": 129.42333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2035970\": {\n      \"name\": \"Longjiang\",\n      \"country\": \"CN\",\n      \"lat\": 47.33072,\n      \"long\": 123.17816,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2035980\": {\n      \"name\": \"Longfeng\",\n      \"country\": \"CN\",\n      \"lat\": 46.53168,\n      \"long\": 125.1038,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2036109\": {\n      \"name\": \"Liaoyuan\",\n      \"country\": \"CN\",\n      \"lat\": 42.90361,\n      \"long\": 125.13583,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2036113\": {\n      \"name\": \"Liaoyang\",\n      \"country\": \"CN\",\n      \"lat\": 41.27194,\n      \"long\": 123.17306,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2036337\": {\n      \"name\": \"Kaiyuan\",\n      \"country\": \"CN\",\n      \"lat\": 42.53306,\n      \"long\": 124.04028,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2036389\": {\n      \"name\": \"Jixi\",\n      \"country\": \"CN\",\n      \"lat\": 45.30109,\n      \"long\": 130.95718,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2036401\": {\n      \"name\": \"Jiutai\",\n      \"country\": \"CN\",\n      \"lat\": 44.1525,\n      \"long\": 125.83278,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2036403\": {\n      \"name\": \"Jiupu\",\n      \"country\": \"CN\",\n      \"lat\": 41.06667,\n      \"long\": 122.95,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2036418\": {\n      \"name\": \"Jishu\",\n      \"country\": \"CN\",\n      \"lat\": 44.31667,\n      \"long\": 126.8,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2036427\": {\n      \"name\": \"Jinzhou\",\n      \"country\": \"CN\",\n      \"lat\": 41.10778,\n      \"long\": 121.14167,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2036434\": {\n      \"name\": \"Lianshan\",\n      \"country\": \"CN\",\n      \"lat\": 40.76432,\n      \"long\": 120.85327,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2036458\": {\n      \"name\": \"Jining\",\n      \"country\": \"CN\",\n      \"lat\": 41.0275,\n      \"long\": 113.10583,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2036502\": {\n      \"name\": \"Jilin\",\n      \"country\": \"CN\",\n      \"lat\": 43.85083,\n      \"long\": 126.56028,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2036536\": {\n      \"name\": \"Minzhu\",\n      \"country\": \"CN\",\n      \"lat\": 43.72145,\n      \"long\": 127.33401,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2036581\": {\n      \"name\": \"Jiamusi\",\n      \"country\": \"CN\",\n      \"lat\": 46.79927,\n      \"long\": 130.31633,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2036595\": {\n      \"name\": \"Jalai Nur\",\n      \"country\": \"CN\",\n      \"lat\": 49.45,\n      \"long\": 117.7,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2036597\": {\n      \"name\": \"Jagdaqi\",\n      \"country\": \"CN\",\n      \"lat\": 50.41667,\n      \"long\": 124.11667,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2036670\": {\n      \"name\": \"Hulan Ergi\",\n      \"country\": \"CN\",\n      \"lat\": 47.20417,\n      \"long\": 123.63333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2036671\": {\n      \"name\": \"Hulan\",\n      \"country\": \"CN\",\n      \"lat\": 45.98333,\n      \"long\": 126.6,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2036776\": {\n      \"name\": \"Huadian\",\n      \"country\": \"CN\",\n      \"lat\": 42.96333,\n      \"long\": 126.74778,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2036876\": {\n      \"name\": \"Honggang\",\n      \"country\": \"CN\",\n      \"lat\": 46.40124,\n      \"long\": 124.88322,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2036892\": {\n      \"name\": \"Hohhot\",\n      \"country\": \"CN\",\n      \"lat\": 40.81056,\n      \"long\": 111.65222,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2036920\": {\n      \"name\": \"Fendou\",\n      \"country\": \"CN\",\n      \"lat\": 45.21235,\n      \"long\": 130.90254,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2036973\": {\n      \"name\": \"Heihe\",\n      \"country\": \"CN\",\n      \"lat\": 50.24413,\n      \"long\": 127.49016,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2036986\": {\n      \"name\": \"Hegang\",\n      \"country\": \"CN\",\n      \"lat\": 47.35118,\n      \"long\": 130.30012,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2037013\": {\n      \"name\": \"Harbin\",\n      \"country\": \"CN\",\n      \"lat\": 45.75,\n      \"long\": 126.65,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2037069\": {\n      \"name\": \"Hailun\",\n      \"country\": \"CN\",\n      \"lat\": 47.4565,\n      \"long\": 126.95368,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2037078\": {\n      \"name\": \"Hailar\",\n      \"country\": \"CN\",\n      \"lat\": 49.2,\n      \"long\": 119.7,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2037086\": {\n      \"name\": \"Haicheng\",\n      \"country\": \"CN\",\n      \"lat\": 40.85158,\n      \"long\": 122.74754,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2037222\": {\n      \"name\": \"Gongzhuling\",\n      \"country\": \"CN\",\n      \"lat\": 43.50075,\n      \"long\": 124.81979,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2037335\": {\n      \"name\": \"Fuyu\",\n      \"country\": \"CN\",\n      \"lat\": 45.18333,\n      \"long\": 124.81667,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2037346\": {\n      \"name\": \"Fuxin\",\n      \"country\": \"CN\",\n      \"lat\": 42.01556,\n      \"long\": 121.65889,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2037355\": {\n      \"name\": \"Fushun\",\n      \"country\": \"CN\",\n      \"lat\": 41.85583,\n      \"long\": 123.92333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2037411\": {\n      \"name\": \"Fengcheng\",\n      \"country\": \"CN\",\n      \"lat\": 40.45361,\n      \"long\": 124.07167,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2037534\": {\n      \"name\": \"Dunhua\",\n      \"country\": \"CN\",\n      \"lat\": 43.3725,\n      \"long\": 128.2425,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2037620\": {\n      \"name\": \"Dongling\",\n      \"country\": \"CN\",\n      \"lat\": 41.81444,\n      \"long\": 123.57583,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2037685\": {\n      \"name\": \"Dongxing\",\n      \"country\": \"CN\",\n      \"lat\": 45.36088,\n      \"long\": 130.78679,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2037712\": {\n      \"name\": \"Dehui\",\n      \"country\": \"CN\",\n      \"lat\": 44.53333,\n      \"long\": 125.7,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2037799\": {\n      \"name\": \"Datong\",\n      \"country\": \"CN\",\n      \"lat\": 40.09361,\n      \"long\": 113.29139,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2037860\": {\n      \"name\": \"Daqing\",\n      \"country\": \"CN\",\n      \"lat\": 46.58333,\n      \"long\": 125,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2037886\": {\n      \"name\": \"Dandong\",\n      \"country\": \"CN\",\n      \"lat\": 40.12917,\n      \"long\": 124.39472,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2038067\": {\n      \"name\": \"Chifeng\",\n      \"country\": \"CN\",\n      \"lat\": 42.26833,\n      \"long\": 118.96361,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2038087\": {\n      \"name\": \"Chengde\",\n      \"country\": \"CN\",\n      \"lat\": 40.9725,\n      \"long\": 117.93611,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2038120\": {\n      \"name\": \"Chaoyang\",\n      \"country\": \"CN\",\n      \"lat\": 41.57028,\n      \"long\": 120.45861,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2038180\": {\n      \"name\": \"Changchun\",\n      \"country\": \"CN\",\n      \"lat\": 43.88,\n      \"long\": 125.32278,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2038300\": {\n      \"name\": \"Benxi\",\n      \"country\": \"CN\",\n      \"lat\": 41.28861,\n      \"long\": 123.765,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2038342\": {\n      \"name\": \"Beipiao\",\n      \"country\": \"CN\",\n      \"lat\": 41.79194,\n      \"long\": 120.77917,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2038365\": {\n      \"name\": \"Bei’an\",\n      \"country\": \"CN\",\n      \"lat\": 48.26667,\n      \"long\": 126.6,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2038432\": {\n      \"name\": \"Baotou\",\n      \"country\": \"CN\",\n      \"lat\": 40.65222,\n      \"long\": 109.82222,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2038438\": {\n      \"name\": \"Baoshan\",\n      \"country\": \"CN\",\n      \"lat\": 46.55861,\n      \"long\": 131.42444,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2038569\": {\n      \"name\": \"Baicheng\",\n      \"country\": \"CN\",\n      \"lat\": 45.60746,\n      \"long\": 122.82076,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2038584\": {\n      \"name\": \"Baishan\",\n      \"country\": \"CN\",\n      \"lat\": 41.93853,\n      \"long\": 126.41965,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2038632\": {\n      \"name\": \"Anshan\",\n      \"country\": \"CN\",\n      \"lat\": 41.12361,\n      \"long\": 122.99,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2038650\": {\n      \"name\": \"Anda\",\n      \"country\": \"CN\",\n      \"lat\": 46.40202,\n      \"long\": 125.31454,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2038679\": {\n      \"name\": \"Acheng\",\n      \"country\": \"CN\",\n      \"lat\": 45.54545,\n      \"long\": 126.97703,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"2040893\": {\n      \"name\": \"Sinŭiju\",\n      \"country\": \"KP\",\n      \"lat\": 40.10056,\n      \"long\": 124.39806,\n      \"zone\": \"Asia/Pyongyang\"\n    },\n    \"2043572\": {\n      \"name\": \"Kanggye-si\",\n      \"country\": \"KP\",\n      \"lat\": 40.96946,\n      \"long\": 126.58523,\n      \"zone\": \"Asia/Pyongyang\"\n    },\n    \"2043837\": {\n      \"name\": \"Hyesan-si\",\n      \"country\": \"KP\",\n      \"lat\": 41.40167,\n      \"long\": 128.17778,\n      \"zone\": \"Asia/Pyongyang\"\n    },\n    \"2044757\": {\n      \"name\": \"Chongjin\",\n      \"country\": \"KP\",\n      \"lat\": 41.79556,\n      \"long\": 129.77583,\n      \"zone\": \"Asia/Pyongyang\"\n    },\n    \"2051523\": {\n      \"name\": \"Bratsk\",\n      \"country\": \"RU\",\n      \"lat\": 56.1325,\n      \"long\": 101.61417,\n      \"zone\": \"Asia/Irkutsk\"\n    },\n    \"2056752\": {\n      \"name\": \"Khabarovsk Vtoroy\",\n      \"country\": \"RU\",\n      \"lat\": 48.43776,\n      \"long\": 135.13329,\n      \"zone\": \"Asia/Vladivostok\"\n    },\n    \"2057087\": {\n      \"name\": \"Kupang\",\n      \"country\": \"ID\",\n      \"lat\": -10.1718,\n      \"long\": 123.6075,\n      \"zone\": \"Asia/Makassar\"\n    },\n    \"2062338\": {\n      \"name\": \"Rockingham\",\n      \"country\": \"AU\",\n      \"lat\": -32.27682,\n      \"long\": 115.72978,\n      \"zone\": \"Australia/Perth\"\n    },\n    \"2063523\": {\n      \"name\": \"Perth\",\n      \"country\": \"AU\",\n      \"lat\": -31.95224,\n      \"long\": 115.8614,\n      \"zone\": \"Australia/Perth\"\n    },\n    \"2073124\": {\n      \"name\": \"Darwin\",\n      \"country\": \"AU\",\n      \"lat\": -12.46113,\n      \"long\": 130.84185,\n      \"zone\": \"Australia/Darwin\"\n    },\n    \"2078025\": {\n      \"name\": \"Adelaide\",\n      \"country\": \"AU\",\n      \"lat\": -34.92866,\n      \"long\": 138.59863,\n      \"zone\": \"Australia/Adelaide\"\n    },\n    \"2082600\": {\n      \"name\": \"Jayapura\",\n      \"country\": \"ID\",\n      \"lat\": -2.53371,\n      \"long\": 140.71813,\n      \"zone\": \"Asia/Jayapura\"\n    },\n    \"2088122\": {\n      \"name\": \"Port Moresby\",\n      \"country\": \"PG\",\n      \"lat\": -9.44314,\n      \"long\": 147.17972,\n      \"zone\": \"Pacific/Port_Moresby\"\n    },\n    \"2110556\": {\n      \"name\": \"Yamagata-shi\",\n      \"country\": \"JP\",\n      \"lat\": 38.24056,\n      \"long\": 140.36333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2110683\": {\n      \"name\": \"Tsukuba\",\n      \"country\": \"JP\",\n      \"lat\": 36.2,\n      \"long\": 140.1,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2111149\": {\n      \"name\": \"Sendai-shi\",\n      \"country\": \"JP\",\n      \"lat\": 38.26889,\n      \"long\": 140.87195,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2111220\": {\n      \"name\": \"Sakura\",\n      \"country\": \"JP\",\n      \"lat\": 35.71667,\n      \"long\": 140.23333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2111684\": {\n      \"name\": \"Narita\",\n      \"country\": \"JP\",\n      \"lat\": 35.78333,\n      \"long\": 140.31667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2111834\": {\n      \"name\": \"Morioka-shi\",\n      \"country\": \"JP\",\n      \"lat\": 39.70361,\n      \"long\": 141.1525,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2111901\": {\n      \"name\": \"Mito-shi\",\n      \"country\": \"JP\",\n      \"lat\": 36.34139,\n      \"long\": 140.44667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2112141\": {\n      \"name\": \"Kōriyama\",\n      \"country\": \"JP\",\n      \"lat\": 37.4,\n      \"long\": 140.38333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2112312\": {\n      \"name\": \"Katsuta\",\n      \"country\": \"JP\",\n      \"lat\": 36.38333,\n      \"long\": 140.53333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2112539\": {\n      \"name\": \"Iwaki\",\n      \"country\": \"JP\",\n      \"lat\": 37.05,\n      \"long\": 140.88333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2112576\": {\n      \"name\": \"Ishinomaki\",\n      \"country\": \"JP\",\n      \"lat\": 38.41667,\n      \"long\": 141.3,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2112664\": {\n      \"name\": \"Ichihara\",\n      \"country\": \"JP\",\n      \"lat\": 35.51667,\n      \"long\": 140.08333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2112708\": {\n      \"name\": \"Hitachi\",\n      \"country\": \"JP\",\n      \"lat\": 36.6,\n      \"long\": 140.65,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2112923\": {\n      \"name\": \"Fukushima-shi\",\n      \"country\": \"JP\",\n      \"lat\": 37.75,\n      \"long\": 140.46778,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2113015\": {\n      \"name\": \"Chiba\",\n      \"country\": \"JP\",\n      \"lat\": 35.60472,\n      \"long\": 140.12333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2113126\": {\n      \"name\": \"Akita\",\n      \"country\": \"JP\",\n      \"lat\": 39.71667,\n      \"long\": 140.11667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2113164\": {\n      \"name\": \"Abiko\",\n      \"country\": \"JP\",\n      \"lat\": 35.86667,\n      \"long\": 140.01667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2113719\": {\n      \"name\": \"Akita Shi\",\n      \"country\": \"JP\",\n      \"lat\": 39.71806,\n      \"long\": 140.10333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2119441\": {\n      \"name\": \"Yuzhno-Sakhalinsk\",\n      \"country\": \"RU\",\n      \"lat\": 46.95407,\n      \"long\": 142.73603,\n      \"zone\": \"Asia/Sakhalin\"\n    },\n    \"2122104\": {\n      \"name\": \"Petropavlovsk-Kamchatsky\",\n      \"country\": \"RU\",\n      \"lat\": 53.04444,\n      \"long\": 158.65076,\n      \"zone\": \"Asia/Kamchatka\"\n    },\n    \"2127733\": {\n      \"name\": \"Tomakomai\",\n      \"country\": \"JP\",\n      \"lat\": 42.63694,\n      \"long\": 141.60333,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2128295\": {\n      \"name\": \"Sapporo\",\n      \"country\": \"JP\",\n      \"lat\": 43.06417,\n      \"long\": 141.34695,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2128574\": {\n      \"name\": \"Otaru\",\n      \"country\": \"JP\",\n      \"lat\": 43.18944,\n      \"long\": 141.00222,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2128815\": {\n      \"name\": \"Obihiro\",\n      \"country\": \"JP\",\n      \"lat\": 42.91722,\n      \"long\": 143.20444,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2129376\": {\n      \"name\": \"Kushiro\",\n      \"country\": \"JP\",\n      \"lat\": 42.975,\n      \"long\": 144.37472,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2129537\": {\n      \"name\": \"Kitami\",\n      \"country\": \"JP\",\n      \"lat\": 43.80306,\n      \"long\": 143.89083,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2130057\": {\n      \"name\": \"Hirosaki\",\n      \"country\": \"JP\",\n      \"lat\": 40.59306,\n      \"long\": 140.4725,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2130188\": {\n      \"name\": \"Hakodate\",\n      \"country\": \"JP\",\n      \"lat\": 41.77583,\n      \"long\": 140.73667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2130203\": {\n      \"name\": \"Hachinohe\",\n      \"country\": \"JP\",\n      \"lat\": 40.5,\n      \"long\": 141.5,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2130404\": {\n      \"name\": \"Ebetsu\",\n      \"country\": \"JP\",\n      \"lat\": 43.10806,\n      \"long\": 141.55056,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2130629\": {\n      \"name\": \"Asahikawa\",\n      \"country\": \"JP\",\n      \"lat\": 43.77063,\n      \"long\": 142.36489,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2130658\": {\n      \"name\": \"Aomori Shi\",\n      \"country\": \"JP\",\n      \"lat\": 40.82444,\n      \"long\": 140.74,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"2146142\": {\n      \"name\": \"Townsville\",\n      \"country\": \"AU\",\n      \"lat\": -19.26639,\n      \"long\": 146.80569,\n      \"zone\": \"Australia/Brisbane\"\n    },\n    \"2146268\": {\n      \"name\": \"Toowoomba\",\n      \"country\": \"AU\",\n      \"lat\": -27.56056,\n      \"long\": 151.95386,\n      \"zone\": \"Australia/Brisbane\"\n    },\n    \"2147714\": {\n      \"name\": \"Sydney\",\n      \"country\": \"AU\",\n      \"lat\": -33.86785,\n      \"long\": 151.20732,\n      \"zone\": \"Australia/Sydney\"\n    },\n    \"2155472\": {\n      \"name\": \"Newcastle\",\n      \"country\": \"AU\",\n      \"lat\": -32.92715,\n      \"long\": 151.77647,\n      \"zone\": \"Australia/Sydney\"\n    },\n    \"2158177\": {\n      \"name\": \"Melbourne\",\n      \"country\": \"AU\",\n      \"lat\": -37.814,\n      \"long\": 144.96332,\n      \"zone\": \"Australia/Melbourne\"\n    },\n    \"2160517\": {\n      \"name\": \"Launceston\",\n      \"country\": \"AU\",\n      \"lat\": -41.43876,\n      \"long\": 147.13467,\n      \"zone\": \"Australia/Hobart\"\n    },\n    \"2163355\": {\n      \"name\": \"Hobart\",\n      \"country\": \"AU\",\n      \"lat\": -42.87936,\n      \"long\": 147.32941,\n      \"zone\": \"Australia/Hobart\"\n    },\n    \"2165087\": {\n      \"name\": \"Gold Coast\",\n      \"country\": \"AU\",\n      \"lat\": -28.00029,\n      \"long\": 153.43088,\n      \"zone\": \"Australia/Brisbane\"\n    },\n    \"2165798\": {\n      \"name\": \"Geelong\",\n      \"country\": \"AU\",\n      \"lat\": -38.14711,\n      \"long\": 144.36069,\n      \"zone\": \"Australia/Melbourne\"\n    },\n    \"2171507\": {\n      \"name\": \"Wollongong\",\n      \"country\": \"AU\",\n      \"lat\": -34.424,\n      \"long\": 150.89345,\n      \"zone\": \"Australia/Sydney\"\n    },\n    \"2172517\": {\n      \"name\": \"Canberra\",\n      \"country\": \"AU\",\n      \"lat\": -35.28346,\n      \"long\": 149.12807,\n      \"zone\": \"Australia/Sydney\"\n    },\n    \"2172797\": {\n      \"name\": \"Cairns\",\n      \"country\": \"AU\",\n      \"lat\": -16.92304,\n      \"long\": 145.76625,\n      \"zone\": \"Australia/Brisbane\"\n    },\n    \"2174003\": {\n      \"name\": \"Brisbane\",\n      \"country\": \"AU\",\n      \"lat\": -27.46794,\n      \"long\": 153.02809,\n      \"zone\": \"Australia/Brisbane\"\n    },\n    \"2176187\": {\n      \"name\": \"Bendigo\",\n      \"country\": \"AU\",\n      \"lat\": -36.75818,\n      \"long\": 144.28024,\n      \"zone\": \"Australia/Melbourne\"\n    },\n    \"2179537\": {\n      \"name\": \"Wellington\",\n      \"country\": \"NZ\",\n      \"lat\": -41.28664,\n      \"long\": 174.77557,\n      \"zone\": \"Pacific/Auckland\"\n    },\n    \"2185964\": {\n      \"name\": \"North Shore\",\n      \"country\": \"NZ\",\n      \"lat\": -36.8,\n      \"long\": 174.75,\n      \"zone\": \"Pacific/Auckland\"\n    },\n    \"2187404\": {\n      \"name\": \"Manukau City\",\n      \"country\": \"NZ\",\n      \"lat\": -36.99282,\n      \"long\": 174.87986,\n      \"zone\": \"Pacific/Auckland\"\n    },\n    \"2188164\": {\n      \"name\": \"Lower Hutt\",\n      \"country\": \"NZ\",\n      \"lat\": -41.21667,\n      \"long\": 174.91667,\n      \"zone\": \"Pacific/Auckland\"\n    },\n    \"2190324\": {\n      \"name\": \"Hamilton\",\n      \"country\": \"NZ\",\n      \"lat\": -37.78333,\n      \"long\": 175.28333,\n      \"zone\": \"Pacific/Auckland\"\n    },\n    \"2191562\": {\n      \"name\": \"Dunedin\",\n      \"country\": \"NZ\",\n      \"lat\": -45.87416,\n      \"long\": 170.50361,\n      \"zone\": \"Pacific/Auckland\"\n    },\n    \"2192362\": {\n      \"name\": \"Christchurch\",\n      \"country\": \"NZ\",\n      \"lat\": -43.53333,\n      \"long\": 172.63333,\n      \"zone\": \"Pacific/Auckland\"\n    },\n    \"2193733\": {\n      \"name\": \"Auckland\",\n      \"country\": \"NZ\",\n      \"lat\": -36.86667,\n      \"long\": 174.76667,\n      \"zone\": \"Pacific/Auckland\"\n    },\n    \"2208032\": {\n      \"name\": \"Tauranga\",\n      \"country\": \"NZ\",\n      \"lat\": -37.68611,\n      \"long\": 176.16667,\n      \"zone\": \"Pacific/Auckland\"\n    },\n    \"2208485\": {\n      \"name\": \"Zliten\",\n      \"country\": \"LY\",\n      \"lat\": 32.46739,\n      \"long\": 14.56874,\n      \"zone\": \"Africa/Tripoli\"\n    },\n    \"2210221\": {\n      \"name\": \"Tarhuna\",\n      \"country\": \"LY\",\n      \"lat\": 32.43501,\n      \"long\": 13.6332,\n      \"zone\": \"Africa/Tripoli\"\n    },\n    \"2210247\": {\n      \"name\": \"Tripoli\",\n      \"country\": \"LY\",\n      \"lat\": 32.87519,\n      \"long\": 13.18746,\n      \"zone\": \"Africa/Tripoli\"\n    },\n    \"2210554\": {\n      \"name\": \"Sirte\",\n      \"country\": \"LY\",\n      \"lat\": 31.20892,\n      \"long\": 16.58866,\n      \"zone\": \"Africa/Tripoli\"\n    },\n    \"2212771\": {\n      \"name\": \"Şabrātah\",\n      \"country\": \"LY\",\n      \"lat\": 32.79335,\n      \"long\": 12.48845,\n      \"zone\": \"Africa/Tripoli\"\n    },\n    \"2212775\": {\n      \"name\": \"Sabhā\",\n      \"country\": \"LY\",\n      \"lat\": 27.03766,\n      \"long\": 14.42832,\n      \"zone\": \"Africa/Tripoli\"\n    },\n    \"2214846\": {\n      \"name\": \"Mişrātah\",\n      \"country\": \"LY\",\n      \"lat\": 32.37535,\n      \"long\": 15.09254,\n      \"zone\": \"Africa/Tripoli\"\n    },\n    \"2216885\": {\n      \"name\": \"Zawiya\",\n      \"country\": \"LY\",\n      \"lat\": 32.75222,\n      \"long\": 12.72778,\n      \"zone\": \"Africa/Tripoli\"\n    },\n    \"2218970\": {\n      \"name\": \"Az Zāwīyah\",\n      \"country\": \"LY\",\n      \"lat\": 32.7571,\n      \"long\": 12.72764,\n      \"zone\": \"Africa/Tripoli\"\n    },\n    \"2219905\": {\n      \"name\": \"Al Khums\",\n      \"country\": \"LY\",\n      \"lat\": 32.64861,\n      \"long\": 14.26191,\n      \"zone\": \"Africa/Tripoli\"\n    },\n    \"2219960\": {\n      \"name\": \"Al Jadīd\",\n      \"country\": \"LY\",\n      \"lat\": 27.05,\n      \"long\": 14.4,\n      \"zone\": \"Africa/Tripoli\"\n    },\n    \"2220957\": {\n      \"name\": \"Yaoundé\",\n      \"country\": \"CM\",\n      \"lat\": 3.86667,\n      \"long\": 11.51667,\n      \"zone\": \"Africa/Douala\"\n    },\n    \"2223763\": {\n      \"name\": \"Nkongsamba\",\n      \"country\": \"CM\",\n      \"lat\": 4.9547,\n      \"long\": 9.9404,\n      \"zone\": \"Africa/Douala\"\n    },\n    \"2224827\": {\n      \"name\": \"Ngaoundéré\",\n      \"country\": \"CM\",\n      \"lat\": 7.32765,\n      \"long\": 13.58472,\n      \"zone\": \"Africa/Douala\"\n    },\n    \"2226275\": {\n      \"name\": \"Mokolo\",\n      \"country\": \"CM\",\n      \"lat\": 10.74244,\n      \"long\": 13.80227,\n      \"zone\": \"Africa/Douala\"\n    },\n    \"2227613\": {\n      \"name\": \"Mbouda\",\n      \"country\": \"CM\",\n      \"lat\": 5.62611,\n      \"long\": 10.25421,\n      \"zone\": \"Africa/Douala\"\n    },\n    \"2228373\": {\n      \"name\": \"Maroua\",\n      \"country\": \"CM\",\n      \"lat\": 10.59095,\n      \"long\": 14.31593,\n      \"zone\": \"Africa/Douala\"\n    },\n    \"2229152\": {\n      \"name\": \"Loum\",\n      \"country\": \"CM\",\n      \"lat\": 4.7182,\n      \"long\": 9.7351,\n      \"zone\": \"Africa/Douala\"\n    },\n    \"2229752\": {\n      \"name\": \"Kumba\",\n      \"country\": \"CM\",\n      \"lat\": 4.6363,\n      \"long\": 9.4469,\n      \"zone\": \"Africa/Douala\"\n    },\n    \"2229798\": {\n      \"name\": \"Kousséri\",\n      \"country\": \"CM\",\n      \"lat\": 12.07689,\n      \"long\": 15.03063,\n      \"zone\": \"Africa/Douala\"\n    },\n    \"2231320\": {\n      \"name\": \"Garoua\",\n      \"country\": \"CM\",\n      \"lat\": 9.30143,\n      \"long\": 13.39771,\n      \"zone\": \"Africa/Douala\"\n    },\n    \"2232239\": {\n      \"name\": \"Edéa\",\n      \"country\": \"CM\",\n      \"lat\": 3.8,\n      \"long\": 10.13333,\n      \"zone\": \"Africa/Douala\"\n    },\n    \"2232593\": {\n      \"name\": \"Douala\",\n      \"country\": \"CM\",\n      \"lat\": 4.04827,\n      \"long\": 9.70428,\n      \"zone\": \"Africa/Douala\"\n    },\n    \"2234359\": {\n      \"name\": \"Bertoua\",\n      \"country\": \"CM\",\n      \"lat\": 4.57728,\n      \"long\": 13.68459,\n      \"zone\": \"Africa/Douala\"\n    },\n    \"2234974\": {\n      \"name\": \"Bamenda\",\n      \"country\": \"CM\",\n      \"lat\": 5.9597,\n      \"long\": 10.14597,\n      \"zone\": \"Africa/Douala\"\n    },\n    \"2235189\": {\n      \"name\": \"Bafoussam\",\n      \"country\": \"CM\",\n      \"lat\": 5.47775,\n      \"long\": 10.41759,\n      \"zone\": \"Africa/Douala\"\n    },\n    \"2239076\": {\n      \"name\": \"N’dalatando\",\n      \"country\": \"AO\",\n      \"lat\": -9.29782,\n      \"long\": 14.91162,\n      \"zone\": \"Africa/Luanda\"\n    },\n    \"2240449\": {\n      \"name\": \"Luanda\",\n      \"country\": \"AO\",\n      \"lat\": -8.83682,\n      \"long\": 13.23432,\n      \"zone\": \"Africa/Luanda\"\n    },\n    \"2243940\": {\n      \"name\": \"Ziguinchor\",\n      \"country\": \"SN\",\n      \"lat\": 12.58333,\n      \"long\": -16.27194,\n      \"zone\": \"Africa/Dakar\"\n    },\n    \"2244322\": {\n      \"name\": \"Touba\",\n      \"country\": \"SN\",\n      \"lat\": 14.85,\n      \"long\": -15.88333,\n      \"zone\": \"Africa/Dakar\"\n    },\n    \"2244616\": {\n      \"name\": \"Tiébo\",\n      \"country\": \"SN\",\n      \"lat\": 14.63333,\n      \"long\": -16.23333,\n      \"zone\": \"Africa/Dakar\"\n    },\n    \"2244799\": {\n      \"name\": \"Thiès Nones\",\n      \"country\": \"SN\",\n      \"lat\": 14.78333,\n      \"long\": -16.96667,\n      \"zone\": \"Africa/Dakar\"\n    },\n    \"2246452\": {\n      \"name\": \"Saint-Louis\",\n      \"country\": \"SN\",\n      \"lat\": 16.01793,\n      \"long\": -16.48962,\n      \"zone\": \"Africa/Dakar\"\n    },\n    \"2246678\": {\n      \"name\": \"Pikine\",\n      \"country\": \"SN\",\n      \"lat\": 14.76457,\n      \"long\": -17.39071,\n      \"zone\": \"Africa/Dakar\"\n    },\n    \"2250805\": {\n      \"name\": \"Kaolack\",\n      \"country\": \"SN\",\n      \"lat\": 14.1825,\n      \"long\": -16.25333,\n      \"zone\": \"Africa/Dakar\"\n    },\n    \"2251339\": {\n      \"name\": \"Grand Dakar\",\n      \"country\": \"SN\",\n      \"lat\": 14.71331,\n      \"long\": -17.45472,\n      \"zone\": \"Africa/Dakar\"\n    },\n    \"2253354\": {\n      \"name\": \"Dakar\",\n      \"country\": \"SN\",\n      \"lat\": 14.6937,\n      \"long\": -17.44406,\n      \"zone\": \"Africa/Dakar\"\n    },\n    \"2255414\": {\n      \"name\": \"Pointe-Noire\",\n      \"country\": \"CG\",\n      \"lat\": -4.77609,\n      \"long\": 11.86352,\n      \"zone\": \"Africa/Brazzaville\"\n    },\n    \"2258261\": {\n      \"name\": \"Dolisie\",\n      \"country\": \"CG\",\n      \"lat\": -4.19834,\n      \"long\": 12.66664,\n      \"zone\": \"Africa/Brazzaville\"\n    },\n    \"2260535\": {\n      \"name\": \"Brazzaville\",\n      \"country\": \"CG\",\n      \"lat\": -4.26613,\n      \"long\": 15.28318,\n      \"zone\": \"Africa/Brazzaville\"\n    },\n    \"2262963\": {\n      \"name\": \"Setúbal\",\n      \"country\": \"PT\",\n      \"lat\": 38.5244,\n      \"long\": -8.8882,\n      \"zone\": \"Europe/Lisbon\"\n    },\n    \"2264268\": {\n      \"name\": \"Queluz\",\n      \"country\": \"PT\",\n      \"lat\": 38.75657,\n      \"long\": -9.25451,\n      \"zone\": \"Europe/Lisbon\"\n    },\n    \"2267057\": {\n      \"name\": \"Lisbon\",\n      \"country\": \"PT\",\n      \"lat\": 38.71667,\n      \"long\": -9.13333,\n      \"zone\": \"Europe/Lisbon\"\n    },\n    \"2267827\": {\n      \"name\": \"Funchal\",\n      \"country\": \"PT\",\n      \"lat\": 32.63333,\n      \"long\": -16.9,\n      \"zone\": \"Atlantic/Madeira\"\n    },\n    \"2271772\": {\n      \"name\": \"Amadora\",\n      \"country\": \"PT\",\n      \"lat\": 38.75382,\n      \"long\": -9.23083,\n      \"zone\": \"Europe/Lisbon\"\n    },\n    \"2274895\": {\n      \"name\": \"Monrovia\",\n      \"country\": \"LR\",\n      \"lat\": 6.30054,\n      \"long\": -10.7969,\n      \"zone\": \"Africa/Monrovia\"\n    },\n    \"2279755\": {\n      \"name\": \"Yamoussoukro\",\n      \"country\": \"CI\",\n      \"lat\": 6.82055,\n      \"long\": -5.27674,\n      \"zone\": \"Africa/Abidjan\"\n    },\n    \"2282006\": {\n      \"name\": \"San-Pédro\",\n      \"country\": \"CI\",\n      \"lat\": 4.74851,\n      \"long\": -6.6363,\n      \"zone\": \"Africa/Abidjan\"\n    },\n    \"2284647\": {\n      \"name\": \"Man\",\n      \"country\": \"CI\",\n      \"lat\": 7.41251,\n      \"long\": -7.55383,\n      \"zone\": \"Africa/Abidjan\"\n    },\n    \"2286304\": {\n      \"name\": \"Korhogo\",\n      \"country\": \"CI\",\n      \"lat\": 9.45803,\n      \"long\": -5.62961,\n      \"zone\": \"Africa/Abidjan\"\n    },\n    \"2288829\": {\n      \"name\": \"Gagnoa\",\n      \"country\": \"CI\",\n      \"lat\": 6.13193,\n      \"long\": -5.9506,\n      \"zone\": \"Africa/Abidjan\"\n    },\n    \"2289887\": {\n      \"name\": \"Divo\",\n      \"country\": \"CI\",\n      \"lat\": 5.83739,\n      \"long\": -5.35723,\n      \"zone\": \"Africa/Abidjan\"\n    },\n    \"2290486\": {\n      \"name\": \"Daloa\",\n      \"country\": \"CI\",\n      \"lat\": 6.87735,\n      \"long\": -6.45022,\n      \"zone\": \"Africa/Abidjan\"\n    },\n    \"2290956\": {\n      \"name\": \"Bouaké\",\n      \"country\": \"CI\",\n      \"lat\": 7.69385,\n      \"long\": -5.03031,\n      \"zone\": \"Africa/Abidjan\"\n    },\n    \"2292852\": {\n      \"name\": \"Anyama\",\n      \"country\": \"CI\",\n      \"lat\": 5.49462,\n      \"long\": -4.05183,\n      \"zone\": \"Africa/Abidjan\"\n    },\n    \"2293521\": {\n      \"name\": \"Abobo\",\n      \"country\": \"CI\",\n      \"lat\": 5.41613,\n      \"long\": -4.0159,\n      \"zone\": \"Africa/Abidjan\"\n    },\n    \"2293538\": {\n      \"name\": \"Abidjan\",\n      \"country\": \"CI\",\n      \"lat\": 5.30966,\n      \"long\": -4.01266,\n      \"zone\": \"Africa/Abidjan\"\n    },\n    \"2293549\": {\n      \"name\": \"Abengourou\",\n      \"country\": \"CI\",\n      \"lat\": 6.72972,\n      \"long\": -3.49639,\n      \"zone\": \"Africa/Abidjan\"\n    },\n    \"2294665\": {\n      \"name\": \"Teshi Old Town\",\n      \"country\": \"GH\",\n      \"lat\": 5.58365,\n      \"long\": -0.10722,\n      \"zone\": \"Africa/Accra\"\n    },\n    \"2294700\": {\n      \"name\": \"Tema\",\n      \"country\": \"GH\",\n      \"lat\": 5.6698,\n      \"long\": -0.01657,\n      \"zone\": \"Africa/Accra\"\n    },\n    \"2294877\": {\n      \"name\": \"Tamale\",\n      \"country\": \"GH\",\n      \"lat\": 9.40079,\n      \"long\": -0.8393,\n      \"zone\": \"Africa/Accra\"\n    },\n    \"2294915\": {\n      \"name\": \"Takoradi\",\n      \"country\": \"GH\",\n      \"lat\": 4.88447,\n      \"long\": -1.75536,\n      \"zone\": \"Africa/Accra\"\n    },\n    \"2295458\": {\n      \"name\": \"Sekondi-Takoradi\",\n      \"country\": \"GH\",\n      \"lat\": 4.934,\n      \"long\": -1.7137,\n      \"zone\": \"Africa/Accra\"\n    },\n    \"2296606\": {\n      \"name\": \"Obuasi\",\n      \"country\": \"GH\",\n      \"lat\": 6.20602,\n      \"long\": -1.66191,\n      \"zone\": \"Africa/Accra\"\n    },\n    \"2298330\": {\n      \"name\": \"Medina Estates\",\n      \"country\": \"GH\",\n      \"lat\": 5.6658,\n      \"long\": -0.16307,\n      \"zone\": \"Africa/Accra\"\n    },\n    \"2298890\": {\n      \"name\": \"Kumasi\",\n      \"country\": \"GH\",\n      \"lat\": 6.68848,\n      \"long\": -1.62443,\n      \"zone\": \"Africa/Accra\"\n    },\n    \"2302357\": {\n      \"name\": \"Cape Coast\",\n      \"country\": \"GH\",\n      \"lat\": 5.10535,\n      \"long\": -1.2466,\n      \"zone\": \"Africa/Accra\"\n    },\n    \"2306079\": {\n      \"name\": \"Achiaman\",\n      \"country\": \"GH\",\n      \"lat\": 5.7,\n      \"long\": -0.33333,\n      \"zone\": \"Africa/Accra\"\n    },\n    \"2306104\": {\n      \"name\": \"Accra\",\n      \"country\": \"GH\",\n      \"lat\": 5.55602,\n      \"long\": -0.1969,\n      \"zone\": \"Africa/Accra\"\n    },\n    \"2309527\": {\n      \"name\": \"Malabo\",\n      \"country\": \"GQ\",\n      \"lat\": 3.75,\n      \"long\": 8.78333,\n      \"zone\": \"Africa/Malabo\"\n    },\n    \"2310046\": {\n      \"name\": \"Bata\",\n      \"country\": \"GQ\",\n      \"lat\": 1.86391,\n      \"long\": 9.76582,\n      \"zone\": \"Africa/Malabo\"\n    },\n    \"2312895\": {\n      \"name\": \"Mbandaka\",\n      \"country\": \"CD\",\n      \"lat\": 0.04865,\n      \"long\": 18.26034,\n      \"zone\": \"Africa/Kinshasa\"\n    },\n    \"2313002\": {\n      \"name\": \"Matadi\",\n      \"country\": \"CD\",\n      \"lat\": -5.79949,\n      \"long\": 13.44068,\n      \"zone\": \"Africa/Kinshasa\"\n    },\n    \"2314302\": {\n      \"name\": \"Kinshasa\",\n      \"country\": \"CD\",\n      \"lat\": -4.32758,\n      \"long\": 15.31357,\n      \"zone\": \"Africa/Kinshasa\"\n    },\n    \"2314705\": {\n      \"name\": \"Kikwit\",\n      \"country\": \"CD\",\n      \"lat\": -5.04098,\n      \"long\": 18.81619,\n      \"zone\": \"Africa/Kinshasa\"\n    },\n    \"2315728\": {\n      \"name\": \"Gemena\",\n      \"country\": \"CD\",\n      \"lat\": 3.25651,\n      \"long\": 19.77234,\n      \"zone\": \"Africa/Kinshasa\"\n    },\n    \"2317397\": {\n      \"name\": \"Bandundu\",\n      \"country\": \"CD\",\n      \"lat\": -3.31687,\n      \"long\": 17.38063,\n      \"zone\": \"Africa/Kinshasa\"\n    },\n    \"2317765\": {\n      \"name\": \"Zaria\",\n      \"country\": \"NG\",\n      \"lat\": 11.11128,\n      \"long\": 7.7227,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2319133\": {\n      \"name\": \"Warri\",\n      \"country\": \"NG\",\n      \"lat\": 5.51737,\n      \"long\": 5.75006,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2319480\": {\n      \"name\": \"Uyo\",\n      \"country\": \"NG\",\n      \"lat\": 5.05127,\n      \"long\": 7.9335,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2319668\": {\n      \"name\": \"Uromi\",\n      \"country\": \"NG\",\n      \"lat\": 6.7,\n      \"long\": 6.33333,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2320576\": {\n      \"name\": \"Umuahia\",\n      \"country\": \"NG\",\n      \"lat\": 5.52491,\n      \"long\": 7.49461,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2320831\": {\n      \"name\": \"Ugep\",\n      \"country\": \"NG\",\n      \"lat\": 5.80854,\n      \"long\": 8.08159,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2322794\": {\n      \"name\": \"Suleja\",\n      \"country\": \"NG\",\n      \"lat\": 9.18059,\n      \"long\": 7.17939,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2322911\": {\n      \"name\": \"Sokoto\",\n      \"country\": \"NG\",\n      \"lat\": 13.06269,\n      \"long\": 5.24322,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2323390\": {\n      \"name\": \"Saki\",\n      \"country\": \"NG\",\n      \"lat\": 8.66762,\n      \"long\": 3.39393,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2323411\": {\n      \"name\": \"Shagamu\",\n      \"country\": \"NG\",\n      \"lat\": 6.8485,\n      \"long\": 3.64633,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2323675\": {\n      \"name\": \"Sapele\",\n      \"country\": \"NG\",\n      \"lat\": 5.89405,\n      \"long\": 5.67666,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2324774\": {\n      \"name\": \"Port Harcourt\",\n      \"country\": \"NG\",\n      \"lat\": 4.77742,\n      \"long\": 7.0134,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2324857\": {\n      \"name\": \"Pindiga\",\n      \"country\": \"NG\",\n      \"lat\": 9.98333,\n      \"long\": 10.93333,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2325200\": {\n      \"name\": \"Oyo\",\n      \"country\": \"NG\",\n      \"lat\": 7.85257,\n      \"long\": 3.93125,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2325314\": {\n      \"name\": \"Owo\",\n      \"country\": \"NG\",\n      \"lat\": 7.1962,\n      \"long\": 5.58681,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2325330\": {\n      \"name\": \"Owerri\",\n      \"country\": \"NG\",\n      \"lat\": 5.48363,\n      \"long\": 7.03325,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2325590\": {\n      \"name\": \"Osogbo\",\n      \"country\": \"NG\",\n      \"lat\": 7.77104,\n      \"long\": 4.55698,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2326016\": {\n      \"name\": \"Onitsha\",\n      \"country\": \"NG\",\n      \"lat\": 6.14978,\n      \"long\": 6.78569,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2326171\": {\n      \"name\": \"Ondo\",\n      \"country\": \"NG\",\n      \"lat\": 7.09316,\n      \"long\": 4.83528,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2326899\": {\n      \"name\": \"Okrika\",\n      \"country\": \"NG\",\n      \"lat\": 4.74159,\n      \"long\": 7.08488,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2327143\": {\n      \"name\": \"Okigwe\",\n      \"country\": \"NG\",\n      \"lat\": 5.82917,\n      \"long\": 7.35056,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2327220\": {\n      \"name\": \"Okene\",\n      \"country\": \"NG\",\n      \"lat\": 7.55122,\n      \"long\": 6.23589,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2327879\": {\n      \"name\": \"Offa\",\n      \"country\": \"NG\",\n      \"lat\": 8.14911,\n      \"long\": 4.72074,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2328684\": {\n      \"name\": \"Nsukka\",\n      \"country\": \"NG\",\n      \"lat\": 6.85783,\n      \"long\": 7.39577,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2328765\": {\n      \"name\": \"Nnewi\",\n      \"country\": \"NG\",\n      \"lat\": 6.01962,\n      \"long\": 6.91729,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2328811\": {\n      \"name\": \"Nkpor\",\n      \"country\": \"NG\",\n      \"lat\": 6.15164,\n      \"long\": 6.84459,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2328952\": {\n      \"name\": \"Nguru\",\n      \"country\": \"NG\",\n      \"lat\": 12.87695,\n      \"long\": 10.45536,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2329821\": {\n      \"name\": \"Mubi\",\n      \"country\": \"NG\",\n      \"lat\": 10.26761,\n      \"long\": 13.26436,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2330028\": {\n      \"name\": \"Modakeke\",\n      \"country\": \"NG\",\n      \"lat\": 7.38333,\n      \"long\": 4.26667,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2330100\": {\n      \"name\": \"Minna\",\n      \"country\": \"NG\",\n      \"lat\": 9.61524,\n      \"long\": 6.54776,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2331140\": {\n      \"name\": \"Makurdi\",\n      \"country\": \"NG\",\n      \"lat\": 7.7411,\n      \"long\": 8.5121,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2331447\": {\n      \"name\": \"Maiduguri\",\n      \"country\": \"NG\",\n      \"lat\": 11.84692,\n      \"long\": 13.15712,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2332459\": {\n      \"name\": \"Lagos\",\n      \"country\": \"NG\",\n      \"lat\": 6.45407,\n      \"long\": 3.39467,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2332504\": {\n      \"name\": \"Lafiagi\",\n      \"country\": \"NG\",\n      \"lat\": 8.85299,\n      \"long\": 5.41641,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2332515\": {\n      \"name\": \"Lafia\",\n      \"country\": \"NG\",\n      \"lat\": 8.4939,\n      \"long\": 8.51532,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2334327\": {\n      \"name\": \"Kisi\",\n      \"country\": \"NG\",\n      \"lat\": 9.08297,\n      \"long\": 3.85196,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2334802\": {\n      \"name\": \"Katsina\",\n      \"country\": \"NG\",\n      \"lat\": 12.99082,\n      \"long\": 7.60177,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2335204\": {\n      \"name\": \"Kano\",\n      \"country\": \"NG\",\n      \"lat\": 12.00012,\n      \"long\": 8.51672,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2335727\": {\n      \"name\": \"Kaduna\",\n      \"country\": \"NG\",\n      \"lat\": 10.52641,\n      \"long\": 7.43879,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2335953\": {\n      \"name\": \"Jos\",\n      \"country\": \"NG\",\n      \"lat\": 9.92849,\n      \"long\": 8.89212,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2336056\": {\n      \"name\": \"Jimeta\",\n      \"country\": \"NG\",\n      \"lat\": 9.28333,\n      \"long\": 12.46667,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2336589\": {\n      \"name\": \"Jalingo\",\n      \"country\": \"NG\",\n      \"lat\": 8.88333,\n      \"long\": 11.36667,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2336905\": {\n      \"name\": \"Iwo\",\n      \"country\": \"NG\",\n      \"lat\": 7.63527,\n      \"long\": 4.18156,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2337207\": {\n      \"name\": \"Ise-Ekiti\",\n      \"country\": \"NG\",\n      \"lat\": 7.46478,\n      \"long\": 5.42333,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2337490\": {\n      \"name\": \"Inisa\",\n      \"country\": \"NG\",\n      \"lat\": 7.85,\n      \"long\": 4.33333,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2337639\": {\n      \"name\": \"Ilorin\",\n      \"country\": \"NG\",\n      \"lat\": 8.49664,\n      \"long\": 4.54214,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2337659\": {\n      \"name\": \"Ilobu\",\n      \"country\": \"NG\",\n      \"lat\": 7.84036,\n      \"long\": 4.48557,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2337704\": {\n      \"name\": \"Ilesa\",\n      \"country\": \"NG\",\n      \"lat\": 7.62789,\n      \"long\": 4.74161,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2337765\": {\n      \"name\": \"Ila Orangun\",\n      \"country\": \"NG\",\n      \"lat\": 8.01714,\n      \"long\": 4.90421,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2338106\": {\n      \"name\": \"Ikot-Ekpene\",\n      \"country\": \"NG\",\n      \"lat\": 5.17938,\n      \"long\": 7.71082,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2338269\": {\n      \"name\": \"Ikirun\",\n      \"country\": \"NG\",\n      \"lat\": 7.91283,\n      \"long\": 4.66741,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2338273\": {\n      \"name\": \"Ikire\",\n      \"country\": \"NG\",\n      \"lat\": 7.37241,\n      \"long\": 4.18739,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2338287\": {\n      \"name\": \"Ikere-Ekiti\",\n      \"country\": \"NG\",\n      \"lat\": 7.49748,\n      \"long\": 5.23041,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2338313\": {\n      \"name\": \"Ikeja\",\n      \"country\": \"NG\",\n      \"lat\": 6.59651,\n      \"long\": 3.34205,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2338385\": {\n      \"name\": \"Ijero-Ekiti\",\n      \"country\": \"NG\",\n      \"lat\": 7.81514,\n      \"long\": 5.06716,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2338400\": {\n      \"name\": \"Ijebu-Ode\",\n      \"country\": \"NG\",\n      \"lat\": 6.81944,\n      \"long\": 3.91731,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2338403\": {\n      \"name\": \"Ijebu-Igbo\",\n      \"country\": \"NG\",\n      \"lat\": 6.97198,\n      \"long\": 3.99938,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2338711\": {\n      \"name\": \"Igboho\",\n      \"country\": \"NG\",\n      \"lat\": 8.83784,\n      \"long\": 3.75628,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2339354\": {\n      \"name\": \"Ibadan\",\n      \"country\": \"NG\",\n      \"lat\": 7.37756,\n      \"long\": 3.90591,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2339631\": {\n      \"name\": \"Hadejia\",\n      \"country\": \"NG\",\n      \"lat\": 12.45347,\n      \"long\": 10.04115,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2339937\": {\n      \"name\": \"Gusau\",\n      \"country\": \"NG\",\n      \"lat\": 12.17024,\n      \"long\": 6.66412,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2340451\": {\n      \"name\": \"Gombe\",\n      \"country\": \"NG\",\n      \"lat\": 10.28969,\n      \"long\": 11.16729,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2341355\": {\n      \"name\": \"Gbongan\",\n      \"country\": \"NG\",\n      \"lat\": 7.47734,\n      \"long\": 4.35351,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2341656\": {\n      \"name\": \"Gashua\",\n      \"country\": \"NG\",\n      \"lat\": 12.87412,\n      \"long\": 11.0399,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2342490\": {\n      \"name\": \"Funtua\",\n      \"country\": \"NG\",\n      \"lat\": 11.52351,\n      \"long\": 7.31174,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2343093\": {\n      \"name\": \"Esuk Oron\",\n      \"country\": \"NG\",\n      \"lat\": 4.80293,\n      \"long\": 8.25341,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2343279\": {\n      \"name\": \"Enugu\",\n      \"country\": \"NG\",\n      \"lat\": 6.44132,\n      \"long\": 7.49883,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2343784\": {\n      \"name\": \"Ejigbo\",\n      \"country\": \"NG\",\n      \"lat\": 7.90292,\n      \"long\": 4.31419,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2343983\": {\n      \"name\": \"Effon Alaiye\",\n      \"country\": \"NG\",\n      \"lat\": 7.65,\n      \"long\": 4.91667,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2344082\": {\n      \"name\": \"Ebute Ikorodu\",\n      \"country\": \"NG\",\n      \"lat\": 6.60086,\n      \"long\": 3.48818,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2346229\": {\n      \"name\": \"Calabar\",\n      \"country\": \"NG\",\n      \"lat\": 4.9517,\n      \"long\": 8.322,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2346615\": {\n      \"name\": \"Buguma\",\n      \"country\": \"NG\",\n      \"lat\": 4.73614,\n      \"long\": 6.86236,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2347059\": {\n      \"name\": \"Birnin Kebbi\",\n      \"country\": \"NG\",\n      \"lat\": 12.45389,\n      \"long\": 4.1975,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2347209\": {\n      \"name\": \"Bida\",\n      \"country\": \"NG\",\n      \"lat\": 9.08044,\n      \"long\": 6.0099,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2347283\": {\n      \"name\": \"Benin City\",\n      \"country\": \"NG\",\n      \"lat\": 6.33815,\n      \"long\": 5.62575,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2347470\": {\n      \"name\": \"Bauchi\",\n      \"country\": \"NG\",\n      \"lat\": 10.31344,\n      \"long\": 9.84327,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2347954\": {\n      \"name\": \"Bama\",\n      \"country\": \"NG\",\n      \"lat\": 11.52147,\n      \"long\": 13.68826,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2348595\": {\n      \"name\": \"Azare\",\n      \"country\": \"NG\",\n      \"lat\": 11.6765,\n      \"long\": 10.1948,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2348773\": {\n      \"name\": \"Awka\",\n      \"country\": \"NG\",\n      \"lat\": 6.21269,\n      \"long\": 7.07199,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2350249\": {\n      \"name\": \"Amaigbo\",\n      \"country\": \"NG\",\n      \"lat\": 5.78917,\n      \"long\": 7.83829,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2350841\": {\n      \"name\": \"Akure\",\n      \"country\": \"NG\",\n      \"lat\": 7.25256,\n      \"long\": 5.19312,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2352379\": {\n      \"name\": \"Ado-Ekiti\",\n      \"country\": \"NG\",\n      \"lat\": 7.62329,\n      \"long\": 5.22087,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2352778\": {\n      \"name\": \"Abuja\",\n      \"country\": \"NG\",\n      \"lat\": 9.05785,\n      \"long\": 7.49508,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2352947\": {\n      \"name\": \"Abeokuta\",\n      \"country\": \"NG\",\n      \"lat\": 7.15571,\n      \"long\": 3.34509,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2353099\": {\n      \"name\": \"Abakaliki\",\n      \"country\": \"NG\",\n      \"lat\": 6.32485,\n      \"long\": 8.11368,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2353151\": {\n      \"name\": \"Aba\",\n      \"country\": \"NG\",\n      \"lat\": 5.10658,\n      \"long\": 7.36667,\n      \"zone\": \"Africa/Lagos\"\n    },\n    \"2357048\": {\n      \"name\": \"Ouagadougou\",\n      \"country\": \"BF\",\n      \"lat\": 12.36566,\n      \"long\": -1.53388,\n      \"zone\": \"Africa/Ouagadougou\"\n    },\n    \"2362344\": {\n      \"name\": \"Bobo-Dioulasso\",\n      \"country\": \"BF\",\n      \"lat\": 11.17715,\n      \"long\": -4.2979,\n      \"zone\": \"Africa/Ouagadougou\"\n    },\n    \"2364104\": {\n      \"name\": \"Sokodé\",\n      \"country\": \"TG\",\n      \"lat\": 8.98333,\n      \"long\": 1.13333,\n      \"zone\": \"Africa/Lome\"\n    },\n    \"2365267\": {\n      \"name\": \"Lomé\",\n      \"country\": \"TG\",\n      \"lat\": 6.13748,\n      \"long\": 1.21227,\n      \"zone\": \"Africa/Lome\"\n    },\n    \"2366152\": {\n      \"name\": \"Kara\",\n      \"country\": \"TG\",\n      \"lat\": 9.55111,\n      \"long\": 1.18611,\n      \"zone\": \"Africa/Lome\"\n    },\n    \"2374775\": {\n      \"name\": \"Bissau\",\n      \"country\": \"GW\",\n      \"lat\": 11.86357,\n      \"long\": -15.59767,\n      \"zone\": \"Africa/Bissau\"\n    },\n    \"2377450\": {\n      \"name\": \"Nouakchott\",\n      \"country\": \"MR\",\n      \"lat\": 18.08581,\n      \"long\": -15.9785,\n      \"zone\": \"Africa/Nouakchott\"\n    },\n    \"2388873\": {\n      \"name\": \"Bimbo\",\n      \"country\": \"CF\",\n      \"lat\": 4.25671,\n      \"long\": 18.41583,\n      \"zone\": \"Africa/Bangui\"\n    },\n    \"2389853\": {\n      \"name\": \"Bangui\",\n      \"country\": \"CF\",\n      \"lat\": 4.36122,\n      \"long\": 18.55496,\n      \"zone\": \"Africa/Bangui\"\n    },\n    \"2392087\": {\n      \"name\": \"Porto-Novo\",\n      \"country\": \"BJ\",\n      \"lat\": 6.49646,\n      \"long\": 2.60359,\n      \"zone\": \"Africa/Porto-Novo\"\n    },\n    \"2392204\": {\n      \"name\": \"Parakou\",\n      \"country\": \"BJ\",\n      \"lat\": 9.33716,\n      \"long\": 2.63031,\n      \"zone\": \"Africa/Porto-Novo\"\n    },\n    \"2393693\": {\n      \"name\": \"Kandi\",\n      \"country\": \"BJ\",\n      \"lat\": 11.13417,\n      \"long\": 2.93861,\n      \"zone\": \"Africa/Porto-Novo\"\n    },\n    \"2394560\": {\n      \"name\": \"Djougou\",\n      \"country\": \"BJ\",\n      \"lat\": 9.70853,\n      \"long\": 1.66598,\n      \"zone\": \"Africa/Porto-Novo\"\n    },\n    \"2394819\": {\n      \"name\": \"Cotonou\",\n      \"country\": \"BJ\",\n      \"lat\": 6.36536,\n      \"long\": 2.41833,\n      \"zone\": \"Africa/Porto-Novo\"\n    },\n    \"2395049\": {\n      \"name\": \"Bohicon\",\n      \"country\": \"BJ\",\n      \"lat\": 7.17826,\n      \"long\": 2.0667,\n      \"zone\": \"Africa/Porto-Novo\"\n    },\n    \"2395914\": {\n      \"name\": \"Abomey-Calavi\",\n      \"country\": \"BJ\",\n      \"lat\": 6.44852,\n      \"long\": 2.35566,\n      \"zone\": \"Africa/Porto-Novo\"\n    },\n    \"2396518\": {\n      \"name\": \"Port-Gentil\",\n      \"country\": \"GA\",\n      \"lat\": -0.71933,\n      \"long\": 8.78151,\n      \"zone\": \"Africa/Libreville\"\n    },\n    \"2399697\": {\n      \"name\": \"Libreville\",\n      \"country\": \"GA\",\n      \"lat\": 0.39241,\n      \"long\": 9.45356,\n      \"zone\": \"Africa/Libreville\"\n    },\n    \"2407790\": {\n      \"name\": \"Kenema\",\n      \"country\": \"SL\",\n      \"lat\": 7.87687,\n      \"long\": -11.19025,\n      \"zone\": \"Africa/Freetown\"\n    },\n    \"2409306\": {\n      \"name\": \"Freetown\",\n      \"country\": \"SL\",\n      \"lat\": 8.484,\n      \"long\": -13.22994,\n      \"zone\": \"Africa/Freetown\"\n    },\n    \"2410048\": {\n      \"name\": \"Bo\",\n      \"country\": \"SL\",\n      \"lat\": 7.96472,\n      \"long\": -11.73833,\n      \"zone\": \"Africa/Freetown\"\n    },\n    \"2416969\": {\n      \"name\": \"Nzérékoré\",\n      \"country\": \"GN\",\n      \"lat\": 7.75624,\n      \"long\": -8.8179,\n      \"zone\": \"Africa/Conakry\"\n    },\n    \"2419533\": {\n      \"name\": \"Kindia\",\n      \"country\": \"GN\",\n      \"lat\": 10.05692,\n      \"long\": -12.86576,\n      \"zone\": \"Africa/Conakry\"\n    },\n    \"2419992\": {\n      \"name\": \"Kankan\",\n      \"country\": \"GN\",\n      \"lat\": 10.38542,\n      \"long\": -9.30568,\n      \"zone\": \"Africa/Conakry\"\n    },\n    \"2422465\": {\n      \"name\": \"Conakry\",\n      \"country\": \"GN\",\n      \"lat\": 9.53795,\n      \"long\": -13.67729,\n      \"zone\": \"Africa/Conakry\"\n    },\n    \"2422488\": {\n      \"name\": \"Camayenne\",\n      \"country\": \"GN\",\n      \"lat\": 9.535,\n      \"long\": -13.68778,\n      \"zone\": \"Africa/Conakry\"\n    },\n    \"2425791\": {\n      \"name\": \"Sagh\",\n      \"country\": \"TD\",\n      \"lat\": 9.1429,\n      \"long\": 18.3923,\n      \"zone\": \"Africa/Ndjamena\"\n    },\n    \"2427123\": {\n      \"name\": \"N'Djamena\",\n      \"country\": \"TD\",\n      \"lat\": 12.10672,\n      \"long\": 15.0444,\n      \"zone\": \"Africa/Ndjamena\"\n    },\n    \"2427455\": {\n      \"name\": \"Moundou\",\n      \"country\": \"TD\",\n      \"lat\": 8.56667,\n      \"long\": 16.08333,\n      \"zone\": \"Africa/Ndjamena\"\n    },\n    \"2437798\": {\n      \"name\": \"Zinder\",\n      \"country\": \"NE\",\n      \"lat\": 13.80716,\n      \"long\": 8.9881,\n      \"zone\": \"Africa/Niamey\"\n    },\n    \"2440485\": {\n      \"name\": \"Niamey\",\n      \"country\": \"NE\",\n      \"lat\": 13.51366,\n      \"long\": 2.1098,\n      \"zone\": \"Africa/Niamey\"\n    },\n    \"2441291\": {\n      \"name\": \"Maradi\",\n      \"country\": \"NE\",\n      \"lat\": 13.5,\n      \"long\": 7.10174,\n      \"zone\": \"Africa/Niamey\"\n    },\n    \"2448085\": {\n      \"name\": \"Agadez\",\n      \"country\": \"NE\",\n      \"lat\": 16.97333,\n      \"long\": 7.99111,\n      \"zone\": \"Africa/Niamey\"\n    },\n    \"2451185\": {\n      \"name\": \"Sikasso\",\n      \"country\": \"ML\",\n      \"lat\": 11.31755,\n      \"long\": -5.66654,\n      \"zone\": \"Africa/Bamako\"\n    },\n    \"2453348\": {\n      \"name\": \"Mopti\",\n      \"country\": \"ML\",\n      \"lat\": 14.4843,\n      \"long\": -4.18296,\n      \"zone\": \"Africa/Bamako\"\n    },\n    \"2460596\": {\n      \"name\": \"Bamako\",\n      \"country\": \"ML\",\n      \"lat\": 12.65,\n      \"long\": -8,\n      \"zone\": \"Africa/Bamako\"\n    },\n    \"2462881\": {\n      \"name\": \"Laâyoune / El Aaiún\",\n      \"country\": \"EH\",\n      \"lat\": 27.1418,\n      \"long\": -13.18797,\n      \"zone\": \"Africa/Casablanca\"\n    },\n    \"2464470\": {\n      \"name\": \"Tunis\",\n      \"country\": \"TN\",\n      \"lat\": 36.81897,\n      \"long\": 10.16579,\n      \"zone\": \"Africa/Tunis\"\n    },\n    \"2464915\": {\n      \"name\": \"Sousse\",\n      \"country\": \"TN\",\n      \"lat\": 35.82539,\n      \"long\": 10.63699,\n      \"zone\": \"Africa/Tunis\"\n    },\n    \"2467454\": {\n      \"name\": \"Sfax\",\n      \"country\": \"TN\",\n      \"lat\": 34.74056,\n      \"long\": 10.76028,\n      \"zone\": \"Africa/Tunis\"\n    },\n    \"2468369\": {\n      \"name\": \"Gabès\",\n      \"country\": \"TN\",\n      \"lat\": 33.88146,\n      \"long\": 10.0982,\n      \"zone\": \"Africa/Tunis\"\n    },\n    \"2468925\": {\n      \"name\": \"Midoun\",\n      \"country\": \"TN\",\n      \"lat\": 33.80813,\n      \"long\": 10.99228,\n      \"zone\": \"Africa/Tunis\"\n    },\n    \"2472706\": {\n      \"name\": \"Bizerte\",\n      \"country\": \"TN\",\n      \"lat\": 37.27442,\n      \"long\": 9.87391,\n      \"zone\": \"Africa/Tunis\"\n    },\n    \"2473449\": {\n      \"name\": \"Kairouan\",\n      \"country\": \"TN\",\n      \"lat\": 35.6781,\n      \"long\": 10.09633,\n      \"zone\": \"Africa/Tunis\"\n    },\n    \"2474141\": {\n      \"name\": \"Boumerdas\",\n      \"country\": \"DZ\",\n      \"lat\": 36.76639,\n      \"long\": 3.47717,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2475687\": {\n      \"name\": \"Tlemcen\",\n      \"country\": \"DZ\",\n      \"lat\": 34.87833,\n      \"long\": -1.315,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2475744\": {\n      \"name\": \"Tizi Ouzou\",\n      \"country\": \"DZ\",\n      \"lat\": 36.71182,\n      \"long\": 4.04591,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2476897\": {\n      \"name\": \"Tiaret\",\n      \"country\": \"DZ\",\n      \"lat\": 35.37103,\n      \"long\": 1.31699,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2477461\": {\n      \"name\": \"Tébessa\",\n      \"country\": \"DZ\",\n      \"lat\": 35.40417,\n      \"long\": 8.12417,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2479215\": {\n      \"name\": \"Souk Ahras\",\n      \"country\": \"DZ\",\n      \"lat\": 36.28639,\n      \"long\": 7.95111,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2479536\": {\n      \"name\": \"Skikda\",\n      \"country\": \"DZ\",\n      \"lat\": 36.87617,\n      \"long\": 6.90921,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2481007\": {\n      \"name\": \"Sidi Bel Abbès\",\n      \"country\": \"DZ\",\n      \"lat\": 35.18994,\n      \"long\": -0.63085,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2481700\": {\n      \"name\": \"Sétif\",\n      \"country\": \"DZ\",\n      \"lat\": 36.19112,\n      \"long\": 5.41373,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2482572\": {\n      \"name\": \"Saïda\",\n      \"country\": \"DZ\",\n      \"lat\": 34.83033,\n      \"long\": 0.15171,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2483668\": {\n      \"name\": \"Relizane\",\n      \"country\": \"DZ\",\n      \"lat\": 35.73734,\n      \"long\": 0.55599,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2484620\": {\n      \"name\": \"Oum el Bouaghi\",\n      \"country\": \"DZ\",\n      \"lat\": 35.87541,\n      \"long\": 7.11353,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2485801\": {\n      \"name\": \"Ouargla\",\n      \"country\": \"DZ\",\n      \"lat\": 31.94932,\n      \"long\": 5.32502,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2485926\": {\n      \"name\": \"Oran\",\n      \"country\": \"DZ\",\n      \"lat\": 35.69111,\n      \"long\": -0.64167,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2487134\": {\n      \"name\": \"Mostaganem\",\n      \"country\": \"DZ\",\n      \"lat\": 35.93115,\n      \"long\": 0.08918,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2488835\": {\n      \"name\": \"Médéa\",\n      \"country\": \"DZ\",\n      \"lat\": 36.26417,\n      \"long\": 2.75393,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2490098\": {\n      \"name\": \"Mascara\",\n      \"country\": \"DZ\",\n      \"lat\": 35.39664,\n      \"long\": 0.14027,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2491191\": {\n      \"name\": \"Laghouat\",\n      \"country\": \"DZ\",\n      \"lat\": 33.8,\n      \"long\": 2.86514,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2491889\": {\n      \"name\": \"Khenchela\",\n      \"country\": \"DZ\",\n      \"lat\": 35.43583,\n      \"long\": 7.14333,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2492913\": {\n      \"name\": \"Jijel\",\n      \"country\": \"DZ\",\n      \"lat\": 36.82055,\n      \"long\": 5.76671,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2495662\": {\n      \"name\": \"Guelma\",\n      \"country\": \"DZ\",\n      \"lat\": 36.46214,\n      \"long\": 7.42608,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2497411\": {\n      \"name\": \"El Oued\",\n      \"country\": \"DZ\",\n      \"lat\": 33.35608,\n      \"long\": 6.86319,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2498392\": {\n      \"name\": \"El Eulma\",\n      \"country\": \"DZ\",\n      \"lat\": 36.15281,\n      \"long\": 5.69016,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2498611\": {\n      \"name\": \"Chlef\",\n      \"country\": \"DZ\",\n      \"lat\": 36.16525,\n      \"long\": 1.33452,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2498766\": {\n      \"name\": \"El Achir\",\n      \"country\": \"DZ\",\n      \"lat\": 36.06386,\n      \"long\": 4.62744,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2498954\": {\n      \"name\": \"Ech Chettia\",\n      \"country\": \"DZ\",\n      \"lat\": 36.19591,\n      \"long\": 1.25537,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2500017\": {\n      \"name\": \"Djelfa\",\n      \"country\": \"DZ\",\n      \"lat\": 34.67279,\n      \"long\": 3.263,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2501152\": {\n      \"name\": \"Constantine\",\n      \"country\": \"DZ\",\n      \"lat\": 36.365,\n      \"long\": 6.61472,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2503661\": {\n      \"name\": \"Bordj el Kiffan\",\n      \"country\": \"DZ\",\n      \"lat\": 36.74871,\n      \"long\": 3.19249,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2503701\": {\n      \"name\": \"Bordj Bou Arreridj\",\n      \"country\": \"DZ\",\n      \"lat\": 36.07321,\n      \"long\": 4.76108,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2503769\": {\n      \"name\": \"Blida\",\n      \"country\": \"DZ\",\n      \"lat\": 36.47004,\n      \"long\": 2.8277,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2503826\": {\n      \"name\": \"Biskra\",\n      \"country\": \"DZ\",\n      \"lat\": 34.85038,\n      \"long\": 5.72805,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2505329\": {\n      \"name\": \"Bejaïa\",\n      \"country\": \"DZ\",\n      \"lat\": 36.75587,\n      \"long\": 5.08433,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2505530\": {\n      \"name\": \"Béchar\",\n      \"country\": \"DZ\",\n      \"lat\": 31.61667,\n      \"long\": -2.21667,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2505572\": {\n      \"name\": \"Batna\",\n      \"country\": \"DZ\",\n      \"lat\": 35.55597,\n      \"long\": 6.17414,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2505653\": {\n      \"name\": \"Baraki\",\n      \"country\": \"DZ\",\n      \"lat\": 36.66655,\n      \"long\": 3.09606,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2505854\": {\n      \"name\": \"Bab Ezzouar\",\n      \"country\": \"DZ\",\n      \"lat\": 36.72615,\n      \"long\": 3.18291,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2506999\": {\n      \"name\": \"Annaba\",\n      \"country\": \"DZ\",\n      \"lat\": 36.9,\n      \"long\": 7.76667,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2507480\": {\n      \"name\": \"Algiers\",\n      \"country\": \"DZ\",\n      \"lat\": 36.7525,\n      \"long\": 3.04197,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2507972\": {\n      \"name\": \"Aïn Oussera\",\n      \"country\": \"DZ\",\n      \"lat\": 35.45139,\n      \"long\": 2.90583,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2508287\": {\n      \"name\": \"Aïn Beïda\",\n      \"country\": \"DZ\",\n      \"lat\": 35.79639,\n      \"long\": 7.39278,\n      \"zone\": \"Africa/Algiers\"\n    },\n    \"2509954\": {\n      \"name\": \"Valencia\",\n      \"country\": \"ES\",\n      \"lat\": 39.46975,\n      \"long\": -0.37739,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"2510253\": {\n      \"name\": \"Torrevieja\",\n      \"country\": \"ES\",\n      \"lat\": 37.97872,\n      \"long\": -0.68222,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"2510542\": {\n      \"name\": \"Telde\",\n      \"country\": \"ES\",\n      \"lat\": 27.99243,\n      \"long\": -15.41915,\n      \"zone\": \"Atlantic/Canary\"\n    },\n    \"2510911\": {\n      \"name\": \"Sevilla\",\n      \"country\": \"ES\",\n      \"lat\": 37.38283,\n      \"long\": -5.97317,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"2511174\": {\n      \"name\": \"Santa Cruz de Tenerife\",\n      \"country\": \"ES\",\n      \"lat\": 28.46824,\n      \"long\": -16.25462,\n      \"zone\": \"Atlantic/Canary\"\n    },\n    \"2511401\": {\n      \"name\": \"La Laguna\",\n      \"country\": \"ES\",\n      \"lat\": 28.4853,\n      \"long\": -16.32014,\n      \"zone\": \"Atlantic/Canary\"\n    },\n    \"2512989\": {\n      \"name\": \"Palma\",\n      \"country\": \"ES\",\n      \"lat\": 39.56939,\n      \"long\": 2.65024,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"2513416\": {\n      \"name\": \"Murcia\",\n      \"country\": \"ES\",\n      \"lat\": 37.98704,\n      \"long\": -1.13004,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"2514169\": {\n      \"name\": \"Marbella\",\n      \"country\": \"ES\",\n      \"lat\": 36.51543,\n      \"long\": -4.88583,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"2514256\": {\n      \"name\": \"Málaga\",\n      \"country\": \"ES\",\n      \"lat\": 36.72016,\n      \"long\": -4.42034,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"2515270\": {\n      \"name\": \"Las Palmas de Gran Canaria\",\n      \"country\": \"ES\",\n      \"lat\": 28.09973,\n      \"long\": -15.41343,\n      \"zone\": \"Atlantic/Canary\"\n    },\n    \"2516326\": {\n      \"name\": \"Jerez de la Frontera\",\n      \"country\": \"ES\",\n      \"lat\": 36.68645,\n      \"long\": -6.13606,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"2516395\": {\n      \"name\": \"Jaén\",\n      \"country\": \"ES\",\n      \"lat\": 37.76922,\n      \"long\": -3.79028,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"2516548\": {\n      \"name\": \"Huelva\",\n      \"country\": \"ES\",\n      \"lat\": 37.26638,\n      \"long\": -6.94004,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"2517117\": {\n      \"name\": \"Granada\",\n      \"country\": \"ES\",\n      \"lat\": 37.18817,\n      \"long\": -3.60667,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"2518559\": {\n      \"name\": \"Elche\",\n      \"country\": \"ES\",\n      \"lat\": 38.26218,\n      \"long\": -0.70107,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"2518794\": {\n      \"name\": \"Dos Hermanas\",\n      \"country\": \"ES\",\n      \"lat\": 37.28287,\n      \"long\": -5.92088,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"2519240\": {\n      \"name\": \"Córdoba\",\n      \"country\": \"ES\",\n      \"lat\": 37.89155,\n      \"long\": -4.77275,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"2519752\": {\n      \"name\": \"Castelló de la Plana\",\n      \"country\": \"ES\",\n      \"lat\": 39.98333,\n      \"long\": -0.03333,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"2520058\": {\n      \"name\": \"Cartagena\",\n      \"country\": \"ES\",\n      \"lat\": 37.60512,\n      \"long\": -0.98623,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"2520600\": {\n      \"name\": \"Cadiz\",\n      \"country\": \"ES\",\n      \"lat\": 36.52978,\n      \"long\": -6.29465,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"2521420\": {\n      \"name\": \"Badajoz\",\n      \"country\": \"ES\",\n      \"lat\": 38.87789,\n      \"long\": -6.97061,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"2521886\": {\n      \"name\": \"Almería\",\n      \"country\": \"ES\",\n      \"lat\": 36.83814,\n      \"long\": -2.45974,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"2521978\": {\n      \"name\": \"Alicante\",\n      \"country\": \"ES\",\n      \"lat\": 38.34517,\n      \"long\": -0.48149,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"2522013\": {\n      \"name\": \"Algeciras\",\n      \"country\": \"ES\",\n      \"lat\": 36.13326,\n      \"long\": -5.45051,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"2522258\": {\n      \"name\": \"Albacete\",\n      \"country\": \"ES\",\n      \"lat\": 38.99424,\n      \"long\": -1.85643,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"2523630\": {\n      \"name\": \"Reggio Calabria\",\n      \"country\": \"IT\",\n      \"lat\": 38.11047,\n      \"long\": 15.66129,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"2523920\": {\n      \"name\": \"Palermo\",\n      \"country\": \"IT\",\n      \"lat\": 38.13205,\n      \"long\": 13.33561,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"2524170\": {\n      \"name\": \"Messina\",\n      \"country\": \"IT\",\n      \"lat\": 38.19394,\n      \"long\": 15.55256,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"2525068\": {\n      \"name\": \"Catania\",\n      \"country\": \"IT\",\n      \"lat\": 37.49223,\n      \"long\": 15.07041,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"2525473\": {\n      \"name\": \"Cagliari\",\n      \"country\": \"IT\",\n      \"lat\": 39.23054,\n      \"long\": 9.11917,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"2528910\": {\n      \"name\": \"Tétouan\",\n      \"country\": \"MA\",\n      \"lat\": 35.57845,\n      \"long\": -5.36837,\n      \"zone\": \"Africa/Casablanca\"\n    },\n    \"2529317\": {\n      \"name\": \"Taza\",\n      \"country\": \"MA\",\n      \"lat\": 34.21,\n      \"long\": -4.01,\n      \"zone\": \"Africa/Casablanca\"\n    },\n    \"2530335\": {\n      \"name\": \"Tangier\",\n      \"country\": \"MA\",\n      \"lat\": 35.76727,\n      \"long\": -5.79975,\n      \"zone\": \"Africa/Casablanca\"\n    },\n    \"2537406\": {\n      \"name\": \"Settat\",\n      \"country\": \"MA\",\n      \"lat\": 33.00103,\n      \"long\": -7.61662,\n      \"zone\": \"Africa/Casablanca\"\n    },\n    \"2537763\": {\n      \"name\": \"Sale\",\n      \"country\": \"MA\",\n      \"lat\": 34.0531,\n      \"long\": -6.79846,\n      \"zone\": \"Africa/Casablanca\"\n    },\n    \"2537881\": {\n      \"name\": \"Safi\",\n      \"country\": \"MA\",\n      \"lat\": 32.29939,\n      \"long\": -9.23718,\n      \"zone\": \"Africa/Casablanca\"\n    },\n    \"2538475\": {\n      \"name\": \"Rabat\",\n      \"country\": \"MA\",\n      \"lat\": 34.01325,\n      \"long\": -6.83255,\n      \"zone\": \"Africa/Casablanca\"\n    },\n    \"2540483\": {\n      \"name\": \"Oujda\",\n      \"country\": \"MA\",\n      \"lat\": 34.68053,\n      \"long\": -1.90764,\n      \"zone\": \"Africa/Casablanca\"\n    },\n    \"2541479\": {\n      \"name\": \"Nador\",\n      \"country\": \"MA\",\n      \"lat\": 35.16813,\n      \"long\": -2.93352,\n      \"zone\": \"Africa/Casablanca\"\n    },\n    \"2542051\": {\n      \"name\": \"Mohammedia\",\n      \"country\": \"MA\",\n      \"lat\": 33.68607,\n      \"long\": -7.38298,\n      \"zone\": \"Africa/Casablanca\"\n    },\n    \"2542715\": {\n      \"name\": \"Meknès\",\n      \"country\": \"MA\",\n      \"lat\": 33.89352,\n      \"long\": -5.54727,\n      \"zone\": \"Africa/Casablanca\"\n    },\n    \"2542997\": {\n      \"name\": \"Marrakesh\",\n      \"country\": \"MA\",\n      \"lat\": 31.63416,\n      \"long\": -7.99994,\n      \"zone\": \"Africa/Casablanca\"\n    },\n    \"2543549\": {\n      \"name\": \"Larache\",\n      \"country\": \"MA\",\n      \"lat\": 35.19321,\n      \"long\": -6.15572,\n      \"zone\": \"Africa/Casablanca\"\n    },\n    \"2544001\": {\n      \"name\": \"Ksar el Kebir\",\n      \"country\": \"MA\",\n      \"lat\": 35.00174,\n      \"long\": -5.90534,\n      \"zone\": \"Africa/Casablanca\"\n    },\n    \"2544248\": {\n      \"name\": \"Khouribga\",\n      \"country\": \"MA\",\n      \"lat\": 32.88108,\n      \"long\": -6.9063,\n      \"zone\": \"Africa/Casablanca\"\n    },\n    \"2544571\": {\n      \"name\": \"Kenitra\",\n      \"country\": \"MA\",\n      \"lat\": 34.26101,\n      \"long\": -6.5802,\n      \"zone\": \"Africa/Casablanca\"\n    },\n    \"2548885\": {\n      \"name\": \"Fès\",\n      \"country\": \"MA\",\n      \"lat\": 34.03715,\n      \"long\": -4.9998,\n      \"zone\": \"Africa/Casablanca\"\n    },\n    \"2550078\": {\n      \"name\": \"El Jadida\",\n      \"country\": \"MA\",\n      \"lat\": 33.25492,\n      \"long\": -8.50602,\n      \"zone\": \"Africa/Casablanca\"\n    },\n    \"2553604\": {\n      \"name\": \"Casablanca\",\n      \"country\": \"MA\",\n      \"lat\": 33.58831,\n      \"long\": -7.61138,\n      \"zone\": \"Africa/Casablanca\"\n    },\n    \"2555745\": {\n      \"name\": \"Beni Mellal\",\n      \"country\": \"MA\",\n      \"lat\": 32.33725,\n      \"long\": -6.34983,\n      \"zone\": \"Africa/Casablanca\"\n    },\n    \"2558470\": {\n      \"name\": \"Khemisset\",\n      \"country\": \"MA\",\n      \"lat\": 33.82404,\n      \"long\": -6.06627,\n      \"zone\": \"Africa/Casablanca\"\n    },\n    \"2558545\": {\n      \"name\": \"Al Hoceïma\",\n      \"country\": \"MA\",\n      \"lat\": 35.25165,\n      \"long\": -3.93723,\n      \"zone\": \"Africa/Casablanca\"\n    },\n    \"2561668\": {\n      \"name\": \"Agadir\",\n      \"country\": \"MA\",\n      \"lat\": 30.42018,\n      \"long\": -9.59815,\n      \"zone\": \"Africa/Casablanca\"\n    },\n    \"2593460\": {\n      \"name\": \"Masina\",\n      \"country\": \"CD\",\n      \"lat\": -4.38361,\n      \"long\": 15.39139,\n      \"zone\": \"Africa/Kinshasa\"\n    },\n    \"2615876\": {\n      \"name\": \"Odense\",\n      \"country\": \"DK\",\n      \"lat\": 55.39594,\n      \"long\": 10.38831,\n      \"zone\": \"Europe/Copenhagen\"\n    },\n    \"2618425\": {\n      \"name\": \"Copenhagen\",\n      \"country\": \"DK\",\n      \"lat\": 55.67594,\n      \"long\": 12.56553,\n      \"zone\": \"Europe/Copenhagen\"\n    },\n    \"2624652\": {\n      \"name\": \"Århus\",\n      \"country\": \"DK\",\n      \"lat\": 56.15674,\n      \"long\": 10.21076,\n      \"zone\": \"Europe/Copenhagen\"\n    },\n    \"2624886\": {\n      \"name\": \"Aalborg\",\n      \"country\": \"DK\",\n      \"lat\": 57.048,\n      \"long\": 9.9187,\n      \"zone\": \"Europe/Copenhagen\"\n    },\n    \"2633352\": {\n      \"name\": \"York\",\n      \"country\": \"GB\",\n      \"lat\": 53.95763,\n      \"long\": -1.08271,\n      \"zone\": \"Europe/London\"\n    },\n    \"2633563\": {\n      \"name\": \"Worcester\",\n      \"country\": \"GB\",\n      \"lat\": 52.18935,\n      \"long\": -2.22001,\n      \"zone\": \"Europe/London\"\n    },\n    \"2633691\": {\n      \"name\": \"Wolverhampton\",\n      \"country\": \"GB\",\n      \"lat\": 52.58547,\n      \"long\": -2.12296,\n      \"zone\": \"Europe/London\"\n    },\n    \"2633709\": {\n      \"name\": \"Woking\",\n      \"country\": \"GB\",\n      \"lat\": 51.31903,\n      \"long\": -0.55893,\n      \"zone\": \"Europe/London\"\n    },\n    \"2634491\": {\n      \"name\": \"West Bromwich\",\n      \"country\": \"GB\",\n      \"lat\": 52.51868,\n      \"long\": -1.9945,\n      \"zone\": \"Europe/London\"\n    },\n    \"2634677\": {\n      \"name\": \"Watford\",\n      \"country\": \"GB\",\n      \"lat\": 51.65531,\n      \"long\": -0.39602,\n      \"zone\": \"Europe/London\"\n    },\n    \"2634853\": {\n      \"name\": \"Walsall\",\n      \"country\": \"GB\",\n      \"lat\": 52.58528,\n      \"long\": -1.98396,\n      \"zone\": \"Europe/London\"\n    },\n    \"2636389\": {\n      \"name\": \"Swindon\",\n      \"country\": \"GB\",\n      \"lat\": 51.55797,\n      \"long\": -1.78116,\n      \"zone\": \"Europe/London\"\n    },\n    \"2636432\": {\n      \"name\": \"Swansea\",\n      \"country\": \"GB\",\n      \"lat\": 51.62079,\n      \"long\": -3.94323,\n      \"zone\": \"Europe/London\"\n    },\n    \"2636486\": {\n      \"name\": \"Sutton Coldfield\",\n      \"country\": \"GB\",\n      \"lat\": 52.56667,\n      \"long\": -1.81667,\n      \"zone\": \"Europe/London\"\n    },\n    \"2636503\": {\n      \"name\": \"Sutton\",\n      \"country\": \"GB\",\n      \"lat\": 51.35,\n      \"long\": -0.2,\n      \"zone\": \"Europe/London\"\n    },\n    \"2636531\": {\n      \"name\": \"Sunderland\",\n      \"country\": \"GB\",\n      \"lat\": 54.90465,\n      \"long\": -1.38222,\n      \"zone\": \"Europe/London\"\n    },\n    \"2636841\": {\n      \"name\": \"Stoke-on-Trent\",\n      \"country\": \"GB\",\n      \"lat\": 53.00415,\n      \"long\": -2.18538,\n      \"zone\": \"Europe/London\"\n    },\n    \"2636882\": {\n      \"name\": \"Stockport\",\n      \"country\": \"GB\",\n      \"lat\": 53.40979,\n      \"long\": -2.15761,\n      \"zone\": \"Europe/London\"\n    },\n    \"2637433\": {\n      \"name\": \"Southend-on-Sea\",\n      \"country\": \"GB\",\n      \"lat\": 51.53782,\n      \"long\": 0.71433,\n      \"zone\": \"Europe/London\"\n    },\n    \"2637487\": {\n      \"name\": \"Southampton\",\n      \"country\": \"GB\",\n      \"lat\": 50.90395,\n      \"long\": -1.40428,\n      \"zone\": \"Europe/London\"\n    },\n    \"2637627\": {\n      \"name\": \"Slough\",\n      \"country\": \"GB\",\n      \"lat\": 51.50949,\n      \"long\": -0.59541,\n      \"zone\": \"Europe/London\"\n    },\n    \"2638077\": {\n      \"name\": \"Sheffield\",\n      \"country\": \"GB\",\n      \"lat\": 53.38297,\n      \"long\": -1.4659,\n      \"zone\": \"Europe/London\"\n    },\n    \"2638785\": {\n      \"name\": \"St Helens\",\n      \"country\": \"GB\",\n      \"lat\": 53.45,\n      \"long\": -2.73333,\n      \"zone\": \"Europe/London\"\n    },\n    \"2639093\": {\n      \"name\": \"Rotherham\",\n      \"country\": \"GB\",\n      \"lat\": 53.43012,\n      \"long\": -1.35678,\n      \"zone\": \"Europe/London\"\n    },\n    \"2639577\": {\n      \"name\": \"Reading\",\n      \"country\": \"GB\",\n      \"lat\": 51.45625,\n      \"long\": -0.97113,\n      \"zone\": \"Europe/London\"\n    },\n    \"2639912\": {\n      \"name\": \"Preston\",\n      \"country\": \"GB\",\n      \"lat\": 53.76667,\n      \"long\": -2.71667,\n      \"zone\": \"Europe/London\"\n    },\n    \"2639996\": {\n      \"name\": \"Portsmouth\",\n      \"country\": \"GB\",\n      \"lat\": 50.79899,\n      \"long\": -1.09125,\n      \"zone\": \"Europe/London\"\n    },\n    \"2640101\": {\n      \"name\": \"Poole\",\n      \"country\": \"GB\",\n      \"lat\": 50.71667,\n      \"long\": -2,\n      \"zone\": \"Europe/London\"\n    },\n    \"2640194\": {\n      \"name\": \"Plymouth\",\n      \"country\": \"GB\",\n      \"lat\": 50.37153,\n      \"long\": -4.14305,\n      \"zone\": \"Europe/London\"\n    },\n    \"2640354\": {\n      \"name\": \"Peterborough\",\n      \"country\": \"GB\",\n      \"lat\": 52.57364,\n      \"long\": -0.24777,\n      \"zone\": \"Europe/London\"\n    },\n    \"2640729\": {\n      \"name\": \"Oxford\",\n      \"country\": \"GB\",\n      \"lat\": 51.75222,\n      \"long\": -1.25596,\n      \"zone\": \"Europe/London\"\n    },\n    \"2641022\": {\n      \"name\": \"Oldham\",\n      \"country\": \"GB\",\n      \"lat\": 53.54051,\n      \"long\": -2.1183,\n      \"zone\": \"Europe/London\"\n    },\n    \"2641170\": {\n      \"name\": \"Nottingham\",\n      \"country\": \"GB\",\n      \"lat\": 52.9536,\n      \"long\": -1.15047,\n      \"zone\": \"Europe/London\"\n    },\n    \"2641181\": {\n      \"name\": \"Norwich\",\n      \"country\": \"GB\",\n      \"lat\": 52.62783,\n      \"long\": 1.29834,\n      \"zone\": \"Europe/London\"\n    },\n    \"2641430\": {\n      \"name\": \"Northampton\",\n      \"country\": \"GB\",\n      \"lat\": 52.25,\n      \"long\": -0.88333,\n      \"zone\": \"Europe/London\"\n    },\n    \"2641598\": {\n      \"name\": \"Newport\",\n      \"country\": \"GB\",\n      \"lat\": 51.58774,\n      \"long\": -2.99835,\n      \"zone\": \"Europe/London\"\n    },\n    \"2641673\": {\n      \"name\": \"Newcastle upon Tyne\",\n      \"country\": \"GB\",\n      \"lat\": 54.97328,\n      \"long\": -1.61396,\n      \"zone\": \"Europe/London\"\n    },\n    \"2642465\": {\n      \"name\": \"Milton Keynes\",\n      \"country\": \"GB\",\n      \"lat\": 52.04172,\n      \"long\": -0.75583,\n      \"zone\": \"Europe/London\"\n    },\n    \"2642607\": {\n      \"name\": \"Middlesbrough\",\n      \"country\": \"GB\",\n      \"lat\": 54.57623,\n      \"long\": -1.23483,\n      \"zone\": \"Europe/London\"\n    },\n    \"2643123\": {\n      \"name\": \"Manchester\",\n      \"country\": \"GB\",\n      \"lat\": 53.48095,\n      \"long\": -2.23743,\n      \"zone\": \"Europe/London\"\n    },\n    \"2643339\": {\n      \"name\": \"Luton\",\n      \"country\": \"GB\",\n      \"lat\": 51.87967,\n      \"long\": -0.41748,\n      \"zone\": \"Europe/London\"\n    },\n    \"2643741\": {\n      \"name\": \"City of London\",\n      \"country\": \"GB\",\n      \"lat\": 51.51279,\n      \"long\": -0.09184,\n      \"zone\": \"Europe/London\"\n    },\n    \"2643743\": {\n      \"name\": \"London\",\n      \"country\": \"GB\",\n      \"lat\": 51.50853,\n      \"long\": -0.12574,\n      \"zone\": \"Europe/London\"\n    },\n    \"2644210\": {\n      \"name\": \"Liverpool\",\n      \"country\": \"GB\",\n      \"lat\": 53.41058,\n      \"long\": -2.97794,\n      \"zone\": \"Europe/London\"\n    },\n    \"2644668\": {\n      \"name\": \"Leicester\",\n      \"country\": \"GB\",\n      \"lat\": 52.6386,\n      \"long\": -1.13169,\n      \"zone\": \"Europe/London\"\n    },\n    \"2644688\": {\n      \"name\": \"Leeds\",\n      \"country\": \"GB\",\n      \"lat\": 53.79648,\n      \"long\": -1.54785,\n      \"zone\": \"Europe/London\"\n    },\n    \"2645425\": {\n      \"name\": \"Hull\",\n      \"country\": \"GB\",\n      \"lat\": 53.7446,\n      \"long\": -0.33525,\n      \"zone\": \"Europe/London\"\n    },\n    \"2646003\": {\n      \"name\": \"Islington\",\n      \"country\": \"GB\",\n      \"lat\": 51.53622,\n      \"long\": -0.10304,\n      \"zone\": \"Europe/London\"\n    },\n    \"2646057\": {\n      \"name\": \"Ipswich\",\n      \"country\": \"GB\",\n      \"lat\": 52.05917,\n      \"long\": 1.15545,\n      \"zone\": \"Europe/London\"\n    },\n    \"2646458\": {\n      \"name\": \"Huddersfield\",\n      \"country\": \"GB\",\n      \"lat\": 53.64904,\n      \"long\": -1.78416,\n      \"zone\": \"Europe/London\"\n    },\n    \"2648404\": {\n      \"name\": \"Gloucester\",\n      \"country\": \"GB\",\n      \"lat\": 51.86568,\n      \"long\": -2.2431,\n      \"zone\": \"Europe/London\"\n    },\n    \"2648579\": {\n      \"name\": \"Glasgow\",\n      \"country\": \"GB\",\n      \"lat\": 55.86515,\n      \"long\": -4.25763,\n      \"zone\": \"Europe/London\"\n    },\n    \"2648657\": {\n      \"name\": \"Gillingham\",\n      \"country\": \"GB\",\n      \"lat\": 51.38914,\n      \"long\": 0.54863,\n      \"zone\": \"Europe/London\"\n    },\n    \"2649808\": {\n      \"name\": \"Exeter\",\n      \"country\": \"GB\",\n      \"lat\": 50.7236,\n      \"long\": -3.52751,\n      \"zone\": \"Europe/London\"\n    },\n    \"2650225\": {\n      \"name\": \"Edinburgh\",\n      \"country\": \"GB\",\n      \"lat\": 55.95206,\n      \"long\": -3.19648,\n      \"zone\": \"Europe/London\"\n    },\n    \"2650497\": {\n      \"name\": \"Eastbourne\",\n      \"country\": \"GB\",\n      \"lat\": 50.76871,\n      \"long\": 0.28453,\n      \"zone\": \"Europe/London\"\n    },\n    \"2650752\": {\n      \"name\": \"Dundee\",\n      \"country\": \"GB\",\n      \"lat\": 56.46913,\n      \"long\": -2.97489,\n      \"zone\": \"Europe/London\"\n    },\n    \"2650839\": {\n      \"name\": \"Dudley\",\n      \"country\": \"GB\",\n      \"lat\": 52.5,\n      \"long\": -2.08333,\n      \"zone\": \"Europe/London\"\n    },\n    \"2651347\": {\n      \"name\": \"Derby\",\n      \"country\": \"GB\",\n      \"lat\": 52.92277,\n      \"long\": -1.47663,\n      \"zone\": \"Europe/London\"\n    },\n    \"2651621\": {\n      \"name\": \"Dagenham\",\n      \"country\": \"GB\",\n      \"lat\": 51.55,\n      \"long\": 0.16667,\n      \"zone\": \"Europe/London\"\n    },\n    \"2652053\": {\n      \"name\": \"Crawley\",\n      \"country\": \"GB\",\n      \"lat\": 51.11303,\n      \"long\": -0.18312,\n      \"zone\": \"Europe/London\"\n    },\n    \"2652221\": {\n      \"name\": \"Coventry\",\n      \"country\": \"GB\",\n      \"lat\": 52.40656,\n      \"long\": -1.51217,\n      \"zone\": \"Europe/London\"\n    },\n    \"2652618\": {\n      \"name\": \"Colchester\",\n      \"country\": \"GB\",\n      \"lat\": 51.88921,\n      \"long\": 0.90421,\n      \"zone\": \"Europe/London\"\n    },\n    \"2653261\": {\n      \"name\": \"Cheltenham\",\n      \"country\": \"GB\",\n      \"lat\": 51.9,\n      \"long\": -2.08333,\n      \"zone\": \"Europe/London\"\n    },\n    \"2653266\": {\n      \"name\": \"Chelmsford\",\n      \"country\": \"GB\",\n      \"lat\": 51.73575,\n      \"long\": 0.46958,\n      \"zone\": \"Europe/London\"\n    },\n    \"2653822\": {\n      \"name\": \"Cardiff\",\n      \"country\": \"GB\",\n      \"lat\": 51.48,\n      \"long\": -3.18,\n      \"zone\": \"Europe/London\"\n    },\n    \"2653941\": {\n      \"name\": \"Cambridge\",\n      \"country\": \"GB\",\n      \"lat\": 52.2,\n      \"long\": 0.11667,\n      \"zone\": \"Europe/London\"\n    },\n    \"2654675\": {\n      \"name\": \"Bristol\",\n      \"country\": \"GB\",\n      \"lat\": 51.45523,\n      \"long\": -2.59665,\n      \"zone\": \"Europe/London\"\n    },\n    \"2654710\": {\n      \"name\": \"Brighton\",\n      \"country\": \"GB\",\n      \"lat\": 50.82838,\n      \"long\": -0.13947,\n      \"zone\": \"Europe/London\"\n    },\n    \"2654993\": {\n      \"name\": \"Bradford\",\n      \"country\": \"GB\",\n      \"lat\": 53.79391,\n      \"long\": -1.75206,\n      \"zone\": \"Europe/London\"\n    },\n    \"2655095\": {\n      \"name\": \"Bournemouth\",\n      \"country\": \"GB\",\n      \"lat\": 50.72048,\n      \"long\": -1.8795,\n      \"zone\": \"Europe/London\"\n    },\n    \"2655237\": {\n      \"name\": \"Bolton\",\n      \"country\": \"GB\",\n      \"lat\": 53.58333,\n      \"long\": -2.43333,\n      \"zone\": \"Europe/London\"\n    },\n    \"2655459\": {\n      \"name\": \"Blackpool\",\n      \"country\": \"GB\",\n      \"lat\": 53.81667,\n      \"long\": -3.05,\n      \"zone\": \"Europe/London\"\n    },\n    \"2655524\": {\n      \"name\": \"Blackburn\",\n      \"country\": \"GB\",\n      \"lat\": 53.75,\n      \"long\": -2.48333,\n      \"zone\": \"Europe/London\"\n    },\n    \"2655603\": {\n      \"name\": \"Birmingham\",\n      \"country\": \"GB\",\n      \"lat\": 52.48142,\n      \"long\": -1.89983,\n      \"zone\": \"Europe/London\"\n    },\n    \"2655775\": {\n      \"name\": \"Bexley\",\n      \"country\": \"GB\",\n      \"lat\": 51.44162,\n      \"long\": 0.14866,\n      \"zone\": \"Europe/London\"\n    },\n    \"2655984\": {\n      \"name\": \"Belfast\",\n      \"country\": \"GB\",\n      \"lat\": 54.58333,\n      \"long\": -5.93333,\n      \"zone\": \"Europe/London\"\n    },\n    \"2656194\": {\n      \"name\": \"Basildon\",\n      \"country\": \"GB\",\n      \"lat\": 51.56844,\n      \"long\": 0.45782,\n      \"zone\": \"Europe/London\"\n    },\n    \"2657832\": {\n      \"name\": \"Aberdeen\",\n      \"country\": \"GB\",\n      \"lat\": 57.14369,\n      \"long\": -2.09814,\n      \"zone\": \"Europe/London\"\n    },\n    \"2657896\": {\n      \"name\": \"Zürich\",\n      \"country\": \"CH\",\n      \"lat\": 47.36667,\n      \"long\": 8.55,\n      \"zone\": \"Europe/Zurich\"\n    },\n    \"2659994\": {\n      \"name\": \"Lausanne\",\n      \"country\": \"CH\",\n      \"lat\": 46.516,\n      \"long\": 6.63282,\n      \"zone\": \"Europe/Zurich\"\n    },\n    \"2660646\": {\n      \"name\": \"Genève\",\n      \"country\": \"CH\",\n      \"lat\": 46.20222,\n      \"long\": 6.14569,\n      \"zone\": \"Europe/Zurich\"\n    },\n    \"2661552\": {\n      \"name\": \"Bern\",\n      \"country\": \"CH\",\n      \"lat\": 46.94809,\n      \"long\": 7.44744,\n      \"zone\": \"Europe/Zurich\"\n    },\n    \"2661604\": {\n      \"name\": \"Basel\",\n      \"country\": \"CH\",\n      \"lat\": 47.55839,\n      \"long\": 7.57327,\n      \"zone\": \"Europe/Zurich\"\n    },\n    \"2664454\": {\n      \"name\": \"Västerås\",\n      \"country\": \"SE\",\n      \"lat\": 59.61617,\n      \"long\": 16.55276,\n      \"zone\": \"Europe/Stockholm\"\n    },\n    \"2666199\": {\n      \"name\": \"Uppsala\",\n      \"country\": \"SE\",\n      \"lat\": 59.85882,\n      \"long\": 17.63889,\n      \"zone\": \"Europe/Stockholm\"\n    },\n    \"2673730\": {\n      \"name\": \"Stockholm\",\n      \"country\": \"SE\",\n      \"lat\": 59.33258,\n      \"long\": 18.0649,\n      \"zone\": \"Europe/Stockholm\"\n    },\n    \"2692969\": {\n      \"name\": \"Malmö\",\n      \"country\": \"SE\",\n      \"lat\": 55.60587,\n      \"long\": 13.00073,\n      \"zone\": \"Europe/Stockholm\"\n    },\n    \"2711537\": {\n      \"name\": \"Göteborg\",\n      \"country\": \"SE\",\n      \"lat\": 57.70716,\n      \"long\": 11.96679,\n      \"zone\": \"Europe/Stockholm\"\n    },\n    \"2735943\": {\n      \"name\": \"Porto\",\n      \"country\": \"PT\",\n      \"lat\": 41.14961,\n      \"long\": -8.61099,\n      \"zone\": \"Europe/Lisbon\"\n    },\n    \"2740637\": {\n      \"name\": \"Coimbra\",\n      \"country\": \"PT\",\n      \"lat\": 40.20564,\n      \"long\": -8.41955,\n      \"zone\": \"Europe/Lisbon\"\n    },\n    \"2742032\": {\n      \"name\": \"Braga\",\n      \"country\": \"PT\",\n      \"lat\": 41.55032,\n      \"long\": -8.42005,\n      \"zone\": \"Europe/Lisbon\"\n    },\n    \"2743477\": {\n      \"name\": \"Zwolle\",\n      \"country\": \"NL\",\n      \"lat\": 52.5125,\n      \"long\": 6.09444,\n      \"zone\": \"Europe/Amsterdam\"\n    },\n    \"2743856\": {\n      \"name\": \"Zoetermeer\",\n      \"country\": \"NL\",\n      \"lat\": 52.0575,\n      \"long\": 4.49306,\n      \"zone\": \"Europe/Amsterdam\"\n    },\n    \"2744114\": {\n      \"name\": \"Zaanstad\",\n      \"country\": \"NL\",\n      \"lat\": 52.45313,\n      \"long\": 4.81356,\n      \"zone\": \"Europe/Amsterdam\"\n    },\n    \"2745912\": {\n      \"name\": \"Utrecht\",\n      \"country\": \"NL\",\n      \"lat\": 52.09083,\n      \"long\": 5.12222,\n      \"zone\": \"Europe/Amsterdam\"\n    },\n    \"2746301\": {\n      \"name\": \"Tilburg\",\n      \"country\": \"NL\",\n      \"lat\": 51.55551,\n      \"long\": 5.0913,\n      \"zone\": \"Europe/Amsterdam\"\n    },\n    \"2747351\": {\n      \"name\": \"'s-Hertogenbosch\",\n      \"country\": \"NL\",\n      \"lat\": 51.69917,\n      \"long\": 5.30417,\n      \"zone\": \"Europe/Amsterdam\"\n    },\n    \"2747373\": {\n      \"name\": \"The Hague\",\n      \"country\": \"NL\",\n      \"lat\": 52.07667,\n      \"long\": 4.29861,\n      \"zone\": \"Europe/Amsterdam\"\n    },\n    \"2747891\": {\n      \"name\": \"Rotterdam\",\n      \"country\": \"NL\",\n      \"lat\": 51.9225,\n      \"long\": 4.47917,\n      \"zone\": \"Europe/Amsterdam\"\n    },\n    \"2750053\": {\n      \"name\": \"Nijmegen\",\n      \"country\": \"NL\",\n      \"lat\": 51.8425,\n      \"long\": 5.85278,\n      \"zone\": \"Europe/Amsterdam\"\n    },\n    \"2751283\": {\n      \"name\": \"Maastricht\",\n      \"country\": \"NL\",\n      \"lat\": 50.84833,\n      \"long\": 5.68889,\n      \"zone\": \"Europe/Amsterdam\"\n    },\n    \"2751773\": {\n      \"name\": \"Leiden\",\n      \"country\": \"NL\",\n      \"lat\": 52.15833,\n      \"long\": 4.49306,\n      \"zone\": \"Europe/Amsterdam\"\n    },\n    \"2753801\": {\n      \"name\": \"Hoofddorp\",\n      \"country\": \"NL\",\n      \"lat\": 52.3025,\n      \"long\": 4.68889,\n      \"zone\": \"Europe/Amsterdam\"\n    },\n    \"2755003\": {\n      \"name\": \"Haarlem\",\n      \"country\": \"NL\",\n      \"lat\": 52.38084,\n      \"long\": 4.63683,\n      \"zone\": \"Europe/Amsterdam\"\n    },\n    \"2755251\": {\n      \"name\": \"Groningen\",\n      \"country\": \"NL\",\n      \"lat\": 53.21917,\n      \"long\": 6.56667,\n      \"zone\": \"Europe/Amsterdam\"\n    },\n    \"2756071\": {\n      \"name\": \"Enschede\",\n      \"country\": \"NL\",\n      \"lat\": 52.21833,\n      \"long\": 6.89583,\n      \"zone\": \"Europe/Amsterdam\"\n    },\n    \"2756253\": {\n      \"name\": \"Eindhoven\",\n      \"country\": \"NL\",\n      \"lat\": 51.44083,\n      \"long\": 5.47778,\n      \"zone\": \"Europe/Amsterdam\"\n    },\n    \"2756669\": {\n      \"name\": \"Dordrecht\",\n      \"country\": \"NL\",\n      \"lat\": 51.81,\n      \"long\": 4.67361,\n      \"zone\": \"Europe/Amsterdam\"\n    },\n    \"2758401\": {\n      \"name\": \"Breda\",\n      \"country\": \"NL\",\n      \"lat\": 51.58656,\n      \"long\": 4.77596,\n      \"zone\": \"Europe/Amsterdam\"\n    },\n    \"2759661\": {\n      \"name\": \"Arnhem\",\n      \"country\": \"NL\",\n      \"lat\": 51.98,\n      \"long\": 5.91111,\n      \"zone\": \"Europe/Amsterdam\"\n    },\n    \"2759706\": {\n      \"name\": \"Apeldoorn\",\n      \"country\": \"NL\",\n      \"lat\": 52.21,\n      \"long\": 5.96944,\n      \"zone\": \"Europe/Amsterdam\"\n    },\n    \"2759794\": {\n      \"name\": \"Amsterdam\",\n      \"country\": \"NL\",\n      \"lat\": 52.37403,\n      \"long\": 4.88969,\n      \"zone\": \"Europe/Amsterdam\"\n    },\n    \"2759821\": {\n      \"name\": \"Amersfoort\",\n      \"country\": \"NL\",\n      \"lat\": 52.155,\n      \"long\": 5.3875,\n      \"zone\": \"Europe/Amsterdam\"\n    },\n    \"2759879\": {\n      \"name\": \"Almere Stad\",\n      \"country\": \"NL\",\n      \"lat\": 52.37025,\n      \"long\": 5.21413,\n      \"zone\": \"Europe/Amsterdam\"\n    },\n    \"2761369\": {\n      \"name\": \"Vienna\",\n      \"country\": \"AT\",\n      \"lat\": 48.20849,\n      \"long\": 16.37208,\n      \"zone\": \"Europe/Vienna\"\n    },\n    \"2766824\": {\n      \"name\": \"Salzburg\",\n      \"country\": \"AT\",\n      \"lat\": 47.79941,\n      \"long\": 13.04399,\n      \"zone\": \"Europe/Vienna\"\n    },\n    \"2772400\": {\n      \"name\": \"Linz\",\n      \"country\": \"AT\",\n      \"lat\": 48.30639,\n      \"long\": 14.28611,\n      \"zone\": \"Europe/Vienna\"\n    },\n    \"2775220\": {\n      \"name\": \"Innsbruck\",\n      \"country\": \"AT\",\n      \"lat\": 47.26266,\n      \"long\": 11.39454,\n      \"zone\": \"Europe/Vienna\"\n    },\n    \"2778067\": {\n      \"name\": \"Graz\",\n      \"country\": \"AT\",\n      \"lat\": 47.06667,\n      \"long\": 15.45,\n      \"zone\": \"Europe/Vienna\"\n    },\n    \"2790471\": {\n      \"name\": \"Namur\",\n      \"country\": \"BE\",\n      \"lat\": 50.4669,\n      \"long\": 4.86746,\n      \"zone\": \"Europe/Brussels\"\n    },\n    \"2792413\": {\n      \"name\": \"Liège\",\n      \"country\": \"BE\",\n      \"lat\": 50.63373,\n      \"long\": 5.56749,\n      \"zone\": \"Europe/Brussels\"\n    },\n    \"2797656\": {\n      \"name\": \"Gent\",\n      \"country\": \"BE\",\n      \"lat\": 51.05,\n      \"long\": 3.71667,\n      \"zone\": \"Europe/Brussels\"\n    },\n    \"2800481\": {\n      \"name\": \"Charleroi\",\n      \"country\": \"BE\",\n      \"lat\": 50.41136,\n      \"long\": 4.44448,\n      \"zone\": \"Europe/Brussels\"\n    },\n    \"2800866\": {\n      \"name\": \"Brussels\",\n      \"country\": \"BE\",\n      \"lat\": 50.85045,\n      \"long\": 4.34878,\n      \"zone\": \"Europe/Brussels\"\n    },\n    \"2800931\": {\n      \"name\": \"Brugge\",\n      \"country\": \"BE\",\n      \"lat\": 51.20892,\n      \"long\": 3.22424,\n      \"zone\": \"Europe/Brussels\"\n    },\n    \"2803138\": {\n      \"name\": \"Antwerpen\",\n      \"country\": \"BE\",\n      \"lat\": 51.21989,\n      \"long\": 4.40346,\n      \"zone\": \"Europe/Brussels\"\n    },\n    \"2805615\": {\n      \"name\": \"Würzburg\",\n      \"country\": \"DE\",\n      \"lat\": 49.79391,\n      \"long\": 9.95121,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2805753\": {\n      \"name\": \"Wuppertal\",\n      \"country\": \"DE\",\n      \"lat\": 51.27027,\n      \"long\": 7.16755,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2806654\": {\n      \"name\": \"Wolfsburg\",\n      \"country\": \"DE\",\n      \"lat\": 52.42452,\n      \"long\": 10.7815,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2807363\": {\n      \"name\": \"Witten\",\n      \"country\": \"DE\",\n      \"lat\": 51.44362,\n      \"long\": 7.35258,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2809346\": {\n      \"name\": \"Wiesbaden\",\n      \"country\": \"DE\",\n      \"lat\": 50.08258,\n      \"long\": 8.24932,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2820256\": {\n      \"name\": \"Ulm\",\n      \"country\": \"DE\",\n      \"lat\": 48.39841,\n      \"long\": 9.99155,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2821164\": {\n      \"name\": \"Trier\",\n      \"country\": \"DE\",\n      \"lat\": 49.75565,\n      \"long\": 6.63935,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2825297\": {\n      \"name\": \"Stuttgart\",\n      \"country\": \"DE\",\n      \"lat\": 48.78232,\n      \"long\": 9.17702,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2831580\": {\n      \"name\": \"Solingen\",\n      \"country\": \"DE\",\n      \"lat\": 51.17343,\n      \"long\": 7.0845,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2832495\": {\n      \"name\": \"Siegen\",\n      \"country\": \"DE\",\n      \"lat\": 50.87481,\n      \"long\": 8.02431,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2836788\": {\n      \"name\": \"Schöneberg\",\n      \"country\": \"DE\",\n      \"lat\": 52.46667,\n      \"long\": 13.35,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2842647\": {\n      \"name\": \"Saarbrücken\",\n      \"country\": \"DE\",\n      \"lat\": 49.2354,\n      \"long\": 6.98165,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2844588\": {\n      \"name\": \"Rostock\",\n      \"country\": \"DE\",\n      \"lat\": 54.0887,\n      \"long\": 12.14049,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2847736\": {\n      \"name\": \"Reutlingen\",\n      \"country\": \"DE\",\n      \"lat\": 48.49144,\n      \"long\": 9.20427,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2848273\": {\n      \"name\": \"Remscheid\",\n      \"country\": \"DE\",\n      \"lat\": 51.17983,\n      \"long\": 7.1925,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2849483\": {\n      \"name\": \"Regensburg\",\n      \"country\": \"DE\",\n      \"lat\": 49.03451,\n      \"long\": 12.11923,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2849647\": {\n      \"name\": \"Recklinghausen\",\n      \"country\": \"DE\",\n      \"lat\": 51.61379,\n      \"long\": 7.19738,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2852217\": {\n      \"name\": \"Prenzlauer Berg\",\n      \"country\": \"DE\",\n      \"lat\": 52.53878,\n      \"long\": 13.42443,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2852458\": {\n      \"name\": \"Potsdam\",\n      \"country\": \"DE\",\n      \"lat\": 52.39886,\n      \"long\": 13.06566,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2853969\": {\n      \"name\": \"Pforzheim\",\n      \"country\": \"DE\",\n      \"lat\": 48.88436,\n      \"long\": 8.69892,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2855745\": {\n      \"name\": \"Paderborn\",\n      \"country\": \"DE\",\n      \"lat\": 51.71905,\n      \"long\": 8.75439,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2856883\": {\n      \"name\": \"Osnabrück\",\n      \"country\": \"DE\",\n      \"lat\": 52.27264,\n      \"long\": 8.0498,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2857458\": {\n      \"name\": \"Oldenburg\",\n      \"country\": \"DE\",\n      \"lat\": 53.14118,\n      \"long\": 8.21467,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2857807\": {\n      \"name\": \"Offenbach\",\n      \"country\": \"DE\",\n      \"lat\": 50.10061,\n      \"long\": 8.76647,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2860410\": {\n      \"name\": \"Oberhausen\",\n      \"country\": \"DE\",\n      \"lat\": 51.47311,\n      \"long\": 6.88074,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2861650\": {\n      \"name\": \"Nürnberg\",\n      \"country\": \"DE\",\n      \"lat\": 49.45421,\n      \"long\": 11.07752,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2862375\": {\n      \"name\": \"Nippes\",\n      \"country\": \"DE\",\n      \"lat\": 50.96545,\n      \"long\": 6.95314,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2864072\": {\n      \"name\": \"Neue Neustadt\",\n      \"country\": \"DE\",\n      \"lat\": 52.15,\n      \"long\": 11.63333,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2864118\": {\n      \"name\": \"Neuss\",\n      \"country\": \"DE\",\n      \"lat\": 51.19807,\n      \"long\": 6.68504,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2867543\": {\n      \"name\": \"Münster\",\n      \"country\": \"DE\",\n      \"lat\": 51.96236,\n      \"long\": 7.62571,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2867714\": {\n      \"name\": \"Munich\",\n      \"country\": \"DE\",\n      \"lat\": 48.13743,\n      \"long\": 11.57549,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2867838\": {\n      \"name\": \"Mülheim (Ruhr)\",\n      \"country\": \"DE\",\n      \"lat\": 51.43333,\n      \"long\": 6.88333,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2869894\": {\n      \"name\": \"Mönchengladbach\",\n      \"country\": \"DE\",\n      \"lat\": 51.18539,\n      \"long\": 6.44172,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2870221\": {\n      \"name\": \"Moers\",\n      \"country\": \"DE\",\n      \"lat\": 51.45342,\n      \"long\": 6.6326,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2873074\": {\n      \"name\": \"Marzahn\",\n      \"country\": \"DE\",\n      \"lat\": 52.54525,\n      \"long\": 13.56983,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2873891\": {\n      \"name\": \"Mannheim\",\n      \"country\": \"DE\",\n      \"lat\": 49.49671,\n      \"long\": 8.47955,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2874225\": {\n      \"name\": \"Mainz\",\n      \"country\": \"DE\",\n      \"lat\": 49.98419,\n      \"long\": 8.2791,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2874545\": {\n      \"name\": \"Magdeburg\",\n      \"country\": \"DE\",\n      \"lat\": 52.12773,\n      \"long\": 11.62916,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2875376\": {\n      \"name\": \"Ludwigshafen am Rhein\",\n      \"country\": \"DE\",\n      \"lat\": 49.48121,\n      \"long\": 8.44641,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2875601\": {\n      \"name\": \"Lübeck\",\n      \"country\": \"DE\",\n      \"lat\": 53.86893,\n      \"long\": 10.68729,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2878234\": {\n      \"name\": \"Leverkusen\",\n      \"country\": \"DE\",\n      \"lat\": 51.0303,\n      \"long\": 6.98432,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2879139\": {\n      \"name\": \"Leipzig\",\n      \"country\": \"DE\",\n      \"lat\": 51.33962,\n      \"long\": 12.37129,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2884161\": {\n      \"name\": \"Kreuzberg\",\n      \"country\": \"DE\",\n      \"lat\": 52.49973,\n      \"long\": 13.40338,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2884509\": {\n      \"name\": \"Krefeld\",\n      \"country\": \"DE\",\n      \"lat\": 51.33921,\n      \"long\": 6.58615,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2886242\": {\n      \"name\": \"Köln\",\n      \"country\": \"DE\",\n      \"lat\": 50.93333,\n      \"long\": 6.95,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2886946\": {\n      \"name\": \"Koblenz\",\n      \"country\": \"DE\",\n      \"lat\": 50.35357,\n      \"long\": 7.57883,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2891122\": {\n      \"name\": \"Kiel\",\n      \"country\": \"DE\",\n      \"lat\": 54.32133,\n      \"long\": 10.13489,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2892518\": {\n      \"name\": \"Kassel\",\n      \"country\": \"DE\",\n      \"lat\": 51.31667,\n      \"long\": 9.5,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2892794\": {\n      \"name\": \"Karlsruhe\",\n      \"country\": \"DE\",\n      \"lat\": 49.00937,\n      \"long\": 8.40444,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2895044\": {\n      \"name\": \"Jena\",\n      \"country\": \"DE\",\n      \"lat\": 50.92878,\n      \"long\": 11.5899,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2895992\": {\n      \"name\": \"Ingolstadt\",\n      \"country\": \"DE\",\n      \"lat\": 48.76508,\n      \"long\": 11.42372,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2904789\": {\n      \"name\": \"Hildesheim\",\n      \"country\": \"DE\",\n      \"lat\": 52.15077,\n      \"long\": 9.95112,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2905891\": {\n      \"name\": \"Herne\",\n      \"country\": \"DE\",\n      \"lat\": 51.5388,\n      \"long\": 7.22572,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2907669\": {\n      \"name\": \"Heilbronn\",\n      \"country\": \"DE\",\n      \"lat\": 49.13995,\n      \"long\": 9.22054,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2907911\": {\n      \"name\": \"Heidelberg\",\n      \"country\": \"DE\",\n      \"lat\": 49.40768,\n      \"long\": 8.69079,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2910685\": {\n      \"name\": \"Harburg\",\n      \"country\": \"DE\",\n      \"lat\": 53.46057,\n      \"long\": 9.98388,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2910831\": {\n      \"name\": \"Hannover\",\n      \"country\": \"DE\",\n      \"lat\": 52.37052,\n      \"long\": 9.73322,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2911240\": {\n      \"name\": \"Hamm\",\n      \"country\": \"DE\",\n      \"lat\": 51.68033,\n      \"long\": 7.82089,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2911285\": {\n      \"name\": \"Wandsbek\",\n      \"country\": \"DE\",\n      \"lat\": 53.56667,\n      \"long\": 10.1,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2911287\": {\n      \"name\": \"Marienthal\",\n      \"country\": \"DE\",\n      \"lat\": 53.56667,\n      \"long\": 10.08333,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2911288\": {\n      \"name\": \"Hamburg-Mitte\",\n      \"country\": \"DE\",\n      \"lat\": 53.55,\n      \"long\": 10.01667,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2911293\": {\n      \"name\": \"Eimsbüttel\",\n      \"country\": \"DE\",\n      \"lat\": 53.56667,\n      \"long\": 9.98333,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2911296\": {\n      \"name\": \"Altona\",\n      \"country\": \"DE\",\n      \"lat\": 53.55,\n      \"long\": 9.93333,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2911298\": {\n      \"name\": \"Hamburg\",\n      \"country\": \"DE\",\n      \"lat\": 53.57532,\n      \"long\": 10.01534,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2911522\": {\n      \"name\": \"Halle (Saale)\",\n      \"country\": \"DE\",\n      \"lat\": 51.5,\n      \"long\": 12,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2912621\": {\n      \"name\": \"Hagen\",\n      \"country\": \"DE\",\n      \"lat\": 51.36081,\n      \"long\": 7.47168,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2918632\": {\n      \"name\": \"Göttingen\",\n      \"country\": \"DE\",\n      \"lat\": 51.53443,\n      \"long\": 9.93228,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2921232\": {\n      \"name\": \"Gera\",\n      \"country\": \"DE\",\n      \"lat\": 50.88029,\n      \"long\": 12.08187,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2921466\": {\n      \"name\": \"Gelsenkirchen\",\n      \"country\": \"DE\",\n      \"lat\": 51.5075,\n      \"long\": 7.12283,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2923544\": {\n      \"name\": \"Fürth\",\n      \"country\": \"DE\",\n      \"lat\": 49.47593,\n      \"long\": 10.98856,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2924573\": {\n      \"name\": \"Friedrichshain\",\n      \"country\": \"DE\",\n      \"lat\": 52.51559,\n      \"long\": 13.45482,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2925177\": {\n      \"name\": \"Freiburg\",\n      \"country\": \"DE\",\n      \"lat\": 47.9959,\n      \"long\": 7.85222,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2925533\": {\n      \"name\": \"Frankfurt am Main\",\n      \"country\": \"DE\",\n      \"lat\": 50.11552,\n      \"long\": 8.68417,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2928810\": {\n      \"name\": \"Essen\",\n      \"country\": \"DE\",\n      \"lat\": 51.45657,\n      \"long\": 7.01228,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2929567\": {\n      \"name\": \"Erlangen\",\n      \"country\": \"DE\",\n      \"lat\": 49.59099,\n      \"long\": 11.00783,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2929670\": {\n      \"name\": \"Erfurt\",\n      \"country\": \"DE\",\n      \"lat\": 50.9787,\n      \"long\": 11.03283,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2934246\": {\n      \"name\": \"Düsseldorf\",\n      \"country\": \"DE\",\n      \"lat\": 51.22172,\n      \"long\": 6.77616,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2934691\": {\n      \"name\": \"Duisburg\",\n      \"country\": \"DE\",\n      \"lat\": 51.43247,\n      \"long\": 6.76516,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2935022\": {\n      \"name\": \"Dresden\",\n      \"country\": \"DE\",\n      \"lat\": 51.05089,\n      \"long\": 13.73832,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2935517\": {\n      \"name\": \"Dortmund\",\n      \"country\": \"DE\",\n      \"lat\": 51.51494,\n      \"long\": 7.466,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2938913\": {\n      \"name\": \"Darmstadt\",\n      \"country\": \"DE\",\n      \"lat\": 49.87167,\n      \"long\": 8.65027,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2940132\": {\n      \"name\": \"Chemnitz\",\n      \"country\": \"DE\",\n      \"lat\": 50.8357,\n      \"long\": 12.92922,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2940187\": {\n      \"name\": \"Charlottenburg\",\n      \"country\": \"DE\",\n      \"lat\": 52.51667,\n      \"long\": 13.28333,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2944368\": {\n      \"name\": \"Bremerhaven\",\n      \"country\": \"DE\",\n      \"lat\": 53.55021,\n      \"long\": 8.57673,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2944388\": {\n      \"name\": \"Bremen\",\n      \"country\": \"DE\",\n      \"lat\": 53.07516,\n      \"long\": 8.80777,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2945024\": {\n      \"name\": \"Braunschweig\",\n      \"country\": \"DE\",\n      \"lat\": 52.26594,\n      \"long\": 10.52673,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2945756\": {\n      \"name\": \"Bottrop\",\n      \"country\": \"DE\",\n      \"lat\": 51.52392,\n      \"long\": 6.9285,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2946447\": {\n      \"name\": \"Bonn\",\n      \"country\": \"DE\",\n      \"lat\": 50.73438,\n      \"long\": 7.09549,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2947416\": {\n      \"name\": \"Bochum\",\n      \"country\": \"DE\",\n      \"lat\": 51.48165,\n      \"long\": 7.21648,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2949186\": {\n      \"name\": \"Bielefeld\",\n      \"country\": \"DE\",\n      \"lat\": 52.03333,\n      \"long\": 8.53333,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2950159\": {\n      \"name\": \"Berlin\",\n      \"country\": \"DE\",\n      \"lat\": 52.52437,\n      \"long\": 13.41053,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2950349\": {\n      \"name\": \"Bergisch Gladbach\",\n      \"country\": \"DE\",\n      \"lat\": 50.9856,\n      \"long\": 7.13298,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2954172\": {\n      \"name\": \"Augsburg\",\n      \"country\": \"DE\",\n      \"lat\": 48.37154,\n      \"long\": 10.89851,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"2964506\": {\n      \"name\": \"Dún Laoghaire\",\n      \"country\": \"IE\",\n      \"lat\": 53.29395,\n      \"long\": -6.13586,\n      \"zone\": \"Europe/Dublin\"\n    },\n    \"2964574\": {\n      \"name\": \"Dublin\",\n      \"country\": \"IE\",\n      \"lat\": 53.33306,\n      \"long\": -6.24889,\n      \"zone\": \"Europe/Dublin\"\n    },\n    \"2965140\": {\n      \"name\": \"Cork\",\n      \"country\": \"IE\",\n      \"lat\": 51.89797,\n      \"long\": -8.47061,\n      \"zone\": \"Europe/Dublin\"\n    },\n    \"2968254\": {\n      \"name\": \"Villeurbanne\",\n      \"country\": \"FR\",\n      \"lat\": 45.76667,\n      \"long\": 4.88333,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"2972191\": {\n      \"name\": \"Tours\",\n      \"country\": \"FR\",\n      \"lat\": 47.38333,\n      \"long\": 0.68333,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"2972315\": {\n      \"name\": \"Toulouse\",\n      \"country\": \"FR\",\n      \"lat\": 43.60426,\n      \"long\": 1.44367,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"2972328\": {\n      \"name\": \"Toulon\",\n      \"country\": \"FR\",\n      \"lat\": 43.11667,\n      \"long\": 5.93333,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"2973783\": {\n      \"name\": \"Strasbourg\",\n      \"country\": \"FR\",\n      \"lat\": 48.58392,\n      \"long\": 7.74553,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"2980291\": {\n      \"name\": \"Saint-Étienne\",\n      \"country\": \"FR\",\n      \"lat\": 45.43389,\n      \"long\": 4.39,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"2982652\": {\n      \"name\": \"Rouen\",\n      \"country\": \"FR\",\n      \"lat\": 49.44313,\n      \"long\": 1.09932,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"2983990\": {\n      \"name\": \"Rennes\",\n      \"country\": \"FR\",\n      \"lat\": 48.11198,\n      \"long\": -1.67429,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"2984114\": {\n      \"name\": \"Reims\",\n      \"country\": \"FR\",\n      \"lat\": 49.25,\n      \"long\": 4.03333,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"2987914\": {\n      \"name\": \"Perpignan\",\n      \"country\": \"FR\",\n      \"lat\": 42.69764,\n      \"long\": 2.89541,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"2988507\": {\n      \"name\": \"Paris\",\n      \"country\": \"FR\",\n      \"lat\": 48.85341,\n      \"long\": 2.3488,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"2989317\": {\n      \"name\": \"Orléans\",\n      \"country\": \"FR\",\n      \"lat\": 47.90289,\n      \"long\": 1.90389,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"2990363\": {\n      \"name\": \"Nîmes\",\n      \"country\": \"FR\",\n      \"lat\": 43.83333,\n      \"long\": 4.35,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"2990440\": {\n      \"name\": \"Nice\",\n      \"country\": \"FR\",\n      \"lat\": 43.70313,\n      \"long\": 7.26608,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"2990969\": {\n      \"name\": \"Nantes\",\n      \"country\": \"FR\",\n      \"lat\": 47.21725,\n      \"long\": -1.55336,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"2990999\": {\n      \"name\": \"Nancy\",\n      \"country\": \"FR\",\n      \"lat\": 48.68439,\n      \"long\": 6.18496,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"2991214\": {\n      \"name\": \"Mulhouse\",\n      \"country\": \"FR\",\n      \"lat\": 47.75,\n      \"long\": 7.33333,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"2992166\": {\n      \"name\": \"Montpellier\",\n      \"country\": \"FR\",\n      \"lat\": 43.61092,\n      \"long\": 3.87723,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"2994160\": {\n      \"name\": \"Metz\",\n      \"country\": \"FR\",\n      \"lat\": 49.11911,\n      \"long\": 6.17269,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"2995469\": {\n      \"name\": \"Marseille\",\n      \"country\": \"FR\",\n      \"lat\": 43.29695,\n      \"long\": 5.38107,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"2996944\": {\n      \"name\": \"Lyon\",\n      \"country\": \"FR\",\n      \"lat\": 45.74846,\n      \"long\": 4.84671,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"2998286\": {\n      \"name\": \"Limoges\",\n      \"country\": \"FR\",\n      \"lat\": 45.83153,\n      \"long\": 1.25781,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"2998324\": {\n      \"name\": \"Lille\",\n      \"country\": \"FR\",\n      \"lat\": 50.63297,\n      \"long\": 3.05858,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"3003603\": {\n      \"name\": \"Le Mans\",\n      \"country\": \"FR\",\n      \"lat\": 48,\n      \"long\": 0.2,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"3003796\": {\n      \"name\": \"Le Havre\",\n      \"country\": \"FR\",\n      \"lat\": 49.4938,\n      \"long\": 0.10767,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"3014728\": {\n      \"name\": \"Grenoble\",\n      \"country\": \"FR\",\n      \"lat\": 45.16667,\n      \"long\": 5.71667,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"3021372\": {\n      \"name\": \"Dijon\",\n      \"country\": \"FR\",\n      \"lat\": 47.31667,\n      \"long\": 5.01667,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"3024635\": {\n      \"name\": \"Clermont-Ferrand\",\n      \"country\": \"FR\",\n      \"lat\": 45.77966,\n      \"long\": 3.08628,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"3029241\": {\n      \"name\": \"Caen\",\n      \"country\": \"FR\",\n      \"lat\": 49.18585,\n      \"long\": -0.35912,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"3030300\": {\n      \"name\": \"Brest\",\n      \"country\": \"FR\",\n      \"lat\": 48.4,\n      \"long\": -4.48333,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"3031137\": {\n      \"name\": \"Boulogne-Billancourt\",\n      \"country\": \"FR\",\n      \"lat\": 48.83333,\n      \"long\": 2.25,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"3031582\": {\n      \"name\": \"Bordeaux\",\n      \"country\": \"FR\",\n      \"lat\": 44.84044,\n      \"long\": -0.5805,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"3033123\": {\n      \"name\": \"Besançon\",\n      \"country\": \"FR\",\n      \"lat\": 47.24878,\n      \"long\": 6.01815,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"3037044\": {\n      \"name\": \"Argenteuil\",\n      \"country\": \"FR\",\n      \"lat\": 48.95,\n      \"long\": 2.25,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"3037656\": {\n      \"name\": \"Angers\",\n      \"country\": \"FR\",\n      \"lat\": 47.46667,\n      \"long\": -0.55,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"3037854\": {\n      \"name\": \"Amiens\",\n      \"country\": \"FR\",\n      \"lat\": 49.9,\n      \"long\": 2.3,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"3038354\": {\n      \"name\": \"Aix-en-Provence\",\n      \"country\": \"FR\",\n      \"lat\": 43.5283,\n      \"long\": 5.44973,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"3044774\": {\n      \"name\": \"Székesfehérvár\",\n      \"country\": \"HU\",\n      \"lat\": 47.18995,\n      \"long\": 18.41034,\n      \"zone\": \"Europe/Budapest\"\n    },\n    \"3046526\": {\n      \"name\": \"Pécs\",\n      \"country\": \"HU\",\n      \"lat\": 46.08333,\n      \"long\": 18.23333,\n      \"zone\": \"Europe/Budapest\"\n    },\n    \"3050434\": {\n      \"name\": \"Kecskemét\",\n      \"country\": \"HU\",\n      \"lat\": 46.90618,\n      \"long\": 19.69128,\n      \"zone\": \"Europe/Budapest\"\n    },\n    \"3052009\": {\n      \"name\": \"Győr\",\n      \"country\": \"HU\",\n      \"lat\": 47.68333,\n      \"long\": 17.63512,\n      \"zone\": \"Europe/Budapest\"\n    },\n    \"3054643\": {\n      \"name\": \"Budapest\",\n      \"country\": \"HU\",\n      \"lat\": 47.49801,\n      \"long\": 19.03991,\n      \"zone\": \"Europe/Budapest\"\n    },\n    \"3060972\": {\n      \"name\": \"Bratislava\",\n      \"country\": \"SK\",\n      \"lat\": 48.14816,\n      \"long\": 17.10674,\n      \"zone\": \"Europe/Bratislava\"\n    },\n    \"3067696\": {\n      \"name\": \"Prague\",\n      \"country\": \"CZ\",\n      \"lat\": 50.08804,\n      \"long\": 14.42076,\n      \"zone\": \"Europe/Prague\"\n    },\n    \"3068160\": {\n      \"name\": \"Pilsen\",\n      \"country\": \"CZ\",\n      \"lat\": 49.74747,\n      \"long\": 13.37759,\n      \"zone\": \"Europe/Prague\"\n    },\n    \"3068799\": {\n      \"name\": \"Ostrava\",\n      \"country\": \"CZ\",\n      \"lat\": 49.83465,\n      \"long\": 18.28204,\n      \"zone\": \"Europe/Prague\"\n    },\n    \"3069011\": {\n      \"name\": \"Olomouc\",\n      \"country\": \"CZ\",\n      \"lat\": 49.59552,\n      \"long\": 17.25175,\n      \"zone\": \"Europe/Prague\"\n    },\n    \"3078610\": {\n      \"name\": \"Brno\",\n      \"country\": \"CZ\",\n      \"lat\": 49.19522,\n      \"long\": 16.60796,\n      \"zone\": \"Europe/Prague\"\n    },\n    \"3080165\": {\n      \"name\": \"Zielona Góra\",\n      \"country\": \"PL\",\n      \"lat\": 51.93548,\n      \"long\": 15.50643,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3080985\": {\n      \"name\": \"Zabrze\",\n      \"country\": \"PL\",\n      \"lat\": 50.32492,\n      \"long\": 18.78576,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3081368\": {\n      \"name\": \"Wrocław\",\n      \"country\": \"PL\",\n      \"lat\": 51.1,\n      \"long\": 17.03333,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3081741\": {\n      \"name\": \"Włocławek\",\n      \"country\": \"PL\",\n      \"lat\": 52.64817,\n      \"long\": 19.0678,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3082707\": {\n      \"name\": \"Wałbrzych\",\n      \"country\": \"PL\",\n      \"lat\": 50.77141,\n      \"long\": 16.28432,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3082914\": {\n      \"name\": \"Tychy\",\n      \"country\": \"PL\",\n      \"lat\": 50.13717,\n      \"long\": 18.96641,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3083271\": {\n      \"name\": \"Toruń\",\n      \"country\": \"PL\",\n      \"lat\": 53.01375,\n      \"long\": 18.59814,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3083829\": {\n      \"name\": \"Szczecin\",\n      \"country\": \"PL\",\n      \"lat\": 53.42894,\n      \"long\": 14.55302,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3085128\": {\n      \"name\": \"Sosnowiec\",\n      \"country\": \"PL\",\n      \"lat\": 50.28682,\n      \"long\": 19.10385,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3086586\": {\n      \"name\": \"Rybnik\",\n      \"country\": \"PL\",\n      \"lat\": 50.09713,\n      \"long\": 18.54179,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3086800\": {\n      \"name\": \"Ruda Śląska\",\n      \"country\": \"PL\",\n      \"lat\": 50.2584,\n      \"long\": 18.85632,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3088171\": {\n      \"name\": \"Poznań\",\n      \"country\": \"PL\",\n      \"lat\": 52.40692,\n      \"long\": 16.92993,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3088825\": {\n      \"name\": \"Płock\",\n      \"country\": \"PL\",\n      \"lat\": 52.54682,\n      \"long\": 19.70638,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3090048\": {\n      \"name\": \"Opole\",\n      \"country\": \"PL\",\n      \"lat\": 50.67211,\n      \"long\": 17.92533,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3093133\": {\n      \"name\": \"Łódź\",\n      \"country\": \"PL\",\n      \"lat\": 51.75,\n      \"long\": 19.46667,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3093692\": {\n      \"name\": \"Legnica\",\n      \"country\": \"PL\",\n      \"lat\": 51.21006,\n      \"long\": 16.1619,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3094802\": {\n      \"name\": \"Kraków\",\n      \"country\": \"PL\",\n      \"lat\": 50.06143,\n      \"long\": 19.93658,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3095049\": {\n      \"name\": \"Koszalin\",\n      \"country\": \"PL\",\n      \"lat\": 54.19438,\n      \"long\": 16.17222,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3096472\": {\n      \"name\": \"Katowice\",\n      \"country\": \"PL\",\n      \"lat\": 50.25841,\n      \"long\": 19.02754,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3096880\": {\n      \"name\": \"Kalisz\",\n      \"country\": \"PL\",\n      \"lat\": 51.76109,\n      \"long\": 18.09102,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3098722\": {\n      \"name\": \"Gorzów Wielkopolski\",\n      \"country\": \"PL\",\n      \"lat\": 52.73679,\n      \"long\": 15.22878,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3099230\": {\n      \"name\": \"Gliwice\",\n      \"country\": \"PL\",\n      \"lat\": 50.29761,\n      \"long\": 18.67658,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3099424\": {\n      \"name\": \"Gdynia\",\n      \"country\": \"PL\",\n      \"lat\": 54.51889,\n      \"long\": 18.53188,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3099434\": {\n      \"name\": \"Gdańsk\",\n      \"country\": \"PL\",\n      \"lat\": 54.35205,\n      \"long\": 18.64637,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3099759\": {\n      \"name\": \"Elbląg\",\n      \"country\": \"PL\",\n      \"lat\": 54.1522,\n      \"long\": 19.40884,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3100796\": {\n      \"name\": \"Dąbrowa Górnicza\",\n      \"country\": \"PL\",\n      \"lat\": 50.31818,\n      \"long\": 19.2374,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3100946\": {\n      \"name\": \"Częstochowa\",\n      \"country\": \"PL\",\n      \"lat\": 50.79646,\n      \"long\": 19.12409,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3101619\": {\n      \"name\": \"Chorzów\",\n      \"country\": \"PL\",\n      \"lat\": 50.30582,\n      \"long\": 18.9742,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3101950\": {\n      \"name\": \"Bytom\",\n      \"country\": \"PL\",\n      \"lat\": 50.34802,\n      \"long\": 18.93282,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3102014\": {\n      \"name\": \"Bydgoszcz\",\n      \"country\": \"PL\",\n      \"lat\": 53.1235,\n      \"long\": 18.00762,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3103402\": {\n      \"name\": \"Bielsko-Biala\",\n      \"country\": \"PL\",\n      \"lat\": 49.82245,\n      \"long\": 19.04686,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"3104324\": {\n      \"name\": \"Zaragoza\",\n      \"country\": \"ES\",\n      \"lat\": 41.65606,\n      \"long\": -0.87734,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3104499\": {\n      \"name\": \"Gasteiz / Vitoria\",\n      \"country\": \"ES\",\n      \"lat\": 42.84998,\n      \"long\": -2.67268,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3104748\": {\n      \"name\": \"Villaverde\",\n      \"country\": \"ES\",\n      \"lat\": 40.35,\n      \"long\": -3.7,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3105976\": {\n      \"name\": \"Vigo\",\n      \"country\": \"ES\",\n      \"lat\": 42.23282,\n      \"long\": -8.72264,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3106672\": {\n      \"name\": \"Valladolid\",\n      \"country\": \"ES\",\n      \"lat\": 41.65518,\n      \"long\": -4.72372,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3107784\": {\n      \"name\": \"Torrejón de Ardoz\",\n      \"country\": \"ES\",\n      \"lat\": 40.45535,\n      \"long\": -3.46973,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3108118\": {\n      \"name\": \"Tetuán de las Victorias\",\n      \"country\": \"ES\",\n      \"lat\": 40.46667,\n      \"long\": -3.71667,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3108286\": {\n      \"name\": \"Terrassa\",\n      \"country\": \"ES\",\n      \"lat\": 41.56667,\n      \"long\": 2.01667,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3108288\": {\n      \"name\": \"Tarragona\",\n      \"country\": \"ES\",\n      \"lat\": 41.11667,\n      \"long\": 1.25,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3109718\": {\n      \"name\": \"Santander\",\n      \"country\": \"ES\",\n      \"lat\": 43.46472,\n      \"long\": -3.80444,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3109981\": {\n      \"name\": \"Santa Coloma de Gramenet\",\n      \"country\": \"ES\",\n      \"lat\": 41.45152,\n      \"long\": 2.2081,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3110044\": {\n      \"name\": \"Donostia / San Sebastián\",\n      \"country\": \"ES\",\n      \"lat\": 43.31283,\n      \"long\": -1.97499,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3110876\": {\n      \"name\": \"Sant Andreu de Palomar\",\n      \"country\": \"ES\",\n      \"lat\": 41.43541,\n      \"long\": 2.18982,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3111108\": {\n      \"name\": \"Salamanca\",\n      \"country\": \"ES\",\n      \"lat\": 40.96882,\n      \"long\": -5.66388,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3111199\": {\n      \"name\": \"Sabadell\",\n      \"country\": \"ES\",\n      \"lat\": 41.54329,\n      \"long\": 2.10942,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3111933\": {\n      \"name\": \"Reus\",\n      \"country\": \"ES\",\n      \"lat\": 41.15612,\n      \"long\": 1.10687,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3112737\": {\n      \"name\": \"Puente de Vallecas\",\n      \"country\": \"ES\",\n      \"lat\": 40.39354,\n      \"long\": -3.662,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3114256\": {\n      \"name\": \"Parla\",\n      \"country\": \"ES\",\n      \"lat\": 40.23604,\n      \"long\": -3.76752,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3114472\": {\n      \"name\": \"Pamplona\",\n      \"country\": \"ES\",\n      \"lat\": 42.81687,\n      \"long\": -1.64323,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3114711\": {\n      \"name\": \"Oviedo\",\n      \"country\": \"ES\",\n      \"lat\": 43.36029,\n      \"long\": -5.84476,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3114965\": {\n      \"name\": \"Ourense\",\n      \"country\": \"ES\",\n      \"lat\": 42.33669,\n      \"long\": -7.86407,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3116025\": {\n      \"name\": \"Móstoles\",\n      \"country\": \"ES\",\n      \"lat\": 40.32234,\n      \"long\": -3.86496,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3116156\": {\n      \"name\": \"Moratalaz\",\n      \"country\": \"ES\",\n      \"lat\": 40.41667,\n      \"long\": -3.65,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3117164\": {\n      \"name\": \"Mataró\",\n      \"country\": \"ES\",\n      \"lat\": 41.54211,\n      \"long\": 2.4445,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3117735\": {\n      \"name\": \"Madrid\",\n      \"country\": \"ES\",\n      \"lat\": 40.4165,\n      \"long\": -3.70256,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3118150\": {\n      \"name\": \"Logroño\",\n      \"country\": \"ES\",\n      \"lat\": 42.46667,\n      \"long\": -2.45,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3118514\": {\n      \"name\": \"Lleida\",\n      \"country\": \"ES\",\n      \"lat\": 41.61674,\n      \"long\": 0.62218,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3118532\": {\n      \"name\": \"León\",\n      \"country\": \"ES\",\n      \"lat\": 42.60003,\n      \"long\": -5.57032,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3118594\": {\n      \"name\": \"Leganés\",\n      \"country\": \"ES\",\n      \"lat\": 40.32718,\n      \"long\": -3.7635,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3119841\": {\n      \"name\": \"A Coruña\",\n      \"country\": \"ES\",\n      \"lat\": 43.37135,\n      \"long\": -8.396,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3120619\": {\n      \"name\": \"L'Hospitalet de Llobregat\",\n      \"country\": \"ES\",\n      \"lat\": 41.35967,\n      \"long\": 2.10028,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3120635\": {\n      \"name\": \"Hortaleza\",\n      \"country\": \"ES\",\n      \"lat\": 40.47444,\n      \"long\": -3.6411,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3121245\": {\n      \"name\": \"Gràcia\",\n      \"country\": \"ES\",\n      \"lat\": 41.40237,\n      \"long\": 2.15641,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3121424\": {\n      \"name\": \"Gijón\",\n      \"country\": \"ES\",\n      \"lat\": 43.53573,\n      \"long\": -5.66152,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3121437\": {\n      \"name\": \"Getafe\",\n      \"country\": \"ES\",\n      \"lat\": 40.30571,\n      \"long\": -3.73295,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3121960\": {\n      \"name\": \"Fuenlabrada\",\n      \"country\": \"ES\",\n      \"lat\": 40.28419,\n      \"long\": -3.79415,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3124964\": {\n      \"name\": \"Ciudad Lineal\",\n      \"country\": \"ES\",\n      \"lat\": 40.45455,\n      \"long\": -3.64808,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3125239\": {\n      \"name\": \"Chamartín\",\n      \"country\": \"ES\",\n      \"lat\": 40.46206,\n      \"long\": -3.6766,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3127461\": {\n      \"name\": \"Burgos\",\n      \"country\": \"ES\",\n      \"lat\": 42.35022,\n      \"long\": -3.67527,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3128026\": {\n      \"name\": \"Bilbao\",\n      \"country\": \"ES\",\n      \"lat\": 43.26271,\n      \"long\": -2.92528,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3128760\": {\n      \"name\": \"Barcelona\",\n      \"country\": \"ES\",\n      \"lat\": 41.38879,\n      \"long\": 2.15899,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3129028\": {\n      \"name\": \"Badalona\",\n      \"country\": \"ES\",\n      \"lat\": 41.45004,\n      \"long\": 2.24741,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3130564\": {\n      \"name\": \"Alcorcón\",\n      \"country\": \"ES\",\n      \"lat\": 40.34582,\n      \"long\": -3.82487,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3130583\": {\n      \"name\": \"Alcobendas\",\n      \"country\": \"ES\",\n      \"lat\": 40.54746,\n      \"long\": -3.64197,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3130616\": {\n      \"name\": \"Alcalá de Henares\",\n      \"country\": \"ES\",\n      \"lat\": 40.48205,\n      \"long\": -3.35996,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"3133880\": {\n      \"name\": \"Trondheim\",\n      \"country\": \"NO\",\n      \"lat\": 63.43049,\n      \"long\": 10.39506,\n      \"zone\": \"Europe/Oslo\"\n    },\n    \"3137115\": {\n      \"name\": \"Stavanger\",\n      \"country\": \"NO\",\n      \"lat\": 58.97005,\n      \"long\": 5.73332,\n      \"zone\": \"Europe/Oslo\"\n    },\n    \"3143244\": {\n      \"name\": \"Oslo\",\n      \"country\": \"NO\",\n      \"lat\": 59.91273,\n      \"long\": 10.74609,\n      \"zone\": \"Europe/Oslo\"\n    },\n    \"3161732\": {\n      \"name\": \"Bergen\",\n      \"country\": \"NO\",\n      \"lat\": 60.39299,\n      \"long\": 5.32415,\n      \"zone\": \"Europe/Oslo\"\n    },\n    \"3164419\": {\n      \"name\": \"Vicenza\",\n      \"country\": \"IT\",\n      \"lat\": 45.54672,\n      \"long\": 11.5475,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3164527\": {\n      \"name\": \"Verona\",\n      \"country\": \"IT\",\n      \"lat\": 45.4299,\n      \"long\": 10.98444,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3165185\": {\n      \"name\": \"Trieste\",\n      \"country\": \"IT\",\n      \"lat\": 45.64325,\n      \"long\": 13.7903,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3165524\": {\n      \"name\": \"Turin\",\n      \"country\": \"IT\",\n      \"lat\": 45.07049,\n      \"long\": 7.68682,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3165926\": {\n      \"name\": \"Taranto\",\n      \"country\": \"IT\",\n      \"lat\": 40.41639,\n      \"long\": 17.25478,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3168673\": {\n      \"name\": \"Salerno\",\n      \"country\": \"IT\",\n      \"lat\": 40.67545,\n      \"long\": 14.79328,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3169070\": {\n      \"name\": \"Rome\",\n      \"country\": \"IT\",\n      \"lat\": 41.89193,\n      \"long\": 12.51133,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3169361\": {\n      \"name\": \"Rimini\",\n      \"country\": \"IT\",\n      \"lat\": 44.05755,\n      \"long\": 12.56528,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3169522\": {\n      \"name\": \"Reggio nell'Emilia\",\n      \"country\": \"IT\",\n      \"lat\": 44.69825,\n      \"long\": 10.63125,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3169921\": {\n      \"name\": \"Prato\",\n      \"country\": \"IT\",\n      \"lat\": 43.87309,\n      \"long\": 11.08278,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3171168\": {\n      \"name\": \"Pescara\",\n      \"country\": \"IT\",\n      \"lat\": 42.4584,\n      \"long\": 14.20283,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3171180\": {\n      \"name\": \"Perugia\",\n      \"country\": \"IT\",\n      \"lat\": 43.1122,\n      \"long\": 12.38878,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3171457\": {\n      \"name\": \"Parma\",\n      \"country\": \"IT\",\n      \"lat\": 44.79935,\n      \"long\": 10.32618,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3171728\": {\n      \"name\": \"Padova\",\n      \"country\": \"IT\",\n      \"lat\": 45.40797,\n      \"long\": 11.88586,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3172394\": {\n      \"name\": \"Napoli\",\n      \"country\": \"IT\",\n      \"lat\": 40.85631,\n      \"long\": 14.24641,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3172629\": {\n      \"name\": \"Monza\",\n      \"country\": \"IT\",\n      \"lat\": 45.58005,\n      \"long\": 9.27246,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3173331\": {\n      \"name\": \"Modena\",\n      \"country\": \"IT\",\n      \"lat\": 44.64783,\n      \"long\": 10.92539,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3173435\": {\n      \"name\": \"Milano\",\n      \"country\": \"IT\",\n      \"lat\": 45.46427,\n      \"long\": 9.18951,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3173529\": {\n      \"name\": \"Mestre\",\n      \"country\": \"IT\",\n      \"lat\": 45.47152,\n      \"long\": 12.24017,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3174659\": {\n      \"name\": \"Livorno\",\n      \"country\": \"IT\",\n      \"lat\": 43.54427,\n      \"long\": 10.32615,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3176219\": {\n      \"name\": \"Genoa\",\n      \"country\": \"IT\",\n      \"lat\": 44.4264,\n      \"long\": 8.91519,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3176885\": {\n      \"name\": \"Foggia\",\n      \"country\": \"IT\",\n      \"lat\": 41.45845,\n      \"long\": 15.55188,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3176959\": {\n      \"name\": \"Florence\",\n      \"country\": \"IT\",\n      \"lat\": 43.77925,\n      \"long\": 11.24626,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3181554\": {\n      \"name\": \"Brescia\",\n      \"country\": \"IT\",\n      \"lat\": 45.53558,\n      \"long\": 10.21472,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3181928\": {\n      \"name\": \"Bologna\",\n      \"country\": \"IT\",\n      \"lat\": 44.49381,\n      \"long\": 11.33875,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3182164\": {\n      \"name\": \"Bergamo\",\n      \"country\": \"IT\",\n      \"lat\": 45.69601,\n      \"long\": 9.66721,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3182351\": {\n      \"name\": \"Bari\",\n      \"country\": \"IT\",\n      \"lat\": 41.11148,\n      \"long\": 16.8554,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3183539\": {\n      \"name\": \"Acilia-Castel Fusano-Ostia Antica\",\n      \"country\": \"IT\",\n      \"lat\": 41.76337,\n      \"long\": 12.33078,\n      \"zone\": \"Europe/Rome\"\n    },\n    \"3183875\": {\n      \"name\": \"Tirana\",\n      \"country\": \"AL\",\n      \"lat\": 41.3275,\n      \"long\": 19.81889,\n      \"zone\": \"Europe/Tirane\"\n    },\n    \"3185728\": {\n      \"name\": \"Durrës\",\n      \"country\": \"AL\",\n      \"lat\": 41.32306,\n      \"long\": 19.44139,\n      \"zone\": \"Europe/Tirane\"\n    },\n    \"3186573\": {\n      \"name\": \"Zenica\",\n      \"country\": \"BA\",\n      \"lat\": 44.20169,\n      \"long\": 17.90397,\n      \"zone\": \"Europe/Sarajevo\"\n    },\n    \"3186886\": {\n      \"name\": \"Zagreb\",\n      \"country\": \"HR\",\n      \"lat\": 45.81444,\n      \"long\": 15.97798,\n      \"zone\": \"Europe/Zagreb\"\n    },\n    \"3188582\": {\n      \"name\": \"Tuzla\",\n      \"country\": \"BA\",\n      \"lat\": 44.53842,\n      \"long\": 18.66709,\n      \"zone\": \"Europe/Sarajevo\"\n    },\n    \"3190261\": {\n      \"name\": \"Split\",\n      \"country\": \"HR\",\n      \"lat\": 43.50891,\n      \"long\": 16.43915,\n      \"zone\": \"Europe/Zagreb\"\n    },\n    \"3191281\": {\n      \"name\": \"Sarajevo\",\n      \"country\": \"BA\",\n      \"lat\": 43.84864,\n      \"long\": 18.35644,\n      \"zone\": \"Europe/Sarajevo\"\n    },\n    \"3191648\": {\n      \"name\": \"Rijeka\",\n      \"country\": \"HR\",\n      \"lat\": 45.34306,\n      \"long\": 14.40917,\n      \"zone\": \"Europe/Zagreb\"\n    },\n    \"3193044\": {\n      \"name\": \"Podgorica\",\n      \"country\": \"ME\",\n      \"lat\": 42.44111,\n      \"long\": 19.26361,\n      \"zone\": \"Europe/Podgorica\"\n    },\n    \"3194360\": {\n      \"name\": \"Novi Sad\",\n      \"country\": \"RS\",\n      \"lat\": 45.25167,\n      \"long\": 19.83694,\n      \"zone\": \"Europe/Belgrade\"\n    },\n    \"3194828\": {\n      \"name\": \"Mostar\",\n      \"country\": \"BA\",\n      \"lat\": 43.34333,\n      \"long\": 17.80806,\n      \"zone\": \"Europe/Sarajevo\"\n    },\n    \"3196359\": {\n      \"name\": \"Ljubljana\",\n      \"country\": \"SI\",\n      \"lat\": 46.05108,\n      \"long\": 14.50513,\n      \"zone\": \"Europe/Ljubljana\"\n    },\n    \"3204541\": {\n      \"name\": \"Banja Luka\",\n      \"country\": \"BA\",\n      \"lat\": 44.77583,\n      \"long\": 17.18556,\n      \"zone\": \"Europe/Sarajevo\"\n    },\n    \"3247449\": {\n      \"name\": \"Aachen\",\n      \"country\": \"DE\",\n      \"lat\": 50.77664,\n      \"long\": 6.08342,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"3345439\": {\n      \"name\": \"Telford\",\n      \"country\": \"GB\",\n      \"lat\": 52.67659,\n      \"long\": -2.44926,\n      \"zone\": \"Europe/London\"\n    },\n    \"3347762\": {\n      \"name\": \"Lubango\",\n      \"country\": \"AO\",\n      \"lat\": -14.91717,\n      \"long\": 13.4925,\n      \"zone\": \"Africa/Luanda\"\n    },\n    \"3347939\": {\n      \"name\": \"Lobito\",\n      \"country\": \"AO\",\n      \"lat\": -12.3644,\n      \"long\": 13.53601,\n      \"zone\": \"Africa/Luanda\"\n    },\n    \"3348078\": {\n      \"name\": \"Cuito\",\n      \"country\": \"AO\",\n      \"lat\": -12.38333,\n      \"long\": 16.93333,\n      \"zone\": \"Africa/Luanda\"\n    },\n    \"3348313\": {\n      \"name\": \"Huambo\",\n      \"country\": \"AO\",\n      \"lat\": -12.77611,\n      \"long\": 15.73917,\n      \"zone\": \"Africa/Luanda\"\n    },\n    \"3351663\": {\n      \"name\": \"Benguela\",\n      \"country\": \"AO\",\n      \"lat\": -12.57626,\n      \"long\": 13.40547,\n      \"zone\": \"Africa/Luanda\"\n    },\n    \"3352136\": {\n      \"name\": \"Windhoek\",\n      \"country\": \"NA\",\n      \"lat\": -22.55941,\n      \"long\": 17.08323,\n      \"zone\": \"Africa/Windhoek\"\n    },\n    \"3359041\": {\n      \"name\": \"Worcester\",\n      \"country\": \"ZA\",\n      \"lat\": -33.64651,\n      \"long\": 19.44852,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"3363094\": {\n      \"name\": \"Paarl\",\n      \"country\": \"ZA\",\n      \"lat\": -33.73378,\n      \"long\": 18.97523,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"3369157\": {\n      \"name\": \"Cape Town\",\n      \"country\": \"ZA\",\n      \"lat\": -33.92584,\n      \"long\": 18.42322,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"3374333\": {\n      \"name\": \"Praia\",\n      \"country\": \"CV\",\n      \"lat\": 14.93152,\n      \"long\": -23.51254,\n      \"zone\": \"Atlantic/Cape_Verde\"\n    },\n    \"3378644\": {\n      \"name\": \"Georgetown\",\n      \"country\": \"GY\",\n      \"lat\": 6.80448,\n      \"long\": -58.15527,\n      \"zone\": \"America/Guyana\"\n    },\n    \"3383330\": {\n      \"name\": \"Paramaribo\",\n      \"country\": \"SR\",\n      \"lat\": 5.86638,\n      \"long\": -55.16682,\n      \"zone\": \"America/Paramaribo\"\n    },\n    \"3384987\": {\n      \"name\": \"Vitória de Santo Antão\",\n      \"country\": \"BR\",\n      \"lat\": -8.11806,\n      \"long\": -35.29139,\n      \"zone\": \"America/Recife\"\n    },\n    \"3386361\": {\n      \"name\": \"Timon\",\n      \"country\": \"BR\",\n      \"lat\": -5.09417,\n      \"long\": -42.83667,\n      \"zone\": \"America/Fortaleza\"\n    },\n    \"3386496\": {\n      \"name\": \"Teresina\",\n      \"country\": \"BR\",\n      \"lat\": -5.08917,\n      \"long\": -42.80194,\n      \"zone\": \"America/Fortaleza\"\n    },\n    \"3387296\": {\n      \"name\": \"Sobral\",\n      \"country\": \"BR\",\n      \"lat\": -3.68611,\n      \"long\": -40.34972,\n      \"zone\": \"America/Fortaleza\"\n    },\n    \"3388368\": {\n      \"name\": \"São Luís\",\n      \"country\": \"BR\",\n      \"lat\": -2.52972,\n      \"long\": -44.30278,\n      \"zone\": \"America/Fortaleza\"\n    },\n    \"3389321\": {\n      \"name\": \"Santa Rita\",\n      \"country\": \"BR\",\n      \"lat\": -7.11389,\n      \"long\": -34.97806,\n      \"zone\": \"America/Fortaleza\"\n    },\n    \"3389353\": {\n      \"name\": \"Santarém\",\n      \"country\": \"BR\",\n      \"lat\": -2.44306,\n      \"long\": -54.70833,\n      \"zone\": \"America/Santarem\"\n    },\n    \"3390760\": {\n      \"name\": \"Recife\",\n      \"country\": \"BR\",\n      \"lat\": -8.05389,\n      \"long\": -34.88111,\n      \"zone\": \"America/Recife\"\n    },\n    \"3392242\": {\n      \"name\": \"Petrolina\",\n      \"country\": \"BR\",\n      \"lat\": -9.39861,\n      \"long\": -40.50083,\n      \"zone\": \"America/Recife\"\n    },\n    \"3392740\": {\n      \"name\": \"Paulista\",\n      \"country\": \"BR\",\n      \"lat\": -7.94083,\n      \"long\": -34.87306,\n      \"zone\": \"America/Recife\"\n    },\n    \"3392998\": {\n      \"name\": \"Parnamirim\",\n      \"country\": \"BR\",\n      \"lat\": -5.91556,\n      \"long\": -35.26278,\n      \"zone\": \"America/Fortaleza\"\n    },\n    \"3393001\": {\n      \"name\": \"Parnaíba\",\n      \"country\": \"BR\",\n      \"lat\": -2.90472,\n      \"long\": -41.77667,\n      \"zone\": \"America/Fortaleza\"\n    },\n    \"3393536\": {\n      \"name\": \"Olinda\",\n      \"country\": \"BR\",\n      \"lat\": -8.00889,\n      \"long\": -34.85528,\n      \"zone\": \"America/Recife\"\n    },\n    \"3394023\": {\n      \"name\": \"Natal\",\n      \"country\": \"BR\",\n      \"lat\": -5.795,\n      \"long\": -35.20944,\n      \"zone\": \"America/Fortaleza\"\n    },\n    \"3394682\": {\n      \"name\": \"Mossoró\",\n      \"country\": \"BR\",\n      \"lat\": -5.1875,\n      \"long\": -37.34417,\n      \"zone\": \"America/Fortaleza\"\n    },\n    \"3395473\": {\n      \"name\": \"Maracanaú\",\n      \"country\": \"BR\",\n      \"lat\": -3.87667,\n      \"long\": -38.62556,\n      \"zone\": \"America/Fortaleza\"\n    },\n    \"3395503\": {\n      \"name\": \"Marabá\",\n      \"country\": \"BR\",\n      \"lat\": -5.36861,\n      \"long\": -49.11778,\n      \"zone\": \"America/Belem\"\n    },\n    \"3395981\": {\n      \"name\": \"Maceió\",\n      \"country\": \"BR\",\n      \"lat\": -9.66583,\n      \"long\": -35.73528,\n      \"zone\": \"America/Maceio\"\n    },\n    \"3396016\": {\n      \"name\": \"Macapá\",\n      \"country\": \"BR\",\n      \"lat\": 0.03889,\n      \"long\": -51.06639,\n      \"zone\": \"America/Belem\"\n    },\n    \"3397147\": {\n      \"name\": \"Juazeiro do Norte\",\n      \"country\": \"BR\",\n      \"lat\": -7.21306,\n      \"long\": -39.31528,\n      \"zone\": \"America/Fortaleza\"\n    },\n    \"3397277\": {\n      \"name\": \"João Pessoa\",\n      \"country\": \"BR\",\n      \"lat\": -7.115,\n      \"long\": -34.86306,\n      \"zone\": \"America/Fortaleza\"\n    },\n    \"3397838\": {\n      \"name\": \"Jaboatão\",\n      \"country\": \"BR\",\n      \"lat\": -8.18028,\n      \"long\": -35.00139,\n      \"zone\": \"America/Recife\"\n    },\n    \"3398269\": {\n      \"name\": \"Imperatriz\",\n      \"country\": \"BR\",\n      \"lat\": -5.52639,\n      \"long\": -47.49167,\n      \"zone\": \"America/Fortaleza\"\n    },\n    \"3399058\": {\n      \"name\": \"Garanhuns\",\n      \"country\": \"BR\",\n      \"lat\": -8.88202,\n      \"long\": -36.50216,\n      \"zone\": \"America/Recife\"\n    },\n    \"3399415\": {\n      \"name\": \"Fortaleza\",\n      \"country\": \"BR\",\n      \"lat\": -3.71722,\n      \"long\": -38.54306,\n      \"zone\": \"America/Fortaleza\"\n    },\n    \"3402383\": {\n      \"name\": \"Caxias\",\n      \"country\": \"BR\",\n      \"lat\": -4.85889,\n      \"long\": -43.35611,\n      \"zone\": \"America/Fortaleza\"\n    },\n    \"3402429\": {\n      \"name\": \"Caucaia\",\n      \"country\": \"BR\",\n      \"lat\": -3.73611,\n      \"long\": -38.65306,\n      \"zone\": \"America/Fortaleza\"\n    },\n    \"3402591\": {\n      \"name\": \"Castanhal\",\n      \"country\": \"BR\",\n      \"lat\": -1.29389,\n      \"long\": -47.92639,\n      \"zone\": \"America/Belem\"\n    },\n    \"3402655\": {\n      \"name\": \"Caruaru\",\n      \"country\": \"BR\",\n      \"lat\": -8.28333,\n      \"long\": -35.97611,\n      \"zone\": \"America/Recife\"\n    },\n    \"3403642\": {\n      \"name\": \"Campina Grande\",\n      \"country\": \"BR\",\n      \"lat\": -7.23056,\n      \"long\": -35.88111,\n      \"zone\": \"America/Fortaleza\"\n    },\n    \"3404545\": {\n      \"name\": \"Cabo\",\n      \"country\": \"BR\",\n      \"lat\": -8.28333,\n      \"long\": -35.03333,\n      \"zone\": \"America/Recife\"\n    },\n    \"3405870\": {\n      \"name\": \"Belém\",\n      \"country\": \"BR\",\n      \"lat\": -1.45583,\n      \"long\": -48.50444,\n      \"zone\": \"America/Belem\"\n    },\n    \"3407327\": {\n      \"name\": \"Arapiraca\",\n      \"country\": \"BR\",\n      \"lat\": -9.7525,\n      \"long\": -36.66111,\n      \"zone\": \"America/Maceio\"\n    },\n    \"3407357\": {\n      \"name\": \"Araguaína\",\n      \"country\": \"BR\",\n      \"lat\": -7.19111,\n      \"long\": -48.20722,\n      \"zone\": \"America/Araguaina\"\n    },\n    \"3407669\": {\n      \"name\": \"Ananindeua\",\n      \"country\": \"BR\",\n      \"lat\": -1.36556,\n      \"long\": -48.37222,\n      \"zone\": \"America/Belem\"\n    },\n    \"3413829\": {\n      \"name\": \"Reykjavík\",\n      \"country\": \"IS\",\n      \"lat\": 64.13548,\n      \"long\": -21.89541,\n      \"zone\": \"Atlantic/Reykjavik\"\n    },\n    \"3427408\": {\n      \"name\": \"Villa Lugano\",\n      \"country\": \"AR\",\n      \"lat\": -34.67907,\n      \"long\": -58.47263,\n      \"zone\": \"America/Argentina/Buenos_Aires\"\n    },\n    \"3427833\": {\n      \"name\": \"Tandil\",\n      \"country\": \"AR\",\n      \"lat\": -37.32167,\n      \"long\": -59.13316,\n      \"zone\": \"America/Argentina/Buenos_Aires\"\n    },\n    \"3429577\": {\n      \"name\": \"Resistencia\",\n      \"country\": \"AR\",\n      \"lat\": -27.46056,\n      \"long\": -58.98389,\n      \"zone\": \"America/Argentina/Cordoba\"\n    },\n    \"3429652\": {\n      \"name\": \"Quilmes\",\n      \"country\": \"AR\",\n      \"lat\": -34.72418,\n      \"long\": -58.25265,\n      \"zone\": \"America/Argentina/Buenos_Aires\"\n    },\n    \"3429886\": {\n      \"name\": \"Posadas\",\n      \"country\": \"AR\",\n      \"lat\": -27.36708,\n      \"long\": -55.89608,\n      \"zone\": \"America/Argentina/Cordoba\"\n    },\n    \"3430545\": {\n      \"name\": \"Morón\",\n      \"country\": \"AR\",\n      \"lat\": -34.65344,\n      \"long\": -58.61975,\n      \"zone\": \"America/Argentina/Buenos_Aires\"\n    },\n    \"3430863\": {\n      \"name\": \"Mar del Plata\",\n      \"country\": \"AR\",\n      \"lat\": -38.00228,\n      \"long\": -57.55754,\n      \"zone\": \"America/Argentina/Buenos_Aires\"\n    },\n    \"3432043\": {\n      \"name\": \"La Plata\",\n      \"country\": \"AR\",\n      \"lat\": -34.92145,\n      \"long\": -57.95453,\n      \"zone\": \"America/Argentina/Buenos_Aires\"\n    },\n    \"3433899\": {\n      \"name\": \"Formosa\",\n      \"country\": \"AR\",\n      \"lat\": -26.17753,\n      \"long\": -58.17814,\n      \"zone\": \"America/Argentina/Cordoba\"\n    },\n    \"3435217\": {\n      \"name\": \"Corrientes\",\n      \"country\": \"AR\",\n      \"lat\": -27.4806,\n      \"long\": -58.8341,\n      \"zone\": \"America/Argentina/Cordoba\"\n    },\n    \"3435261\": {\n      \"name\": \"Concordia\",\n      \"country\": \"AR\",\n      \"lat\": -31.39296,\n      \"long\": -58.02089,\n      \"zone\": \"America/Argentina/Cordoba\"\n    },\n    \"3435910\": {\n      \"name\": \"Buenos Aires\",\n      \"country\": \"AR\",\n      \"lat\": -34.61315,\n      \"long\": -58.37723,\n      \"zone\": \"America/Argentina/Buenos_Aires\"\n    },\n    \"3437056\": {\n      \"name\": \"San Lorenzo\",\n      \"country\": \"PY\",\n      \"lat\": -25.33968,\n      \"long\": -57.50879,\n      \"zone\": \"America/Asuncion\"\n    },\n    \"3437863\": {\n      \"name\": \"Lambaré\",\n      \"country\": \"PY\",\n      \"lat\": -25.34682,\n      \"long\": -57.60647,\n      \"zone\": \"America/Asuncion\"\n    },\n    \"3438115\": {\n      \"name\": \"Fernando de la Mora\",\n      \"country\": \"PY\",\n      \"lat\": -25.3386,\n      \"long\": -57.52167,\n      \"zone\": \"America/Asuncion\"\n    },\n    \"3439101\": {\n      \"name\": \"Ciudad del Este\",\n      \"country\": \"PY\",\n      \"lat\": -25.50972,\n      \"long\": -54.61111,\n      \"zone\": \"America/Asuncion\"\n    },\n    \"3439214\": {\n      \"name\": \"Capiatá\",\n      \"country\": \"PY\",\n      \"lat\": -25.3552,\n      \"long\": -57.44545,\n      \"zone\": \"America/Asuncion\"\n    },\n    \"3439389\": {\n      \"name\": \"Asunción\",\n      \"country\": \"PY\",\n      \"lat\": -25.30066,\n      \"long\": -57.63591,\n      \"zone\": \"America/Asuncion\"\n    },\n    \"3441575\": {\n      \"name\": \"Montevideo\",\n      \"country\": \"UY\",\n      \"lat\": -34.90328,\n      \"long\": -56.18816,\n      \"zone\": \"America/Montevideo\"\n    },\n    \"3444876\": {\n      \"name\": \"Volta Redonda\",\n      \"country\": \"BR\",\n      \"lat\": -22.52306,\n      \"long\": -44.10417,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3444914\": {\n      \"name\": \"Vitória da Conquista\",\n      \"country\": \"BR\",\n      \"lat\": -14.86611,\n      \"long\": -40.83944,\n      \"zone\": \"America/Bahia\"\n    },\n    \"3444924\": {\n      \"name\": \"Vitória\",\n      \"country\": \"BR\",\n      \"lat\": -20.31944,\n      \"long\": -40.33778,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3445026\": {\n      \"name\": \"Vila Velha\",\n      \"country\": \"BR\",\n      \"lat\": -20.32972,\n      \"long\": -40.2925,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3445156\": {\n      \"name\": \"Viamão\",\n      \"country\": \"BR\",\n      \"lat\": -30.08111,\n      \"long\": -51.02333,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3445446\": {\n      \"name\": \"Várzea Paulista\",\n      \"country\": \"BR\",\n      \"lat\": -23.21139,\n      \"long\": -46.82833,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3445451\": {\n      \"name\": \"Várzea Grande\",\n      \"country\": \"BR\",\n      \"lat\": -15.64667,\n      \"long\": -56.1325,\n      \"zone\": \"America/Cuiaba\"\n    },\n    \"3445487\": {\n      \"name\": \"Varginha\",\n      \"country\": \"BR\",\n      \"lat\": -21.55139,\n      \"long\": -45.43028,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3445679\": {\n      \"name\": \"Uruguaiana\",\n      \"country\": \"BR\",\n      \"lat\": -29.75472,\n      \"long\": -57.08833,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3445831\": {\n      \"name\": \"Uberlândia\",\n      \"country\": \"BR\",\n      \"lat\": -18.91861,\n      \"long\": -48.27722,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3445839\": {\n      \"name\": \"Uberaba\",\n      \"country\": \"BR\",\n      \"lat\": -19.74833,\n      \"long\": -47.93194,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3446370\": {\n      \"name\": \"Toledo\",\n      \"country\": \"BR\",\n      \"lat\": -24.71361,\n      \"long\": -53.74306,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3446606\": {\n      \"name\": \"Teresópolis\",\n      \"country\": \"BR\",\n      \"lat\": -22.4167,\n      \"long\": -42.97822,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3446621\": {\n      \"name\": \"Teófilo Otoni\",\n      \"country\": \"BR\",\n      \"lat\": -17.8575,\n      \"long\": -41.50528,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3446682\": {\n      \"name\": \"Taubaté\",\n      \"country\": \"BR\",\n      \"lat\": -23.02639,\n      \"long\": -45.55528,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3447186\": {\n      \"name\": \"Taboão da Serra\",\n      \"country\": \"BR\",\n      \"lat\": -23.62611,\n      \"long\": -46.79167,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3447212\": {\n      \"name\": \"Suzano\",\n      \"country\": \"BR\",\n      \"lat\": -23.5425,\n      \"long\": -46.31083,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3447259\": {\n      \"name\": \"Sumaré\",\n      \"country\": \"BR\",\n      \"lat\": -22.82194,\n      \"long\": -47.26694,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3447399\": {\n      \"name\": \"Sorocaba\",\n      \"country\": \"BR\",\n      \"lat\": -23.50167,\n      \"long\": -47.45806,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3447624\": {\n      \"name\": \"Sete Lagoas\",\n      \"country\": \"BR\",\n      \"lat\": -19.46583,\n      \"long\": -44.24667,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3447779\": {\n      \"name\": \"Serra\",\n      \"country\": \"BR\",\n      \"lat\": -20.12861,\n      \"long\": -40.30778,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3448031\": {\n      \"name\": \"Sapucaia\",\n      \"country\": \"BR\",\n      \"lat\": -29.83333,\n      \"long\": -51.15,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3448136\": {\n      \"name\": \"São Vicente\",\n      \"country\": \"BR\",\n      \"lat\": -23.96306,\n      \"long\": -46.39194,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3448439\": {\n      \"name\": \"São Paulo\",\n      \"country\": \"BR\",\n      \"lat\": -23.5475,\n      \"long\": -46.63611,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3448622\": {\n      \"name\": \"São Leopoldo\",\n      \"country\": \"BR\",\n      \"lat\": -29.76028,\n      \"long\": -51.14722,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3448632\": {\n      \"name\": \"São José dos Pinhais\",\n      \"country\": \"BR\",\n      \"lat\": -25.5302,\n      \"long\": -49.20836,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3448636\": {\n      \"name\": \"São José dos Campos\",\n      \"country\": \"BR\",\n      \"lat\": -23.17944,\n      \"long\": -45.88694,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3448639\": {\n      \"name\": \"São José do Rio Preto\",\n      \"country\": \"BR\",\n      \"lat\": -20.81972,\n      \"long\": -49.37944,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3448742\": {\n      \"name\": \"São José\",\n      \"country\": \"BR\",\n      \"lat\": -28.21171,\n      \"long\": -49.1632,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3448877\": {\n      \"name\": \"São João de Meriti\",\n      \"country\": \"BR\",\n      \"lat\": -22.80389,\n      \"long\": -43.37222,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3449319\": {\n      \"name\": \"São Carlos\",\n      \"country\": \"BR\",\n      \"lat\": -22.0175,\n      \"long\": -47.89083,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3449324\": {\n      \"name\": \"São Caetano do Sul\",\n      \"country\": \"BR\",\n      \"lat\": -23.62306,\n      \"long\": -46.55111,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3449344\": {\n      \"name\": \"São Bernardo do Campo\",\n      \"country\": \"BR\",\n      \"lat\": -23.69389,\n      \"long\": -46.565,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3449433\": {\n      \"name\": \"Santos\",\n      \"country\": \"BR\",\n      \"lat\": -23.96083,\n      \"long\": -46.33361,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3449701\": {\n      \"name\": \"Santo André\",\n      \"country\": \"BR\",\n      \"lat\": -23.66389,\n      \"long\": -46.53833,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3450083\": {\n      \"name\": \"Santa Maria\",\n      \"country\": \"BR\",\n      \"lat\": -29.68417,\n      \"long\": -53.80694,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3450144\": {\n      \"name\": \"Santa Luzia\",\n      \"country\": \"BR\",\n      \"lat\": -19.76972,\n      \"long\": -43.85139,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3450269\": {\n      \"name\": \"Santa Cruz do Sul\",\n      \"country\": \"BR\",\n      \"lat\": -29.7175,\n      \"long\": -52.42583,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3450404\": {\n      \"name\": \"Santa Bárbara d'Oeste\",\n      \"country\": \"BR\",\n      \"lat\": -22.75361,\n      \"long\": -47.41361,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3450554\": {\n      \"name\": \"Salvador\",\n      \"country\": \"BR\",\n      \"lat\": -12.97111,\n      \"long\": -38.51083,\n      \"zone\": \"America/Bahia\"\n    },\n    \"3450909\": {\n      \"name\": \"Rondonópolis\",\n      \"country\": \"BR\",\n      \"lat\": -16.47083,\n      \"long\": -54.63556,\n      \"zone\": \"America/Cuiaba\"\n    },\n    \"3451138\": {\n      \"name\": \"Rio Grande\",\n      \"country\": \"BR\",\n      \"lat\": -32.035,\n      \"long\": -52.09861,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3451190\": {\n      \"name\": \"Rio de Janeiro\",\n      \"country\": \"BR\",\n      \"lat\": -22.90278,\n      \"long\": -43.2075,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3451234\": {\n      \"name\": \"Rio Claro\",\n      \"country\": \"BR\",\n      \"lat\": -22.41139,\n      \"long\": -47.56139,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3451328\": {\n      \"name\": \"Ribeirão Preto\",\n      \"country\": \"BR\",\n      \"lat\": -21.1775,\n      \"long\": -47.81028,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3451329\": {\n      \"name\": \"Ribeirão Pires\",\n      \"country\": \"BR\",\n      \"lat\": -23.71056,\n      \"long\": -46.41333,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3451353\": {\n      \"name\": \"Ribeirão das Neves\",\n      \"country\": \"BR\",\n      \"lat\": -19.76694,\n      \"long\": -44.08667,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3451668\": {\n      \"name\": \"Resende\",\n      \"country\": \"BR\",\n      \"lat\": -22.46889,\n      \"long\": -44.44667,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3452073\": {\n      \"name\": \"Queimados\",\n      \"country\": \"BR\",\n      \"lat\": -22.71611,\n      \"long\": -43.55528,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3452324\": {\n      \"name\": \"Presidente Prudente\",\n      \"country\": \"BR\",\n      \"lat\": -22.12556,\n      \"long\": -51.38889,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3452465\": {\n      \"name\": \"Praia Grande\",\n      \"country\": \"BR\",\n      \"lat\": -24.00583,\n      \"long\": -46.40278,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3452525\": {\n      \"name\": \"Pouso Alegre\",\n      \"country\": \"BR\",\n      \"lat\": -22.23,\n      \"long\": -45.93639,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3452640\": {\n      \"name\": \"Porto Seguro\",\n      \"country\": \"BR\",\n      \"lat\": -16.44972,\n      \"long\": -39.06472,\n      \"zone\": \"America/Bahia\"\n    },\n    \"3452925\": {\n      \"name\": \"Porto Alegre\",\n      \"country\": \"BR\",\n      \"lat\": -30.03306,\n      \"long\": -51.23,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3453186\": {\n      \"name\": \"Ponta Grossa\",\n      \"country\": \"BR\",\n      \"lat\": -25.095,\n      \"long\": -50.16194,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3453303\": {\n      \"name\": \"Poços de Caldas\",\n      \"country\": \"BR\",\n      \"lat\": -21.78778,\n      \"long\": -46.56139,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3453406\": {\n      \"name\": \"Poá\",\n      \"country\": \"BR\",\n      \"lat\": -23.52806,\n      \"long\": -46.34472,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3453643\": {\n      \"name\": \"Piracicaba\",\n      \"country\": \"BR\",\n      \"lat\": -22.72528,\n      \"long\": -47.64917,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3453837\": {\n      \"name\": \"Pindamonhangaba\",\n      \"country\": \"BR\",\n      \"lat\": -22.92389,\n      \"long\": -45.46167,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3454031\": {\n      \"name\": \"Petrópolis\",\n      \"country\": \"BR\",\n      \"lat\": -22.505,\n      \"long\": -43.17861,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3454244\": {\n      \"name\": \"Pelotas\",\n      \"country\": \"BR\",\n      \"lat\": -31.77194,\n      \"long\": -52.3425,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3454783\": {\n      \"name\": \"Patos de Minas\",\n      \"country\": \"BR\",\n      \"lat\": -18.57889,\n      \"long\": -46.51806,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3454857\": {\n      \"name\": \"Passo Fundo\",\n      \"country\": \"BR\",\n      \"lat\": -28.26278,\n      \"long\": -52.40667,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3455070\": {\n      \"name\": \"Paranaguá\",\n      \"country\": \"BR\",\n      \"lat\": -25.51626,\n      \"long\": -48.52537,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3455478\": {\n      \"name\": \"Palhoça\",\n      \"country\": \"BR\",\n      \"lat\": -27.64528,\n      \"long\": -48.66778,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3455775\": {\n      \"name\": \"Osasco\",\n      \"country\": \"BR\",\n      \"lat\": -23.5325,\n      \"long\": -46.79167,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3456068\": {\n      \"name\": \"Novo Hamburgo\",\n      \"country\": \"BR\",\n      \"lat\": -29.67833,\n      \"long\": -51.13056,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3456160\": {\n      \"name\": \"Nova Iguaçu\",\n      \"country\": \"BR\",\n      \"lat\": -22.75917,\n      \"long\": -43.45111,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3456166\": {\n      \"name\": \"Nova Friburgo\",\n      \"country\": \"BR\",\n      \"lat\": -22.28194,\n      \"long\": -42.53111,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3456223\": {\n      \"name\": \"Nossa Senhora do Socorro\",\n      \"country\": \"BR\",\n      \"lat\": -10.855,\n      \"long\": -37.12611,\n      \"zone\": \"America/Maceio\"\n    },\n    \"3456283\": {\n      \"name\": \"Niterói\",\n      \"country\": \"BR\",\n      \"lat\": -22.88333,\n      \"long\": -43.10361,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3456290\": {\n      \"name\": \"Nilópolis\",\n      \"country\": \"BR\",\n      \"lat\": -22.8075,\n      \"long\": -43.41389,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3456814\": {\n      \"name\": \"Montes Claros\",\n      \"country\": \"BR\",\n      \"lat\": -16.735,\n      \"long\": -43.86167,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3457000\": {\n      \"name\": \"Mogi-Gaucu\",\n      \"country\": \"BR\",\n      \"lat\": -22.3677,\n      \"long\": -46.94552,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3457001\": {\n      \"name\": \"Mogi das Cruzes\",\n      \"country\": \"BR\",\n      \"lat\": -23.52278,\n      \"long\": -46.18833,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3457381\": {\n      \"name\": \"Mauá\",\n      \"country\": \"BR\",\n      \"lat\": -23.66778,\n      \"long\": -46.46139,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3457671\": {\n      \"name\": \"Maringá\",\n      \"country\": \"BR\",\n      \"lat\": -23.42528,\n      \"long\": -51.93861,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3457692\": {\n      \"name\": \"Marília\",\n      \"country\": \"BR\",\n      \"lat\": -22.21389,\n      \"long\": -49.94583,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3458266\": {\n      \"name\": \"Macaé\",\n      \"country\": \"BR\",\n      \"lat\": -22.37083,\n      \"long\": -41.78694,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3458329\": {\n      \"name\": \"Luziânia\",\n      \"country\": \"BR\",\n      \"lat\": -16.2525,\n      \"long\": -47.95028,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3458449\": {\n      \"name\": \"Londrina\",\n      \"country\": \"BR\",\n      \"lat\": -23.31028,\n      \"long\": -51.16278,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3458498\": {\n      \"name\": \"Linhares\",\n      \"country\": \"BR\",\n      \"lat\": -19.39111,\n      \"long\": -40.07222,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3458575\": {\n      \"name\": \"Limeira\",\n      \"country\": \"BR\",\n      \"lat\": -22.56472,\n      \"long\": -47.40167,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3458930\": {\n      \"name\": \"Lages\",\n      \"country\": \"BR\",\n      \"lat\": -27.81611,\n      \"long\": -50.32611,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3459462\": {\n      \"name\": \"Jundiaí\",\n      \"country\": \"BR\",\n      \"lat\": -23.18639,\n      \"long\": -46.88417,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3459505\": {\n      \"name\": \"Juiz de Fora\",\n      \"country\": \"BR\",\n      \"lat\": -21.76417,\n      \"long\": -43.35028,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3459712\": {\n      \"name\": \"Joinville\",\n      \"country\": \"BR\",\n      \"lat\": -26.30444,\n      \"long\": -48.84556,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3459943\": {\n      \"name\": \"Jequié\",\n      \"country\": \"BR\",\n      \"lat\": -13.85875,\n      \"long\": -40.08512,\n      \"zone\": \"America/Bahia\"\n    },\n    \"3460005\": {\n      \"name\": \"Jaú\",\n      \"country\": \"BR\",\n      \"lat\": -22.29639,\n      \"long\": -48.55778,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3460102\": {\n      \"name\": \"Jaraguá do Sul\",\n      \"country\": \"BR\",\n      \"lat\": -26.48611,\n      \"long\": -49.06667,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3460170\": {\n      \"name\": \"Jandira\",\n      \"country\": \"BR\",\n      \"lat\": -23.5275,\n      \"long\": -46.9025,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3460370\": {\n      \"name\": \"Jacareí\",\n      \"country\": \"BR\",\n      \"lat\": -23.30528,\n      \"long\": -45.96583,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3460535\": {\n      \"name\": \"Itu\",\n      \"country\": \"BR\",\n      \"lat\": -23.26417,\n      \"long\": -47.29917,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3460644\": {\n      \"name\": \"Itaquaquecetuba\",\n      \"country\": \"BR\",\n      \"lat\": -23.48611,\n      \"long\": -46.34833,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3460718\": {\n      \"name\": \"Itapevi\",\n      \"country\": \"BR\",\n      \"lat\": -23.54889,\n      \"long\": -46.93417,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3460728\": {\n      \"name\": \"Itapetininga\",\n      \"country\": \"BR\",\n      \"lat\": -23.59167,\n      \"long\": -48.05306,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3460748\": {\n      \"name\": \"Itapecerica da Serra\",\n      \"country\": \"BR\",\n      \"lat\": -23.71694,\n      \"long\": -46.84917,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3460845\": {\n      \"name\": \"Itajaí\",\n      \"country\": \"BR\",\n      \"lat\": -26.90778,\n      \"long\": -48.66194,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3460899\": {\n      \"name\": \"Itaguaí\",\n      \"country\": \"BR\",\n      \"lat\": -22.85222,\n      \"long\": -43.77528,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3460949\": {\n      \"name\": \"Itabuna\",\n      \"country\": \"BR\",\n      \"lat\": -14.78556,\n      \"long\": -39.28028,\n      \"zone\": \"America/Bahia\"\n    },\n    \"3460950\": {\n      \"name\": \"Itaboraí\",\n      \"country\": \"BR\",\n      \"lat\": -22.74444,\n      \"long\": -42.85944,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3461144\": {\n      \"name\": \"Ipatinga\",\n      \"country\": \"BR\",\n      \"lat\": -19.46833,\n      \"long\": -42.53667,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3461311\": {\n      \"name\": \"Indaiatuba\",\n      \"country\": \"BR\",\n      \"lat\": -23.08842,\n      \"long\": -47.2119,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3461408\": {\n      \"name\": \"Ilhéus\",\n      \"country\": \"BR\",\n      \"lat\": -14.79364,\n      \"long\": -39.03949,\n      \"zone\": \"America/Bahia\"\n    },\n    \"3461563\": {\n      \"name\": \"Ibirité\",\n      \"country\": \"BR\",\n      \"lat\": -20.02194,\n      \"long\": -44.05889,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3461655\": {\n      \"name\": \"Hortolândia\",\n      \"country\": \"BR\",\n      \"lat\": -22.85833,\n      \"long\": -47.22,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3461786\": {\n      \"name\": \"Guarulhos\",\n      \"country\": \"BR\",\n      \"lat\": -23.46278,\n      \"long\": -46.53333,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3461789\": {\n      \"name\": \"Guarujá\",\n      \"country\": \"BR\",\n      \"lat\": -23.99306,\n      \"long\": -46.25639,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3461859\": {\n      \"name\": \"Guaratinguetá\",\n      \"country\": \"BR\",\n      \"lat\": -22.81639,\n      \"long\": -45.1925,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3461879\": {\n      \"name\": \"Guarapuava\",\n      \"country\": \"BR\",\n      \"lat\": -25.39048,\n      \"long\": -51.46541,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3461888\": {\n      \"name\": \"Guarapari\",\n      \"country\": \"BR\",\n      \"lat\": -20.65367,\n      \"long\": -40.50204,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3462089\": {\n      \"name\": \"Gravataí\",\n      \"country\": \"BR\",\n      \"lat\": -29.94218,\n      \"long\": -50.99278,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3462315\": {\n      \"name\": \"Governador Valadares\",\n      \"country\": \"BR\",\n      \"lat\": -18.85111,\n      \"long\": -41.94944,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3462377\": {\n      \"name\": \"Goiânia\",\n      \"country\": \"BR\",\n      \"lat\": -16.67861,\n      \"long\": -49.25389,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3462964\": {\n      \"name\": \"Franco da Rocha\",\n      \"country\": \"BR\",\n      \"lat\": -23.32167,\n      \"long\": -46.72694,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3462980\": {\n      \"name\": \"Francisco Morato\",\n      \"country\": \"BR\",\n      \"lat\": -23.28167,\n      \"long\": -46.74528,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3463011\": {\n      \"name\": \"Franca\",\n      \"country\": \"BR\",\n      \"lat\": -20.53861,\n      \"long\": -47.40083,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3463030\": {\n      \"name\": \"Foz do Iguaçu\",\n      \"country\": \"BR\",\n      \"lat\": -25.54778,\n      \"long\": -54.58806,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3463237\": {\n      \"name\": \"Florianópolis\",\n      \"country\": \"BR\",\n      \"lat\": -27.59667,\n      \"long\": -48.54917,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3463422\": {\n      \"name\": \"Ferraz de Vasconcelos\",\n      \"country\": \"BR\",\n      \"lat\": -23.54083,\n      \"long\": -46.36861,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3463478\": {\n      \"name\": \"Feira de Santana\",\n      \"country\": \"BR\",\n      \"lat\": -12.26667,\n      \"long\": -38.96667,\n      \"zone\": \"America/Bahia\"\n    },\n    \"3464008\": {\n      \"name\": \"Esmeraldas\",\n      \"country\": \"BR\",\n      \"lat\": -19.7625,\n      \"long\": -44.31389,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3464305\": {\n      \"name\": \"Embu\",\n      \"country\": \"BR\",\n      \"lat\": -23.64889,\n      \"long\": -46.85222,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3464374\": {\n      \"name\": \"Duque de Caxias\",\n      \"country\": \"BR\",\n      \"lat\": -22.78556,\n      \"long\": -43.31167,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3464460\": {\n      \"name\": \"Dourados\",\n      \"country\": \"BR\",\n      \"lat\": -22.22111,\n      \"long\": -54.80556,\n      \"zone\": \"America/Campo_Grande\"\n    },\n    \"3464688\": {\n      \"name\": \"Divinópolis\",\n      \"country\": \"BR\",\n      \"lat\": -20.13889,\n      \"long\": -44.88389,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3464739\": {\n      \"name\": \"Diadema\",\n      \"country\": \"BR\",\n      \"lat\": -23.68611,\n      \"long\": -46.62278,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3464975\": {\n      \"name\": \"Curitiba\",\n      \"country\": \"BR\",\n      \"lat\": -25.42778,\n      \"long\": -49.27306,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3465038\": {\n      \"name\": \"Cuiabá\",\n      \"country\": \"BR\",\n      \"lat\": -15.59611,\n      \"long\": -56.09667,\n      \"zone\": \"America/Cuiaba\"\n    },\n    \"3465059\": {\n      \"name\": \"Cubatão\",\n      \"country\": \"BR\",\n      \"lat\": -23.895,\n      \"long\": -46.42528,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3465196\": {\n      \"name\": \"Criciúma\",\n      \"country\": \"BR\",\n      \"lat\": -28.6775,\n      \"long\": -49.36972,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3465284\": {\n      \"name\": \"Cotia\",\n      \"country\": \"BR\",\n      \"lat\": -23.60389,\n      \"long\": -46.91917,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3465476\": {\n      \"name\": \"Coronel Fabriciano\",\n      \"country\": \"BR\",\n      \"lat\": -19.51861,\n      \"long\": -42.62889,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3465624\": {\n      \"name\": \"Contagem\",\n      \"country\": \"BR\",\n      \"lat\": -19.93167,\n      \"long\": -44.05361,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3465644\": {\n      \"name\": \"Conselheiro Lafaiete\",\n      \"country\": \"BR\",\n      \"lat\": -20.66028,\n      \"long\": -43.78611,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3465927\": {\n      \"name\": \"Colombo\",\n      \"country\": \"BR\",\n      \"lat\": -25.29167,\n      \"long\": -49.22417,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3465944\": {\n      \"name\": \"Colatina\",\n      \"country\": \"BR\",\n      \"lat\": -19.53944,\n      \"long\": -40.63056,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3466296\": {\n      \"name\": \"Chapecó\",\n      \"country\": \"BR\",\n      \"lat\": -27.09639,\n      \"long\": -52.61833,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3466537\": {\n      \"name\": \"Caxias do Sul\",\n      \"country\": \"BR\",\n      \"lat\": -29.16806,\n      \"long\": -51.17944,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3466692\": {\n      \"name\": \"Catanduva\",\n      \"country\": \"BR\",\n      \"lat\": -21.13778,\n      \"long\": -48.97278,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3466779\": {\n      \"name\": \"Cascavel\",\n      \"country\": \"BR\",\n      \"lat\": -24.95583,\n      \"long\": -53.45528,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3466998\": {\n      \"name\": \"Carapicuíba\",\n      \"country\": \"BR\",\n      \"lat\": -23.52272,\n      \"long\": -46.835,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3467467\": {\n      \"name\": \"Canoas\",\n      \"country\": \"BR\",\n      \"lat\": -29.91778,\n      \"long\": -51.18361,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3467693\": {\n      \"name\": \"Campos\",\n      \"country\": \"BR\",\n      \"lat\": -21.75227,\n      \"long\": -41.33044,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3467747\": {\n      \"name\": \"Campo Grande\",\n      \"country\": \"BR\",\n      \"lat\": -20.44278,\n      \"long\": -54.64639,\n      \"zone\": \"America/Campo_Grande\"\n    },\n    \"3467865\": {\n      \"name\": \"Campinas\",\n      \"country\": \"BR\",\n      \"lat\": -22.90556,\n      \"long\": -47.06083,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3468031\": {\n      \"name\": \"Camaçari\",\n      \"country\": \"BR\",\n      \"lat\": -12.6975,\n      \"long\": -38.32417,\n      \"zone\": \"America/Bahia\"\n    },\n    \"3468376\": {\n      \"name\": \"Cachoeiro de Itapemirim\",\n      \"country\": \"BR\",\n      \"lat\": -20.84889,\n      \"long\": -41.11278,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3468403\": {\n      \"name\": \"Cachoeirinha\",\n      \"country\": \"BR\",\n      \"lat\": -29.95111,\n      \"long\": -51.09389,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3468615\": {\n      \"name\": \"Cabo Frio\",\n      \"country\": \"BR\",\n      \"lat\": -22.88717,\n      \"long\": -42.02622,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3469058\": {\n      \"name\": \"Brasília\",\n      \"country\": \"BR\",\n      \"lat\": -15.77972,\n      \"long\": -47.92972,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3469092\": {\n      \"name\": \"Bragança Paulista\",\n      \"country\": \"BR\",\n      \"lat\": -22.95194,\n      \"long\": -46.54194,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3469136\": {\n      \"name\": \"Botucatu\",\n      \"country\": \"BR\",\n      \"lat\": -22.88583,\n      \"long\": -48.445,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3469968\": {\n      \"name\": \"Blumenau\",\n      \"country\": \"BR\",\n      \"lat\": -26.91944,\n      \"long\": -49.06611,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3469989\": {\n      \"name\": \"Birigui\",\n      \"country\": \"BR\",\n      \"lat\": -21.28861,\n      \"long\": -50.34,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3470044\": {\n      \"name\": \"Betim\",\n      \"country\": \"BR\",\n      \"lat\": -19.96778,\n      \"long\": -44.19833,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3470127\": {\n      \"name\": \"Belo Horizonte\",\n      \"country\": \"BR\",\n      \"lat\": -19.92083,\n      \"long\": -43.93778,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3470142\": {\n      \"name\": \"Belford Roxo\",\n      \"country\": \"BR\",\n      \"lat\": -22.76417,\n      \"long\": -43.39944,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3470279\": {\n      \"name\": \"Bauru\",\n      \"country\": \"BR\",\n      \"lat\": -22.31472,\n      \"long\": -49.06056,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3470353\": {\n      \"name\": \"Barueri\",\n      \"country\": \"BR\",\n      \"lat\": -23.51056,\n      \"long\": -46.87611,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3470451\": {\n      \"name\": \"Barretos\",\n      \"country\": \"BR\",\n      \"lat\": -20.55722,\n      \"long\": -48.56778,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3470583\": {\n      \"name\": \"Barreiras\",\n      \"country\": \"BR\",\n      \"lat\": -12.15278,\n      \"long\": -44.99,\n      \"zone\": \"America/Bahia\"\n    },\n    \"3470636\": {\n      \"name\": \"Barra Mansa\",\n      \"country\": \"BR\",\n      \"lat\": -22.54417,\n      \"long\": -44.17139,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3470858\": {\n      \"name\": \"Barbacena\",\n      \"country\": \"BR\",\n      \"lat\": -21.22583,\n      \"long\": -43.77361,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3471335\": {\n      \"name\": \"Atibaia\",\n      \"country\": \"BR\",\n      \"lat\": -23.11694,\n      \"long\": -46.55028,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3471374\": {\n      \"name\": \"Assis\",\n      \"country\": \"BR\",\n      \"lat\": -22.66167,\n      \"long\": -50.41222,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3471697\": {\n      \"name\": \"Araucária\",\n      \"country\": \"BR\",\n      \"lat\": -25.59306,\n      \"long\": -49.41028,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3471715\": {\n      \"name\": \"Araruama\",\n      \"country\": \"BR\",\n      \"lat\": -22.87278,\n      \"long\": -42.34306,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3471758\": {\n      \"name\": \"Araras\",\n      \"country\": \"BR\",\n      \"lat\": -22.35694,\n      \"long\": -47.38417,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3471766\": {\n      \"name\": \"Araraquara\",\n      \"country\": \"BR\",\n      \"lat\": -21.79444,\n      \"long\": -48.17556,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3471859\": {\n      \"name\": \"Araçatuba\",\n      \"country\": \"BR\",\n      \"lat\": -21.20889,\n      \"long\": -50.43278,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3471872\": {\n      \"name\": \"Aracaju\",\n      \"country\": \"BR\",\n      \"lat\": -10.91111,\n      \"long\": -37.07167,\n      \"zone\": \"America/Maceio\"\n    },\n    \"3471910\": {\n      \"name\": \"Apucarana\",\n      \"country\": \"BR\",\n      \"lat\": -23.55083,\n      \"long\": -51.46083,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3472177\": {\n      \"name\": \"Angra dos Reis\",\n      \"country\": \"BR\",\n      \"lat\": -23.00667,\n      \"long\": -44.31806,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3472287\": {\n      \"name\": \"Anápolis\",\n      \"country\": \"BR\",\n      \"lat\": -16.32667,\n      \"long\": -48.95278,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3472343\": {\n      \"name\": \"Americana\",\n      \"country\": \"BR\",\n      \"lat\": -22.73917,\n      \"long\": -47.33139,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3472766\": {\n      \"name\": \"Alagoinhas\",\n      \"country\": \"BR\",\n      \"lat\": -12.13556,\n      \"long\": -38.41917,\n      \"zone\": \"America/Bahia\"\n    },\n    \"3473964\": {\n      \"name\": \"Guaíba\",\n      \"country\": \"BR\",\n      \"lat\": -30.11389,\n      \"long\": -51.325,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"3474574\": {\n      \"name\": \"Palmas\",\n      \"country\": \"BR\",\n      \"lat\": -10.16745,\n      \"long\": -48.32766,\n      \"zone\": \"America/Araguaina\"\n    },\n    \"3482969\": {\n      \"name\": \"Gustavo A. Madero\",\n      \"country\": \"MX\",\n      \"lat\": 22.8694,\n      \"long\": -98.75886,\n      \"zone\": \"America/Monterrey\"\n    },\n    \"3486270\": {\n      \"name\": \"Anaco\",\n      \"country\": \"VE\",\n      \"lat\": 9.43889,\n      \"long\": -64.47278,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3487903\": {\n      \"name\": \"Alto Barinas\",\n      \"country\": \"VE\",\n      \"lat\": 8.5931,\n      \"long\": -70.2261,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3488465\": {\n      \"name\": \"Spanish Town\",\n      \"country\": \"JM\",\n      \"lat\": 17.99107,\n      \"long\": -76.95742,\n      \"zone\": \"America/Jamaica\"\n    },\n    \"3488981\": {\n      \"name\": \"Portmore\",\n      \"country\": \"JM\",\n      \"lat\": 17.95032,\n      \"long\": -76.88215,\n      \"zone\": \"America/Jamaica\"\n    },\n    \"3489297\": {\n      \"name\": \"New Kingston\",\n      \"country\": \"JM\",\n      \"lat\": 18.00747,\n      \"long\": -76.78319,\n      \"zone\": \"America/Jamaica\"\n    },\n    \"3489854\": {\n      \"name\": \"Kingston\",\n      \"country\": \"JM\",\n      \"lat\": 17.99702,\n      \"long\": -76.79358,\n      \"zone\": \"America/Jamaica\"\n    },\n    \"3492908\": {\n      \"name\": \"Santo Domingo\",\n      \"country\": \"DO\",\n      \"lat\": 18.50012,\n      \"long\": -69.98857,\n      \"zone\": \"America/Santo_Domingo\"\n    },\n    \"3492914\": {\n      \"name\": \"Santiago de los Caballeros\",\n      \"country\": \"DO\",\n      \"lat\": 19.4517,\n      \"long\": -70.69703,\n      \"zone\": \"America/Santo_Domingo\"\n    },\n    \"3493032\": {\n      \"name\": \"San Pedro de Macorís\",\n      \"country\": \"DO\",\n      \"lat\": 18.46156,\n      \"long\": -69.29718,\n      \"zone\": \"America/Santo_Domingo\"\n    },\n    \"3493146\": {\n      \"name\": \"San Francisco de Macorís\",\n      \"country\": \"DO\",\n      \"lat\": 19.30099,\n      \"long\": -70.25259,\n      \"zone\": \"America/Santo_Domingo\"\n    },\n    \"3493175\": {\n      \"name\": \"Puerto Plata\",\n      \"country\": \"DO\",\n      \"lat\": 19.79344,\n      \"long\": -70.6884,\n      \"zone\": \"America/Santo_Domingo\"\n    },\n    \"3493240\": {\n      \"name\": \"Salvaleón de Higüey\",\n      \"country\": \"DO\",\n      \"lat\": 18.61501,\n      \"long\": -68.70798,\n      \"zone\": \"America/Santo_Domingo\"\n    },\n    \"3494242\": {\n      \"name\": \"Punta Cana\",\n      \"country\": \"DO\",\n      \"lat\": 18.58182,\n      \"long\": -68.40431,\n      \"zone\": \"America/Santo_Domingo\"\n    },\n    \"3500957\": {\n      \"name\": \"La Romana\",\n      \"country\": \"DO\",\n      \"lat\": 18.42733,\n      \"long\": -68.97285,\n      \"zone\": \"America/Santo_Domingo\"\n    },\n    \"3509382\": {\n      \"name\": \"Concepción de La Vega\",\n      \"country\": \"DO\",\n      \"lat\": 19.22207,\n      \"long\": -70.52956,\n      \"zone\": \"America/Santo_Domingo\"\n    },\n    \"3511540\": {\n      \"name\": \"San Cristóbal\",\n      \"country\": \"DO\",\n      \"lat\": 18.41667,\n      \"long\": -70.1,\n      \"zone\": \"America/Santo_Domingo\"\n    },\n    \"3511550\": {\n      \"name\": \"Bella Vista\",\n      \"country\": \"DO\",\n      \"lat\": 18.45539,\n      \"long\": -69.9454,\n      \"zone\": \"America/Santo_Domingo\"\n    },\n    \"3513090\": {\n      \"name\": \"Willemstad\",\n      \"country\": \"CW\",\n      \"lat\": 12.1084,\n      \"long\": -68.93354,\n      \"zone\": \"America/Curacao\"\n    },\n    \"3514450\": {\n      \"name\": \"Xochimilco\",\n      \"country\": \"MX\",\n      \"lat\": 19.25785,\n      \"long\": -99.10513,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3514519\": {\n      \"name\": \"San Miguel Xico Viejo\",\n      \"country\": \"MX\",\n      \"lat\": 19.27022,\n      \"long\": -98.93588,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3514663\": {\n      \"name\": \"Álvaro Obregón\",\n      \"country\": \"MX\",\n      \"lat\": 19.35867,\n      \"long\": -99.20329,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3514670\": {\n      \"name\": \"Villahermosa\",\n      \"country\": \"MX\",\n      \"lat\": 17.98689,\n      \"long\": -92.93028,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3514674\": {\n      \"name\": \"Gustavo A. Madero\",\n      \"country\": \"MX\",\n      \"lat\": 19.49016,\n      \"long\": -99.10978,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3514783\": {\n      \"name\": \"Veracruz\",\n      \"country\": \"MX\",\n      \"lat\": 19.18095,\n      \"long\": -96.1429,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3515001\": {\n      \"name\": \"Tuxtla Gutiérrez\",\n      \"country\": \"MX\",\n      \"lat\": 16.75973,\n      \"long\": -93.11308,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3515011\": {\n      \"name\": \"Tuxpan de Rodríguez Cano\",\n      \"country\": \"MX\",\n      \"lat\": 20.95773,\n      \"long\": -97.40798,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3515062\": {\n      \"name\": \"Tulancingo\",\n      \"country\": \"MX\",\n      \"lat\": 20.08363,\n      \"long\": -98.36332,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3515302\": {\n      \"name\": \"Toluca\",\n      \"country\": \"MX\",\n      \"lat\": 19.28786,\n      \"long\": -99.65324,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3515428\": {\n      \"name\": \"Tlalpan\",\n      \"country\": \"MX\",\n      \"lat\": 19.29707,\n      \"long\": -99.16787,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3515431\": {\n      \"name\": \"Tlalnepantla\",\n      \"country\": \"MX\",\n      \"lat\": 19.54005,\n      \"long\": -99.19538,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3515463\": {\n      \"name\": \"Tlahuac\",\n      \"country\": \"MX\",\n      \"lat\": 19.28348,\n      \"long\": -99.00317,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3515715\": {\n      \"name\": \"Texcoco de Mora\",\n      \"country\": \"MX\",\n      \"lat\": 19.51194,\n      \"long\": -98.88293,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3515807\": {\n      \"name\": \"Cuautitlán Izcalli\",\n      \"country\": \"MX\",\n      \"lat\": 19.64388,\n      \"long\": -99.21598,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3516053\": {\n      \"name\": \"Temapache\",\n      \"country\": \"MX\",\n      \"lat\": 21.06611,\n      \"long\": -97.64207,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3516109\": {\n      \"name\": \"Tehuacán\",\n      \"country\": \"MX\",\n      \"lat\": 18.46148,\n      \"long\": -97.39282,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3516266\": {\n      \"name\": \"Tapachula\",\n      \"country\": \"MX\",\n      \"lat\": 14.90696,\n      \"long\": -92.26185,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3516271\": {\n      \"name\": \"Tantoyuca\",\n      \"country\": \"MX\",\n      \"lat\": 21.35064,\n      \"long\": -98.2257,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3516355\": {\n      \"name\": \"Tampico\",\n      \"country\": \"MX\",\n      \"lat\": 22.27817,\n      \"long\": -97.86772,\n      \"zone\": \"America/Monterrey\"\n    },\n    \"3517270\": {\n      \"name\": \"Santa María Chimalhuacán\",\n      \"country\": \"MX\",\n      \"lat\": 19.42155,\n      \"long\": -98.95038,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3518135\": {\n      \"name\": \"San Pablo de las Salinas\",\n      \"country\": \"MX\",\n      \"lat\": 19.6667,\n      \"long\": -99.09527,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3518692\": {\n      \"name\": \"San Juan del Río\",\n      \"country\": \"MX\",\n      \"lat\": 20.3878,\n      \"long\": -99.99605,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3519537\": {\n      \"name\": \"San Cristóbal de las Casas\",\n      \"country\": \"MX\",\n      \"lat\": 16.73176,\n      \"long\": -92.64126,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3520339\": {\n      \"name\": \"Reynosa\",\n      \"country\": \"MX\",\n      \"lat\": 26.08061,\n      \"long\": -98.28835,\n      \"zone\": \"America/Matamoros\"\n    },\n    \"3521081\": {\n      \"name\": \"Puebla\",\n      \"country\": \"MX\",\n      \"lat\": 19.04334,\n      \"long\": -98.20193,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3521168\": {\n      \"name\": \"Poza Rica de Hidalgo\",\n      \"country\": \"MX\",\n      \"lat\": 20.53315,\n      \"long\": -97.45946,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3521342\": {\n      \"name\": \"Playa del Carmen\",\n      \"country\": \"MX\",\n      \"lat\": 20.6274,\n      \"long\": -87.07987,\n      \"zone\": \"America/Cancun\"\n    },\n    \"3522210\": {\n      \"name\": \"Pachuca de Soto\",\n      \"country\": \"MX\",\n      \"lat\": 20.11697,\n      \"long\": -98.73329,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3522307\": {\n      \"name\": \"Orizaba\",\n      \"country\": \"MX\",\n      \"lat\": 18.85101,\n      \"long\": -97.10084,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3522507\": {\n      \"name\": \"Oaxaca de Juárez\",\n      \"country\": \"MX\",\n      \"lat\": 17.06542,\n      \"long\": -96.72365,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3522551\": {\n      \"name\": \"Nuevo Laredo\",\n      \"country\": \"MX\",\n      \"lat\": 27.47629,\n      \"long\": -99.51639,\n      \"zone\": \"America/Matamoros\"\n    },\n    \"3522732\": {\n      \"name\": \"Nicolás Romero\",\n      \"country\": \"MX\",\n      \"lat\": 19.63658,\n      \"long\": -99.30682,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3522790\": {\n      \"name\": \"Naucalpan de Juárez\",\n      \"country\": \"MX\",\n      \"lat\": 19.47851,\n      \"long\": -99.23963,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3523183\": {\n      \"name\": \"Minatitlan\",\n      \"country\": \"MX\",\n      \"lat\": 17.99925,\n      \"long\": -94.55441,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3523202\": {\n      \"name\": \"Milpa Alta\",\n      \"country\": \"MX\",\n      \"lat\": 19.19251,\n      \"long\": -99.02317,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3523303\": {\n      \"name\": \"Metepec\",\n      \"country\": \"MX\",\n      \"lat\": 19.25934,\n      \"long\": -99.60175,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3523349\": {\n      \"name\": \"Mérida\",\n      \"country\": \"MX\",\n      \"lat\": 20.97537,\n      \"long\": -89.61696,\n      \"zone\": \"America/Merida\"\n    },\n    \"3523466\": {\n      \"name\": \"Heroica Matamoros\",\n      \"country\": \"MX\",\n      \"lat\": 25.87972,\n      \"long\": -97.50417,\n      \"zone\": \"America/Matamoros\"\n    },\n    \"3523513\": {\n      \"name\": \"Martínez de la Torre\",\n      \"country\": \"MX\",\n      \"lat\": 20.07082,\n      \"long\": -97.06078,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3523760\": {\n      \"name\": \"Magdalena Contreras\",\n      \"country\": \"MX\",\n      \"lat\": 19.33212,\n      \"long\": -99.21118,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3523908\": {\n      \"name\": \"Los Reyes La Paz\",\n      \"country\": \"MX\",\n      \"lat\": 19.36357,\n      \"long\": -98.97707,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3524744\": {\n      \"name\": \"Las Margaritas\",\n      \"country\": \"MX\",\n      \"lat\": 16.31265,\n      \"long\": -91.98107,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3526485\": {\n      \"name\": \"Jiutepec\",\n      \"country\": \"MX\",\n      \"lat\": 18.88139,\n      \"long\": -99.17778,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3526617\": {\n      \"name\": \"Xalapa de Enríquez\",\n      \"country\": \"MX\",\n      \"lat\": 19.53124,\n      \"long\": -96.91589,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3526682\": {\n      \"name\": \"Ixtapaluca\",\n      \"country\": \"MX\",\n      \"lat\": 19.31556,\n      \"long\": -98.88284,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3526683\": {\n      \"name\": \"Iztapalapa\",\n      \"country\": \"MX\",\n      \"lat\": 19.35738,\n      \"long\": -99.0671,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3526700\": {\n      \"name\": \"Iztacalco\",\n      \"country\": \"MX\",\n      \"lat\": 19.39528,\n      \"long\": -99.09778,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3526798\": {\n      \"name\": \"Iguala de la Independencia\",\n      \"country\": \"MX\",\n      \"lat\": 18.34928,\n      \"long\": -99.53936,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3529612\": {\n      \"name\": \"Ecatepec\",\n      \"country\": \"MX\",\n      \"lat\": 19.61725,\n      \"long\": -99.06601,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3529947\": {\n      \"name\": \"Cuernavaca\",\n      \"country\": \"MX\",\n      \"lat\": 18.9261,\n      \"long\": -99.23075,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3529982\": {\n      \"name\": \"Cuautla Morelos\",\n      \"country\": \"MX\",\n      \"lat\": 18.80459,\n      \"long\": -98.94555,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3530049\": {\n      \"name\": \"Cuajimalpa\",\n      \"country\": \"MX\",\n      \"lat\": 19.35993,\n      \"long\": -99.29388,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3530139\": {\n      \"name\": \"Coyoacán\",\n      \"country\": \"MX\",\n      \"lat\": 19.3467,\n      \"long\": -99.16174,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3530240\": {\n      \"name\": \"Córdoba\",\n      \"country\": \"MX\",\n      \"lat\": 18.88584,\n      \"long\": -96.93125,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3530517\": {\n      \"name\": \"Coatzacoalcos\",\n      \"country\": \"MX\",\n      \"lat\": 18.13346,\n      \"long\": -94.44242,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3530569\": {\n      \"name\": \"Coacalco\",\n      \"country\": \"MX\",\n      \"lat\": 19.63453,\n      \"long\": -99.1005,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3530580\": {\n      \"name\": \"Ciudad Victoria\",\n      \"country\": \"MX\",\n      \"lat\": 23.74174,\n      \"long\": -99.14599,\n      \"zone\": \"America/Monterrey\"\n    },\n    \"3530582\": {\n      \"name\": \"Ciudad Valles\",\n      \"country\": \"MX\",\n      \"lat\": 21.98333,\n      \"long\": -99.01667,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3530589\": {\n      \"name\": \"Ciudad Nezahualcoyotl\",\n      \"country\": \"MX\",\n      \"lat\": 19.40061,\n      \"long\": -99.01483,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3530594\": {\n      \"name\": \"Ciudad Madero\",\n      \"country\": \"MX\",\n      \"lat\": 22.27228,\n      \"long\": -97.83623,\n      \"zone\": \"America/Monterrey\"\n    },\n    \"3530597\": {\n      \"name\": \"Mexico City\",\n      \"country\": \"MX\",\n      \"lat\": 19.42847,\n      \"long\": -99.12766,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3530599\": {\n      \"name\": \"Ciudad del Carmen\",\n      \"country\": \"MX\",\n      \"lat\": 18.64592,\n      \"long\": -91.82991,\n      \"zone\": \"America/Merida\"\n    },\n    \"3530757\": {\n      \"name\": \"Cholula\",\n      \"country\": \"MX\",\n      \"lat\": 19.06406,\n      \"long\": -98.30352,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3530870\": {\n      \"name\": \"Chilpancingo de los Bravos\",\n      \"country\": \"MX\",\n      \"lat\": 17.5506,\n      \"long\": -99.50578,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3531023\": {\n      \"name\": \"Chetumal\",\n      \"country\": \"MX\",\n      \"lat\": 18.51413,\n      \"long\": -88.30381,\n      \"zone\": \"America/Cancun\"\n    },\n    \"3531200\": {\n      \"name\": \"Chalco de Díaz Covarrubias\",\n      \"country\": \"MX\",\n      \"lat\": 19.26174,\n      \"long\": -98.89775,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3531673\": {\n      \"name\": \"Cancún\",\n      \"country\": \"MX\",\n      \"lat\": 21.17429,\n      \"long\": -86.84656,\n      \"zone\": \"America/Cancun\"\n    },\n    \"3531732\": {\n      \"name\": \"Campeche\",\n      \"country\": \"MX\",\n      \"lat\": 19.83803,\n      \"long\": -90.5277,\n      \"zone\": \"America/Merida\"\n    },\n    \"3532497\": {\n      \"name\": \"Azcapotzalco\",\n      \"country\": \"MX\",\n      \"lat\": 19.48698,\n      \"long\": -99.18594,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3532624\": {\n      \"name\": \"Ciudad López Mateos\",\n      \"country\": \"MX\",\n      \"lat\": 19.58547,\n      \"long\": -99.26035,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3533462\": {\n      \"name\": \"Acapulco de Juárez\",\n      \"country\": \"MX\",\n      \"lat\": 16.86336,\n      \"long\": -99.8901,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3536729\": {\n      \"name\": \"Santiago de Cuba\",\n      \"country\": \"CU\",\n      \"lat\": 20.02472,\n      \"long\": -75.82194,\n      \"zone\": \"America/Havana\"\n    },\n    \"3537906\": {\n      \"name\": \"Santa Clara\",\n      \"country\": \"CU\",\n      \"lat\": 22.4,\n      \"long\": -79.96667,\n      \"zone\": \"America/Havana\"\n    },\n    \"3538803\": {\n      \"name\": \"San Miguel del Padrón\",\n      \"country\": \"CU\",\n      \"lat\": 23.06639,\n      \"long\": -82.29472,\n      \"zone\": \"America/Havana\"\n    },\n    \"3540667\": {\n      \"name\": \"Sancti Spíritus\",\n      \"country\": \"CU\",\n      \"lat\": 21.92972,\n      \"long\": -79.4425,\n      \"zone\": \"America/Havana\"\n    },\n    \"3544091\": {\n      \"name\": \"Pinar del Río\",\n      \"country\": \"CU\",\n      \"lat\": 22.4175,\n      \"long\": -83.69806,\n      \"zone\": \"America/Havana\"\n    },\n    \"3545064\": {\n      \"name\": \"Palma Soriano\",\n      \"country\": \"CU\",\n      \"lat\": 20.21238,\n      \"long\": -75.99843,\n      \"zone\": \"America/Havana\"\n    },\n    \"3547398\": {\n      \"name\": \"Matanzas\",\n      \"country\": \"CU\",\n      \"lat\": 23.04111,\n      \"long\": -81.5775,\n      \"zone\": \"America/Havana\"\n    },\n    \"3547867\": {\n      \"name\": \"Manzanillo\",\n      \"country\": \"CU\",\n      \"lat\": 20.34333,\n      \"long\": -77.11667,\n      \"zone\": \"America/Havana\"\n    },\n    \"3550598\": {\n      \"name\": \"Las Tunas\",\n      \"country\": \"CU\",\n      \"lat\": 20.96167,\n      \"long\": -76.95111,\n      \"zone\": \"America/Havana\"\n    },\n    \"3553478\": {\n      \"name\": \"Havana\",\n      \"country\": \"CU\",\n      \"lat\": 23.13302,\n      \"long\": -82.38304,\n      \"zone\": \"America/Havana\"\n    },\n    \"3556969\": {\n      \"name\": \"Holguín\",\n      \"country\": \"CU\",\n      \"lat\": 20.88722,\n      \"long\": -76.26306,\n      \"zone\": \"America/Havana\"\n    },\n    \"3557689\": {\n      \"name\": \"Guantánamo\",\n      \"country\": \"CU\",\n      \"lat\": 20.14444,\n      \"long\": -75.20917,\n      \"zone\": \"America/Havana\"\n    },\n    \"3557846\": {\n      \"name\": \"Guanabacoa\",\n      \"country\": \"CU\",\n      \"lat\": 23.12389,\n      \"long\": -82.30028,\n      \"zone\": \"America/Havana\"\n    },\n    \"3564124\": {\n      \"name\": \"Cienfuegos\",\n      \"country\": \"CU\",\n      \"lat\": 22.14957,\n      \"long\": -80.44662,\n      \"zone\": \"America/Havana\"\n    },\n    \"3564178\": {\n      \"name\": \"Ciego de Ávila\",\n      \"country\": \"CU\",\n      \"lat\": 21.84,\n      \"long\": -78.76194,\n      \"zone\": \"America/Havana\"\n    },\n    \"3564436\": {\n      \"name\": \"Cerro\",\n      \"country\": \"CU\",\n      \"lat\": 23.10861,\n      \"long\": -82.37778,\n      \"zone\": \"America/Havana\"\n    },\n    \"3566067\": {\n      \"name\": \"Camagüey\",\n      \"country\": \"CU\",\n      \"lat\": 21.38083,\n      \"long\": -77.91694,\n      \"zone\": \"America/Havana\"\n    },\n    \"3567597\": {\n      \"name\": \"Bayamo\",\n      \"country\": \"CU\",\n      \"lat\": 20.37917,\n      \"long\": -76.64333,\n      \"zone\": \"America/Havana\"\n    },\n    \"3568342\": {\n      \"name\": \"Arroyo Naranjo\",\n      \"country\": \"CU\",\n      \"lat\": 23.03611,\n      \"long\": -82.37167,\n      \"zone\": \"America/Havana\"\n    },\n    \"3571824\": {\n      \"name\": \"Nassau\",\n      \"country\": \"BS\",\n      \"lat\": 25.05823,\n      \"long\": -77.34306,\n      \"zone\": \"America/Nassau\"\n    },\n    \"3574309\": {\n      \"name\": \"Laventille\",\n      \"country\": \"TT\",\n      \"lat\": 10.64917,\n      \"long\": -61.49889,\n      \"zone\": \"America/Port_of_Spain\"\n    },\n    \"3583096\": {\n      \"name\": \"Soyapango\",\n      \"country\": \"SV\",\n      \"lat\": 13.71024,\n      \"long\": -89.13989,\n      \"zone\": \"America/El_Salvador\"\n    },\n    \"3583334\": {\n      \"name\": \"Santa Ana\",\n      \"country\": \"SV\",\n      \"lat\": 13.99417,\n      \"long\": -89.55972,\n      \"zone\": \"America/El_Salvador\"\n    },\n    \"3583361\": {\n      \"name\": \"San Salvador\",\n      \"country\": \"SV\",\n      \"lat\": 13.68935,\n      \"long\": -89.18718,\n      \"zone\": \"America/El_Salvador\"\n    },\n    \"3583446\": {\n      \"name\": \"San Miguel\",\n      \"country\": \"SV\",\n      \"lat\": 13.48333,\n      \"long\": -88.18333,\n      \"zone\": \"America/El_Salvador\"\n    },\n    \"3584257\": {\n      \"name\": \"Santa Tecla\",\n      \"country\": \"SV\",\n      \"lat\": 13.67694,\n      \"long\": -89.27972,\n      \"zone\": \"America/El_Salvador\"\n    },\n    \"3584399\": {\n      \"name\": \"Mejicanos\",\n      \"country\": \"SV\",\n      \"lat\": 13.74028,\n      \"long\": -89.21306,\n      \"zone\": \"America/El_Salvador\"\n    },\n    \"3587345\": {\n      \"name\": \"Apopa\",\n      \"country\": \"SV\",\n      \"lat\": 13.80722,\n      \"long\": -89.17917,\n      \"zone\": \"America/El_Salvador\"\n    },\n    \"3587902\": {\n      \"name\": \"Villa Nueva\",\n      \"country\": \"GT\",\n      \"lat\": 14.52694,\n      \"long\": -90.5875,\n      \"zone\": \"America/Guatemala\"\n    },\n    \"3587923\": {\n      \"name\": \"Villa Canales\",\n      \"country\": \"GT\",\n      \"lat\": 14.48139,\n      \"long\": -90.53167,\n      \"zone\": \"America/Guatemala\"\n    },\n    \"3589885\": {\n      \"name\": \"San Juan Sacatepéquez\",\n      \"country\": \"GT\",\n      \"lat\": 14.71889,\n      \"long\": -90.64417,\n      \"zone\": \"America/Guatemala\"\n    },\n    \"3590979\": {\n      \"name\": \"Quetzaltenango\",\n      \"country\": \"GT\",\n      \"lat\": 14.83472,\n      \"long\": -91.51806,\n      \"zone\": \"America/Guatemala\"\n    },\n    \"3591415\": {\n      \"name\": \"Petapa\",\n      \"country\": \"GT\",\n      \"lat\": 14.50278,\n      \"long\": -90.55167,\n      \"zone\": \"America/Guatemala\"\n    },\n    \"3592519\": {\n      \"name\": \"Mixco\",\n      \"country\": \"GT\",\n      \"lat\": 14.63333,\n      \"long\": -90.60639,\n      \"zone\": \"America/Guatemala\"\n    },\n    \"3595803\": {\n      \"name\": \"Escuintla\",\n      \"country\": \"GT\",\n      \"lat\": 14.305,\n      \"long\": -90.785,\n      \"zone\": \"America/Guatemala\"\n    },\n    \"3598132\": {\n      \"name\": \"Guatemala City\",\n      \"country\": \"GT\",\n      \"lat\": 14.64072,\n      \"long\": -90.51327,\n      \"zone\": \"America/Guatemala\"\n    },\n    \"3600949\": {\n      \"name\": \"Tegucigalpa\",\n      \"country\": \"HN\",\n      \"lat\": 14.0818,\n      \"long\": -87.20681,\n      \"zone\": \"America/Tegucigalpa\"\n    },\n    \"3601782\": {\n      \"name\": \"San Pedro Sula\",\n      \"country\": \"HN\",\n      \"lat\": 15.50417,\n      \"long\": -88.025,\n      \"zone\": \"America/Tegucigalpa\"\n    },\n    \"3608248\": {\n      \"name\": \"La Ceiba\",\n      \"country\": \"HN\",\n      \"lat\": 15.75971,\n      \"long\": -86.78221,\n      \"zone\": \"America/Tegucigalpa\"\n    },\n    \"3610613\": {\n      \"name\": \"El Progreso\",\n      \"country\": \"HN\",\n      \"lat\": 15.4,\n      \"long\": -87.8,\n      \"zone\": \"America/Tegucigalpa\"\n    },\n    \"3613533\": {\n      \"name\": \"Choloma\",\n      \"country\": \"HN\",\n      \"lat\": 15.61444,\n      \"long\": -87.95302,\n      \"zone\": \"America/Tegucigalpa\"\n    },\n    \"3616035\": {\n      \"name\": \"Tipitapa\",\n      \"country\": \"NI\",\n      \"lat\": 12.19732,\n      \"long\": -86.09706,\n      \"zone\": \"America/Managua\"\n    },\n    \"3617708\": {\n      \"name\": \"Matagalpa\",\n      \"country\": \"NI\",\n      \"lat\": 12.92559,\n      \"long\": -85.91747,\n      \"zone\": \"America/Managua\"\n    },\n    \"3617723\": {\n      \"name\": \"Masaya\",\n      \"country\": \"NI\",\n      \"lat\": 11.97444,\n      \"long\": -86.09417,\n      \"zone\": \"America/Managua\"\n    },\n    \"3617763\": {\n      \"name\": \"Managua\",\n      \"country\": \"NI\",\n      \"lat\": 12.13282,\n      \"long\": -86.2504,\n      \"zone\": \"America/Managua\"\n    },\n    \"3618030\": {\n      \"name\": \"León\",\n      \"country\": \"NI\",\n      \"lat\": 12.43787,\n      \"long\": -86.87804,\n      \"zone\": \"America/Managua\"\n    },\n    \"3620381\": {\n      \"name\": \"Chinandega\",\n      \"country\": \"NI\",\n      \"lat\": 12.62937,\n      \"long\": -87.13105,\n      \"zone\": \"America/Managua\"\n    },\n    \"3621849\": {\n      \"name\": \"San José\",\n      \"country\": \"CR\",\n      \"lat\": 9.93333,\n      \"long\": -84.08333,\n      \"zone\": \"America/Costa_Rica\"\n    },\n    \"3625549\": {\n      \"name\": \"Valencia\",\n      \"country\": \"VE\",\n      \"lat\": 10.16202,\n      \"long\": -68.00765,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3625829\": {\n      \"name\": \"Turmero\",\n      \"country\": \"VE\",\n      \"lat\": 10.22856,\n      \"long\": -67.47421,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3627047\": {\n      \"name\": \"Santa Teresa\",\n      \"country\": \"VE\",\n      \"lat\": 10.23409,\n      \"long\": -66.66308,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3628473\": {\n      \"name\": \"San Cristóbal\",\n      \"country\": \"VE\",\n      \"lat\": 7.76694,\n      \"long\": -72.225,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3629576\": {\n      \"name\": \"Punto Fijo\",\n      \"country\": \"VE\",\n      \"lat\": 11.6956,\n      \"long\": -70.19957,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3629672\": {\n      \"name\": \"Puerto La Cruz\",\n      \"country\": \"VE\",\n      \"lat\": 10.21667,\n      \"long\": -64.61667,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3629706\": {\n      \"name\": \"Puerto Cabello\",\n      \"country\": \"VE\",\n      \"lat\": 10.47306,\n      \"long\": -68.0125,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3630297\": {\n      \"name\": \"Petare\",\n      \"country\": \"VE\",\n      \"lat\": 10.47226,\n      \"long\": -66.80155,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3630932\": {\n      \"name\": \"Palo Negro\",\n      \"country\": \"VE\",\n      \"lat\": 10.17389,\n      \"long\": -67.54194,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3631412\": {\n      \"name\": \"Ocumare del Tuy\",\n      \"country\": \"VE\",\n      \"lat\": 10.11649,\n      \"long\": -66.77609,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3631741\": {\n      \"name\": \"Mucumpiz\",\n      \"country\": \"VE\",\n      \"lat\": 8.41667,\n      \"long\": -71.13333,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3632308\": {\n      \"name\": \"Mérida\",\n      \"country\": \"VE\",\n      \"lat\": 8.59524,\n      \"long\": -71.1434,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3632929\": {\n      \"name\": \"Mariara\",\n      \"country\": \"VE\",\n      \"lat\": 10.29644,\n      \"long\": -67.71813,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3632998\": {\n      \"name\": \"Maracay\",\n      \"country\": \"VE\",\n      \"lat\": 10.24694,\n      \"long\": -67.59583,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3633009\": {\n      \"name\": \"Maracaibo\",\n      \"country\": \"VE\",\n      \"lat\": 10.63167,\n      \"long\": -71.64056,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3633622\": {\n      \"name\": \"Los Teques\",\n      \"country\": \"VE\",\n      \"lat\": 10.34447,\n      \"long\": -67.04325,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3639898\": {\n      \"name\": \"Guatire\",\n      \"country\": \"VE\",\n      \"lat\": 10.4762,\n      \"long\": -66.54266,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3640049\": {\n      \"name\": \"Guarenas\",\n      \"country\": \"VE\",\n      \"lat\": 10.46736,\n      \"long\": -66.60663,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3640226\": {\n      \"name\": \"Guanare\",\n      \"country\": \"VE\",\n      \"lat\": 9.04183,\n      \"long\": -69.74206,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3640465\": {\n      \"name\": \"Guacara\",\n      \"country\": \"VE\",\n      \"lat\": 10.22609,\n      \"long\": -67.877,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3641351\": {\n      \"name\": \"El Tigre\",\n      \"country\": \"VE\",\n      \"lat\": 8.88752,\n      \"long\": -64.24544,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3642833\": {\n      \"name\": \"El Limón\",\n      \"country\": \"VE\",\n      \"lat\": 10.30589,\n      \"long\": -67.63212,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3644417\": {\n      \"name\": \"Ejido\",\n      \"country\": \"VE\",\n      \"lat\": 8.54665,\n      \"long\": -71.24087,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3644768\": {\n      \"name\": \"Cumaná\",\n      \"country\": \"VE\",\n      \"lat\": 10.45397,\n      \"long\": -64.18256,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3644918\": {\n      \"name\": \"Cúa\",\n      \"country\": \"VE\",\n      \"lat\": 10.15892,\n      \"long\": -66.88575,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3645213\": {\n      \"name\": \"Coro\",\n      \"country\": \"VE\",\n      \"lat\": 11.4045,\n      \"long\": -69.67344,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3645528\": {\n      \"name\": \"Ciudad Guayana\",\n      \"country\": \"VE\",\n      \"lat\": 8.35122,\n      \"long\": -62.64102,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3645532\": {\n      \"name\": \"Ciudad Bolívar\",\n      \"country\": \"VE\",\n      \"lat\": 8.12923,\n      \"long\": -63.54086,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3645854\": {\n      \"name\": \"Charallave\",\n      \"country\": \"VE\",\n      \"lat\": 10.24247,\n      \"long\": -66.85723,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3646190\": {\n      \"name\": \"Catia La Mar\",\n      \"country\": \"VE\",\n      \"lat\": 10.60383,\n      \"long\": -67.03034,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3646382\": {\n      \"name\": \"Carúpano\",\n      \"country\": \"VE\",\n      \"lat\": 10.66781,\n      \"long\": -63.25849,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3646738\": {\n      \"name\": \"Caracas\",\n      \"country\": \"VE\",\n      \"lat\": 10.48801,\n      \"long\": -66.87919,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3647444\": {\n      \"name\": \"Calabozo\",\n      \"country\": \"VE\",\n      \"lat\": 8.92416,\n      \"long\": -67.42929,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3647549\": {\n      \"name\": \"Cagua\",\n      \"country\": \"VE\",\n      \"lat\": 10.18634,\n      \"long\": -67.45935,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3647651\": {\n      \"name\": \"Cabimas\",\n      \"country\": \"VE\",\n      \"lat\": 10.38828,\n      \"long\": -71.43993,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3648439\": {\n      \"name\": \"Baruta\",\n      \"country\": \"VE\",\n      \"lat\": 10.43398,\n      \"long\": -66.87662,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3648522\": {\n      \"name\": \"Barquisimeto\",\n      \"country\": \"VE\",\n      \"lat\": 10.07389,\n      \"long\": -69.32278,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3648546\": {\n      \"name\": \"Barinas\",\n      \"country\": \"VE\",\n      \"lat\": 8.62261,\n      \"long\": -70.20749,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3648559\": {\n      \"name\": \"Barcelona\",\n      \"country\": \"VE\",\n      \"lat\": 10.13333,\n      \"long\": -64.7,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3649833\": {\n      \"name\": \"Acarigua\",\n      \"country\": \"VE\",\n      \"lat\": 9.55451,\n      \"long\": -69.19564,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3651297\": {\n      \"name\": \"Santo Domingo de los Colorados\",\n      \"country\": \"EC\",\n      \"lat\": -0.25305,\n      \"long\": -79.17536,\n      \"zone\": \"America/Guayaquil\"\n    },\n    \"3652350\": {\n      \"name\": \"Riobamba\",\n      \"country\": \"EC\",\n      \"lat\": -1.67098,\n      \"long\": -78.64712,\n      \"zone\": \"America/Guayaquil\"\n    },\n    \"3652462\": {\n      \"name\": \"Quito\",\n      \"country\": \"EC\",\n      \"lat\": -0.22985,\n      \"long\": -78.52495,\n      \"zone\": \"America/Guayaquil\"\n    },\n    \"3652567\": {\n      \"name\": \"Quevedo\",\n      \"country\": \"EC\",\n      \"lat\": -1.02863,\n      \"long\": -79.46352,\n      \"zone\": \"America/Guayaquil\"\n    },\n    \"3652941\": {\n      \"name\": \"Portoviejo\",\n      \"country\": \"EC\",\n      \"lat\": -1.05458,\n      \"long\": -80.45445,\n      \"zone\": \"America/Guayaquil\"\n    },\n    \"3654410\": {\n      \"name\": \"Manta\",\n      \"country\": \"EC\",\n      \"lat\": -0.96212,\n      \"long\": -80.71271,\n      \"zone\": \"America/Guayaquil\"\n    },\n    \"3654533\": {\n      \"name\": \"Machala\",\n      \"country\": \"EC\",\n      \"lat\": -3.25861,\n      \"long\": -79.96053,\n      \"zone\": \"America/Guayaquil\"\n    },\n    \"3654667\": {\n      \"name\": \"Loja\",\n      \"country\": \"EC\",\n      \"lat\": -3.99313,\n      \"long\": -79.20422,\n      \"zone\": \"America/Guayaquil\"\n    },\n    \"3655673\": {\n      \"name\": \"Ibarra\",\n      \"country\": \"EC\",\n      \"lat\": 0.35171,\n      \"long\": -78.12233,\n      \"zone\": \"America/Guayaquil\"\n    },\n    \"3657509\": {\n      \"name\": \"Guayaquil\",\n      \"country\": \"EC\",\n      \"lat\": -2.20584,\n      \"long\": -79.90795,\n      \"zone\": \"America/Guayaquil\"\n    },\n    \"3657990\": {\n      \"name\": \"Esmeraldas\",\n      \"country\": \"EC\",\n      \"lat\": 0.9592,\n      \"long\": -79.65397,\n      \"zone\": \"America/Guayaquil\"\n    },\n    \"3658192\": {\n      \"name\": \"Eloy Alfaro\",\n      \"country\": \"EC\",\n      \"lat\": -2.17579,\n      \"long\": -79.85519,\n      \"zone\": \"America/Guayaquil\"\n    },\n    \"3658666\": {\n      \"name\": \"Cuenca\",\n      \"country\": \"EC\",\n      \"lat\": -2.90055,\n      \"long\": -79.00453,\n      \"zone\": \"America/Guayaquil\"\n    },\n    \"3660689\": {\n      \"name\": \"Ambato\",\n      \"country\": \"EC\",\n      \"lat\": -1.24908,\n      \"long\": -78.61675,\n      \"zone\": \"America/Guayaquil\"\n    },\n    \"3662574\": {\n      \"name\": \"Rio Branco\",\n      \"country\": \"BR\",\n      \"lat\": -9.97472,\n      \"long\": -67.81,\n      \"zone\": \"America/Rio_Branco\"\n    },\n    \"3662762\": {\n      \"name\": \"Porto Velho\",\n      \"country\": \"BR\",\n      \"lat\": -8.76194,\n      \"long\": -63.90389,\n      \"zone\": \"America/Porto_Velho\"\n    },\n    \"3663517\": {\n      \"name\": \"Manaus\",\n      \"country\": \"BR\",\n      \"lat\": -3.10194,\n      \"long\": -60.025,\n      \"zone\": \"America/Manaus\"\n    },\n    \"3664980\": {\n      \"name\": \"Boa Vista\",\n      \"country\": \"BR\",\n      \"lat\": 2.81972,\n      \"long\": -60.67333,\n      \"zone\": \"America/Boa_Vista\"\n    },\n    \"3665900\": {\n      \"name\": \"Villavicencio\",\n      \"country\": \"CO\",\n      \"lat\": 4.142,\n      \"long\": -73.62664,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3666304\": {\n      \"name\": \"Valledupar\",\n      \"country\": \"CO\",\n      \"lat\": 10.46314,\n      \"long\": -73.25322,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3666608\": {\n      \"name\": \"Tunja\",\n      \"country\": \"CO\",\n      \"lat\": 5.53528,\n      \"long\": -73.36778,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3666645\": {\n      \"name\": \"Tuluá\",\n      \"country\": \"CO\",\n      \"lat\": 4.08466,\n      \"long\": -76.19536,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3667849\": {\n      \"name\": \"Soledad\",\n      \"country\": \"CO\",\n      \"lat\": 10.91843,\n      \"long\": -74.76459,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3667873\": {\n      \"name\": \"Sogamoso\",\n      \"country\": \"CO\",\n      \"lat\": 5.71434,\n      \"long\": -72.93391,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3667905\": {\n      \"name\": \"Soacha\",\n      \"country\": \"CO\",\n      \"lat\": 4.57937,\n      \"long\": -74.21682,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3667983\": {\n      \"name\": \"Sincelejo\",\n      \"country\": \"CO\",\n      \"lat\": 9.30472,\n      \"long\": -75.39778,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3668605\": {\n      \"name\": \"Santa Marta\",\n      \"country\": \"CO\",\n      \"lat\": 11.24079,\n      \"long\": -74.19904,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3671916\": {\n      \"name\": \"Popayán\",\n      \"country\": \"CO\",\n      \"lat\": 2.43823,\n      \"long\": -76.61316,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3672486\": {\n      \"name\": \"Pereira\",\n      \"country\": \"CO\",\n      \"lat\": 4.81333,\n      \"long\": -75.69611,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3672778\": {\n      \"name\": \"Pasto\",\n      \"country\": \"CO\",\n      \"lat\": 1.21361,\n      \"long\": -77.28111,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3673164\": {\n      \"name\": \"Palmira\",\n      \"country\": \"CO\",\n      \"lat\": 3.53944,\n      \"long\": -76.30361,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3673899\": {\n      \"name\": \"Neiva\",\n      \"country\": \"CO\",\n      \"lat\": 2.9273,\n      \"long\": -75.28189,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3674453\": {\n      \"name\": \"Montería\",\n      \"country\": \"CO\",\n      \"lat\": 8.74798,\n      \"long\": -75.88143,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3674962\": {\n      \"name\": \"Medellín\",\n      \"country\": \"CO\",\n      \"lat\": 6.25184,\n      \"long\": -75.56359,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3675443\": {\n      \"name\": \"Manizales\",\n      \"country\": \"CO\",\n      \"lat\": 5.06889,\n      \"long\": -75.51738,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3675595\": {\n      \"name\": \"Malambo\",\n      \"country\": \"CO\",\n      \"lat\": 10.85953,\n      \"long\": -74.77386,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3675657\": {\n      \"name\": \"Maicao\",\n      \"country\": \"CO\",\n      \"lat\": 11.38321,\n      \"long\": -72.24321,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3675692\": {\n      \"name\": \"Magangué\",\n      \"country\": \"CO\",\n      \"lat\": 9.24202,\n      \"long\": -74.75467,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3680450\": {\n      \"name\": \"Itagüí\",\n      \"country\": \"CO\",\n      \"lat\": 6.18461,\n      \"long\": -75.59913,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3680656\": {\n      \"name\": \"Ibagué\",\n      \"country\": \"CO\",\n      \"lat\": 4.43889,\n      \"long\": -75.23222,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3682018\": {\n      \"name\": \"Girón\",\n      \"country\": \"CO\",\n      \"lat\": 7.0682,\n      \"long\": -73.16981,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3682028\": {\n      \"name\": \"Girardot City\",\n      \"country\": \"CO\",\n      \"lat\": 4.30079,\n      \"long\": -74.80754,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3682385\": {\n      \"name\": \"Floridablanca\",\n      \"country\": \"CO\",\n      \"lat\": 7.06222,\n      \"long\": -73.08644,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3682426\": {\n      \"name\": \"Florencia\",\n      \"country\": \"CO\",\n      \"lat\": 1.61438,\n      \"long\": -75.60623,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3682631\": {\n      \"name\": \"Envigado\",\n      \"country\": \"CO\",\n      \"lat\": 6.17591,\n      \"long\": -75.59174,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3685095\": {\n      \"name\": \"Dos Quebradas\",\n      \"country\": \"CO\",\n      \"lat\": 4.83916,\n      \"long\": -75.66727,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3685533\": {\n      \"name\": \"Cúcuta\",\n      \"country\": \"CO\",\n      \"lat\": 7.89391,\n      \"long\": -72.50782,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3687230\": {\n      \"name\": \"Cartago\",\n      \"country\": \"CO\",\n      \"lat\": 4.74639,\n      \"long\": -75.91167,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3687238\": {\n      \"name\": \"Cartagena\",\n      \"country\": \"CO\",\n      \"lat\": 10.39972,\n      \"long\": -75.51444,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3687925\": {\n      \"name\": \"Cali\",\n      \"country\": \"CO\",\n      \"lat\": 3.43722,\n      \"long\": -76.5225,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3688256\": {\n      \"name\": \"Buga\",\n      \"country\": \"CO\",\n      \"lat\": 3.90089,\n      \"long\": -76.29783,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3688451\": {\n      \"name\": \"Buenaventura\",\n      \"country\": \"CO\",\n      \"lat\": 3.8801,\n      \"long\": -77.03116,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3688465\": {\n      \"name\": \"Bucaramanga\",\n      \"country\": \"CO\",\n      \"lat\": 7.12539,\n      \"long\": -73.1198,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3688689\": {\n      \"name\": \"Bogotá\",\n      \"country\": \"CO\",\n      \"lat\": 4.60971,\n      \"long\": -74.08175,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3688928\": {\n      \"name\": \"Bello\",\n      \"country\": \"CO\",\n      \"lat\": 6.33732,\n      \"long\": -75.55795,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3689147\": {\n      \"name\": \"Barranquilla\",\n      \"country\": \"CO\",\n      \"lat\": 10.96854,\n      \"long\": -74.78132,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3689169\": {\n      \"name\": \"Barrancabermeja\",\n      \"country\": \"CO\",\n      \"lat\": 7.06528,\n      \"long\": -73.85472,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3689560\": {\n      \"name\": \"Armenia\",\n      \"country\": \"CO\",\n      \"lat\": 4.53389,\n      \"long\": -75.68111,\n      \"zone\": \"America/Bogota\"\n    },\n    \"3691148\": {\n      \"name\": \"Tumbes\",\n      \"country\": \"PE\",\n      \"lat\": -3.56694,\n      \"long\": -80.45153,\n      \"zone\": \"America/Lima\"\n    },\n    \"3691175\": {\n      \"name\": \"Trujillo\",\n      \"country\": \"PE\",\n      \"lat\": -8.11599,\n      \"long\": -79.02998,\n      \"zone\": \"America/Lima\"\n    },\n    \"3691674\": {\n      \"name\": \"Sullana\",\n      \"country\": \"PE\",\n      \"lat\": -4.90389,\n      \"long\": -80.68528,\n      \"zone\": \"America/Lima\"\n    },\n    \"3693345\": {\n      \"name\": \"Pucallpa\",\n      \"country\": \"PE\",\n      \"lat\": -8.37915,\n      \"long\": -74.55387,\n      \"zone\": \"America/Lima\"\n    },\n    \"3693528\": {\n      \"name\": \"Piura\",\n      \"country\": \"PE\",\n      \"lat\": -5.19449,\n      \"long\": -80.63282,\n      \"zone\": \"America/Lima\"\n    },\n    \"3696183\": {\n      \"name\": \"Iquitos\",\n      \"country\": \"PE\",\n      \"lat\": -3.74912,\n      \"long\": -73.25383,\n      \"zone\": \"America/Lima\"\n    },\n    \"3696417\": {\n      \"name\": \"Huánuco\",\n      \"country\": \"PE\",\n      \"lat\": -9.93062,\n      \"long\": -76.24223,\n      \"zone\": \"America/Lima\"\n    },\n    \"3698304\": {\n      \"name\": \"Chimbote\",\n      \"country\": \"PE\",\n      \"lat\": -9.08528,\n      \"long\": -78.57833,\n      \"zone\": \"America/Lima\"\n    },\n    \"3698350\": {\n      \"name\": \"Chiclayo\",\n      \"country\": \"PE\",\n      \"lat\": -6.77137,\n      \"long\": -79.84088,\n      \"zone\": \"America/Lima\"\n    },\n    \"3699088\": {\n      \"name\": \"Cajamarca\",\n      \"country\": \"PE\",\n      \"lat\": -7.16378,\n      \"long\": -78.50027,\n      \"zone\": \"America/Lima\"\n    },\n    \"3701329\": {\n      \"name\": \"San Miguelito\",\n      \"country\": \"PA\",\n      \"lat\": 9.05032,\n      \"long\": -79.47068,\n      \"zone\": \"America/Panama\"\n    },\n    \"3703443\": {\n      \"name\": \"Panamá\",\n      \"country\": \"PA\",\n      \"lat\": 8.9936,\n      \"long\": -79.51973,\n      \"zone\": \"America/Panama\"\n    },\n    \"3718420\": {\n      \"name\": \"Port-de-Paix\",\n      \"country\": \"HT\",\n      \"lat\": 19.9389,\n      \"long\": -72.83257,\n      \"zone\": \"America/Port-au-Prince\"\n    },\n    \"3718426\": {\n      \"name\": \"Port-au-Prince\",\n      \"country\": \"HT\",\n      \"lat\": 18.53917,\n      \"long\": -72.335,\n      \"zone\": \"America/Port-au-Prince\"\n    },\n    \"3718962\": {\n      \"name\": \"Tigwav\",\n      \"country\": \"HT\",\n      \"lat\": 18.42939,\n      \"long\": -72.86297,\n      \"zone\": \"America/Port-au-Prince\"\n    },\n    \"3719028\": {\n      \"name\": \"Pétionville\",\n      \"country\": \"HT\",\n      \"lat\": 18.5125,\n      \"long\": -72.28528,\n      \"zone\": \"America/Port-au-Prince\"\n    },\n    \"3722286\": {\n      \"name\": \"Léogâne\",\n      \"country\": \"HT\",\n      \"lat\": 18.50959,\n      \"long\": -72.63147,\n      \"zone\": \"America/Port-au-Prince\"\n    },\n    \"3723779\": {\n      \"name\": \"Jacmel\",\n      \"country\": \"HT\",\n      \"lat\": 18.23427,\n      \"long\": -72.53539,\n      \"zone\": \"America/Port-au-Prince\"\n    },\n    \"3726786\": {\n      \"name\": \"Delmas 73\",\n      \"country\": \"HT\",\n      \"lat\": 18.54472,\n      \"long\": -72.30278,\n      \"zone\": \"America/Port-au-Prince\"\n    },\n    \"3727135\": {\n      \"name\": \"Croix des Bouquets\",\n      \"country\": \"HT\",\n      \"lat\": 18.57512,\n      \"long\": -72.22302,\n      \"zone\": \"America/Port-au-Prince\"\n    },\n    \"3728097\": {\n      \"name\": \"Les Cayes\",\n      \"country\": \"HT\",\n      \"lat\": 18.19331,\n      \"long\": -73.74601,\n      \"zone\": \"America/Port-au-Prince\"\n    },\n    \"3728338\": {\n      \"name\": \"Carrefour\",\n      \"country\": \"HT\",\n      \"lat\": 18.54114,\n      \"long\": -72.39922,\n      \"zone\": \"America/Port-au-Prince\"\n    },\n    \"3728474\": {\n      \"name\": \"Okap\",\n      \"country\": \"HT\",\n      \"lat\": 19.75938,\n      \"long\": -72.19815,\n      \"zone\": \"America/Port-au-Prince\"\n    },\n    \"3746181\": {\n      \"name\": \"Habana del Este\",\n      \"country\": \"CU\",\n      \"lat\": 23.15917,\n      \"long\": -82.33056,\n      \"zone\": \"America/Havana\"\n    },\n    \"3746183\": {\n      \"name\": \"Centro Habana\",\n      \"country\": \"CU\",\n      \"lat\": 23.13833,\n      \"long\": -82.36417,\n      \"zone\": \"America/Havana\"\n    },\n    \"3778045\": {\n      \"name\": \"Maturín\",\n      \"country\": \"VE\",\n      \"lat\": 9.74569,\n      \"long\": -63.18323,\n      \"zone\": \"America/Caracas\"\n    },\n    \"3824166\": {\n      \"name\": \"Tampico\",\n      \"country\": \"MX\",\n      \"lat\": 22.25528,\n      \"long\": -97.86861,\n      \"zone\": \"America/Monterrey\"\n    },\n    \"3827406\": {\n      \"name\": \"Benito Juarez\",\n      \"country\": \"MX\",\n      \"lat\": 19.3984,\n      \"long\": -99.15766,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3827407\": {\n      \"name\": \"Venustiano Carranza\",\n      \"country\": \"MX\",\n      \"lat\": 19.44286,\n      \"long\": -99.09724,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3827408\": {\n      \"name\": \"Miguel Hidalgo\",\n      \"country\": \"MX\",\n      \"lat\": 19.43471,\n      \"long\": -99.20091,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3827409\": {\n      \"name\": \"Cuauhtémoc\",\n      \"country\": \"MX\",\n      \"lat\": 19.44506,\n      \"long\": -99.14612,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3827414\": {\n      \"name\": \"Huixquilucan\",\n      \"country\": \"MX\",\n      \"lat\": 19.35985,\n      \"long\": -99.35016,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3827598\": {\n      \"name\": \"Ojo de Agua\",\n      \"country\": \"MX\",\n      \"lat\": 19.68028,\n      \"long\": -99.01,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3827606\": {\n      \"name\": \"Buenavista\",\n      \"country\": \"MX\",\n      \"lat\": 19.60833,\n      \"long\": -99.16944,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3835869\": {\n      \"name\": \"Santiago del Estero\",\n      \"country\": \"AR\",\n      \"lat\": -27.79511,\n      \"long\": -64.26149,\n      \"zone\": \"America/Argentina/Cordoba\"\n    },\n    \"3835994\": {\n      \"name\": \"Santa Rosa\",\n      \"country\": \"AR\",\n      \"lat\": -36.61667,\n      \"long\": -64.28333,\n      \"zone\": \"America/Argentina/Salta\"\n    },\n    \"3836277\": {\n      \"name\": \"Santa Fe de la Vera Cruz\",\n      \"country\": \"AR\",\n      \"lat\": -31.63333,\n      \"long\": -60.7,\n      \"zone\": \"America/Argentina/Cordoba\"\n    },\n    \"3836564\": {\n      \"name\": \"San Salvador de Jujuy\",\n      \"country\": \"AR\",\n      \"lat\": -24.19457,\n      \"long\": -65.29712,\n      \"zone\": \"America/Argentina/Jujuy\"\n    },\n    \"3836669\": {\n      \"name\": \"San Rafael\",\n      \"country\": \"AR\",\n      \"lat\": -34.61772,\n      \"long\": -68.33007,\n      \"zone\": \"America/Argentina/Mendoza\"\n    },\n    \"3836846\": {\n      \"name\": \"San Nicolás de los Arroyos\",\n      \"country\": \"AR\",\n      \"lat\": -33.33578,\n      \"long\": -60.22523,\n      \"zone\": \"America/Argentina/Buenos_Aires\"\n    },\n    \"3836873\": {\n      \"name\": \"San Miguel de Tucumán\",\n      \"country\": \"AR\",\n      \"lat\": -26.82414,\n      \"long\": -65.2226,\n      \"zone\": \"America/Argentina/Tucuman\"\n    },\n    \"3837056\": {\n      \"name\": \"San Luis\",\n      \"country\": \"AR\",\n      \"lat\": -33.29501,\n      \"long\": -66.33563,\n      \"zone\": \"America/Argentina/San_Luis\"\n    },\n    \"3837213\": {\n      \"name\": \"San Juan\",\n      \"country\": \"AR\",\n      \"lat\": -31.5375,\n      \"long\": -68.53639,\n      \"zone\": \"America/Argentina/San_Juan\"\n    },\n    \"3837702\": {\n      \"name\": \"San Fernando del Valle de Catamarca\",\n      \"country\": \"AR\",\n      \"lat\": -28.46957,\n      \"long\": -65.78524,\n      \"zone\": \"America/Argentina/Catamarca\"\n    },\n    \"3838233\": {\n      \"name\": \"Salta\",\n      \"country\": \"AR\",\n      \"lat\": -24.7859,\n      \"long\": -65.41166,\n      \"zone\": \"America/Argentina/Salta\"\n    },\n    \"3838583\": {\n      \"name\": \"Rosario\",\n      \"country\": \"AR\",\n      \"lat\": -32.94682,\n      \"long\": -60.63932,\n      \"zone\": \"America/Argentina/Cordoba\"\n    },\n    \"3838874\": {\n      \"name\": \"Río Cuarto\",\n      \"country\": \"AR\",\n      \"lat\": -33.13067,\n      \"long\": -64.34992,\n      \"zone\": \"America/Argentina/Cordoba\"\n    },\n    \"3841956\": {\n      \"name\": \"Paraná\",\n      \"country\": \"AR\",\n      \"lat\": -31.73197,\n      \"long\": -60.5238,\n      \"zone\": \"America/Argentina/Cordoba\"\n    },\n    \"3843123\": {\n      \"name\": \"Neuquén\",\n      \"country\": \"AR\",\n      \"lat\": -38.95161,\n      \"long\": -68.0591,\n      \"zone\": \"America/Argentina/Salta\"\n    },\n    \"3844421\": {\n      \"name\": \"Mendoza\",\n      \"country\": \"AR\",\n      \"lat\": -32.89084,\n      \"long\": -68.82717,\n      \"zone\": \"America/Argentina/Mendoza\"\n    },\n    \"3848950\": {\n      \"name\": \"La Rioja\",\n      \"country\": \"AR\",\n      \"lat\": -29.41105,\n      \"long\": -66.85067,\n      \"zone\": \"America/Argentina/La_Rioja\"\n    },\n    \"3860259\": {\n      \"name\": \"Córdoba\",\n      \"country\": \"AR\",\n      \"lat\": -31.4135,\n      \"long\": -64.18105,\n      \"zone\": \"America/Argentina/Cordoba\"\n    },\n    \"3860443\": {\n      \"name\": \"Comodoro Rivadavia\",\n      \"country\": \"AR\",\n      \"lat\": -45.86413,\n      \"long\": -67.49656,\n      \"zone\": \"America/Argentina/Catamarca\"\n    },\n    \"3865086\": {\n      \"name\": \"Bahía Blanca\",\n      \"country\": \"AR\",\n      \"lat\": -38.71959,\n      \"long\": -62.27243,\n      \"zone\": \"America/Argentina/Buenos_Aires\"\n    },\n    \"3868121\": {\n      \"name\": \"Viña del Mar\",\n      \"country\": \"CL\",\n      \"lat\": -33.02457,\n      \"long\": -71.55183,\n      \"zone\": \"America/Santiago\"\n    },\n    \"3868626\": {\n      \"name\": \"Valparaíso\",\n      \"country\": \"CL\",\n      \"lat\": -33.03932,\n      \"long\": -71.62725,\n      \"zone\": \"America/Santiago\"\n    },\n    \"3868707\": {\n      \"name\": \"Valdivia\",\n      \"country\": \"CL\",\n      \"lat\": -39.81422,\n      \"long\": -73.24589,\n      \"zone\": \"America/Santiago\"\n    },\n    \"3870011\": {\n      \"name\": \"Temuco\",\n      \"country\": \"CL\",\n      \"lat\": -38.73965,\n      \"long\": -72.59842,\n      \"zone\": \"America/Santiago\"\n    },\n    \"3870282\": {\n      \"name\": \"Talcahuano\",\n      \"country\": \"CL\",\n      \"lat\": -36.72494,\n      \"long\": -73.11684,\n      \"zone\": \"America/Santiago\"\n    },\n    \"3870294\": {\n      \"name\": \"Talca\",\n      \"country\": \"CL\",\n      \"lat\": -35.4264,\n      \"long\": -71.65542,\n      \"zone\": \"America/Santiago\"\n    },\n    \"3871336\": {\n      \"name\": \"Santiago\",\n      \"country\": \"CL\",\n      \"lat\": -33.45694,\n      \"long\": -70.64827,\n      \"zone\": \"America/Santiago\"\n    },\n    \"3872348\": {\n      \"name\": \"San Bernardo\",\n      \"country\": \"CL\",\n      \"lat\": -33.59217,\n      \"long\": -70.6996,\n      \"zone\": \"America/Santiago\"\n    },\n    \"3873775\": {\n      \"name\": \"Rancagua\",\n      \"country\": \"CL\",\n      \"lat\": -34.17083,\n      \"long\": -70.74444,\n      \"zone\": \"America/Santiago\"\n    },\n    \"3874096\": {\n      \"name\": \"Quilpué\",\n      \"country\": \"CL\",\n      \"lat\": -33.04752,\n      \"long\": -71.44249,\n      \"zone\": \"America/Santiago\"\n    },\n    \"3874787\": {\n      \"name\": \"Punta Arenas\",\n      \"country\": \"CL\",\n      \"lat\": -53.15483,\n      \"long\": -70.91129,\n      \"zone\": \"America/Santiago\"\n    },\n    \"3874960\": {\n      \"name\": \"Puerto Montt\",\n      \"country\": \"CL\",\n      \"lat\": -41.46574,\n      \"long\": -72.94289,\n      \"zone\": \"America/Santiago\"\n    },\n    \"3875024\": {\n      \"name\": \"Puente Alto\",\n      \"country\": \"CL\",\n      \"lat\": -33.61169,\n      \"long\": -70.57577,\n      \"zone\": \"America/Santiago\"\n    },\n    \"3877949\": {\n      \"name\": \"Osorno\",\n      \"country\": \"CL\",\n      \"lat\": -40.57395,\n      \"long\": -73.13348,\n      \"zone\": \"America/Santiago\"\n    },\n    \"3882428\": {\n      \"name\": \"Los Ángeles\",\n      \"country\": \"CL\",\n      \"lat\": -37.46973,\n      \"long\": -72.35366,\n      \"zone\": \"America/Santiago\"\n    },\n    \"3884373\": {\n      \"name\": \"La Serena\",\n      \"country\": \"CL\",\n      \"lat\": -29.90453,\n      \"long\": -71.24894,\n      \"zone\": \"America/Santiago\"\n    },\n    \"3887127\": {\n      \"name\": \"Iquique\",\n      \"country\": \"CL\",\n      \"lat\": -20.22036,\n      \"long\": -70.13913,\n      \"zone\": \"America/Santiago\"\n    },\n    \"3892870\": {\n      \"name\": \"Curicó\",\n      \"country\": \"CL\",\n      \"lat\": -34.98279,\n      \"long\": -71.23943,\n      \"zone\": \"America/Santiago\"\n    },\n    \"3893629\": {\n      \"name\": \"Coquimbo\",\n      \"country\": \"CL\",\n      \"lat\": -29.95332,\n      \"long\": -71.33947,\n      \"zone\": \"America/Santiago\"\n    },\n    \"3893656\": {\n      \"name\": \"Copiapó\",\n      \"country\": \"CL\",\n      \"lat\": -27.36679,\n      \"long\": -70.3314,\n      \"zone\": \"America/Santiago\"\n    },\n    \"3893894\": {\n      \"name\": \"Concepción\",\n      \"country\": \"CL\",\n      \"lat\": -36.82699,\n      \"long\": -73.04977,\n      \"zone\": \"America/Santiago\"\n    },\n    \"3895088\": {\n      \"name\": \"Chillán\",\n      \"country\": \"CL\",\n      \"lat\": -36.60664,\n      \"long\": -72.10344,\n      \"zone\": \"America/Santiago\"\n    },\n    \"3897347\": {\n      \"name\": \"Calama\",\n      \"country\": \"CL\",\n      \"lat\": -22.45591,\n      \"long\": -68.93015,\n      \"zone\": \"America/Santiago\"\n    },\n    \"3899361\": {\n      \"name\": \"Arica\",\n      \"country\": \"CL\",\n      \"lat\": -18.4746,\n      \"long\": -70.29792,\n      \"zone\": \"America/Santiago\"\n    },\n    \"3899539\": {\n      \"name\": \"Antofagasta\",\n      \"country\": \"CL\",\n      \"lat\": -23.65236,\n      \"long\": -70.3954,\n      \"zone\": \"America/Santiago\"\n    },\n    \"3903320\": {\n      \"name\": \"Tarija\",\n      \"country\": \"BO\",\n      \"lat\": -21.53549,\n      \"long\": -64.72956,\n      \"zone\": \"America/La_Paz\"\n    },\n    \"3903987\": {\n      \"name\": \"Sucre\",\n      \"country\": \"BO\",\n      \"lat\": -19.03332,\n      \"long\": -65.26274,\n      \"zone\": \"America/La_Paz\"\n    },\n    \"3904906\": {\n      \"name\": \"Santa Cruz de la Sierra\",\n      \"country\": \"BO\",\n      \"lat\": -17.78629,\n      \"long\": -63.18117,\n      \"zone\": \"America/La_Paz\"\n    },\n    \"3907584\": {\n      \"name\": \"Potosí\",\n      \"country\": \"BO\",\n      \"lat\": -19.58361,\n      \"long\": -65.75306,\n      \"zone\": \"America/La_Paz\"\n    },\n    \"3909234\": {\n      \"name\": \"Oruro\",\n      \"country\": \"BO\",\n      \"lat\": -17.98333,\n      \"long\": -67.15,\n      \"zone\": \"America/La_Paz\"\n    },\n    \"3911925\": {\n      \"name\": \"La Paz\",\n      \"country\": \"BO\",\n      \"lat\": -16.5,\n      \"long\": -68.15,\n      \"zone\": \"America/La_Paz\"\n    },\n    \"3919968\": {\n      \"name\": \"Cochabamba\",\n      \"country\": \"BO\",\n      \"lat\": -17.3895,\n      \"long\": -66.1568,\n      \"zone\": \"America/La_Paz\"\n    },\n    \"3925033\": {\n      \"name\": \"Ji Paraná\",\n      \"country\": \"BR\",\n      \"lat\": -10.88528,\n      \"long\": -61.95167,\n      \"zone\": \"America/Porto_Velho\"\n    },\n    \"3928128\": {\n      \"name\": \"Tacna\",\n      \"country\": \"PE\",\n      \"lat\": -18.01465,\n      \"long\": -70.25362,\n      \"zone\": \"America/Lima\"\n    },\n    \"3928245\": {\n      \"name\": \"Surco\",\n      \"country\": \"PE\",\n      \"lat\": -12.13951,\n      \"long\": -77.00615,\n      \"zone\": \"America/Lima\"\n    },\n    \"3931276\": {\n      \"name\": \"Puno\",\n      \"country\": \"PE\",\n      \"lat\": -15.8422,\n      \"long\": -70.0199,\n      \"zone\": \"America/Lima\"\n    },\n    \"3936456\": {\n      \"name\": \"Lima\",\n      \"country\": \"PE\",\n      \"lat\": -12.04318,\n      \"long\": -77.02824,\n      \"zone\": \"America/Lima\"\n    },\n    \"3937513\": {\n      \"name\": \"Juliaca\",\n      \"country\": \"PE\",\n      \"lat\": -15.5,\n      \"long\": -70.13333,\n      \"zone\": \"America/Lima\"\n    },\n    \"3938527\": {\n      \"name\": \"Ica\",\n      \"country\": \"PE\",\n      \"lat\": -14.06777,\n      \"long\": -75.72861,\n      \"zone\": \"America/Lima\"\n    },\n    \"3939459\": {\n      \"name\": \"Huancayo\",\n      \"country\": \"PE\",\n      \"lat\": -12.06513,\n      \"long\": -75.20486,\n      \"zone\": \"America/Lima\"\n    },\n    \"3941584\": {\n      \"name\": \"Cusco\",\n      \"country\": \"PE\",\n      \"lat\": -13.52264,\n      \"long\": -71.96734,\n      \"zone\": \"America/Lima\"\n    },\n    \"3943789\": {\n      \"name\": \"Chincha Alta\",\n      \"country\": \"PE\",\n      \"lat\": -13.40985,\n      \"long\": -76.13235,\n      \"zone\": \"America/Lima\"\n    },\n    \"3946083\": {\n      \"name\": \"Callao\",\n      \"country\": \"PE\",\n      \"lat\": -12.05659,\n      \"long\": -77.11814,\n      \"zone\": \"America/Lima\"\n    },\n    \"3947019\": {\n      \"name\": \"Ayacucho\",\n      \"country\": \"PE\",\n      \"lat\": -13.15878,\n      \"long\": -74.22321,\n      \"zone\": \"America/Lima\"\n    },\n    \"3947322\": {\n      \"name\": \"Arequipa\",\n      \"country\": \"PE\",\n      \"lat\": -16.39889,\n      \"long\": -71.535,\n      \"zone\": \"America/Lima\"\n    },\n    \"3979770\": {\n      \"name\": \"Zapopan\",\n      \"country\": \"MX\",\n      \"lat\": 20.72356,\n      \"long\": -103.38479,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3979802\": {\n      \"name\": \"Zamora\",\n      \"country\": \"MX\",\n      \"lat\": 19.9855,\n      \"long\": -102.28387,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3979844\": {\n      \"name\": \"Zacatecas\",\n      \"country\": \"MX\",\n      \"lat\": 22.76843,\n      \"long\": -102.58141,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3980194\": {\n      \"name\": \"Ciudad de Villa de Álvarez\",\n      \"country\": \"MX\",\n      \"lat\": 19.26722,\n      \"long\": -103.73778,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3980760\": {\n      \"name\": \"Uruapan\",\n      \"country\": \"MX\",\n      \"lat\": 19.41116,\n      \"long\": -102.05644,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3981254\": {\n      \"name\": \"Torreon\",\n      \"country\": \"MX\",\n      \"lat\": 25.54389,\n      \"long\": -103.41898,\n      \"zone\": \"America/Monterrey\"\n    },\n    \"3981369\": {\n      \"name\": \"Tonalá\",\n      \"country\": \"MX\",\n      \"lat\": 20.62445,\n      \"long\": -103.23423,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3981461\": {\n      \"name\": \"Tlaquepaque\",\n      \"country\": \"MX\",\n      \"lat\": 20.64091,\n      \"long\": -103.29327,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3981609\": {\n      \"name\": \"Tijuana\",\n      \"country\": \"MX\",\n      \"lat\": 32.5027,\n      \"long\": -117.00371,\n      \"zone\": \"America/Tijuana\"\n    },\n    \"3981941\": {\n      \"name\": \"Tepic\",\n      \"country\": \"MX\",\n      \"lat\": 21.50951,\n      \"long\": -104.89569,\n      \"zone\": \"America/Mazatlan\"\n    },\n    \"3982912\": {\n      \"name\": \"Soledad Díez Gutiérrez\",\n      \"country\": \"MX\",\n      \"lat\": 22.18778,\n      \"long\": -100.94192,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3984583\": {\n      \"name\": \"Santa Catarina\",\n      \"country\": \"MX\",\n      \"lat\": 25.67325,\n      \"long\": -100.45813,\n      \"zone\": \"America/Monterrey\"\n    },\n    \"3985241\": {\n      \"name\": \"San Nicolás de los Garza\",\n      \"country\": \"MX\",\n      \"lat\": 25.74167,\n      \"long\": -100.30222,\n      \"zone\": \"America/Monterrey\"\n    },\n    \"3985604\": {\n      \"name\": \"San Luis Río Colorado\",\n      \"country\": \"MX\",\n      \"lat\": 32.45612,\n      \"long\": -114.77186,\n      \"zone\": \"America/Hermosillo\"\n    },\n    \"3985606\": {\n      \"name\": \"San Luis Potosí\",\n      \"country\": \"MX\",\n      \"lat\": 22.14982,\n      \"long\": -100.97916,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3988086\": {\n      \"name\": \"Saltillo\",\n      \"country\": \"MX\",\n      \"lat\": 25.42321,\n      \"long\": -101.0053,\n      \"zone\": \"America/Monterrey\"\n    },\n    \"3988214\": {\n      \"name\": \"Salamanca\",\n      \"country\": \"MX\",\n      \"lat\": 20.57196,\n      \"long\": -101.19154,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3991164\": {\n      \"name\": \"Santiago de Querétaro\",\n      \"country\": \"MX\",\n      \"lat\": 20.58806,\n      \"long\": -100.38806,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3991328\": {\n      \"name\": \"Puerto Vallarta\",\n      \"country\": \"MX\",\n      \"lat\": 20.617,\n      \"long\": -105.23018,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3992619\": {\n      \"name\": \"Piedras Negras\",\n      \"country\": \"MX\",\n      \"lat\": 28.70007,\n      \"long\": -100.52353,\n      \"zone\": \"America/Matamoros\"\n    },\n    \"3995019\": {\n      \"name\": \"Navojoa\",\n      \"country\": \"MX\",\n      \"lat\": 27.07015,\n      \"long\": -109.44391,\n      \"zone\": \"America/Hermosillo\"\n    },\n    \"3995402\": {\n      \"name\": \"Morelia\",\n      \"country\": \"MX\",\n      \"lat\": 19.70078,\n      \"long\": -101.18443,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3995465\": {\n      \"name\": \"Monterrey\",\n      \"country\": \"MX\",\n      \"lat\": 25.67507,\n      \"long\": -100.31847,\n      \"zone\": \"America/Monterrey\"\n    },\n    \"3995523\": {\n      \"name\": \"Monclova\",\n      \"country\": \"MX\",\n      \"lat\": 26.90687,\n      \"long\": -101.42056,\n      \"zone\": \"America/Monterrey\"\n    },\n    \"3996069\": {\n      \"name\": \"Mexicali\",\n      \"country\": \"MX\",\n      \"lat\": 32.62781,\n      \"long\": -115.45446,\n      \"zone\": \"America/Tijuana\"\n    },\n    \"3996322\": {\n      \"name\": \"Mazatlán\",\n      \"country\": \"MX\",\n      \"lat\": 23.2329,\n      \"long\": -106.4062,\n      \"zone\": \"America/Mazatlan\"\n    },\n    \"3996426\": {\n      \"name\": \"Matamoros\",\n      \"country\": \"MX\",\n      \"lat\": 25.52699,\n      \"long\": -103.2285,\n      \"zone\": \"America/Monterrey\"\n    },\n    \"3996663\": {\n      \"name\": \"Manzanillo\",\n      \"country\": \"MX\",\n      \"lat\": 19.11695,\n      \"long\": -104.34214,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"3997479\": {\n      \"name\": \"Los Mochis\",\n      \"country\": \"MX\",\n      \"lat\": 25.79535,\n      \"long\": -108.99244,\n      \"zone\": \"America/Mazatlan\"\n    },\n    \"3998655\": {\n      \"name\": \"León\",\n      \"country\": \"MX\",\n      \"lat\": 21.13052,\n      \"long\": -101.671,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"4000900\": {\n      \"name\": \"La Paz\",\n      \"country\": \"MX\",\n      \"lat\": 24.13811,\n      \"long\": -110.30973,\n      \"zone\": \"America/Mazatlan\"\n    },\n    \"4004330\": {\n      \"name\": \"Irapuato\",\n      \"country\": \"MX\",\n      \"lat\": 20.67675,\n      \"long\": -101.35628,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"4004867\": {\n      \"name\": \"Hidalgo del Parral\",\n      \"country\": \"MX\",\n      \"lat\": 26.92961,\n      \"long\": -105.6662,\n      \"zone\": \"America/Chihuahua\"\n    },\n    \"4004886\": {\n      \"name\": \"Nogales\",\n      \"country\": \"MX\",\n      \"lat\": 31.30862,\n      \"long\": -110.94217,\n      \"zone\": \"America/Hermosillo\"\n    },\n    \"4004898\": {\n      \"name\": \"Hermosillo\",\n      \"country\": \"MX\",\n      \"lat\": 29.1026,\n      \"long\": -110.97732,\n      \"zone\": \"America/Hermosillo\"\n    },\n    \"4005143\": {\n      \"name\": \"Heroica Guaymas\",\n      \"country\": \"MX\",\n      \"lat\": 27.91928,\n      \"long\": -110.89755,\n      \"zone\": \"America/Hermosillo\"\n    },\n    \"4005492\": {\n      \"name\": \"Guadalupe\",\n      \"country\": \"MX\",\n      \"lat\": 25.67678,\n      \"long\": -100.25646,\n      \"zone\": \"America/Monterrey\"\n    },\n    \"4005539\": {\n      \"name\": \"Guadalajara\",\n      \"country\": \"MX\",\n      \"lat\": 20.66682,\n      \"long\": -103.39182,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"4005775\": {\n      \"name\": \"Gomez Palacio\",\n      \"country\": \"MX\",\n      \"lat\": 25.56985,\n      \"long\": -103.49588,\n      \"zone\": \"America/Monterrey\"\n    },\n    \"4005867\": {\n      \"name\": \"General Escobedo\",\n      \"country\": \"MX\",\n      \"lat\": 25.79516,\n      \"long\": -100.31461,\n      \"zone\": \"America/Monterrey\"\n    },\n    \"4005937\": {\n      \"name\": \"Garza García\",\n      \"country\": \"MX\",\n      \"lat\": 25.65384,\n      \"long\": -100.37758,\n      \"zone\": \"America/Monterrey\"\n    },\n    \"4006163\": {\n      \"name\": \"Fresnillo\",\n      \"country\": \"MX\",\n      \"lat\": 23.18126,\n      \"long\": -102.87136,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"4006702\": {\n      \"name\": \"Ensenada\",\n      \"country\": \"MX\",\n      \"lat\": 31.86613,\n      \"long\": -116.59972,\n      \"zone\": \"America/Tijuana\"\n    },\n    \"4011743\": {\n      \"name\": \"Victoria de Durango\",\n      \"country\": \"MX\",\n      \"lat\": 24.02032,\n      \"long\": -104.65756,\n      \"zone\": \"America/Monterrey\"\n    },\n    \"4012176\": {\n      \"name\": \"Culiacán\",\n      \"country\": \"MX\",\n      \"lat\": 24.79032,\n      \"long\": -107.38782,\n      \"zone\": \"America/Mazatlan\"\n    },\n    \"4013516\": {\n      \"name\": \"Colima\",\n      \"country\": \"MX\",\n      \"lat\": 19.24997,\n      \"long\": -103.72714,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"4013704\": {\n      \"name\": \"Ciudad Obregón\",\n      \"country\": \"MX\",\n      \"lat\": 27.48642,\n      \"long\": -109.94083,\n      \"zone\": \"America/Hermosillo\"\n    },\n    \"4013708\": {\n      \"name\": \"Ciudad Juárez\",\n      \"country\": \"MX\",\n      \"lat\": 31.73333,\n      \"long\": -106.48333,\n      \"zone\": \"America/Ojinaga\"\n    },\n    \"4013714\": {\n      \"name\": \"Ciudad Guzmán\",\n      \"country\": \"MX\",\n      \"lat\": 19.70466,\n      \"long\": -103.4617,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"4013720\": {\n      \"name\": \"Ciudad Delicias\",\n      \"country\": \"MX\",\n      \"lat\": 28.19013,\n      \"long\": -105.47012,\n      \"zone\": \"America/Chihuahua\"\n    },\n    \"4013728\": {\n      \"name\": \"Ciudad Acuña\",\n      \"country\": \"MX\",\n      \"lat\": 29.32322,\n      \"long\": -100.95217,\n      \"zone\": \"America/Matamoros\"\n    },\n    \"4014338\": {\n      \"name\": \"Chihuahua\",\n      \"country\": \"MX\",\n      \"lat\": 28.63528,\n      \"long\": -106.08889,\n      \"zone\": \"America/Chihuahua\"\n    },\n    \"4014875\": {\n      \"name\": \"Celaya\",\n      \"country\": \"MX\",\n      \"lat\": 20.52353,\n      \"long\": -100.8157,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"4018390\": {\n      \"name\": \"Apodaca\",\n      \"country\": \"MX\",\n      \"lat\": 25.75976,\n      \"long\": -100.16287,\n      \"zone\": \"America/Monterrey\"\n    },\n    \"4019233\": {\n      \"name\": \"Aguascalientes\",\n      \"country\": \"MX\",\n      \"lat\": 21.88234,\n      \"long\": -102.28259,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"4049979\": {\n      \"name\": \"Birmingham\",\n      \"country\": \"US\",\n      \"lat\": 33.52066,\n      \"long\": -86.80249,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4068590\": {\n      \"name\": \"Huntsville\",\n      \"country\": \"US\",\n      \"lat\": 34.73037,\n      \"long\": -86.5861,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4076598\": {\n      \"name\": \"Mobile\",\n      \"country\": \"US\",\n      \"lat\": 30.69436,\n      \"long\": -88.04305,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4076784\": {\n      \"name\": \"Montgomery\",\n      \"country\": \"US\",\n      \"lat\": 32.36681,\n      \"long\": -86.29997,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4119403\": {\n      \"name\": \"Little Rock\",\n      \"country\": \"US\",\n      \"lat\": 34.74648,\n      \"long\": -92.28959,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4140963\": {\n      \"name\": \"Washington, D.C.\",\n      \"country\": \"US\",\n      \"lat\": 38.89511,\n      \"long\": -77.03637,\n      \"zone\": \"America/New_York\"\n    },\n    \"4148757\": {\n      \"name\": \"Brandon\",\n      \"country\": \"US\",\n      \"lat\": 27.9378,\n      \"long\": -82.28592,\n      \"zone\": \"America/New_York\"\n    },\n    \"4149962\": {\n      \"name\": \"Cape Coral\",\n      \"country\": \"US\",\n      \"lat\": 26.56285,\n      \"long\": -81.94953,\n      \"zone\": \"America/New_York\"\n    },\n    \"4151316\": {\n      \"name\": \"Clearwater\",\n      \"country\": \"US\",\n      \"lat\": 27.96585,\n      \"long\": -82.8001,\n      \"zone\": \"America/New_York\"\n    },\n    \"4151909\": {\n      \"name\": \"Coral Springs\",\n      \"country\": \"US\",\n      \"lat\": 26.27119,\n      \"long\": -80.2706,\n      \"zone\": \"America/New_York\"\n    },\n    \"4155966\": {\n      \"name\": \"Fort Lauderdale\",\n      \"country\": \"US\",\n      \"lat\": 26.12231,\n      \"long\": -80.14338,\n      \"zone\": \"America/New_York\"\n    },\n    \"4156404\": {\n      \"name\": \"Gainesville\",\n      \"country\": \"US\",\n      \"lat\": 29.65163,\n      \"long\": -82.32483,\n      \"zone\": \"America/New_York\"\n    },\n    \"4158476\": {\n      \"name\": \"Hialeah\",\n      \"country\": \"US\",\n      \"lat\": 25.8576,\n      \"long\": -80.27811,\n      \"zone\": \"America/New_York\"\n    },\n    \"4158928\": {\n      \"name\": \"Hollywood\",\n      \"country\": \"US\",\n      \"lat\": 26.0112,\n      \"long\": -80.14949,\n      \"zone\": \"America/New_York\"\n    },\n    \"4160021\": {\n      \"name\": \"Jacksonville\",\n      \"country\": \"US\",\n      \"lat\": 30.33218,\n      \"long\": -81.65565,\n      \"zone\": \"America/New_York\"\n    },\n    \"4164138\": {\n      \"name\": \"Miami\",\n      \"country\": \"US\",\n      \"lat\": 25.77427,\n      \"long\": -80.19366,\n      \"zone\": \"America/New_York\"\n    },\n    \"4164167\": {\n      \"name\": \"Miami Gardens\",\n      \"country\": \"US\",\n      \"lat\": 25.94204,\n      \"long\": -80.2456,\n      \"zone\": \"America/New_York\"\n    },\n    \"4164601\": {\n      \"name\": \"Miramar\",\n      \"country\": \"US\",\n      \"lat\": 25.98731,\n      \"long\": -80.23227,\n      \"zone\": \"America/New_York\"\n    },\n    \"4167147\": {\n      \"name\": \"Orlando\",\n      \"country\": \"US\",\n      \"lat\": 28.53834,\n      \"long\": -81.37924,\n      \"zone\": \"America/New_York\"\n    },\n    \"4167499\": {\n      \"name\": \"Palm Bay\",\n      \"country\": \"US\",\n      \"lat\": 28.03446,\n      \"long\": -80.58866,\n      \"zone\": \"America/New_York\"\n    },\n    \"4168139\": {\n      \"name\": \"Pembroke Pines\",\n      \"country\": \"US\",\n      \"lat\": 26.00315,\n      \"long\": -80.22394,\n      \"zone\": \"America/New_York\"\n    },\n    \"4169171\": {\n      \"name\": \"Port Saint Lucie\",\n      \"country\": \"US\",\n      \"lat\": 27.29393,\n      \"long\": -80.35033,\n      \"zone\": \"America/New_York\"\n    },\n    \"4171563\": {\n      \"name\": \"Saint Petersburg\",\n      \"country\": \"US\",\n      \"lat\": 27.77086,\n      \"long\": -82.67927,\n      \"zone\": \"America/New_York\"\n    },\n    \"4174715\": {\n      \"name\": \"Tallahassee\",\n      \"country\": \"US\",\n      \"lat\": 30.43826,\n      \"long\": -84.28073,\n      \"zone\": \"America/New_York\"\n    },\n    \"4174757\": {\n      \"name\": \"Tampa\",\n      \"country\": \"US\",\n      \"lat\": 27.94752,\n      \"long\": -82.45843,\n      \"zone\": \"America/New_York\"\n    },\n    \"4180386\": {\n      \"name\": \"Athens\",\n      \"country\": \"US\",\n      \"lat\": 33.96095,\n      \"long\": -83.37794,\n      \"zone\": \"America/New_York\"\n    },\n    \"4180439\": {\n      \"name\": \"Atlanta\",\n      \"country\": \"US\",\n      \"lat\": 33.749,\n      \"long\": -84.38798,\n      \"zone\": \"America/New_York\"\n    },\n    \"4188985\": {\n      \"name\": \"Columbus\",\n      \"country\": \"US\",\n      \"lat\": 32.46098,\n      \"long\": -84.98771,\n      \"zone\": \"America/New_York\"\n    },\n    \"4221552\": {\n      \"name\": \"Savannah\",\n      \"country\": \"US\",\n      \"lat\": 32.08354,\n      \"long\": -81.09983,\n      \"zone\": \"America/New_York\"\n    },\n    \"4250542\": {\n      \"name\": \"Springfield\",\n      \"country\": \"US\",\n      \"lat\": 39.80172,\n      \"long\": -89.64371,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4257227\": {\n      \"name\": \"Evansville\",\n      \"country\": \"US\",\n      \"lat\": 37.97476,\n      \"long\": -87.55585,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4259418\": {\n      \"name\": \"Indianapolis\",\n      \"country\": \"US\",\n      \"lat\": 39.76838,\n      \"long\": -86.15804,\n      \"zone\": \"America/Indiana/Indianapolis\"\n    },\n    \"4273837\": {\n      \"name\": \"Kansas City\",\n      \"country\": \"US\",\n      \"lat\": 39.11417,\n      \"long\": -94.62746,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4276614\": {\n      \"name\": \"Olathe\",\n      \"country\": \"US\",\n      \"lat\": 38.8814,\n      \"long\": -94.81913,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4276873\": {\n      \"name\": \"Overland Park\",\n      \"country\": \"US\",\n      \"lat\": 38.98223,\n      \"long\": -94.67079,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4280539\": {\n      \"name\": \"Topeka\",\n      \"country\": \"US\",\n      \"lat\": 39.04833,\n      \"long\": -95.67804,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4281730\": {\n      \"name\": \"Wichita\",\n      \"country\": \"US\",\n      \"lat\": 37.69224,\n      \"long\": -97.33754,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4295940\": {\n      \"name\": \"Ironville\",\n      \"country\": \"US\",\n      \"lat\": 38.45647,\n      \"long\": -82.69238,\n      \"zone\": \"America/New_York\"\n    },\n    \"4297983\": {\n      \"name\": \"Lexington\",\n      \"country\": \"US\",\n      \"lat\": 37.98869,\n      \"long\": -84.47772,\n      \"zone\": \"America/New_York\"\n    },\n    \"4297999\": {\n      \"name\": \"Lexington-Fayette\",\n      \"country\": \"US\",\n      \"lat\": 38.0498,\n      \"long\": -84.45855,\n      \"zone\": \"America/New_York\"\n    },\n    \"4299276\": {\n      \"name\": \"Louisville\",\n      \"country\": \"US\",\n      \"lat\": 38.25424,\n      \"long\": -85.75941,\n      \"zone\": \"America/Kentucky/Louisville\"\n    },\n    \"4300488\": {\n      \"name\": \"Meads\",\n      \"country\": \"US\",\n      \"lat\": 38.41258,\n      \"long\": -82.70905,\n      \"zone\": \"America/New_York\"\n    },\n    \"4315588\": {\n      \"name\": \"Baton Rouge\",\n      \"country\": \"US\",\n      \"lat\": 30.45075,\n      \"long\": -91.15455,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4330145\": {\n      \"name\": \"Lafayette\",\n      \"country\": \"US\",\n      \"lat\": 30.22409,\n      \"long\": -92.01984,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4333177\": {\n      \"name\": \"Metairie\",\n      \"country\": \"US\",\n      \"lat\": 29.98409,\n      \"long\": -90.15285,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4333190\": {\n      \"name\": \"Metairie Terrace\",\n      \"country\": \"US\",\n      \"lat\": 29.97854,\n      \"long\": -90.16396,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4335045\": {\n      \"name\": \"New Orleans\",\n      \"country\": \"US\",\n      \"lat\": 29.95465,\n      \"long\": -90.07507,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4341513\": {\n      \"name\": \"Shreveport\",\n      \"country\": \"US\",\n      \"lat\": 32.52515,\n      \"long\": -93.75018,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4347778\": {\n      \"name\": \"Baltimore\",\n      \"country\": \"US\",\n      \"lat\": 39.29038,\n      \"long\": -76.61219,\n      \"zone\": \"America/New_York\"\n    },\n    \"4381982\": {\n      \"name\": \"Columbia\",\n      \"country\": \"US\",\n      \"lat\": 38.95171,\n      \"long\": -92.33407,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4385018\": {\n      \"name\": \"East Independence\",\n      \"country\": \"US\",\n      \"lat\": 39.09556,\n      \"long\": -94.35523,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4391812\": {\n      \"name\": \"Independence\",\n      \"country\": \"US\",\n      \"lat\": 39.09112,\n      \"long\": -94.41551,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4393217\": {\n      \"name\": \"Kansas City\",\n      \"country\": \"US\",\n      \"lat\": 39.09973,\n      \"long\": -94.57857,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4407066\": {\n      \"name\": \"St. Louis\",\n      \"country\": \"US\",\n      \"lat\": 38.62727,\n      \"long\": -90.19789,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4409896\": {\n      \"name\": \"Springfield\",\n      \"country\": \"US\",\n      \"lat\": 37.21533,\n      \"long\": -93.29824,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4431410\": {\n      \"name\": \"Jackson\",\n      \"country\": \"US\",\n      \"lat\": 32.29876,\n      \"long\": -90.18481,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4459467\": {\n      \"name\": \"Cary\",\n      \"country\": \"US\",\n      \"lat\": 35.79154,\n      \"long\": -78.78112,\n      \"zone\": \"America/New_York\"\n    },\n    \"4460243\": {\n      \"name\": \"Charlotte\",\n      \"country\": \"US\",\n      \"lat\": 35.22709,\n      \"long\": -80.84313,\n      \"zone\": \"America/New_York\"\n    },\n    \"4464368\": {\n      \"name\": \"Durham\",\n      \"country\": \"US\",\n      \"lat\": 35.99403,\n      \"long\": -78.89862,\n      \"zone\": \"America/New_York\"\n    },\n    \"4466033\": {\n      \"name\": \"Fayetteville\",\n      \"country\": \"US\",\n      \"lat\": 35.05266,\n      \"long\": -78.87836,\n      \"zone\": \"America/New_York\"\n    },\n    \"4469146\": {\n      \"name\": \"Greensboro\",\n      \"country\": \"US\",\n      \"lat\": 36.07264,\n      \"long\": -79.79198,\n      \"zone\": \"America/New_York\"\n    },\n    \"4471025\": {\n      \"name\": \"High Point\",\n      \"country\": \"US\",\n      \"lat\": 35.95569,\n      \"long\": -80.00532,\n      \"zone\": \"America/New_York\"\n    },\n    \"4487042\": {\n      \"name\": \"Raleigh\",\n      \"country\": \"US\",\n      \"lat\": 35.7721,\n      \"long\": -78.63861,\n      \"zone\": \"America/New_York\"\n    },\n    \"4498303\": {\n      \"name\": \"West Raleigh\",\n      \"country\": \"US\",\n      \"lat\": 35.78682,\n      \"long\": -78.66389,\n      \"zone\": \"America/New_York\"\n    },\n    \"4499379\": {\n      \"name\": \"Wilmington\",\n      \"country\": \"US\",\n      \"lat\": 34.22573,\n      \"long\": -77.94471,\n      \"zone\": \"America/New_York\"\n    },\n    \"4499612\": {\n      \"name\": \"Winston-Salem\",\n      \"country\": \"US\",\n      \"lat\": 36.09986,\n      \"long\": -80.24422,\n      \"zone\": \"America/New_York\"\n    },\n    \"4508722\": {\n      \"name\": \"Cincinnati\",\n      \"country\": \"US\",\n      \"lat\": 39.162,\n      \"long\": -84.45689,\n      \"zone\": \"America/New_York\"\n    },\n    \"4509177\": {\n      \"name\": \"Columbus\",\n      \"country\": \"US\",\n      \"lat\": 39.96118,\n      \"long\": -82.99879,\n      \"zone\": \"America/New_York\"\n    },\n    \"4509884\": {\n      \"name\": \"Dayton\",\n      \"country\": \"US\",\n      \"lat\": 39.75895,\n      \"long\": -84.19161,\n      \"zone\": \"America/New_York\"\n    },\n    \"4543762\": {\n      \"name\": \"Norman\",\n      \"country\": \"US\",\n      \"lat\": 35.22257,\n      \"long\": -97.43948,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4544349\": {\n      \"name\": \"Oklahoma City\",\n      \"country\": \"US\",\n      \"lat\": 35.46756,\n      \"long\": -97.51643,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4553433\": {\n      \"name\": \"Tulsa\",\n      \"country\": \"US\",\n      \"lat\": 36.15398,\n      \"long\": -95.99277,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4560349\": {\n      \"name\": \"Philadelphia\",\n      \"country\": \"US\",\n      \"lat\": 39.95233,\n      \"long\": -75.16379,\n      \"zone\": \"America/New_York\"\n    },\n    \"4562831\": {\n      \"name\": \"Bayamón\",\n      \"country\": \"PR\",\n      \"lat\": 18.39856,\n      \"long\": -66.15572,\n      \"zone\": \"America/Puerto_Rico\"\n    },\n    \"4563243\": {\n      \"name\": \"Carolina\",\n      \"country\": \"PR\",\n      \"lat\": 18.38078,\n      \"long\": -65.95739,\n      \"zone\": \"America/Puerto_Rico\"\n    },\n    \"4566880\": {\n      \"name\": \"Ponce\",\n      \"country\": \"PR\",\n      \"lat\": 18.01108,\n      \"long\": -66.61406,\n      \"zone\": \"America/Puerto_Rico\"\n    },\n    \"4568127\": {\n      \"name\": \"San Juan\",\n      \"country\": \"PR\",\n      \"lat\": 18.46633,\n      \"long\": -66.10572,\n      \"zone\": \"America/Puerto_Rico\"\n    },\n    \"4574324\": {\n      \"name\": \"Charleston\",\n      \"country\": \"US\",\n      \"lat\": 32.77657,\n      \"long\": -79.93092,\n      \"zone\": \"America/New_York\"\n    },\n    \"4575352\": {\n      \"name\": \"Columbia\",\n      \"country\": \"US\",\n      \"lat\": 34.00071,\n      \"long\": -81.03481,\n      \"zone\": \"America/New_York\"\n    },\n    \"4612862\": {\n      \"name\": \"Chattanooga\",\n      \"country\": \"US\",\n      \"lat\": 35.04563,\n      \"long\": -85.30968,\n      \"zone\": \"America/New_York\"\n    },\n    \"4613868\": {\n      \"name\": \"Clarksville\",\n      \"country\": \"US\",\n      \"lat\": 36.52977,\n      \"long\": -87.35945,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4619947\": {\n      \"name\": \"East Chattanooga\",\n      \"country\": \"US\",\n      \"lat\": 35.06535,\n      \"long\": -85.24912,\n      \"zone\": \"America/New_York\"\n    },\n    \"4634946\": {\n      \"name\": \"Knoxville\",\n      \"country\": \"US\",\n      \"lat\": 35.96064,\n      \"long\": -83.92074,\n      \"zone\": \"America/New_York\"\n    },\n    \"4641239\": {\n      \"name\": \"Memphis\",\n      \"country\": \"US\",\n      \"lat\": 35.14953,\n      \"long\": -90.04898,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4644312\": {\n      \"name\": \"Murfreesboro\",\n      \"country\": \"US\",\n      \"lat\": 35.84562,\n      \"long\": -86.39027,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4644585\": {\n      \"name\": \"Nashville\",\n      \"country\": \"US\",\n      \"lat\": 36.16589,\n      \"long\": -86.78444,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4645421\": {\n      \"name\": \"New South Memphis\",\n      \"country\": \"US\",\n      \"lat\": 35.08676,\n      \"long\": -90.05676,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4669635\": {\n      \"name\": \"Abilene\",\n      \"country\": \"US\",\n      \"lat\": 32.44874,\n      \"long\": -99.73314,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4671240\": {\n      \"name\": \"Arlington\",\n      \"country\": \"US\",\n      \"lat\": 32.73569,\n      \"long\": -97.10807,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4671654\": {\n      \"name\": \"Austin\",\n      \"country\": \"US\",\n      \"lat\": 30.26715,\n      \"long\": -97.74306,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4672989\": {\n      \"name\": \"Beaumont\",\n      \"country\": \"US\",\n      \"lat\": 30.08605,\n      \"long\": -94.10185,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4676740\": {\n      \"name\": \"Brownsville\",\n      \"country\": \"US\",\n      \"lat\": 25.90175,\n      \"long\": -97.49748,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4679195\": {\n      \"name\": \"Carrollton\",\n      \"country\": \"US\",\n      \"lat\": 32.95373,\n      \"long\": -96.89028,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4683416\": {\n      \"name\": \"Corpus Christi\",\n      \"country\": \"US\",\n      \"lat\": 27.80058,\n      \"long\": -97.39638,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4684888\": {\n      \"name\": \"Dallas\",\n      \"country\": \"US\",\n      \"lat\": 32.78306,\n      \"long\": -96.80667,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4685907\": {\n      \"name\": \"Denton\",\n      \"country\": \"US\",\n      \"lat\": 33.21484,\n      \"long\": -97.13307,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4691930\": {\n      \"name\": \"Fort Worth\",\n      \"country\": \"US\",\n      \"lat\": 32.72541,\n      \"long\": -97.32085,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4692559\": {\n      \"name\": \"Frisco\",\n      \"country\": \"US\",\n      \"lat\": 33.15067,\n      \"long\": -96.82361,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4693003\": {\n      \"name\": \"Garland\",\n      \"country\": \"US\",\n      \"lat\": 32.91262,\n      \"long\": -96.63888,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4694482\": {\n      \"name\": \"Grand Prairie\",\n      \"country\": \"US\",\n      \"lat\": 32.74596,\n      \"long\": -96.99778,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4699066\": {\n      \"name\": \"Houston\",\n      \"country\": \"US\",\n      \"lat\": 29.76328,\n      \"long\": -95.36327,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4700168\": {\n      \"name\": \"Irving\",\n      \"country\": \"US\",\n      \"lat\": 32.81402,\n      \"long\": -96.94889,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4703223\": {\n      \"name\": \"Killeen\",\n      \"country\": \"US\",\n      \"lat\": 31.11712,\n      \"long\": -97.7278,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4705349\": {\n      \"name\": \"Laredo\",\n      \"country\": \"US\",\n      \"lat\": 27.50641,\n      \"long\": -99.50754,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4709796\": {\n      \"name\": \"McAllen\",\n      \"country\": \"US\",\n      \"lat\": 26.20341,\n      \"long\": -98.23001,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4710178\": {\n      \"name\": \"McKinney\",\n      \"country\": \"US\",\n      \"lat\": 33.19762,\n      \"long\": -96.61527,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4710826\": {\n      \"name\": \"Mesquite\",\n      \"country\": \"US\",\n      \"lat\": 32.7668,\n      \"long\": -96.59916,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4717782\": {\n      \"name\": \"Pasadena\",\n      \"country\": \"US\",\n      \"lat\": 29.69106,\n      \"long\": -95.2091,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4719457\": {\n      \"name\": \"Plano\",\n      \"country\": \"US\",\n      \"lat\": 33.01984,\n      \"long\": -96.69889,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4726206\": {\n      \"name\": \"San Antonio\",\n      \"country\": \"US\",\n      \"lat\": 29.42412,\n      \"long\": -98.49363,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4739526\": {\n      \"name\": \"Waco\",\n      \"country\": \"US\",\n      \"lat\": 31.54933,\n      \"long\": -97.14667,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4741752\": {\n      \"name\": \"Wichita Falls\",\n      \"country\": \"US\",\n      \"lat\": 33.91371,\n      \"long\": -98.49339,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4744091\": {\n      \"name\": \"Alexandria\",\n      \"country\": \"US\",\n      \"lat\": 38.80484,\n      \"long\": -77.04692,\n      \"zone\": \"America/New_York\"\n    },\n    \"4744709\": {\n      \"name\": \"Arlington\",\n      \"country\": \"US\",\n      \"lat\": 38.88101,\n      \"long\": -77.10428,\n      \"zone\": \"America/New_York\"\n    },\n    \"4752186\": {\n      \"name\": \"Chesapeake\",\n      \"country\": \"US\",\n      \"lat\": 36.81904,\n      \"long\": -76.27494,\n      \"zone\": \"America/New_York\"\n    },\n    \"4756955\": {\n      \"name\": \"East Hampton\",\n      \"country\": \"US\",\n      \"lat\": 37.03737,\n      \"long\": -76.33161,\n      \"zone\": \"America/New_York\"\n    },\n    \"4762894\": {\n      \"name\": \"Hampton\",\n      \"country\": \"US\",\n      \"lat\": 37.02987,\n      \"long\": -76.34522,\n      \"zone\": \"America/New_York\"\n    },\n    \"4776024\": {\n      \"name\": \"Newport News\",\n      \"country\": \"US\",\n      \"lat\": 36.97876,\n      \"long\": -76.428,\n      \"zone\": \"America/New_York\"\n    },\n    \"4776222\": {\n      \"name\": \"Norfolk\",\n      \"country\": \"US\",\n      \"lat\": 36.84681,\n      \"long\": -76.28522,\n      \"zone\": \"America/New_York\"\n    },\n    \"4781708\": {\n      \"name\": \"Richmond\",\n      \"country\": \"US\",\n      \"lat\": 37.55376,\n      \"long\": -77.46026,\n      \"zone\": \"America/New_York\"\n    },\n    \"4791259\": {\n      \"name\": \"Virginia Beach\",\n      \"country\": \"US\",\n      \"lat\": 36.85293,\n      \"long\": -75.97799,\n      \"zone\": \"America/New_York\"\n    },\n    \"4835797\": {\n      \"name\": \"Hartford\",\n      \"country\": \"US\",\n      \"lat\": 41.76371,\n      \"long\": -72.68509,\n      \"zone\": \"America/New_York\"\n    },\n    \"4839366\": {\n      \"name\": \"New Haven\",\n      \"country\": \"US\",\n      \"lat\": 41.30815,\n      \"long\": -72.92816,\n      \"zone\": \"America/New_York\"\n    },\n    \"4839745\": {\n      \"name\": \"North Stamford\",\n      \"country\": \"US\",\n      \"lat\": 41.13815,\n      \"long\": -73.54346,\n      \"zone\": \"America/New_York\"\n    },\n    \"4843564\": {\n      \"name\": \"Stamford\",\n      \"country\": \"US\",\n      \"lat\": 41.05343,\n      \"long\": -73.53873,\n      \"zone\": \"America/New_York\"\n    },\n    \"4845193\": {\n      \"name\": \"Waterbury\",\n      \"country\": \"US\",\n      \"lat\": 41.55815,\n      \"long\": -73.0515,\n      \"zone\": \"America/New_York\"\n    },\n    \"4850751\": {\n      \"name\": \"Cedar Rapids\",\n      \"country\": \"US\",\n      \"lat\": 42.00833,\n      \"long\": -91.64407,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4853828\": {\n      \"name\": \"Des Moines\",\n      \"country\": \"US\",\n      \"lat\": 41.60054,\n      \"long\": -93.60911,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4883817\": {\n      \"name\": \"Aurora\",\n      \"country\": \"US\",\n      \"lat\": 41.76058,\n      \"long\": -88.32007,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4887398\": {\n      \"name\": \"Chicago\",\n      \"country\": \"US\",\n      \"lat\": 41.85003,\n      \"long\": -87.65005,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4890864\": {\n      \"name\": \"Elgin\",\n      \"country\": \"US\",\n      \"lat\": 42.03725,\n      \"long\": -88.28119,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4898015\": {\n      \"name\": \"Joliet\",\n      \"country\": \"US\",\n      \"lat\": 41.52519,\n      \"long\": -88.0834,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4903279\": {\n      \"name\": \"Naperville\",\n      \"country\": \"US\",\n      \"lat\": 41.78586,\n      \"long\": -88.14729,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4903976\": {\n      \"name\": \"North Peoria\",\n      \"country\": \"US\",\n      \"lat\": 40.71754,\n      \"long\": -89.58426,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4905687\": {\n      \"name\": \"Peoria\",\n      \"country\": \"US\",\n      \"lat\": 40.69365,\n      \"long\": -89.58899,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4907959\": {\n      \"name\": \"Rockford\",\n      \"country\": \"US\",\n      \"lat\": 42.27113,\n      \"long\": -89.094,\n      \"zone\": \"America/Chicago\"\n    },\n    \"4920423\": {\n      \"name\": \"Fort Wayne\",\n      \"country\": \"US\",\n      \"lat\": 41.1306,\n      \"long\": -85.12886,\n      \"zone\": \"America/Indiana/Indianapolis\"\n    },\n    \"4926563\": {\n      \"name\": \"South Bend\",\n      \"country\": \"US\",\n      \"lat\": 41.68338,\n      \"long\": -86.25001,\n      \"zone\": \"America/Indiana/Indianapolis\"\n    },\n    \"4930956\": {\n      \"name\": \"Boston\",\n      \"country\": \"US\",\n      \"lat\": 42.35843,\n      \"long\": -71.05977,\n      \"zone\": \"America/New_York\"\n    },\n    \"4931972\": {\n      \"name\": \"Cambridge\",\n      \"country\": \"US\",\n      \"lat\": 42.3751,\n      \"long\": -71.10561,\n      \"zone\": \"America/New_York\"\n    },\n    \"4942618\": {\n      \"name\": \"Lowell\",\n      \"country\": \"US\",\n      \"lat\": 42.63342,\n      \"long\": -71.31617,\n      \"zone\": \"America/New_York\"\n    },\n    \"4951305\": {\n      \"name\": \"South Boston\",\n      \"country\": \"US\",\n      \"lat\": 42.33343,\n      \"long\": -71.04949,\n      \"zone\": \"America/New_York\"\n    },\n    \"4951788\": {\n      \"name\": \"Springfield\",\n      \"country\": \"US\",\n      \"lat\": 42.10148,\n      \"long\": -72.58981,\n      \"zone\": \"America/New_York\"\n    },\n    \"4956184\": {\n      \"name\": \"Worcester\",\n      \"country\": \"US\",\n      \"lat\": 42.26259,\n      \"long\": -71.80229,\n      \"zone\": \"America/New_York\"\n    },\n    \"4984247\": {\n      \"name\": \"Ann Arbor\",\n      \"country\": \"US\",\n      \"lat\": 42.27756,\n      \"long\": -83.74088,\n      \"zone\": \"America/Detroit\"\n    },\n    \"4990729\": {\n      \"name\": \"Detroit\",\n      \"country\": \"US\",\n      \"lat\": 42.33143,\n      \"long\": -83.04575,\n      \"zone\": \"America/Detroit\"\n    },\n    \"4992982\": {\n      \"name\": \"Flint\",\n      \"country\": \"US\",\n      \"lat\": 43.01253,\n      \"long\": -83.68746,\n      \"zone\": \"America/Detroit\"\n    },\n    \"4994358\": {\n      \"name\": \"Grand Rapids\",\n      \"country\": \"US\",\n      \"lat\": 42.96336,\n      \"long\": -85.66809,\n      \"zone\": \"America/Detroit\"\n    },\n    \"4998830\": {\n      \"name\": \"Lansing\",\n      \"country\": \"US\",\n      \"lat\": 42.73253,\n      \"long\": -84.55553,\n      \"zone\": \"America/Detroit\"\n    },\n    \"5011148\": {\n      \"name\": \"Sterling Heights\",\n      \"country\": \"US\",\n      \"lat\": 42.58031,\n      \"long\": -83.0302,\n      \"zone\": \"America/Detroit\"\n    },\n    \"5014051\": {\n      \"name\": \"Warren\",\n      \"country\": \"US\",\n      \"lat\": 42.47754,\n      \"long\": -83.0277,\n      \"zone\": \"America/Detroit\"\n    },\n    \"5037649\": {\n      \"name\": \"Minneapolis\",\n      \"country\": \"US\",\n      \"lat\": 44.97997,\n      \"long\": -93.26384,\n      \"zone\": \"America/Chicago\"\n    },\n    \"5043473\": {\n      \"name\": \"Rochester\",\n      \"country\": \"US\",\n      \"lat\": 44.02163,\n      \"long\": -92.4699,\n      \"zone\": \"America/Chicago\"\n    },\n    \"5045360\": {\n      \"name\": \"Saint Paul\",\n      \"country\": \"US\",\n      \"lat\": 44.94441,\n      \"long\": -93.09327,\n      \"zone\": \"America/Chicago\"\n    },\n    \"5059163\": {\n      \"name\": \"Fargo\",\n      \"country\": \"US\",\n      \"lat\": 46.87719,\n      \"long\": -96.7898,\n      \"zone\": \"America/Chicago\"\n    },\n    \"5072006\": {\n      \"name\": \"Lincoln\",\n      \"country\": \"US\",\n      \"lat\": 40.8,\n      \"long\": -96.66696,\n      \"zone\": \"America/Chicago\"\n    },\n    \"5074472\": {\n      \"name\": \"Omaha\",\n      \"country\": \"US\",\n      \"lat\": 41.25861,\n      \"long\": -95.93779,\n      \"zone\": \"America/Chicago\"\n    },\n    \"5089178\": {\n      \"name\": \"Manchester\",\n      \"country\": \"US\",\n      \"lat\": 42.99564,\n      \"long\": -71.45479,\n      \"zone\": \"America/New_York\"\n    },\n    \"5097529\": {\n      \"name\": \"Edison\",\n      \"country\": \"US\",\n      \"lat\": 40.51872,\n      \"long\": -74.4121,\n      \"zone\": \"America/New_York\"\n    },\n    \"5097598\": {\n      \"name\": \"Elizabeth\",\n      \"country\": \"US\",\n      \"lat\": 40.66399,\n      \"long\": -74.2107,\n      \"zone\": \"America/New_York\"\n    },\n    \"5099836\": {\n      \"name\": \"Jersey City\",\n      \"country\": \"US\",\n      \"lat\": 40.72816,\n      \"long\": -74.07764,\n      \"zone\": \"America/New_York\"\n    },\n    \"5101798\": {\n      \"name\": \"Newark\",\n      \"country\": \"US\",\n      \"lat\": 40.73566,\n      \"long\": -74.17237,\n      \"zone\": \"America/New_York\"\n    },\n    \"5102466\": {\n      \"name\": \"Paterson\",\n      \"country\": \"US\",\n      \"lat\": 40.91677,\n      \"long\": -74.17181,\n      \"zone\": \"America/New_York\"\n    },\n    \"5107129\": {\n      \"name\": \"Amherst\",\n      \"country\": \"US\",\n      \"lat\": 42.97839,\n      \"long\": -78.79976,\n      \"zone\": \"America/New_York\"\n    },\n    \"5110266\": {\n      \"name\": \"The Bronx\",\n      \"country\": \"US\",\n      \"lat\": 40.84985,\n      \"long\": -73.86641,\n      \"zone\": \"America/New_York\"\n    },\n    \"5110302\": {\n      \"name\": \"Brooklyn\",\n      \"country\": \"US\",\n      \"lat\": 40.6501,\n      \"long\": -73.94958,\n      \"zone\": \"America/New_York\"\n    },\n    \"5110629\": {\n      \"name\": \"Buffalo\",\n      \"country\": \"US\",\n      \"lat\": 42.88645,\n      \"long\": -78.87837,\n      \"zone\": \"America/New_York\"\n    },\n    \"5115985\": {\n      \"name\": \"East New York\",\n      \"country\": \"US\",\n      \"lat\": 40.66677,\n      \"long\": -73.88236,\n      \"zone\": \"America/New_York\"\n    },\n    \"5122520\": {\n      \"name\": \"Jamaica\",\n      \"country\": \"US\",\n      \"lat\": 40.69149,\n      \"long\": -73.80569,\n      \"zone\": \"America/New_York\"\n    },\n    \"5125771\": {\n      \"name\": \"Manhattan\",\n      \"country\": \"US\",\n      \"lat\": 40.78343,\n      \"long\": -73.96625,\n      \"zone\": \"America/New_York\"\n    },\n    \"5128581\": {\n      \"name\": \"New York City\",\n      \"country\": \"US\",\n      \"lat\": 40.71427,\n      \"long\": -74.00597,\n      \"zone\": \"America/New_York\"\n    },\n    \"5133273\": {\n      \"name\": \"Borough of Queens\",\n      \"country\": \"US\",\n      \"lat\": 40.68149,\n      \"long\": -73.83652,\n      \"zone\": \"America/New_York\"\n    },\n    \"5134086\": {\n      \"name\": \"Rochester\",\n      \"country\": \"US\",\n      \"lat\": 43.15478,\n      \"long\": -77.61556,\n      \"zone\": \"America/New_York\"\n    },\n    \"5139568\": {\n      \"name\": \"Staten Island\",\n      \"country\": \"US\",\n      \"lat\": 40.56233,\n      \"long\": -74.13986,\n      \"zone\": \"America/New_York\"\n    },\n    \"5140405\": {\n      \"name\": \"Syracuse\",\n      \"country\": \"US\",\n      \"lat\": 43.04812,\n      \"long\": -76.14742,\n      \"zone\": \"America/New_York\"\n    },\n    \"5145215\": {\n      \"name\": \"Yonkers\",\n      \"country\": \"US\",\n      \"lat\": 40.93121,\n      \"long\": -73.89875,\n      \"zone\": \"America/New_York\"\n    },\n    \"5145476\": {\n      \"name\": \"Akron\",\n      \"country\": \"US\",\n      \"lat\": 41.08144,\n      \"long\": -81.51901,\n      \"zone\": \"America/New_York\"\n    },\n    \"5150529\": {\n      \"name\": \"Cleveland\",\n      \"country\": \"US\",\n      \"lat\": 41.4995,\n      \"long\": -81.69541,\n      \"zone\": \"America/New_York\"\n    },\n    \"5174035\": {\n      \"name\": \"Toledo\",\n      \"country\": \"US\",\n      \"lat\": 41.66394,\n      \"long\": -83.55521,\n      \"zone\": \"America/New_York\"\n    },\n    \"5178127\": {\n      \"name\": \"Allentown\",\n      \"country\": \"US\",\n      \"lat\": 40.60843,\n      \"long\": -75.49018,\n      \"zone\": \"America/New_York\"\n    },\n    \"5188843\": {\n      \"name\": \"Erie\",\n      \"country\": \"US\",\n      \"lat\": 42.12922,\n      \"long\": -80.08506,\n      \"zone\": \"America/New_York\"\n    },\n    \"5206379\": {\n      \"name\": \"Pittsburgh\",\n      \"country\": \"US\",\n      \"lat\": 40.44062,\n      \"long\": -79.99589,\n      \"zone\": \"America/New_York\"\n    },\n    \"5224151\": {\n      \"name\": \"Providence\",\n      \"country\": \"US\",\n      \"lat\": 41.82399,\n      \"long\": -71.41283,\n      \"zone\": \"America/New_York\"\n    },\n    \"5231851\": {\n      \"name\": \"Sioux Falls\",\n      \"country\": \"US\",\n      \"lat\": 43.54997,\n      \"long\": -96.70033,\n      \"zone\": \"America/Chicago\"\n    },\n    \"5254962\": {\n      \"name\": \"Green Bay\",\n      \"country\": \"US\",\n      \"lat\": 44.51916,\n      \"long\": -88.01983,\n      \"zone\": \"America/Chicago\"\n    },\n    \"5261457\": {\n      \"name\": \"Madison\",\n      \"country\": \"US\",\n      \"lat\": 43.07305,\n      \"long\": -89.40123,\n      \"zone\": \"America/Chicago\"\n    },\n    \"5263045\": {\n      \"name\": \"Milwaukee\",\n      \"country\": \"US\",\n      \"lat\": 43.0389,\n      \"long\": -87.90647,\n      \"zone\": \"America/Chicago\"\n    },\n    \"5282804\": {\n      \"name\": \"Bridgeport\",\n      \"country\": \"US\",\n      \"lat\": 41.16704,\n      \"long\": -73.20483,\n      \"zone\": \"America/New_York\"\n    },\n    \"5289282\": {\n      \"name\": \"Chandler\",\n      \"country\": \"US\",\n      \"lat\": 33.30616,\n      \"long\": -111.84125,\n      \"zone\": \"America/Phoenix\"\n    },\n    \"5295903\": {\n      \"name\": \"Gilbert\",\n      \"country\": \"US\",\n      \"lat\": 33.35283,\n      \"long\": -111.78903,\n      \"zone\": \"America/Phoenix\"\n    },\n    \"5295985\": {\n      \"name\": \"Glendale\",\n      \"country\": \"US\",\n      \"lat\": 33.53865,\n      \"long\": -112.18599,\n      \"zone\": \"America/Phoenix\"\n    },\n    \"5304391\": {\n      \"name\": \"Mesa\",\n      \"country\": \"US\",\n      \"lat\": 33.41253,\n      \"long\": -111.83189,\n      \"zone\": \"America/Phoenix\"\n    },\n    \"5308480\": {\n      \"name\": \"Peoria\",\n      \"country\": \"US\",\n      \"lat\": 33.5806,\n      \"long\": -112.23738,\n      \"zone\": \"America/Phoenix\"\n    },\n    \"5308655\": {\n      \"name\": \"Phoenix\",\n      \"country\": \"US\",\n      \"lat\": 33.44838,\n      \"long\": -112.07404,\n      \"zone\": \"America/Phoenix\"\n    },\n    \"5313457\": {\n      \"name\": \"Scottsdale\",\n      \"country\": \"US\",\n      \"lat\": 33.50921,\n      \"long\": -111.89903,\n      \"zone\": \"America/Phoenix\"\n    },\n    \"5316428\": {\n      \"name\": \"Surprise\",\n      \"country\": \"US\",\n      \"lat\": 33.63059,\n      \"long\": -112.33322,\n      \"zone\": \"America/Phoenix\"\n    },\n    \"5317058\": {\n      \"name\": \"Tempe\",\n      \"country\": \"US\",\n      \"lat\": 33.41477,\n      \"long\": -111.90931,\n      \"zone\": \"America/Phoenix\"\n    },\n    \"5317071\": {\n      \"name\": \"Tempe Junction\",\n      \"country\": \"US\",\n      \"lat\": 33.41421,\n      \"long\": -111.94348,\n      \"zone\": \"America/Phoenix\"\n    },\n    \"5318313\": {\n      \"name\": \"Tucson\",\n      \"country\": \"US\",\n      \"lat\": 32.22174,\n      \"long\": -110.92648,\n      \"zone\": \"America/Phoenix\"\n    },\n    \"5323810\": {\n      \"name\": \"Anaheim\",\n      \"country\": \"US\",\n      \"lat\": 33.83529,\n      \"long\": -117.9145,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5324200\": {\n      \"name\": \"Antioch\",\n      \"country\": \"US\",\n      \"lat\": 38.00492,\n      \"long\": -121.80579,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5325738\": {\n      \"name\": \"Bakersfield\",\n      \"country\": \"US\",\n      \"lat\": 35.37329,\n      \"long\": -119.01871,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5327684\": {\n      \"name\": \"Berkeley\",\n      \"country\": \"US\",\n      \"lat\": 37.87159,\n      \"long\": -122.27275,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5331835\": {\n      \"name\": \"Burbank\",\n      \"country\": \"US\",\n      \"lat\": 34.18084,\n      \"long\": -118.30897,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5334223\": {\n      \"name\": \"Carlsbad\",\n      \"country\": \"US\",\n      \"lat\": 33.15809,\n      \"long\": -117.35059,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5336899\": {\n      \"name\": \"Chula Vista\",\n      \"country\": \"US\",\n      \"lat\": 32.64005,\n      \"long\": -117.0842,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5339111\": {\n      \"name\": \"Concord\",\n      \"country\": \"US\",\n      \"lat\": 37.97798,\n      \"long\": -122.03107,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5339631\": {\n      \"name\": \"Corona\",\n      \"country\": \"US\",\n      \"lat\": 33.87529,\n      \"long\": -117.56644,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5339840\": {\n      \"name\": \"Costa Mesa\",\n      \"country\": \"US\",\n      \"lat\": 33.64113,\n      \"long\": -117.91867,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5341430\": {\n      \"name\": \"Daly City\",\n      \"country\": \"US\",\n      \"lat\": 37.70577,\n      \"long\": -122.46192,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5343858\": {\n      \"name\": \"Downey\",\n      \"country\": \"US\",\n      \"lat\": 33.94001,\n      \"long\": -118.13257,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5344994\": {\n      \"name\": \"East Los Angeles\",\n      \"country\": \"US\",\n      \"lat\": 34.0239,\n      \"long\": -118.17202,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5345743\": {\n      \"name\": \"El Monte\",\n      \"country\": \"US\",\n      \"lat\": 34.06862,\n      \"long\": -118.02757,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5346111\": {\n      \"name\": \"Elk Grove\",\n      \"country\": \"US\",\n      \"lat\": 38.4088,\n      \"long\": -121.37162,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5346827\": {\n      \"name\": \"Escondido\",\n      \"country\": \"US\",\n      \"lat\": 33.11921,\n      \"long\": -117.08642,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5347335\": {\n      \"name\": \"Fairfield\",\n      \"country\": \"US\",\n      \"lat\": 38.24936,\n      \"long\": -122.03997,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5349755\": {\n      \"name\": \"Fontana\",\n      \"country\": \"US\",\n      \"lat\": 34.09223,\n      \"long\": -117.43505,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5350734\": {\n      \"name\": \"Fremont\",\n      \"country\": \"US\",\n      \"lat\": 37.54827,\n      \"long\": -121.98857,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5350937\": {\n      \"name\": \"Fresno\",\n      \"country\": \"US\",\n      \"lat\": 36.74773,\n      \"long\": -119.77237,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5351247\": {\n      \"name\": \"Fullerton\",\n      \"country\": \"US\",\n      \"lat\": 33.87029,\n      \"long\": -117.92534,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5351515\": {\n      \"name\": \"Garden Grove\",\n      \"country\": \"US\",\n      \"lat\": 33.77391,\n      \"long\": -117.94145,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5352423\": {\n      \"name\": \"Glendale\",\n      \"country\": \"US\",\n      \"lat\": 34.14251,\n      \"long\": -118.25508,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5355933\": {\n      \"name\": \"Hayward\",\n      \"country\": \"US\",\n      \"lat\": 37.66882,\n      \"long\": -122.0808,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5357527\": {\n      \"name\": \"Hollywood\",\n      \"country\": \"US\",\n      \"lat\": 34.09834,\n      \"long\": -118.32674,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5358705\": {\n      \"name\": \"Huntington Beach\",\n      \"country\": \"US\",\n      \"lat\": 33.6603,\n      \"long\": -117.99923,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5359488\": {\n      \"name\": \"Inglewood\",\n      \"country\": \"US\",\n      \"lat\": 33.96168,\n      \"long\": -118.35313,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5359777\": {\n      \"name\": \"Irvine\",\n      \"country\": \"US\",\n      \"lat\": 33.66946,\n      \"long\": -117.82311,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5364940\": {\n      \"name\": \"Lancaster\",\n      \"country\": \"US\",\n      \"lat\": 34.69804,\n      \"long\": -118.13674,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5367929\": {\n      \"name\": \"Long Beach\",\n      \"country\": \"US\",\n      \"lat\": 33.76696,\n      \"long\": -118.18923,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5368361\": {\n      \"name\": \"Los Angeles\",\n      \"country\": \"US\",\n      \"lat\": 34.05223,\n      \"long\": -118.24368,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5373900\": {\n      \"name\": \"Modesto\",\n      \"country\": \"US\",\n      \"lat\": 37.6391,\n      \"long\": -120.99688,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5374732\": {\n      \"name\": \"Moreno Valley\",\n      \"country\": \"US\",\n      \"lat\": 33.93752,\n      \"long\": -117.23059,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5375911\": {\n      \"name\": \"Murrieta\",\n      \"country\": \"US\",\n      \"lat\": 33.55391,\n      \"long\": -117.21392,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5377613\": {\n      \"name\": \"North Glendale\",\n      \"country\": \"US\",\n      \"lat\": 34.16056,\n      \"long\": -118.26452,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5377995\": {\n      \"name\": \"Norwalk\",\n      \"country\": \"US\",\n      \"lat\": 33.90224,\n      \"long\": -118.08173,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5378538\": {\n      \"name\": \"Oakland\",\n      \"country\": \"US\",\n      \"lat\": 37.80437,\n      \"long\": -122.2708,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5378771\": {\n      \"name\": \"Oceanside\",\n      \"country\": \"US\",\n      \"lat\": 33.19587,\n      \"long\": -117.37948,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5379439\": {\n      \"name\": \"Ontario\",\n      \"country\": \"US\",\n      \"lat\": 34.06334,\n      \"long\": -117.65089,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5379513\": {\n      \"name\": \"Orange\",\n      \"country\": \"US\",\n      \"lat\": 33.78779,\n      \"long\": -117.85311,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5380184\": {\n      \"name\": \"Oxnard\",\n      \"country\": \"US\",\n      \"lat\": 34.1975,\n      \"long\": -119.17705,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5380202\": {\n      \"name\": \"Oxnard Shores\",\n      \"country\": \"US\",\n      \"lat\": 34.19084,\n      \"long\": -119.2415,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5380698\": {\n      \"name\": \"Palmdale\",\n      \"country\": \"US\",\n      \"lat\": 34.57943,\n      \"long\": -118.11646,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5381396\": {\n      \"name\": \"Pasadena\",\n      \"country\": \"US\",\n      \"lat\": 34.14778,\n      \"long\": -118.14452,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5384170\": {\n      \"name\": \"Pomona\",\n      \"country\": \"US\",\n      \"lat\": 34.05529,\n      \"long\": -117.75228,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5385955\": {\n      \"name\": \"Rancho Cucamonga\",\n      \"country\": \"US\",\n      \"lat\": 34.1064,\n      \"long\": -117.59311,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5387428\": {\n      \"name\": \"Richmond\",\n      \"country\": \"US\",\n      \"lat\": 37.93576,\n      \"long\": -122.34775,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5387877\": {\n      \"name\": \"Riverside\",\n      \"country\": \"US\",\n      \"lat\": 33.95335,\n      \"long\": -117.39616,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5388881\": {\n      \"name\": \"Roseville\",\n      \"country\": \"US\",\n      \"lat\": 38.75212,\n      \"long\": -121.28801,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5389489\": {\n      \"name\": \"Sacramento\",\n      \"country\": \"US\",\n      \"lat\": 38.58157,\n      \"long\": -121.4944,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5391295\": {\n      \"name\": \"Salinas\",\n      \"country\": \"US\",\n      \"lat\": 36.67774,\n      \"long\": -121.6555,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5391710\": {\n      \"name\": \"San Bernardino\",\n      \"country\": \"US\",\n      \"lat\": 34.10834,\n      \"long\": -117.28977,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5391811\": {\n      \"name\": \"San Diego\",\n      \"country\": \"US\",\n      \"lat\": 32.71533,\n      \"long\": -117.15726,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5391959\": {\n      \"name\": \"San Francisco\",\n      \"country\": \"US\",\n      \"lat\": 37.77493,\n      \"long\": -122.41942,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5392171\": {\n      \"name\": \"San Jose\",\n      \"country\": \"US\",\n      \"lat\": 37.33939,\n      \"long\": -121.89496,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5392900\": {\n      \"name\": \"Santa Ana\",\n      \"country\": \"US\",\n      \"lat\": 33.74557,\n      \"long\": -117.86783,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5393015\": {\n      \"name\": \"Santa Clara\",\n      \"country\": \"US\",\n      \"lat\": 37.35411,\n      \"long\": -121.95524,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5393049\": {\n      \"name\": \"Santa Clarita\",\n      \"country\": \"US\",\n      \"lat\": 34.39166,\n      \"long\": -118.54259,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5393287\": {\n      \"name\": \"Santa Rosa\",\n      \"country\": \"US\",\n      \"lat\": 38.44047,\n      \"long\": -122.71443,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5396003\": {\n      \"name\": \"Simi Valley\",\n      \"country\": \"US\",\n      \"lat\": 34.26945,\n      \"long\": -118.78148,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5399020\": {\n      \"name\": \"Stockton\",\n      \"country\": \"US\",\n      \"lat\": 37.9577,\n      \"long\": -121.29078,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5400075\": {\n      \"name\": \"Sunnyvale\",\n      \"country\": \"US\",\n      \"lat\": 37.36883,\n      \"long\": -122.03635,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5401395\": {\n      \"name\": \"Temecula\",\n      \"country\": \"US\",\n      \"lat\": 33.49364,\n      \"long\": -117.14836,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5402405\": {\n      \"name\": \"Thousand Oaks\",\n      \"country\": \"US\",\n      \"lat\": 34.17056,\n      \"long\": -118.83759,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5403022\": {\n      \"name\": \"Torrance\",\n      \"country\": \"US\",\n      \"lat\": 33.83585,\n      \"long\": -118.34063,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5404794\": {\n      \"name\": \"Universal City\",\n      \"country\": \"US\",\n      \"lat\": 34.1389,\n      \"long\": -118.35341,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5405288\": {\n      \"name\": \"Valencia\",\n      \"country\": \"US\",\n      \"lat\": 34.44361,\n      \"long\": -118.60953,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5405380\": {\n      \"name\": \"Vallejo\",\n      \"country\": \"US\",\n      \"lat\": 38.10409,\n      \"long\": -122.25664,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5405693\": {\n      \"name\": \"Van Nuys\",\n      \"country\": \"US\",\n      \"lat\": 34.18667,\n      \"long\": -118.44897,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5406222\": {\n      \"name\": \"Victorville\",\n      \"country\": \"US\",\n      \"lat\": 34.53611,\n      \"long\": -117.29116,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5406567\": {\n      \"name\": \"Visalia\",\n      \"country\": \"US\",\n      \"lat\": 36.33023,\n      \"long\": -119.29206,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5407933\": {\n      \"name\": \"West Covina\",\n      \"country\": \"US\",\n      \"lat\": 34.06862,\n      \"long\": -117.93895,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5412199\": {\n      \"name\": \"Arvada\",\n      \"country\": \"US\",\n      \"lat\": 39.80276,\n      \"long\": -105.08748,\n      \"zone\": \"America/Denver\"\n    },\n    \"5412347\": {\n      \"name\": \"Aurora\",\n      \"country\": \"US\",\n      \"lat\": 39.72943,\n      \"long\": -104.83192,\n      \"zone\": \"America/Denver\"\n    },\n    \"5416541\": {\n      \"name\": \"Centennial\",\n      \"country\": \"US\",\n      \"lat\": 39.57916,\n      \"long\": -104.87692,\n      \"zone\": \"America/Denver\"\n    },\n    \"5417598\": {\n      \"name\": \"Colorado Springs\",\n      \"country\": \"US\",\n      \"lat\": 38.83388,\n      \"long\": -104.82136,\n      \"zone\": \"America/Denver\"\n    },\n    \"5419384\": {\n      \"name\": \"Denver\",\n      \"country\": \"US\",\n      \"lat\": 39.73915,\n      \"long\": -104.9847,\n      \"zone\": \"America/Denver\"\n    },\n    \"5427946\": {\n      \"name\": \"Lakewood\",\n      \"country\": \"US\",\n      \"lat\": 39.70471,\n      \"long\": -105.08137,\n      \"zone\": \"America/Denver\"\n    },\n    \"5435464\": {\n      \"name\": \"Pueblo\",\n      \"country\": \"US\",\n      \"lat\": 38.25445,\n      \"long\": -104.60914,\n      \"zone\": \"America/Denver\"\n    },\n    \"5441492\": {\n      \"name\": \"Thornton\",\n      \"country\": \"US\",\n      \"lat\": 39.86804,\n      \"long\": -104.97192,\n      \"zone\": \"America/Denver\"\n    },\n    \"5443910\": {\n      \"name\": \"Westminster\",\n      \"country\": \"US\",\n      \"lat\": 39.83665,\n      \"long\": -105.0372,\n      \"zone\": \"America/Denver\"\n    },\n    \"5454711\": {\n      \"name\": \"Albuquerque\",\n      \"country\": \"US\",\n      \"lat\": 35.08449,\n      \"long\": -106.65114,\n      \"zone\": \"America/Denver\"\n    },\n    \"5503766\": {\n      \"name\": \"Enterprise\",\n      \"country\": \"US\",\n      \"lat\": 36.02525,\n      \"long\": -115.24194,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5505411\": {\n      \"name\": \"Henderson\",\n      \"country\": \"US\",\n      \"lat\": 36.0397,\n      \"long\": -114.98194,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5506956\": {\n      \"name\": \"Las Vegas\",\n      \"country\": \"US\",\n      \"lat\": 36.17497,\n      \"long\": -115.13722,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5509403\": {\n      \"name\": \"North Las Vegas\",\n      \"country\": \"US\",\n      \"lat\": 36.19886,\n      \"long\": -115.1175,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5509952\": {\n      \"name\": \"Paradise\",\n      \"country\": \"US\",\n      \"lat\": 36.09719,\n      \"long\": -115.14666,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5511077\": {\n      \"name\": \"Reno\",\n      \"country\": \"US\",\n      \"lat\": 39.52963,\n      \"long\": -119.8138,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5512909\": {\n      \"name\": \"Spring Valley\",\n      \"country\": \"US\",\n      \"lat\": 36.10803,\n      \"long\": -115.245,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5513343\": {\n      \"name\": \"Sunrise Manor\",\n      \"country\": \"US\",\n      \"lat\": 36.21108,\n      \"long\": -115.07306,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5516233\": {\n      \"name\": \"Amarillo\",\n      \"country\": \"US\",\n      \"lat\": 35.222,\n      \"long\": -101.8313,\n      \"zone\": \"America/Chicago\"\n    },\n    \"5520993\": {\n      \"name\": \"El Paso\",\n      \"country\": \"US\",\n      \"lat\": 31.75872,\n      \"long\": -106.48693,\n      \"zone\": \"America/Denver\"\n    },\n    \"5525577\": {\n      \"name\": \"Lubbock\",\n      \"country\": \"US\",\n      \"lat\": 33.57786,\n      \"long\": -101.85517,\n      \"zone\": \"America/Chicago\"\n    },\n    \"5526337\": {\n      \"name\": \"Midland\",\n      \"country\": \"US\",\n      \"lat\": 31.99735,\n      \"long\": -102.07791,\n      \"zone\": \"America/Chicago\"\n    },\n    \"5577147\": {\n      \"name\": \"Fort Collins\",\n      \"country\": \"US\",\n      \"lat\": 40.58526,\n      \"long\": -105.08442,\n      \"zone\": \"America/Denver\"\n    },\n    \"5586437\": {\n      \"name\": \"Boise\",\n      \"country\": \"US\",\n      \"lat\": 43.6135,\n      \"long\": -116.20345,\n      \"zone\": \"America/Boise\"\n    },\n    \"5640350\": {\n      \"name\": \"Billings\",\n      \"country\": \"US\",\n      \"lat\": 45.78329,\n      \"long\": -108.50069,\n      \"zone\": \"America/Denver\"\n    },\n    \"5725846\": {\n      \"name\": \"Eugene\",\n      \"country\": \"US\",\n      \"lat\": 44.05207,\n      \"long\": -123.08675,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5729485\": {\n      \"name\": \"Gresham\",\n      \"country\": \"US\",\n      \"lat\": 45.49818,\n      \"long\": -122.43148,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5746545\": {\n      \"name\": \"Portland\",\n      \"country\": \"US\",\n      \"lat\": 45.52345,\n      \"long\": -122.67621,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5750162\": {\n      \"name\": \"Salem\",\n      \"country\": \"US\",\n      \"lat\": 44.9429,\n      \"long\": -123.0351,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5780026\": {\n      \"name\": \"Provo\",\n      \"country\": \"US\",\n      \"lat\": 40.23384,\n      \"long\": -111.65853,\n      \"zone\": \"America/Denver\"\n    },\n    \"5780993\": {\n      \"name\": \"Salt Lake City\",\n      \"country\": \"US\",\n      \"lat\": 40.76078,\n      \"long\": -111.89105,\n      \"zone\": \"America/Denver\"\n    },\n    \"5784549\": {\n      \"name\": \"West Jordan\",\n      \"country\": \"US\",\n      \"lat\": 40.60967,\n      \"long\": -111.9391,\n      \"zone\": \"America/Denver\"\n    },\n    \"5784607\": {\n      \"name\": \"West Valley City\",\n      \"country\": \"US\",\n      \"lat\": 40.69161,\n      \"long\": -112.00105,\n      \"zone\": \"America/Denver\"\n    },\n    \"5786882\": {\n      \"name\": \"Bellevue\",\n      \"country\": \"US\",\n      \"lat\": 47.61038,\n      \"long\": -122.20068,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5793933\": {\n      \"name\": \"Everett\",\n      \"country\": \"US\",\n      \"lat\": 47.97898,\n      \"long\": -122.20208,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5809844\": {\n      \"name\": \"Seattle\",\n      \"country\": \"US\",\n      \"lat\": 47.60621,\n      \"long\": -122.33207,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5811696\": {\n      \"name\": \"Spokane\",\n      \"country\": \"US\",\n      \"lat\": 47.65966,\n      \"long\": -117.42908,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5812944\": {\n      \"name\": \"Tacoma\",\n      \"country\": \"US\",\n      \"lat\": 47.25288,\n      \"long\": -122.44429,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5814616\": {\n      \"name\": \"Vancouver\",\n      \"country\": \"US\",\n      \"lat\": 45.63873,\n      \"long\": -122.66149,\n      \"zone\": \"America/Los_Angeles\"\n    },\n    \"5856195\": {\n      \"name\": \"Honolulu\",\n      \"country\": \"US\",\n      \"lat\": 21.30694,\n      \"long\": -157.85833,\n      \"zone\": \"Pacific/Honolulu\"\n    },\n    \"5879400\": {\n      \"name\": \"Anchorage\",\n      \"country\": \"US\",\n      \"lat\": 61.21806,\n      \"long\": -149.90028,\n      \"zone\": \"America/Anchorage\"\n    },\n    \"5881791\": {\n      \"name\": \"Abbotsford\",\n      \"country\": \"CA\",\n      \"lat\": 49.05798,\n      \"long\": -122.25257,\n      \"zone\": \"America/Vancouver\"\n    },\n    \"5885383\": {\n      \"name\": \"Anmore\",\n      \"country\": \"CA\",\n      \"lat\": 49.31637,\n      \"long\": -122.85263,\n      \"zone\": \"America/Vancouver\"\n    },\n    \"5894171\": {\n      \"name\": \"Barrie\",\n      \"country\": \"CA\",\n      \"lat\": 44.40011,\n      \"long\": -79.66634,\n      \"zone\": \"America/Toronto\"\n    },\n    \"5907364\": {\n      \"name\": \"Brampton\",\n      \"country\": \"CA\",\n      \"lat\": 43.68341,\n      \"long\": -79.76633,\n      \"zone\": \"America/Toronto\"\n    },\n    \"5911592\": {\n      \"name\": \"Burlington\",\n      \"country\": \"CA\",\n      \"lat\": 43.38621,\n      \"long\": -79.83713,\n      \"zone\": \"America/Toronto\"\n    },\n    \"5911606\": {\n      \"name\": \"Burnaby\",\n      \"country\": \"CA\",\n      \"lat\": 49.26636,\n      \"long\": -122.95263,\n      \"zone\": \"America/Vancouver\"\n    },\n    \"5913490\": {\n      \"name\": \"Calgary\",\n      \"country\": \"CA\",\n      \"lat\": 51.05011,\n      \"long\": -114.08529,\n      \"zone\": \"America/Edmonton\"\n    },\n    \"5913695\": {\n      \"name\": \"Cambridge\",\n      \"country\": \"CA\",\n      \"lat\": 43.3601,\n      \"long\": -80.31269,\n      \"zone\": \"America/Toronto\"\n    },\n    \"5927689\": {\n      \"name\": \"Coquitlam\",\n      \"country\": \"CA\",\n      \"lat\": 49.28297,\n      \"long\": -122.75262,\n      \"zone\": \"America/Vancouver\"\n    },\n    \"5935277\": {\n      \"name\": \"Dartmouth\",\n      \"country\": \"CA\",\n      \"lat\": 44.67134,\n      \"long\": -63.57719,\n      \"zone\": \"America/Halifax\"\n    },\n    \"5937615\": {\n      \"name\": \"Delta\",\n      \"country\": \"CA\",\n      \"lat\": 49.14399,\n      \"long\": -122.9068,\n      \"zone\": \"America/Vancouver\"\n    },\n    \"5946768\": {\n      \"name\": \"Edmonton\",\n      \"country\": \"CA\",\n      \"lat\": 53.55014,\n      \"long\": -113.46871,\n      \"zone\": \"America/Edmonton\"\n    },\n    \"5950267\": {\n      \"name\": \"Etobicoke\",\n      \"country\": \"CA\",\n      \"lat\": 43.65421,\n      \"long\": -79.56711,\n      \"zone\": \"America/Toronto\"\n    },\n    \"5959974\": {\n      \"name\": \"Gatineau\",\n      \"country\": \"CA\",\n      \"lat\": 45.47723,\n      \"long\": -75.70164,\n      \"zone\": \"America/Toronto\"\n    },\n    \"5964700\": {\n      \"name\": \"Greater Sudbury\",\n      \"country\": \"CA\",\n      \"lat\": 46.49,\n      \"long\": -80.99001,\n      \"zone\": \"America/Toronto\"\n    },\n    \"5967629\": {\n      \"name\": \"Guelph\",\n      \"country\": \"CA\",\n      \"lat\": 43.54594,\n      \"long\": -80.25599,\n      \"zone\": \"America/Toronto\"\n    },\n    \"5969782\": {\n      \"name\": \"Hamilton\",\n      \"country\": \"CA\",\n      \"lat\": 43.25011,\n      \"long\": -79.84963,\n      \"zone\": \"America/Toronto\"\n    },\n    \"5990579\": {\n      \"name\": \"Kelowna\",\n      \"country\": \"CA\",\n      \"lat\": 49.88307,\n      \"long\": -119.48568,\n      \"zone\": \"America/Vancouver\"\n    },\n    \"5992500\": {\n      \"name\": \"Kingston\",\n      \"country\": \"CA\",\n      \"lat\": 44.22976,\n      \"long\": -76.48098,\n      \"zone\": \"America/Toronto\"\n    },\n    \"5992996\": {\n      \"name\": \"Kitchener\",\n      \"country\": \"CA\",\n      \"lat\": 43.42537,\n      \"long\": -80.5112,\n      \"zone\": \"America/Toronto\"\n    },\n    \"6050610\": {\n      \"name\": \"Laval\",\n      \"country\": \"CA\",\n      \"lat\": 45.56995,\n      \"long\": -73.692,\n      \"zone\": \"America/Toronto\"\n    },\n    \"6058560\": {\n      \"name\": \"London\",\n      \"country\": \"CA\",\n      \"lat\": 42.98339,\n      \"long\": -81.23304,\n      \"zone\": \"America/Toronto\"\n    },\n    \"6059891\": {\n      \"name\": \"Longueuil\",\n      \"country\": \"CA\",\n      \"lat\": 45.53121,\n      \"long\": -73.51806,\n      \"zone\": \"America/Toronto\"\n    },\n    \"6066513\": {\n      \"name\": \"Markham\",\n      \"country\": \"CA\",\n      \"lat\": 43.86682,\n      \"long\": -79.2663,\n      \"zone\": \"America/Toronto\"\n    },\n    \"6075357\": {\n      \"name\": \"Mississauga\",\n      \"country\": \"CA\",\n      \"lat\": 43.5789,\n      \"long\": -79.6583,\n      \"zone\": \"America/Toronto\"\n    },\n    \"6077243\": {\n      \"name\": \"Montréal\",\n      \"country\": \"CA\",\n      \"lat\": 45.50884,\n      \"long\": -73.58781,\n      \"zone\": \"America/Toronto\"\n    },\n    \"6091104\": {\n      \"name\": \"North York\",\n      \"country\": \"CA\",\n      \"lat\": 43.76681,\n      \"long\": -79.4163,\n      \"zone\": \"America/Toronto\"\n    },\n    \"6092122\": {\n      \"name\": \"Oakville\",\n      \"country\": \"CA\",\n      \"lat\": 43.45011,\n      \"long\": -79.68292,\n      \"zone\": \"America/Toronto\"\n    },\n    \"6094578\": {\n      \"name\": \"Oshawa\",\n      \"country\": \"CA\",\n      \"lat\": 43.90012,\n      \"long\": -78.84957,\n      \"zone\": \"America/Toronto\"\n    },\n    \"6094817\": {\n      \"name\": \"Ottawa\",\n      \"country\": \"CA\",\n      \"lat\": 45.41117,\n      \"long\": -75.69812,\n      \"zone\": \"America/Toronto\"\n    },\n    \"6119109\": {\n      \"name\": \"Regina\",\n      \"country\": \"CA\",\n      \"lat\": 50.45008,\n      \"long\": -104.6178,\n      \"zone\": \"America/Regina\"\n    },\n    \"6122085\": {\n      \"name\": \"Richmond\",\n      \"country\": \"CA\",\n      \"lat\": 49.17003,\n      \"long\": -123.13683,\n      \"zone\": \"America/Vancouver\"\n    },\n    \"6122091\": {\n      \"name\": \"Richmond Hill\",\n      \"country\": \"CA\",\n      \"lat\": 43.87111,\n      \"long\": -79.43725,\n      \"zone\": \"America/Toronto\"\n    },\n    \"6137270\": {\n      \"name\": \"Saguenay\",\n      \"country\": \"CA\",\n      \"lat\": 48.41675,\n      \"long\": -71.06573,\n      \"zone\": \"America/Toronto\"\n    },\n    \"6141256\": {\n      \"name\": \"Saskatoon\",\n      \"country\": \"CA\",\n      \"lat\": 52.11679,\n      \"long\": -106.63452,\n      \"zone\": \"America/Regina\"\n    },\n    \"6146143\": {\n      \"name\": \"Sherbrooke\",\n      \"country\": \"CA\",\n      \"lat\": 45.40008,\n      \"long\": -71.89908,\n      \"zone\": \"America/Toronto\"\n    },\n    \"6155721\": {\n      \"name\": \"St. Catharines\",\n      \"country\": \"CA\",\n      \"lat\": 43.17126,\n      \"long\": -79.24267,\n      \"zone\": \"America/Toronto\"\n    },\n    \"6159905\": {\n      \"name\": \"Surrey\",\n      \"country\": \"CA\",\n      \"lat\": 49.10635,\n      \"long\": -122.82509,\n      \"zone\": \"America/Vancouver\"\n    },\n    \"6167865\": {\n      \"name\": \"Toronto\",\n      \"country\": \"CA\",\n      \"lat\": 43.70011,\n      \"long\": -79.4163,\n      \"zone\": \"America/Toronto\"\n    },\n    \"6169141\": {\n      \"name\": \"Trois-Rivières\",\n      \"country\": \"CA\",\n      \"lat\": 46.34515,\n      \"long\": -72.5477,\n      \"zone\": \"America/Toronto\"\n    },\n    \"6173331\": {\n      \"name\": \"Vancouver\",\n      \"country\": \"CA\",\n      \"lat\": 49.24966,\n      \"long\": -123.11934,\n      \"zone\": \"America/Vancouver\"\n    },\n    \"6173577\": {\n      \"name\": \"Vaughan\",\n      \"country\": \"CA\",\n      \"lat\": 43.8361,\n      \"long\": -79.49827,\n      \"zone\": \"America/Toronto\"\n    },\n    \"6174041\": {\n      \"name\": \"Victoria\",\n      \"country\": \"CA\",\n      \"lat\": 48.43294,\n      \"long\": -123.3693,\n      \"zone\": \"America/Vancouver\"\n    },\n    \"6182962\": {\n      \"name\": \"Windsor\",\n      \"country\": \"CA\",\n      \"lat\": 42.30008,\n      \"long\": -83.01654,\n      \"zone\": \"America/Toronto\"\n    },\n    \"6183235\": {\n      \"name\": \"Winnipeg\",\n      \"country\": \"CA\",\n      \"lat\": 49.8844,\n      \"long\": -97.14704,\n      \"zone\": \"America/Winnipeg\"\n    },\n    \"6252065\": {\n      \"name\": \"Nou Barris\",\n      \"country\": \"ES\",\n      \"lat\": 41.44163,\n      \"long\": 2.17727,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"6316406\": {\n      \"name\": \"Aparecida de Goiânia\",\n      \"country\": \"BR\",\n      \"lat\": -16.82333,\n      \"long\": -49.24389,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"6317344\": {\n      \"name\": \"Jaboatão dos Guararapes\",\n      \"country\": \"BR\",\n      \"lat\": -8.11278,\n      \"long\": -35.01472,\n      \"zone\": \"America/Recife\"\n    },\n    \"6317464\": {\n      \"name\": \"Lauro de Freitas\",\n      \"country\": \"BR\",\n      \"lat\": -12.89444,\n      \"long\": -38.32722,\n      \"zone\": \"America/Bahia\"\n    },\n    \"6317953\": {\n      \"name\": \"Pinhais\",\n      \"country\": \"BR\",\n      \"lat\": -25.44472,\n      \"long\": -49.1925,\n      \"zone\": \"America/Sao_Paulo\"\n    },\n    \"6318694\": {\n      \"name\": \"Simões Filho\",\n      \"country\": \"BR\",\n      \"lat\": -12.78444,\n      \"long\": -38.40389,\n      \"zone\": \"America/Bahia\"\n    },\n    \"6318696\": {\n      \"name\": \"Sinop\",\n      \"country\": \"BR\",\n      \"lat\": -11.86417,\n      \"long\": -55.5025,\n      \"zone\": \"America/Cuiaba\"\n    },\n    \"6324729\": {\n      \"name\": \"Halifax\",\n      \"country\": \"CA\",\n      \"lat\": 44.64533,\n      \"long\": -63.57239,\n      \"zone\": \"America/Halifax\"\n    },\n    \"6325494\": {\n      \"name\": \"Québec\",\n      \"country\": \"CA\",\n      \"lat\": 46.81228,\n      \"long\": -71.21454,\n      \"zone\": \"America/Toronto\"\n    },\n    \"6325521\": {\n      \"name\": \"Lévis\",\n      \"country\": \"CA\",\n      \"lat\": 46.80326,\n      \"long\": -71.17793,\n      \"zone\": \"America/Toronto\"\n    },\n    \"6354908\": {\n      \"name\": \"Sydney\",\n      \"country\": \"CA\",\n      \"lat\": 46.1351,\n      \"long\": -60.1831,\n      \"zone\": \"America/Glace_Bay\"\n    },\n    \"6418146\": {\n      \"name\": \"Chertanovo Yuzhnoye\",\n      \"country\": \"RU\",\n      \"lat\": 55.59072,\n      \"long\": 37.59519,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"6418220\": {\n      \"name\": \"Orekhovo-Borisovo\",\n      \"country\": \"RU\",\n      \"lat\": 55.61252,\n      \"long\": 37.72639,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"6544099\": {\n      \"name\": \"Moncloa-Aravaca\",\n      \"country\": \"ES\",\n      \"lat\": 40.43547,\n      \"long\": -3.7317,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"6544100\": {\n      \"name\": \"Eixample\",\n      \"country\": \"ES\",\n      \"lat\": 41.38896,\n      \"long\": 2.16179,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"6544102\": {\n      \"name\": \"Sarrià-Sant Gervasi\",\n      \"country\": \"ES\",\n      \"lat\": 41.40104,\n      \"long\": 2.1394,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"6544103\": {\n      \"name\": \"Horta-Guinardó\",\n      \"country\": \"ES\",\n      \"lat\": 41.41849,\n      \"long\": 2.1677,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"6544104\": {\n      \"name\": \"Sants-Montjuïc\",\n      \"country\": \"ES\",\n      \"lat\": 41.37263,\n      \"long\": 2.1546,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"6544105\": {\n      \"name\": \"Sant Martí\",\n      \"country\": \"ES\",\n      \"lat\": 41.41814,\n      \"long\": 2.19933,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"6544106\": {\n      \"name\": \"Ciutat Vella\",\n      \"country\": \"ES\",\n      \"lat\": 41.38022,\n      \"long\": 2.17319,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"6544487\": {\n      \"name\": \"Arganzuela\",\n      \"country\": \"ES\",\n      \"lat\": 40.40021,\n      \"long\": -3.69618,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"6544488\": {\n      \"name\": \"San Blas\",\n      \"country\": \"ES\",\n      \"lat\": 40.43893,\n      \"long\": -3.61537,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"6544489\": {\n      \"name\": \"Latina\",\n      \"country\": \"ES\",\n      \"lat\": 40.38897,\n      \"long\": -3.74569,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"6544490\": {\n      \"name\": \"Usera\",\n      \"country\": \"ES\",\n      \"lat\": 40.38866,\n      \"long\": -3.70035,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"6544491\": {\n      \"name\": \"Salamanca\",\n      \"country\": \"ES\",\n      \"lat\": 40.42972,\n      \"long\": -3.67975,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"6544492\": {\n      \"name\": \"Chamberí\",\n      \"country\": \"ES\",\n      \"lat\": 40.43404,\n      \"long\": -3.70379,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"6544493\": {\n      \"name\": \"Carabanchel\",\n      \"country\": \"ES\",\n      \"lat\": 40.39094,\n      \"long\": -3.7242,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"6544494\": {\n      \"name\": \"City Center\",\n      \"country\": \"ES\",\n      \"lat\": 40.41831,\n      \"long\": -3.70275,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"6544495\": {\n      \"name\": \"Retiro\",\n      \"country\": \"ES\",\n      \"lat\": 40.41317,\n      \"long\": -3.68307,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"6545326\": {\n      \"name\": \"Ursynów\",\n      \"country\": \"PL\",\n      \"lat\": 52.15051,\n      \"long\": 21.05041,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"6545348\": {\n      \"name\": \"Praga Południe\",\n      \"country\": \"PL\",\n      \"lat\": 52.24424,\n      \"long\": 21.08545,\n      \"zone\": \"Europe/Warsaw\"\n    },\n    \"6545349\": {\n      \"name\": \"Saidpur\",\n      \"country\": \"BD\",\n      \"lat\": 25.77769,\n      \"long\": 88.89169,\n      \"zone\": \"Asia/Dhaka\"\n    },\n    \"6611854\": {\n      \"name\": \"Nay Pyi Taw\",\n      \"country\": \"MM\",\n      \"lat\": 19.745,\n      \"long\": 96.12972,\n      \"zone\": \"Asia/Rangoon\"\n    },\n    \"6615440\": {\n      \"name\": \"Delicias\",\n      \"country\": \"ES\",\n      \"lat\": 41.64928,\n      \"long\": -0.90757,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"6618983\": {\n      \"name\": \"Zagreb - Centar\",\n      \"country\": \"HR\",\n      \"lat\": 45.81313,\n      \"long\": 15.97753,\n      \"zone\": \"Europe/Zagreb\"\n    },\n    \"6619347\": {\n      \"name\": \"Navi Mumbai\",\n      \"country\": \"IN\",\n      \"lat\": 19.03681,\n      \"long\": 73.01582,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"6621166\": {\n      \"name\": \"Seogwipo\",\n      \"country\": \"KR\",\n      \"lat\": 33.25333,\n      \"long\": 126.56181,\n      \"zone\": \"Asia/Seoul\"\n    },\n    \"6696918\": {\n      \"name\": \"Taoyuan City\",\n      \"country\": \"TW\",\n      \"lat\": 24.99368,\n      \"long\": 121.29696,\n      \"zone\": \"Asia/Taipei\"\n    },\n    \"6697563\": {\n      \"name\": \"Neyagawa\",\n      \"country\": \"JP\",\n      \"lat\": 34.76615,\n      \"long\": 135.62759,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"6697993\": {\n      \"name\": \"Baia Mare\",\n      \"country\": \"RO\",\n      \"lat\": 47.65331,\n      \"long\": 23.57949,\n      \"zone\": \"Europe/Bucharest\"\n    },\n    \"6822096\": {\n      \"name\": \"Hitachi-Naka\",\n      \"country\": \"JP\",\n      \"lat\": 36.39659,\n      \"long\": 140.53479,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"6825489\": {\n      \"name\": \"Jōetsu\",\n      \"country\": \"JP\",\n      \"lat\": 37.14828,\n      \"long\": 138.23642,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"6940394\": {\n      \"name\": \"Saitama\",\n      \"country\": \"JP\",\n      \"lat\": 35.90807,\n      \"long\": 139.65657,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"6941055\": {\n      \"name\": \"Bochum-Hordel\",\n      \"country\": \"DE\",\n      \"lat\": 51.50168,\n      \"long\": 7.1756,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"6943660\": {\n      \"name\": \"Shivaji Nagar\",\n      \"country\": \"IN\",\n      \"lat\": 18.53017,\n      \"long\": 73.85263,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"6947637\": {\n      \"name\": \"Ataşehir\",\n      \"country\": \"TR\",\n      \"lat\": 40.9833,\n      \"long\": 29.1167,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"6947639\": {\n      \"name\": \"Başakşehir\",\n      \"country\": \"TR\",\n      \"lat\": 41.09307,\n      \"long\": 28.80203,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"6947640\": {\n      \"name\": \"Beylikdüzü\",\n      \"country\": \"TR\",\n      \"lat\": 40.982,\n      \"long\": 28.6399,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"6947641\": {\n      \"name\": \"Büyükçekmece\",\n      \"country\": \"TR\",\n      \"lat\": 41.02072,\n      \"long\": 28.58502,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"6947756\": {\n      \"name\": \"Mendip\",\n      \"country\": \"GB\",\n      \"lat\": 51.2372,\n      \"long\": -2.6266,\n      \"zone\": \"Europe/London\"\n    },\n    \"6948711\": {\n      \"name\": \"Scarborough\",\n      \"country\": \"CA\",\n      \"lat\": 43.77223,\n      \"long\": -79.25666,\n      \"zone\": \"America/Toronto\"\n    },\n    \"6949678\": {\n      \"name\": \"Taitung City\",\n      \"country\": \"TW\",\n      \"lat\": 22.7583,\n      \"long\": 121.1444,\n      \"zone\": \"Asia/Taipei\"\n    },\n    \"6954929\": {\n      \"name\": \"Greater Noida\",\n      \"country\": \"IN\",\n      \"lat\": 28.49615,\n      \"long\": 77.53601,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"6955677\": {\n      \"name\": \"Çankaya\",\n      \"country\": \"TR\",\n      \"lat\": 39.9179,\n      \"long\": 32.86268,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"6956646\": {\n      \"name\": \"Arroyo Naranjo\",\n      \"country\": \"CU\",\n      \"lat\": 23.0144,\n      \"long\": -82.3031,\n      \"zone\": \"America/Havana\"\n    },\n    \"6956647\": {\n      \"name\": \"Boyeros\",\n      \"country\": \"CU\",\n      \"lat\": 23.0072,\n      \"long\": -82.4017,\n      \"zone\": \"America/Havana\"\n    },\n    \"6956648\": {\n      \"name\": \"Diez de Octubre\",\n      \"country\": \"CU\",\n      \"lat\": 23.0881,\n      \"long\": -82.3597,\n      \"zone\": \"America/Havana\"\n    },\n    \"6992326\": {\n      \"name\": \"Mohali\",\n      \"country\": \"IN\",\n      \"lat\": 30.67995,\n      \"long\": 76.72211,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"7279570\": {\n      \"name\": \"Higashimurayama-shi\",\n      \"country\": \"JP\",\n      \"lat\": 35.75459,\n      \"long\": 139.46852,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"7279746\": {\n      \"name\": \"Noida\",\n      \"country\": \"IN\",\n      \"lat\": 28.58,\n      \"long\": 77.33,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"7279754\": {\n      \"name\": \"Singrauli\",\n      \"country\": \"IN\",\n      \"lat\": 24.19973,\n      \"long\": 82.67535,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"7280708\": {\n      \"name\": \"Colonia del Valle\",\n      \"country\": \"MX\",\n      \"lat\": 19.38611,\n      \"long\": -99.16204,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"7281017\": {\n      \"name\": \"La Pintana\",\n      \"country\": \"CL\",\n      \"lat\": -33.58331,\n      \"long\": -70.63419,\n      \"zone\": \"America/Santiago\"\n    },\n    \"7281020\": {\n      \"name\": \"Lo Prado\",\n      \"country\": \"CL\",\n      \"lat\": -33.4443,\n      \"long\": -70.72552,\n      \"zone\": \"America/Santiago\"\n    },\n    \"7281838\": {\n      \"name\": \"Logan City\",\n      \"country\": \"AU\",\n      \"lat\": -27.63917,\n      \"long\": 153.10944,\n      \"zone\": \"Australia/Brisbane\"\n    },\n    \"7281931\": {\n      \"name\": \"Okanagan\",\n      \"country\": \"CA\",\n      \"lat\": 50.36386,\n      \"long\": -119.34997,\n      \"zone\": \"America/Vancouver\"\n    },\n    \"7283386\": {\n      \"name\": \"Changshu City\",\n      \"country\": \"CN\",\n      \"lat\": 31.64615,\n      \"long\": 120.74221,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"7284820\": {\n      \"name\": \"Jaigaon\",\n      \"country\": \"IN\",\n      \"lat\": 26.84766,\n      \"long\": 89.37558,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"7284824\": {\n      \"name\": \"Budapest XI. kerület\",\n      \"country\": \"HU\",\n      \"lat\": 47.47603,\n      \"long\": 19.03605,\n      \"zone\": \"Europe/Budapest\"\n    },\n    \"7284829\": {\n      \"name\": \"Budapest XIV. kerület\",\n      \"country\": \"HU\",\n      \"lat\": 47.5183,\n      \"long\": 19.10789,\n      \"zone\": \"Europe/Budapest\"\n    },\n    \"7284830\": {\n      \"name\": \"Budapest XIII. kerület\",\n      \"country\": \"HU\",\n      \"lat\": 47.52978,\n      \"long\": 19.08068,\n      \"zone\": \"Europe/Budapest\"\n    },\n    \"7284842\": {\n      \"name\": \"Budapest III. kerület\",\n      \"country\": \"HU\",\n      \"lat\": 47.54157,\n      \"long\": 19.04501,\n      \"zone\": \"Europe/Budapest\"\n    },\n    \"7289614\": {\n      \"name\": \"Halle Neustadt\",\n      \"country\": \"DE\",\n      \"lat\": 51.47924,\n      \"long\": 11.91605,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"7290243\": {\n      \"name\": \"Bergedorf\",\n      \"country\": \"DE\",\n      \"lat\": 53.48462,\n      \"long\": 10.22904,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"7290254\": {\n      \"name\": \"Berlin Schöneberg\",\n      \"country\": \"DE\",\n      \"lat\": 52.48388,\n      \"long\": 13.3477,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"7290466\": {\n      \"name\": \"Pasig City\",\n      \"country\": \"PH\",\n      \"lat\": 14.58691,\n      \"long\": 121.0614,\n      \"zone\": \"Asia/Manila\"\n    },\n    \"7302484\": {\n      \"name\": \"Waitakere\",\n      \"country\": \"NZ\",\n      \"lat\": -36.91754,\n      \"long\": 174.65773,\n      \"zone\": \"Pacific/Auckland\"\n    },\n    \"7302826\": {\n      \"name\": \"Lal Bahadur Nagar\",\n      \"country\": \"IN\",\n      \"lat\": 17.34769,\n      \"long\": 78.55757,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"7302828\": {\n      \"name\": \"Malkajgiri\",\n      \"country\": \"IN\",\n      \"lat\": 17.44781,\n      \"long\": 78.52633,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"7302833\": {\n      \"name\": \"Gajuwaka\",\n      \"country\": \"IN\",\n      \"lat\": 17.7,\n      \"long\": 83.21667,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"7302845\": {\n      \"name\": \"Quthbullapur\",\n      \"country\": \"IN\",\n      \"lat\": 17.50107,\n      \"long\": 78.45818,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"7302856\": {\n      \"name\": \"Serilingampalle\",\n      \"country\": \"IN\",\n      \"lat\": 17.49313,\n      \"long\": 78.30196,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"7302861\": {\n      \"name\": \"Ashoknagar Kalyangarh\",\n      \"country\": \"IN\",\n      \"lat\": 22.86416,\n      \"long\": 88.63701,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"7303248\": {\n      \"name\": \"Jiashan\",\n      \"country\": \"CN\",\n      \"lat\": 30.84918,\n      \"long\": 120.92583,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"7303419\": {\n      \"name\": \"East Jerusalem\",\n      \"country\": \"PS\",\n      \"lat\": 31.78336,\n      \"long\": 35.23388,\n      \"zone\": \"Asia/Hebron\"\n    },\n    \"7304020\": {\n      \"name\": \"Fenghuang\",\n      \"country\": \"CN\",\n      \"lat\": 27.93557,\n      \"long\": 109.59961,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"7498240\": {\n      \"name\": \"West Jerusalem\",\n      \"country\": \"IL\",\n      \"lat\": 31.78199,\n      \"long\": 35.21961,\n      \"zone\": \"Asia/Jerusalem\"\n    },\n    \"7602078\": {\n      \"name\": \"Ladner\",\n      \"country\": \"CA\",\n      \"lat\": 49.08938,\n      \"long\": -123.08241,\n      \"zone\": \"America/Vancouver\"\n    },\n    \"7602670\": {\n      \"name\": \"Zhu Cheng City\",\n      \"country\": \"CN\",\n      \"lat\": 35.99502,\n      \"long\": 119.40259,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"7627067\": {\n      \"name\": \"Bahçelievler\",\n      \"country\": \"TR\",\n      \"lat\": 41.00231,\n      \"long\": 28.8598,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"7628416\": {\n      \"name\": \"Sultangazi\",\n      \"country\": \"TR\",\n      \"lat\": 41.10652,\n      \"long\": 28.86847,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"7628419\": {\n      \"name\": \"Sultanbeyli\",\n      \"country\": \"TR\",\n      \"lat\": 40.96072,\n      \"long\": 29.27067,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"7628420\": {\n      \"name\": \"Sancaktepe\",\n      \"country\": \"TR\",\n      \"lat\": 41.00244,\n      \"long\": 29.23187,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"7701384\": {\n      \"name\": \"Karabağlar\",\n      \"country\": \"TR\",\n      \"lat\": 38.37396,\n      \"long\": 27.1352,\n      \"zone\": \"Europe/Istanbul\"\n    },\n    \"7838895\": {\n      \"name\": \"Russeifa\",\n      \"country\": \"JO\",\n      \"lat\": 32.01778,\n      \"long\": 36.04639,\n      \"zone\": \"Asia/Amman\"\n    },\n    \"7874116\": {\n      \"name\": \"Santo Domingo Oeste\",\n      \"country\": \"DO\",\n      \"lat\": 18.5,\n      \"long\": -70,\n      \"zone\": \"America/Santo_Domingo\"\n    },\n    \"7910932\": {\n      \"name\": \"Shangri-La\",\n      \"country\": \"CN\",\n      \"lat\": 27.82511,\n      \"long\": 99.70779,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"8020218\": {\n      \"name\": \"Malinovka\",\n      \"country\": \"BY\",\n      \"lat\": 53.8579,\n      \"long\": 27.4374,\n      \"zone\": \"Europe/Minsk\"\n    },\n    \"8224624\": {\n      \"name\": \"City of Balikpapan\",\n      \"country\": \"ID\",\n      \"lat\": -1.24204,\n      \"long\": 116.89419,\n      \"zone\": \"Asia/Makassar\"\n    },\n    \"8285534\": {\n      \"name\": \"Fuencarral-El Pardo\",\n      \"country\": \"ES\",\n      \"lat\": 40.4984,\n      \"long\": -3.7314,\n      \"zone\": \"Europe/Madrid\"\n    },\n    \"8347656\": {\n      \"name\": \"Ramagundam\",\n      \"country\": \"IN\",\n      \"lat\": 18.755,\n      \"long\": 79.474,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"8347664\": {\n      \"name\": \"Ordos\",\n      \"country\": \"CN\",\n      \"lat\": 39.6086,\n      \"long\": 109.78157,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"8354626\": {\n      \"name\": \"Hamburg-Nord\",\n      \"country\": \"DE\",\n      \"lat\": 53.58935,\n      \"long\": 9.984,\n      \"zone\": \"Europe/Berlin\"\n    },\n    \"8394316\": {\n      \"name\": \"Unaizah\",\n      \"country\": \"SA\",\n      \"lat\": 26.08427,\n      \"long\": 43.99355,\n      \"zone\": \"Asia/Riyadh\"\n    },\n    \"8504423\": {\n      \"name\": \"Subang Jaya\",\n      \"country\": \"MY\",\n      \"lat\": 3.04384,\n      \"long\": 101.58062,\n      \"zone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"8504948\": {\n      \"name\": \"Petrogradka\",\n      \"country\": \"RU\",\n      \"lat\": 59.96567,\n      \"long\": 30.31154,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"8504949\": {\n      \"name\": \"Vasyl'evsky Ostrov\",\n      \"country\": \"RU\",\n      \"lat\": 59.94091,\n      \"long\": 30.25377,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"8504951\": {\n      \"name\": \"Kalininskiy\",\n      \"country\": \"RU\",\n      \"lat\": 59.99675,\n      \"long\": 30.3899,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"8504952\": {\n      \"name\": \"Krasnogvargeisky\",\n      \"country\": \"RU\",\n      \"lat\": 59.97305,\n      \"long\": 30.47607,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"8504953\": {\n      \"name\": \"Admiralteisky\",\n      \"country\": \"RU\",\n      \"lat\": 59.90839,\n      \"long\": 30.28484,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"8504958\": {\n      \"name\": \"Akademicheskoe\",\n      \"country\": \"RU\",\n      \"lat\": 60.01375,\n      \"long\": 30.39471,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"8504960\": {\n      \"name\": \"Centralniy\",\n      \"country\": \"RU\",\n      \"lat\": 59.93111,\n      \"long\": 30.36072,\n      \"zone\": \"Europe/Moscow\"\n    },\n    \"8505006\": {\n      \"name\": \"Wenshan City\",\n      \"country\": \"CN\",\n      \"lat\": 23.36306,\n      \"long\": 104.25047,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"8533133\": {\n      \"name\": \"Liupanshui\",\n      \"country\": \"CN\",\n      \"lat\": 26.59444,\n      \"long\": 104.83333,\n      \"zone\": \"Asia/Shanghai\"\n    },\n    \"8533870\": {\n      \"name\": \"Saint-Quentin-en-Yvelines\",\n      \"country\": \"FR\",\n      \"lat\": 48.77186,\n      \"long\": 2.01891,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"8555643\": {\n      \"name\": \"Cergy-Pontoise\",\n      \"country\": \"FR\",\n      \"lat\": 49.03894,\n      \"long\": 2.07805,\n      \"zone\": \"Europe/Paris\"\n    },\n    \"8555918\": {\n      \"name\": \"Sendai\",\n      \"country\": \"JP\",\n      \"lat\": 38.25759,\n      \"long\": 140.8667,\n      \"zone\": \"Asia/Tokyo\"\n    },\n    \"8581443\": {\n      \"name\": \"South Tangerang\",\n      \"country\": \"ID\",\n      \"lat\": -6.28862,\n      \"long\": 106.71789,\n      \"zone\": \"Asia/Jakarta\"\n    },\n    \"8617692\": {\n      \"name\": \"San Pedro Garza Garcia\",\n      \"country\": \"MX\",\n      \"lat\": 25.65716,\n      \"long\": -100.40268,\n      \"zone\": \"America/Monterrey\"\n    },\n    \"8764562\": {\n      \"name\": \"Diepsloot\",\n      \"country\": \"ZA\",\n      \"lat\": -25.93312,\n      \"long\": 28.01213,\n      \"zone\": \"Africa/Johannesburg\"\n    },\n    \"8858078\": {\n      \"name\": \"Soledad de Graciano Sánchez\",\n      \"country\": \"MX\",\n      \"lat\": 22.18306,\n      \"long\": -100.94083,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"8858079\": {\n      \"name\": \"Manzanillo\",\n      \"country\": \"MX\",\n      \"lat\": 19.05222,\n      \"long\": -104.31583,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"8858082\": {\n      \"name\": \"Naucalpan de Juárez\",\n      \"country\": \"MX\",\n      \"lat\": 19.39694,\n      \"long\": -99.27667,\n      \"zone\": \"America/Mexico_City\"\n    },\n    \"9781227\": {\n      \"name\": \"Kultali\",\n      \"country\": \"IN\",\n      \"lat\": 21.9,\n      \"long\": 88.4,\n      \"zone\": \"Asia/Kolkata\"\n    },\n    \"9862222\": {\n      \"name\": \"Kyzyl-Orda\",\n      \"country\": \"KZ\",\n      \"lat\": 44.8479,\n      \"long\": 65.49989,\n      \"zone\": \"Asia/Almaty\"\n    },\n    \"10277901\": {\n      \"name\": \"Tutamandahostel\",\n      \"country\": \"EC\",\n      \"lat\": -0.19727,\n      \"long\": -78.4975,\n      \"zone\": \"America/Guayaquil\"\n    }\n  }\n};\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/src/scripts/data/zones.js\":[function(require,module,exports){\nmodule.exports = {\n  \"Africa/Abidjan\": {\n    \"name\": \"Africa/Abidjan\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Africa/Accra\": {\n    \"name\": \"Africa/Accra\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Africa/Addis_Ababa\": {\n    \"name\": \"Africa/Addis_Ababa\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"Africa/Algiers\": {\n    \"name\": \"Africa/Algiers\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -60\n    ]\n  },\n  \"Africa/Asmara\": {\n    \"name\": \"Africa/Asmara\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"Africa/Asmera\": {\n    \"name\": \"Africa/Asmera\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"Africa/Bamako\": {\n    \"name\": \"Africa/Bamako\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Africa/Bangui\": {\n    \"name\": \"Africa/Bangui\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -60\n    ]\n  },\n  \"Africa/Banjul\": {\n    \"name\": \"Africa/Banjul\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Africa/Bissau\": {\n    \"name\": \"Africa/Bissau\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Africa/Blantyre\": {\n    \"name\": \"Africa/Blantyre\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -120\n    ]\n  },\n  \"Africa/Brazzaville\": {\n    \"name\": \"Africa/Brazzaville\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -60\n    ]\n  },\n  \"Africa/Bujumbura\": {\n    \"name\": \"Africa/Bujumbura\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -120\n    ]\n  },\n  \"Africa/Cairo\": {\n    \"name\": \"Africa/Cairo\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -120\n    ]\n  },\n  \"Africa/Casablanca\": {\n    \"name\": \"Africa/Casablanca\",\n    \"untils\": [\n      1427594400000,\n      1434160800000,\n      1437184800000,\n      1445738400000,\n      null\n    ],\n    \"offsets\": [\n      0,\n      -60,\n      0,\n      -60,\n      0\n    ]\n  },\n  \"Africa/Ceuta\": {\n    \"name\": \"Africa/Ceuta\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Africa/Conakry\": {\n    \"name\": \"Africa/Conakry\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Africa/Dakar\": {\n    \"name\": \"Africa/Dakar\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Africa/Dar_es_Salaam\": {\n    \"name\": \"Africa/Dar_es_Salaam\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"Africa/Djibouti\": {\n    \"name\": \"Africa/Djibouti\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"Africa/Douala\": {\n    \"name\": \"Africa/Douala\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -60\n    ]\n  },\n  \"Africa/El_Aaiun\": {\n    \"name\": \"Africa/El_Aaiun\",\n    \"untils\": [\n      1427594400000,\n      1434160800000,\n      1437184800000,\n      1445738400000,\n      null\n    ],\n    \"offsets\": [\n      0,\n      -60,\n      0,\n      -60,\n      0\n    ]\n  },\n  \"Africa/Freetown\": {\n    \"name\": \"Africa/Freetown\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Africa/Gaborone\": {\n    \"name\": \"Africa/Gaborone\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -120\n    ]\n  },\n  \"Africa/Harare\": {\n    \"name\": \"Africa/Harare\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -120\n    ]\n  },\n  \"Africa/Johannesburg\": {\n    \"name\": \"Africa/Johannesburg\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -120\n    ]\n  },\n  \"Africa/Juba\": {\n    \"name\": \"Africa/Juba\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"Africa/Kampala\": {\n    \"name\": \"Africa/Kampala\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"Africa/Khartoum\": {\n    \"name\": \"Africa/Khartoum\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"Africa/Kigali\": {\n    \"name\": \"Africa/Kigali\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -120\n    ]\n  },\n  \"Africa/Kinshasa\": {\n    \"name\": \"Africa/Kinshasa\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -60\n    ]\n  },\n  \"Africa/Lagos\": {\n    \"name\": \"Africa/Lagos\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -60\n    ]\n  },\n  \"Africa/Libreville\": {\n    \"name\": \"Africa/Libreville\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -60\n    ]\n  },\n  \"Africa/Lome\": {\n    \"name\": \"Africa/Lome\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Africa/Luanda\": {\n    \"name\": \"Africa/Luanda\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -60\n    ]\n  },\n  \"Africa/Lubumbashi\": {\n    \"name\": \"Africa/Lubumbashi\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -120\n    ]\n  },\n  \"Africa/Lusaka\": {\n    \"name\": \"Africa/Lusaka\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -120\n    ]\n  },\n  \"Africa/Malabo\": {\n    \"name\": \"Africa/Malabo\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -60\n    ]\n  },\n  \"Africa/Maputo\": {\n    \"name\": \"Africa/Maputo\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -120\n    ]\n  },\n  \"Africa/Maseru\": {\n    \"name\": \"Africa/Maseru\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -120\n    ]\n  },\n  \"Africa/Mbabane\": {\n    \"name\": \"Africa/Mbabane\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -120\n    ]\n  },\n  \"Africa/Mogadishu\": {\n    \"name\": \"Africa/Mogadishu\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"Africa/Monrovia\": {\n    \"name\": \"Africa/Monrovia\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Africa/Nairobi\": {\n    \"name\": \"Africa/Nairobi\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"Africa/Ndjamena\": {\n    \"name\": \"Africa/Ndjamena\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -60\n    ]\n  },\n  \"Africa/Niamey\": {\n    \"name\": \"Africa/Niamey\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -60\n    ]\n  },\n  \"Africa/Nouakchott\": {\n    \"name\": \"Africa/Nouakchott\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Africa/Ouagadougou\": {\n    \"name\": \"Africa/Ouagadougou\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Africa/Porto-Novo\": {\n    \"name\": \"Africa/Porto-Novo\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -60\n    ]\n  },\n  \"Africa/Sao_Tome\": {\n    \"name\": \"Africa/Sao_Tome\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Africa/Timbuktu\": {\n    \"name\": \"Africa/Timbuktu\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Africa/Tripoli\": {\n    \"name\": \"Africa/Tripoli\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -120\n    ]\n  },\n  \"Africa/Tunis\": {\n    \"name\": \"Africa/Tunis\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -60\n    ]\n  },\n  \"Africa/Windhoek\": {\n    \"name\": \"Africa/Windhoek\",\n    \"untils\": [\n      1428192000000,\n      1441501200000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -60,\n      -120\n    ]\n  },\n  \"America/Adak\": {\n    \"name\": \"America/Adak\",\n    \"untils\": [\n      1425816000000,\n      1446375600000,\n      null\n    ],\n    \"offsets\": [\n      600,\n      540,\n      600\n    ]\n  },\n  \"America/Anchorage\": {\n    \"name\": \"America/Anchorage\",\n    \"untils\": [\n      1425812400000,\n      1446372000000,\n      null\n    ],\n    \"offsets\": [\n      540,\n      480,\n      540\n    ]\n  },\n  \"America/Anguilla\": {\n    \"name\": \"America/Anguilla\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/Antigua\": {\n    \"name\": \"America/Antigua\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/Araguaina\": {\n    \"name\": \"America/Araguaina\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Argentina/Buenos_Aires\": {\n    \"name\": \"America/Argentina/Buenos_Aires\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Argentina/Catamarca\": {\n    \"name\": \"America/Argentina/Catamarca\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Argentina/ComodRivadavia\": {\n    \"name\": \"America/Argentina/ComodRivadavia\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Argentina/Cordoba\": {\n    \"name\": \"America/Argentina/Cordoba\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Argentina/Jujuy\": {\n    \"name\": \"America/Argentina/Jujuy\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Argentina/La_Rioja\": {\n    \"name\": \"America/Argentina/La_Rioja\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Argentina/Mendoza\": {\n    \"name\": \"America/Argentina/Mendoza\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Argentina/Rio_Gallegos\": {\n    \"name\": \"America/Argentina/Rio_Gallegos\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Argentina/Salta\": {\n    \"name\": \"America/Argentina/Salta\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Argentina/San_Juan\": {\n    \"name\": \"America/Argentina/San_Juan\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Argentina/San_Luis\": {\n    \"name\": \"America/Argentina/San_Luis\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Argentina/Tucuman\": {\n    \"name\": \"America/Argentina/Tucuman\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Argentina/Ushuaia\": {\n    \"name\": \"America/Argentina/Ushuaia\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Aruba\": {\n    \"name\": \"America/Aruba\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/Asuncion\": {\n    \"name\": \"America/Asuncion\",\n    \"untils\": [\n      1426993200000,\n      1443931200000,\n      null\n    ],\n    \"offsets\": [\n      180,\n      240,\n      180\n    ]\n  },\n  \"America/Atikokan\": {\n    \"name\": \"America/Atikokan\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      300\n    ]\n  },\n  \"America/Atka\": {\n    \"name\": \"America/Atka\",\n    \"untils\": [\n      1425816000000,\n      1446375600000,\n      null\n    ],\n    \"offsets\": [\n      600,\n      540,\n      600\n    ]\n  },\n  \"America/Bahia\": {\n    \"name\": \"America/Bahia\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Bahia_Banderas\": {\n    \"name\": \"America/Bahia_Banderas\",\n    \"untils\": [\n      1428220800000,\n      1445756400000,\n      null\n    ],\n    \"offsets\": [\n      360,\n      300,\n      360\n    ]\n  },\n  \"America/Barbados\": {\n    \"name\": \"America/Barbados\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/Belem\": {\n    \"name\": \"America/Belem\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Belize\": {\n    \"name\": \"America/Belize\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      360\n    ]\n  },\n  \"America/Blanc-Sablon\": {\n    \"name\": \"America/Blanc-Sablon\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/Boa_Vista\": {\n    \"name\": \"America/Boa_Vista\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/Bogota\": {\n    \"name\": \"America/Bogota\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      300\n    ]\n  },\n  \"America/Boise\": {\n    \"name\": \"America/Boise\",\n    \"untils\": [\n      1425805200000,\n      1446364800000,\n      null\n    ],\n    \"offsets\": [\n      420,\n      360,\n      420\n    ]\n  },\n  \"America/Buenos_Aires\": {\n    \"name\": \"America/Buenos_Aires\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Cambridge_Bay\": {\n    \"name\": \"America/Cambridge_Bay\",\n    \"untils\": [\n      1425805200000,\n      1446364800000,\n      null\n    ],\n    \"offsets\": [\n      420,\n      360,\n      420\n    ]\n  },\n  \"America/Campo_Grande\": {\n    \"name\": \"America/Campo_Grande\",\n    \"untils\": [\n      1424574000000,\n      1445140800000,\n      null\n    ],\n    \"offsets\": [\n      180,\n      240,\n      180\n    ]\n  },\n  \"America/Cancun\": {\n    \"name\": \"America/Cancun\",\n    \"untils\": [\n      1422777600000,\n      null\n    ],\n    \"offsets\": [\n      360,\n      300\n    ]\n  },\n  \"America/Caracas\": {\n    \"name\": \"America/Caracas\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      270\n    ]\n  },\n  \"America/Catamarca\": {\n    \"name\": \"America/Catamarca\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Cayenne\": {\n    \"name\": \"America/Cayenne\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Cayman\": {\n    \"name\": \"America/Cayman\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      300\n    ]\n  },\n  \"America/Chicago\": {\n    \"name\": \"America/Chicago\",\n    \"untils\": [\n      1425801600000,\n      1446361200000,\n      null\n    ],\n    \"offsets\": [\n      360,\n      300,\n      360\n    ]\n  },\n  \"America/Chihuahua\": {\n    \"name\": \"America/Chihuahua\",\n    \"untils\": [\n      1428224400000,\n      1445760000000,\n      null\n    ],\n    \"offsets\": [\n      420,\n      360,\n      420\n    ]\n  },\n  \"America/Coral_Harbour\": {\n    \"name\": \"America/Coral_Harbour\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      300\n    ]\n  },\n  \"America/Cordoba\": {\n    \"name\": \"America/Cordoba\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Costa_Rica\": {\n    \"name\": \"America/Costa_Rica\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      360\n    ]\n  },\n  \"America/Creston\": {\n    \"name\": \"America/Creston\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      420\n    ]\n  },\n  \"America/Cuiaba\": {\n    \"name\": \"America/Cuiaba\",\n    \"untils\": [\n      1424574000000,\n      1445140800000,\n      null\n    ],\n    \"offsets\": [\n      180,\n      240,\n      180\n    ]\n  },\n  \"America/Curacao\": {\n    \"name\": \"America/Curacao\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/Danmarkshavn\": {\n    \"name\": \"America/Danmarkshavn\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"America/Dawson\": {\n    \"name\": \"America/Dawson\",\n    \"untils\": [\n      1425808800000,\n      1446368400000,\n      null\n    ],\n    \"offsets\": [\n      480,\n      420,\n      480\n    ]\n  },\n  \"America/Dawson_Creek\": {\n    \"name\": \"America/Dawson_Creek\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      420\n    ]\n  },\n  \"America/Denver\": {\n    \"name\": \"America/Denver\",\n    \"untils\": [\n      1425805200000,\n      1446364800000,\n      null\n    ],\n    \"offsets\": [\n      420,\n      360,\n      420\n    ]\n  },\n  \"America/Detroit\": {\n    \"name\": \"America/Detroit\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"America/Dominica\": {\n    \"name\": \"America/Dominica\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/Edmonton\": {\n    \"name\": \"America/Edmonton\",\n    \"untils\": [\n      1425805200000,\n      1446364800000,\n      null\n    ],\n    \"offsets\": [\n      420,\n      360,\n      420\n    ]\n  },\n  \"America/Eirunepe\": {\n    \"name\": \"America/Eirunepe\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      300\n    ]\n  },\n  \"America/El_Salvador\": {\n    \"name\": \"America/El_Salvador\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      360\n    ]\n  },\n  \"America/Ensenada\": {\n    \"name\": \"America/Ensenada\",\n    \"untils\": [\n      1425808800000,\n      1446368400000,\n      null\n    ],\n    \"offsets\": [\n      480,\n      420,\n      480\n    ]\n  },\n  \"America/Fort_Wayne\": {\n    \"name\": \"America/Fort_Wayne\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"America/Fortaleza\": {\n    \"name\": \"America/Fortaleza\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Glace_Bay\": {\n    \"name\": \"America/Glace_Bay\",\n    \"untils\": [\n      1425794400000,\n      1446354000000,\n      null\n    ],\n    \"offsets\": [\n      240,\n      180,\n      240\n    ]\n  },\n  \"America/Godthab\": {\n    \"name\": \"America/Godthab\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      180,\n      120,\n      180\n    ]\n  },\n  \"America/Goose_Bay\": {\n    \"name\": \"America/Goose_Bay\",\n    \"untils\": [\n      1425794400000,\n      1446354000000,\n      null\n    ],\n    \"offsets\": [\n      240,\n      180,\n      240\n    ]\n  },\n  \"America/Grand_Turk\": {\n    \"name\": \"America/Grand_Turk\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      240\n    ]\n  },\n  \"America/Grenada\": {\n    \"name\": \"America/Grenada\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/Guadeloupe\": {\n    \"name\": \"America/Guadeloupe\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/Guatemala\": {\n    \"name\": \"America/Guatemala\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      360\n    ]\n  },\n  \"America/Guayaquil\": {\n    \"name\": \"America/Guayaquil\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      300\n    ]\n  },\n  \"America/Guyana\": {\n    \"name\": \"America/Guyana\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/Halifax\": {\n    \"name\": \"America/Halifax\",\n    \"untils\": [\n      1425794400000,\n      1446354000000,\n      null\n    ],\n    \"offsets\": [\n      240,\n      180,\n      240\n    ]\n  },\n  \"America/Havana\": {\n    \"name\": \"America/Havana\",\n    \"untils\": [\n      1425790800000,\n      1446354000000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"America/Hermosillo\": {\n    \"name\": \"America/Hermosillo\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      420\n    ]\n  },\n  \"America/Indiana/Indianapolis\": {\n    \"name\": \"America/Indiana/Indianapolis\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"America/Indiana/Knox\": {\n    \"name\": \"America/Indiana/Knox\",\n    \"untils\": [\n      1425801600000,\n      1446361200000,\n      null\n    ],\n    \"offsets\": [\n      360,\n      300,\n      360\n    ]\n  },\n  \"America/Indiana/Marengo\": {\n    \"name\": \"America/Indiana/Marengo\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"America/Indiana/Petersburg\": {\n    \"name\": \"America/Indiana/Petersburg\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"America/Indiana/Tell_City\": {\n    \"name\": \"America/Indiana/Tell_City\",\n    \"untils\": [\n      1425801600000,\n      1446361200000,\n      null\n    ],\n    \"offsets\": [\n      360,\n      300,\n      360\n    ]\n  },\n  \"America/Indiana/Vevay\": {\n    \"name\": \"America/Indiana/Vevay\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"America/Indiana/Vincennes\": {\n    \"name\": \"America/Indiana/Vincennes\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"America/Indiana/Winamac\": {\n    \"name\": \"America/Indiana/Winamac\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"America/Indianapolis\": {\n    \"name\": \"America/Indianapolis\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"America/Inuvik\": {\n    \"name\": \"America/Inuvik\",\n    \"untils\": [\n      1425805200000,\n      1446364800000,\n      null\n    ],\n    \"offsets\": [\n      420,\n      360,\n      420\n    ]\n  },\n  \"America/Iqaluit\": {\n    \"name\": \"America/Iqaluit\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"America/Jamaica\": {\n    \"name\": \"America/Jamaica\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      300\n    ]\n  },\n  \"America/Jujuy\": {\n    \"name\": \"America/Jujuy\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Juneau\": {\n    \"name\": \"America/Juneau\",\n    \"untils\": [\n      1425812400000,\n      1446372000000,\n      null\n    ],\n    \"offsets\": [\n      540,\n      480,\n      540\n    ]\n  },\n  \"America/Kentucky/Louisville\": {\n    \"name\": \"America/Kentucky/Louisville\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"America/Kentucky/Monticello\": {\n    \"name\": \"America/Kentucky/Monticello\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"America/Knox_IN\": {\n    \"name\": \"America/Knox_IN\",\n    \"untils\": [\n      1425801600000,\n      1446361200000,\n      null\n    ],\n    \"offsets\": [\n      360,\n      300,\n      360\n    ]\n  },\n  \"America/Kralendijk\": {\n    \"name\": \"America/Kralendijk\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/La_Paz\": {\n    \"name\": \"America/La_Paz\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/Lima\": {\n    \"name\": \"America/Lima\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      300\n    ]\n  },\n  \"America/Los_Angeles\": {\n    \"name\": \"America/Los_Angeles\",\n    \"untils\": [\n      1425808800000,\n      1446368400000,\n      null\n    ],\n    \"offsets\": [\n      480,\n      420,\n      480\n    ]\n  },\n  \"America/Louisville\": {\n    \"name\": \"America/Louisville\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"America/Lower_Princes\": {\n    \"name\": \"America/Lower_Princes\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/Maceio\": {\n    \"name\": \"America/Maceio\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Managua\": {\n    \"name\": \"America/Managua\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      360\n    ]\n  },\n  \"America/Manaus\": {\n    \"name\": \"America/Manaus\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/Marigot\": {\n    \"name\": \"America/Marigot\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/Martinique\": {\n    \"name\": \"America/Martinique\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/Matamoros\": {\n    \"name\": \"America/Matamoros\",\n    \"untils\": [\n      1425801600000,\n      1446361200000,\n      null\n    ],\n    \"offsets\": [\n      360,\n      300,\n      360\n    ]\n  },\n  \"America/Mazatlan\": {\n    \"name\": \"America/Mazatlan\",\n    \"untils\": [\n      1428224400000,\n      1445760000000,\n      null\n    ],\n    \"offsets\": [\n      420,\n      360,\n      420\n    ]\n  },\n  \"America/Mendoza\": {\n    \"name\": \"America/Mendoza\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Menominee\": {\n    \"name\": \"America/Menominee\",\n    \"untils\": [\n      1425801600000,\n      1446361200000,\n      null\n    ],\n    \"offsets\": [\n      360,\n      300,\n      360\n    ]\n  },\n  \"America/Merida\": {\n    \"name\": \"America/Merida\",\n    \"untils\": [\n      1428220800000,\n      1445756400000,\n      null\n    ],\n    \"offsets\": [\n      360,\n      300,\n      360\n    ]\n  },\n  \"America/Metlakatla\": {\n    \"name\": \"America/Metlakatla\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      480\n    ]\n  },\n  \"America/Mexico_City\": {\n    \"name\": \"America/Mexico_City\",\n    \"untils\": [\n      1428220800000,\n      1445756400000,\n      null\n    ],\n    \"offsets\": [\n      360,\n      300,\n      360\n    ]\n  },\n  \"America/Miquelon\": {\n    \"name\": \"America/Miquelon\",\n    \"untils\": [\n      1425790800000,\n      1446350400000,\n      null\n    ],\n    \"offsets\": [\n      180,\n      120,\n      180\n    ]\n  },\n  \"America/Moncton\": {\n    \"name\": \"America/Moncton\",\n    \"untils\": [\n      1425794400000,\n      1446354000000,\n      null\n    ],\n    \"offsets\": [\n      240,\n      180,\n      240\n    ]\n  },\n  \"America/Monterrey\": {\n    \"name\": \"America/Monterrey\",\n    \"untils\": [\n      1428220800000,\n      1445756400000,\n      null\n    ],\n    \"offsets\": [\n      360,\n      300,\n      360\n    ]\n  },\n  \"America/Montevideo\": {\n    \"name\": \"America/Montevideo\",\n    \"untils\": [\n      1425787200000,\n      1443934800000,\n      null\n    ],\n    \"offsets\": [\n      120,\n      180,\n      120\n    ]\n  },\n  \"America/Montreal\": {\n    \"name\": \"America/Montreal\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"America/Montserrat\": {\n    \"name\": \"America/Montserrat\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/Nassau\": {\n    \"name\": \"America/Nassau\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"America/New_York\": {\n    \"name\": \"America/New_York\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"America/Nipigon\": {\n    \"name\": \"America/Nipigon\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"America/Nome\": {\n    \"name\": \"America/Nome\",\n    \"untils\": [\n      1425812400000,\n      1446372000000,\n      null\n    ],\n    \"offsets\": [\n      540,\n      480,\n      540\n    ]\n  },\n  \"America/Noronha\": {\n    \"name\": \"America/Noronha\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      120\n    ]\n  },\n  \"America/North_Dakota/Beulah\": {\n    \"name\": \"America/North_Dakota/Beulah\",\n    \"untils\": [\n      1425801600000,\n      1446361200000,\n      null\n    ],\n    \"offsets\": [\n      360,\n      300,\n      360\n    ]\n  },\n  \"America/North_Dakota/Center\": {\n    \"name\": \"America/North_Dakota/Center\",\n    \"untils\": [\n      1425801600000,\n      1446361200000,\n      null\n    ],\n    \"offsets\": [\n      360,\n      300,\n      360\n    ]\n  },\n  \"America/North_Dakota/New_Salem\": {\n    \"name\": \"America/North_Dakota/New_Salem\",\n    \"untils\": [\n      1425801600000,\n      1446361200000,\n      null\n    ],\n    \"offsets\": [\n      360,\n      300,\n      360\n    ]\n  },\n  \"America/Ojinaga\": {\n    \"name\": \"America/Ojinaga\",\n    \"untils\": [\n      1425805200000,\n      1446364800000,\n      null\n    ],\n    \"offsets\": [\n      420,\n      360,\n      420\n    ]\n  },\n  \"America/Panama\": {\n    \"name\": \"America/Panama\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      300\n    ]\n  },\n  \"America/Pangnirtung\": {\n    \"name\": \"America/Pangnirtung\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"America/Paramaribo\": {\n    \"name\": \"America/Paramaribo\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Phoenix\": {\n    \"name\": \"America/Phoenix\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      420\n    ]\n  },\n  \"America/Port-au-Prince\": {\n    \"name\": \"America/Port-au-Prince\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"America/Port_of_Spain\": {\n    \"name\": \"America/Port_of_Spain\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/Porto_Acre\": {\n    \"name\": \"America/Porto_Acre\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      300\n    ]\n  },\n  \"America/Porto_Velho\": {\n    \"name\": \"America/Porto_Velho\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/Puerto_Rico\": {\n    \"name\": \"America/Puerto_Rico\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/Rainy_River\": {\n    \"name\": \"America/Rainy_River\",\n    \"untils\": [\n      1425801600000,\n      1446361200000,\n      null\n    ],\n    \"offsets\": [\n      360,\n      300,\n      360\n    ]\n  },\n  \"America/Rankin_Inlet\": {\n    \"name\": \"America/Rankin_Inlet\",\n    \"untils\": [\n      1425801600000,\n      1446361200000,\n      null\n    ],\n    \"offsets\": [\n      360,\n      300,\n      360\n    ]\n  },\n  \"America/Recife\": {\n    \"name\": \"America/Recife\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Regina\": {\n    \"name\": \"America/Regina\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      360\n    ]\n  },\n  \"America/Resolute\": {\n    \"name\": \"America/Resolute\",\n    \"untils\": [\n      1425801600000,\n      1446361200000,\n      null\n    ],\n    \"offsets\": [\n      360,\n      300,\n      360\n    ]\n  },\n  \"America/Rio_Branco\": {\n    \"name\": \"America/Rio_Branco\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      300\n    ]\n  },\n  \"America/Rosario\": {\n    \"name\": \"America/Rosario\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Santa_Isabel\": {\n    \"name\": \"America/Santa_Isabel\",\n    \"untils\": [\n      1428228000000,\n      1445763600000,\n      null\n    ],\n    \"offsets\": [\n      480,\n      420,\n      480\n    ]\n  },\n  \"America/Santarem\": {\n    \"name\": \"America/Santarem\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"America/Santiago\": {\n    \"name\": \"America/Santiago\",\n    \"untils\": [\n      1430017200000,\n      null\n    ],\n    \"offsets\": [\n      180,\n      180\n    ]\n  },\n  \"America/Santo_Domingo\": {\n    \"name\": \"America/Santo_Domingo\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/Sao_Paulo\": {\n    \"name\": \"America/Sao_Paulo\",\n    \"untils\": [\n      1424570400000,\n      1445137200000,\n      null\n    ],\n    \"offsets\": [\n      120,\n      180,\n      120\n    ]\n  },\n  \"America/Scoresbysund\": {\n    \"name\": \"America/Scoresbysund\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      60,\n      0,\n      60\n    ]\n  },\n  \"America/Shiprock\": {\n    \"name\": \"America/Shiprock\",\n    \"untils\": [\n      1425805200000,\n      1446364800000,\n      null\n    ],\n    \"offsets\": [\n      420,\n      360,\n      420\n    ]\n  },\n  \"America/Sitka\": {\n    \"name\": \"America/Sitka\",\n    \"untils\": [\n      1425812400000,\n      1446372000000,\n      null\n    ],\n    \"offsets\": [\n      540,\n      480,\n      540\n    ]\n  },\n  \"America/St_Barthelemy\": {\n    \"name\": \"America/St_Barthelemy\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/St_Johns\": {\n    \"name\": \"America/St_Johns\",\n    \"untils\": [\n      1425792600000,\n      1446352200000,\n      null\n    ],\n    \"offsets\": [\n      210,\n      150,\n      210\n    ]\n  },\n  \"America/St_Kitts\": {\n    \"name\": \"America/St_Kitts\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/St_Lucia\": {\n    \"name\": \"America/St_Lucia\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/St_Thomas\": {\n    \"name\": \"America/St_Thomas\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/St_Vincent\": {\n    \"name\": \"America/St_Vincent\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/Swift_Current\": {\n    \"name\": \"America/Swift_Current\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      360\n    ]\n  },\n  \"America/Tegucigalpa\": {\n    \"name\": \"America/Tegucigalpa\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      360\n    ]\n  },\n  \"America/Thule\": {\n    \"name\": \"America/Thule\",\n    \"untils\": [\n      1425794400000,\n      1446354000000,\n      null\n    ],\n    \"offsets\": [\n      240,\n      180,\n      240\n    ]\n  },\n  \"America/Thunder_Bay\": {\n    \"name\": \"America/Thunder_Bay\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"America/Tijuana\": {\n    \"name\": \"America/Tijuana\",\n    \"untils\": [\n      1425808800000,\n      1446368400000,\n      null\n    ],\n    \"offsets\": [\n      480,\n      420,\n      480\n    ]\n  },\n  \"America/Toronto\": {\n    \"name\": \"America/Toronto\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"America/Tortola\": {\n    \"name\": \"America/Tortola\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/Vancouver\": {\n    \"name\": \"America/Vancouver\",\n    \"untils\": [\n      1425808800000,\n      1446368400000,\n      null\n    ],\n    \"offsets\": [\n      480,\n      420,\n      480\n    ]\n  },\n  \"America/Virgin\": {\n    \"name\": \"America/Virgin\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"America/Whitehorse\": {\n    \"name\": \"America/Whitehorse\",\n    \"untils\": [\n      1425808800000,\n      1446368400000,\n      null\n    ],\n    \"offsets\": [\n      480,\n      420,\n      480\n    ]\n  },\n  \"America/Winnipeg\": {\n    \"name\": \"America/Winnipeg\",\n    \"untils\": [\n      1425801600000,\n      1446361200000,\n      null\n    ],\n    \"offsets\": [\n      360,\n      300,\n      360\n    ]\n  },\n  \"America/Yakutat\": {\n    \"name\": \"America/Yakutat\",\n    \"untils\": [\n      1425812400000,\n      1446372000000,\n      null\n    ],\n    \"offsets\": [\n      540,\n      480,\n      540\n    ]\n  },\n  \"America/Yellowknife\": {\n    \"name\": \"America/Yellowknife\",\n    \"untils\": [\n      1425805200000,\n      1446364800000,\n      null\n    ],\n    \"offsets\": [\n      420,\n      360,\n      420\n    ]\n  },\n  \"Antarctica/Casey\": {\n    \"name\": \"Antarctica/Casey\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -480\n    ]\n  },\n  \"Antarctica/Davis\": {\n    \"name\": \"Antarctica/Davis\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -420\n    ]\n  },\n  \"Antarctica/DumontDUrville\": {\n    \"name\": \"Antarctica/DumontDUrville\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -600\n    ]\n  },\n  \"Antarctica/Macquarie\": {\n    \"name\": \"Antarctica/Macquarie\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -660\n    ]\n  },\n  \"Antarctica/Mawson\": {\n    \"name\": \"Antarctica/Mawson\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -300\n    ]\n  },\n  \"Antarctica/McMurdo\": {\n    \"name\": \"Antarctica/McMurdo\",\n    \"untils\": [\n      1428156000000,\n      1443276000000,\n      null\n    ],\n    \"offsets\": [\n      -780,\n      -720,\n      -780\n    ]\n  },\n  \"Antarctica/Palmer\": {\n    \"name\": \"Antarctica/Palmer\",\n    \"untils\": [\n      1430017200000,\n      null\n    ],\n    \"offsets\": [\n      180,\n      180\n    ]\n  },\n  \"Antarctica/Rothera\": {\n    \"name\": \"Antarctica/Rothera\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"Antarctica/South_Pole\": {\n    \"name\": \"Antarctica/South_Pole\",\n    \"untils\": [\n      1428156000000,\n      1443276000000,\n      null\n    ],\n    \"offsets\": [\n      -780,\n      -720,\n      -780\n    ]\n  },\n  \"Antarctica/Syowa\": {\n    \"name\": \"Antarctica/Syowa\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"Antarctica/Troll\": {\n    \"name\": \"Antarctica/Troll\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      0,\n      -120,\n      0\n    ]\n  },\n  \"Antarctica/Vostok\": {\n    \"name\": \"Antarctica/Vostok\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -360\n    ]\n  },\n  \"Arctic/Longyearbyen\": {\n    \"name\": \"Arctic/Longyearbyen\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Asia/Aden\": {\n    \"name\": \"Asia/Aden\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"Asia/Almaty\": {\n    \"name\": \"Asia/Almaty\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -360\n    ]\n  },\n  \"Asia/Amman\": {\n    \"name\": \"Asia/Amman\",\n    \"untils\": [\n      1427407200000,\n      1446156000000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"Asia/Anadyr\": {\n    \"name\": \"Asia/Anadyr\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -720\n    ]\n  },\n  \"Asia/Aqtau\": {\n    \"name\": \"Asia/Aqtau\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -300\n    ]\n  },\n  \"Asia/Aqtobe\": {\n    \"name\": \"Asia/Aqtobe\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -300\n    ]\n  },\n  \"Asia/Ashgabat\": {\n    \"name\": \"Asia/Ashgabat\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -300\n    ]\n  },\n  \"Asia/Ashkhabad\": {\n    \"name\": \"Asia/Ashkhabad\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -300\n    ]\n  },\n  \"Asia/Baghdad\": {\n    \"name\": \"Asia/Baghdad\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"Asia/Bahrain\": {\n    \"name\": \"Asia/Bahrain\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"Asia/Baku\": {\n    \"name\": \"Asia/Baku\",\n    \"untils\": [\n      1427587200000,\n      1445731200000,\n      null\n    ],\n    \"offsets\": [\n      -240,\n      -300,\n      -240\n    ]\n  },\n  \"Asia/Bangkok\": {\n    \"name\": \"Asia/Bangkok\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -420\n    ]\n  },\n  \"Asia/Beirut\": {\n    \"name\": \"Asia/Beirut\",\n    \"untils\": [\n      1427580000000,\n      1445720400000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"Asia/Bishkek\": {\n    \"name\": \"Asia/Bishkek\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -360\n    ]\n  },\n  \"Asia/Brunei\": {\n    \"name\": \"Asia/Brunei\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -480\n    ]\n  },\n  \"Asia/Calcutta\": {\n    \"name\": \"Asia/Calcutta\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -330\n    ]\n  },\n  \"Asia/Chita\": {\n    \"name\": \"Asia/Chita\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -480\n    ]\n  },\n  \"Asia/Choibalsan\": {\n    \"name\": \"Asia/Choibalsan\",\n    \"untils\": [\n      1427479200000,\n      1443193200000,\n      null\n    ],\n    \"offsets\": [\n      -480,\n      -540,\n      -480\n    ]\n  },\n  \"Asia/Chongqing\": {\n    \"name\": \"Asia/Chongqing\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -480\n    ]\n  },\n  \"Asia/Chungking\": {\n    \"name\": \"Asia/Chungking\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -480\n    ]\n  },\n  \"Asia/Colombo\": {\n    \"name\": \"Asia/Colombo\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -330\n    ]\n  },\n  \"Asia/Dacca\": {\n    \"name\": \"Asia/Dacca\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -360\n    ]\n  },\n  \"Asia/Damascus\": {\n    \"name\": \"Asia/Damascus\",\n    \"untils\": [\n      1427407200000,\n      1446152400000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"Asia/Dhaka\": {\n    \"name\": \"Asia/Dhaka\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -360\n    ]\n  },\n  \"Asia/Dili\": {\n    \"name\": \"Asia/Dili\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -540\n    ]\n  },\n  \"Asia/Dubai\": {\n    \"name\": \"Asia/Dubai\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -240\n    ]\n  },\n  \"Asia/Dushanbe\": {\n    \"name\": \"Asia/Dushanbe\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -300\n    ]\n  },\n  \"Asia/Gaza\": {\n    \"name\": \"Asia/Gaza\",\n    \"untils\": [\n      1427493600000,\n      1445547600000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"Asia/Harbin\": {\n    \"name\": \"Asia/Harbin\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -480\n    ]\n  },\n  \"Asia/Hebron\": {\n    \"name\": \"Asia/Hebron\",\n    \"untils\": [\n      1427493600000,\n      1445547600000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"Asia/Ho_Chi_Minh\": {\n    \"name\": \"Asia/Ho_Chi_Minh\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -420\n    ]\n  },\n  \"Asia/Hong_Kong\": {\n    \"name\": \"Asia/Hong_Kong\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -480\n    ]\n  },\n  \"Asia/Hovd\": {\n    \"name\": \"Asia/Hovd\",\n    \"untils\": [\n      1427482800000,\n      1443196800000,\n      null\n    ],\n    \"offsets\": [\n      -420,\n      -480,\n      -420\n    ]\n  },\n  \"Asia/Irkutsk\": {\n    \"name\": \"Asia/Irkutsk\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -480\n    ]\n  },\n  \"Asia/Istanbul\": {\n    \"name\": \"Asia/Istanbul\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"Asia/Jakarta\": {\n    \"name\": \"Asia/Jakarta\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -420\n    ]\n  },\n  \"Asia/Jayapura\": {\n    \"name\": \"Asia/Jayapura\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -540\n    ]\n  },\n  \"Asia/Jerusalem\": {\n    \"name\": \"Asia/Jerusalem\",\n    \"untils\": [\n      1427414400000,\n      1445727600000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"Asia/Kabul\": {\n    \"name\": \"Asia/Kabul\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -270\n    ]\n  },\n  \"Asia/Kamchatka\": {\n    \"name\": \"Asia/Kamchatka\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -720\n    ]\n  },\n  \"Asia/Karachi\": {\n    \"name\": \"Asia/Karachi\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -300\n    ]\n  },\n  \"Asia/Kashgar\": {\n    \"name\": \"Asia/Kashgar\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -360\n    ]\n  },\n  \"Asia/Kathmandu\": {\n    \"name\": \"Asia/Kathmandu\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -345\n    ]\n  },\n  \"Asia/Katmandu\": {\n    \"name\": \"Asia/Katmandu\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -345\n    ]\n  },\n  \"Asia/Khandyga\": {\n    \"name\": \"Asia/Khandyga\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -540\n    ]\n  },\n  \"Asia/Kolkata\": {\n    \"name\": \"Asia/Kolkata\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -330\n    ]\n  },\n  \"Asia/Krasnoyarsk\": {\n    \"name\": \"Asia/Krasnoyarsk\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -420\n    ]\n  },\n  \"Asia/Kuala_Lumpur\": {\n    \"name\": \"Asia/Kuala_Lumpur\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -480\n    ]\n  },\n  \"Asia/Kuching\": {\n    \"name\": \"Asia/Kuching\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -480\n    ]\n  },\n  \"Asia/Kuwait\": {\n    \"name\": \"Asia/Kuwait\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"Asia/Macao\": {\n    \"name\": \"Asia/Macao\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -480\n    ]\n  },\n  \"Asia/Macau\": {\n    \"name\": \"Asia/Macau\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -480\n    ]\n  },\n  \"Asia/Magadan\": {\n    \"name\": \"Asia/Magadan\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -600\n    ]\n  },\n  \"Asia/Makassar\": {\n    \"name\": \"Asia/Makassar\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -480\n    ]\n  },\n  \"Asia/Manila\": {\n    \"name\": \"Asia/Manila\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -480\n    ]\n  },\n  \"Asia/Muscat\": {\n    \"name\": \"Asia/Muscat\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -240\n    ]\n  },\n  \"Asia/Nicosia\": {\n    \"name\": \"Asia/Nicosia\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"Asia/Novokuznetsk\": {\n    \"name\": \"Asia/Novokuznetsk\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -420\n    ]\n  },\n  \"Asia/Novosibirsk\": {\n    \"name\": \"Asia/Novosibirsk\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -360\n    ]\n  },\n  \"Asia/Omsk\": {\n    \"name\": \"Asia/Omsk\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -360\n    ]\n  },\n  \"Asia/Oral\": {\n    \"name\": \"Asia/Oral\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -300\n    ]\n  },\n  \"Asia/Phnom_Penh\": {\n    \"name\": \"Asia/Phnom_Penh\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -420\n    ]\n  },\n  \"Asia/Pontianak\": {\n    \"name\": \"Asia/Pontianak\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -420\n    ]\n  },\n  \"Asia/Pyongyang\": {\n    \"name\": \"Asia/Pyongyang\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -540\n    ]\n  },\n  \"Asia/Qatar\": {\n    \"name\": \"Asia/Qatar\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"Asia/Qyzylorda\": {\n    \"name\": \"Asia/Qyzylorda\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -360\n    ]\n  },\n  \"Asia/Rangoon\": {\n    \"name\": \"Asia/Rangoon\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -390\n    ]\n  },\n  \"Asia/Riyadh\": {\n    \"name\": \"Asia/Riyadh\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"Asia/Saigon\": {\n    \"name\": \"Asia/Saigon\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -420\n    ]\n  },\n  \"Asia/Sakhalin\": {\n    \"name\": \"Asia/Sakhalin\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -600\n    ]\n  },\n  \"Asia/Samarkand\": {\n    \"name\": \"Asia/Samarkand\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -300\n    ]\n  },\n  \"Asia/Seoul\": {\n    \"name\": \"Asia/Seoul\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -540\n    ]\n  },\n  \"Asia/Shanghai\": {\n    \"name\": \"Asia/Shanghai\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -480\n    ]\n  },\n  \"Asia/Singapore\": {\n    \"name\": \"Asia/Singapore\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -480\n    ]\n  },\n  \"Asia/Srednekolymsk\": {\n    \"name\": \"Asia/Srednekolymsk\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -660\n    ]\n  },\n  \"Asia/Taipei\": {\n    \"name\": \"Asia/Taipei\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -480\n    ]\n  },\n  \"Asia/Tashkent\": {\n    \"name\": \"Asia/Tashkent\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -300\n    ]\n  },\n  \"Asia/Tbilisi\": {\n    \"name\": \"Asia/Tbilisi\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -240\n    ]\n  },\n  \"Asia/Tehran\": {\n    \"name\": \"Asia/Tehran\",\n    \"untils\": [\n      1426969800000,\n      1442863800000,\n      null\n    ],\n    \"offsets\": [\n      -210,\n      -270,\n      -210\n    ]\n  },\n  \"Asia/Tel_Aviv\": {\n    \"name\": \"Asia/Tel_Aviv\",\n    \"untils\": [\n      1427414400000,\n      1445727600000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"Asia/Thimbu\": {\n    \"name\": \"Asia/Thimbu\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -360\n    ]\n  },\n  \"Asia/Thimphu\": {\n    \"name\": \"Asia/Thimphu\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -360\n    ]\n  },\n  \"Asia/Tokyo\": {\n    \"name\": \"Asia/Tokyo\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -540\n    ]\n  },\n  \"Asia/Ujung_Pandang\": {\n    \"name\": \"Asia/Ujung_Pandang\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -480\n    ]\n  },\n  \"Asia/Ulaanbaatar\": {\n    \"name\": \"Asia/Ulaanbaatar\",\n    \"untils\": [\n      1427479200000,\n      1443193200000,\n      null\n    ],\n    \"offsets\": [\n      -480,\n      -540,\n      -480\n    ]\n  },\n  \"Asia/Ulan_Bator\": {\n    \"name\": \"Asia/Ulan_Bator\",\n    \"untils\": [\n      1427479200000,\n      1443193200000,\n      null\n    ],\n    \"offsets\": [\n      -480,\n      -540,\n      -480\n    ]\n  },\n  \"Asia/Urumqi\": {\n    \"name\": \"Asia/Urumqi\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -360\n    ]\n  },\n  \"Asia/Ust-Nera\": {\n    \"name\": \"Asia/Ust-Nera\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -600\n    ]\n  },\n  \"Asia/Vientiane\": {\n    \"name\": \"Asia/Vientiane\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -420\n    ]\n  },\n  \"Asia/Vladivostok\": {\n    \"name\": \"Asia/Vladivostok\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -600\n    ]\n  },\n  \"Asia/Yakutsk\": {\n    \"name\": \"Asia/Yakutsk\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -540\n    ]\n  },\n  \"Asia/Yekaterinburg\": {\n    \"name\": \"Asia/Yekaterinburg\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -300\n    ]\n  },\n  \"Asia/Yerevan\": {\n    \"name\": \"Asia/Yerevan\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -240\n    ]\n  },\n  \"Atlantic/Azores\": {\n    \"name\": \"Atlantic/Azores\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      60,\n      0,\n      60\n    ]\n  },\n  \"Atlantic/Bermuda\": {\n    \"name\": \"Atlantic/Bermuda\",\n    \"untils\": [\n      1425794400000,\n      1446354000000,\n      null\n    ],\n    \"offsets\": [\n      240,\n      180,\n      240\n    ]\n  },\n  \"Atlantic/Canary\": {\n    \"name\": \"Atlantic/Canary\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      0,\n      -60,\n      0\n    ]\n  },\n  \"Atlantic/Cape_Verde\": {\n    \"name\": \"Atlantic/Cape_Verde\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      60\n    ]\n  },\n  \"Atlantic/Faeroe\": {\n    \"name\": \"Atlantic/Faeroe\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      0,\n      -60,\n      0\n    ]\n  },\n  \"Atlantic/Faroe\": {\n    \"name\": \"Atlantic/Faroe\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      0,\n      -60,\n      0\n    ]\n  },\n  \"Atlantic/Jan_Mayen\": {\n    \"name\": \"Atlantic/Jan_Mayen\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Atlantic/Madeira\": {\n    \"name\": \"Atlantic/Madeira\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      0,\n      -60,\n      0\n    ]\n  },\n  \"Atlantic/Reykjavik\": {\n    \"name\": \"Atlantic/Reykjavik\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Atlantic/South_Georgia\": {\n    \"name\": \"Atlantic/South_Georgia\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      120\n    ]\n  },\n  \"Atlantic/St_Helena\": {\n    \"name\": \"Atlantic/St_Helena\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Atlantic/Stanley\": {\n    \"name\": \"Atlantic/Stanley\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"Australia/ACT\": {\n    \"name\": \"Australia/ACT\",\n    \"untils\": [\n      1428163200000,\n      1443888000000,\n      null\n    ],\n    \"offsets\": [\n      -660,\n      -600,\n      -660\n    ]\n  },\n  \"Australia/Adelaide\": {\n    \"name\": \"Australia/Adelaide\",\n    \"untils\": [\n      1428165000000,\n      1443889800000,\n      null\n    ],\n    \"offsets\": [\n      -630,\n      -570,\n      -630\n    ]\n  },\n  \"Australia/Brisbane\": {\n    \"name\": \"Australia/Brisbane\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -600\n    ]\n  },\n  \"Australia/Broken_Hill\": {\n    \"name\": \"Australia/Broken_Hill\",\n    \"untils\": [\n      1428165000000,\n      1443889800000,\n      null\n    ],\n    \"offsets\": [\n      -630,\n      -570,\n      -630\n    ]\n  },\n  \"Australia/Canberra\": {\n    \"name\": \"Australia/Canberra\",\n    \"untils\": [\n      1428163200000,\n      1443888000000,\n      null\n    ],\n    \"offsets\": [\n      -660,\n      -600,\n      -660\n    ]\n  },\n  \"Australia/Currie\": {\n    \"name\": \"Australia/Currie\",\n    \"untils\": [\n      1428163200000,\n      1443888000000,\n      null\n    ],\n    \"offsets\": [\n      -660,\n      -600,\n      -660\n    ]\n  },\n  \"Australia/Darwin\": {\n    \"name\": \"Australia/Darwin\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -570\n    ]\n  },\n  \"Australia/Eucla\": {\n    \"name\": \"Australia/Eucla\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -525\n    ]\n  },\n  \"Australia/Hobart\": {\n    \"name\": \"Australia/Hobart\",\n    \"untils\": [\n      1428163200000,\n      1443888000000,\n      null\n    ],\n    \"offsets\": [\n      -660,\n      -600,\n      -660\n    ]\n  },\n  \"Australia/LHI\": {\n    \"name\": \"Australia/LHI\",\n    \"untils\": [\n      1428159600000,\n      1443886200000,\n      null\n    ],\n    \"offsets\": [\n      -660,\n      -630,\n      -660\n    ]\n  },\n  \"Australia/Lindeman\": {\n    \"name\": \"Australia/Lindeman\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -600\n    ]\n  },\n  \"Australia/Lord_Howe\": {\n    \"name\": \"Australia/Lord_Howe\",\n    \"untils\": [\n      1428159600000,\n      1443886200000,\n      null\n    ],\n    \"offsets\": [\n      -660,\n      -630,\n      -660\n    ]\n  },\n  \"Australia/Melbourne\": {\n    \"name\": \"Australia/Melbourne\",\n    \"untils\": [\n      1428163200000,\n      1443888000000,\n      null\n    ],\n    \"offsets\": [\n      -660,\n      -600,\n      -660\n    ]\n  },\n  \"Australia/NSW\": {\n    \"name\": \"Australia/NSW\",\n    \"untils\": [\n      1428163200000,\n      1443888000000,\n      null\n    ],\n    \"offsets\": [\n      -660,\n      -600,\n      -660\n    ]\n  },\n  \"Australia/North\": {\n    \"name\": \"Australia/North\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -570\n    ]\n  },\n  \"Australia/Perth\": {\n    \"name\": \"Australia/Perth\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -480\n    ]\n  },\n  \"Australia/Queensland\": {\n    \"name\": \"Australia/Queensland\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -600\n    ]\n  },\n  \"Australia/South\": {\n    \"name\": \"Australia/South\",\n    \"untils\": [\n      1428165000000,\n      1443889800000,\n      null\n    ],\n    \"offsets\": [\n      -630,\n      -570,\n      -630\n    ]\n  },\n  \"Australia/Sydney\": {\n    \"name\": \"Australia/Sydney\",\n    \"untils\": [\n      1428163200000,\n      1443888000000,\n      null\n    ],\n    \"offsets\": [\n      -660,\n      -600,\n      -660\n    ]\n  },\n  \"Australia/Tasmania\": {\n    \"name\": \"Australia/Tasmania\",\n    \"untils\": [\n      1428163200000,\n      1443888000000,\n      null\n    ],\n    \"offsets\": [\n      -660,\n      -600,\n      -660\n    ]\n  },\n  \"Australia/Victoria\": {\n    \"name\": \"Australia/Victoria\",\n    \"untils\": [\n      1428163200000,\n      1443888000000,\n      null\n    ],\n    \"offsets\": [\n      -660,\n      -600,\n      -660\n    ]\n  },\n  \"Australia/West\": {\n    \"name\": \"Australia/West\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -480\n    ]\n  },\n  \"Australia/Yancowinna\": {\n    \"name\": \"Australia/Yancowinna\",\n    \"untils\": [\n      1428165000000,\n      1443889800000,\n      null\n    ],\n    \"offsets\": [\n      -630,\n      -570,\n      -630\n    ]\n  },\n  \"Brazil/Acre\": {\n    \"name\": \"Brazil/Acre\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      300\n    ]\n  },\n  \"Brazil/DeNoronha\": {\n    \"name\": \"Brazil/DeNoronha\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      120\n    ]\n  },\n  \"Brazil/East\": {\n    \"name\": \"Brazil/East\",\n    \"untils\": [\n      1424570400000,\n      1445137200000,\n      null\n    ],\n    \"offsets\": [\n      120,\n      180,\n      120\n    ]\n  },\n  \"Brazil/West\": {\n    \"name\": \"Brazil/West\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"CET\": {\n    \"name\": \"CET\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"CST6CDT\": {\n    \"name\": \"CST6CDT\",\n    \"untils\": [\n      1425801600000,\n      1446361200000,\n      null\n    ],\n    \"offsets\": [\n      360,\n      300,\n      360\n    ]\n  },\n  \"Canada/Atlantic\": {\n    \"name\": \"Canada/Atlantic\",\n    \"untils\": [\n      1425794400000,\n      1446354000000,\n      null\n    ],\n    \"offsets\": [\n      240,\n      180,\n      240\n    ]\n  },\n  \"Canada/Central\": {\n    \"name\": \"Canada/Central\",\n    \"untils\": [\n      1425801600000,\n      1446361200000,\n      null\n    ],\n    \"offsets\": [\n      360,\n      300,\n      360\n    ]\n  },\n  \"Canada/East-Saskatchewan\": {\n    \"name\": \"Canada/East-Saskatchewan\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      360\n    ]\n  },\n  \"Canada/Eastern\": {\n    \"name\": \"Canada/Eastern\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"Canada/Mountain\": {\n    \"name\": \"Canada/Mountain\",\n    \"untils\": [\n      1425805200000,\n      1446364800000,\n      null\n    ],\n    \"offsets\": [\n      420,\n      360,\n      420\n    ]\n  },\n  \"Canada/Newfoundland\": {\n    \"name\": \"Canada/Newfoundland\",\n    \"untils\": [\n      1425792600000,\n      1446352200000,\n      null\n    ],\n    \"offsets\": [\n      210,\n      150,\n      210\n    ]\n  },\n  \"Canada/Pacific\": {\n    \"name\": \"Canada/Pacific\",\n    \"untils\": [\n      1425808800000,\n      1446368400000,\n      null\n    ],\n    \"offsets\": [\n      480,\n      420,\n      480\n    ]\n  },\n  \"Canada/Saskatchewan\": {\n    \"name\": \"Canada/Saskatchewan\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      360\n    ]\n  },\n  \"Canada/Yukon\": {\n    \"name\": \"Canada/Yukon\",\n    \"untils\": [\n      1425808800000,\n      1446368400000,\n      null\n    ],\n    \"offsets\": [\n      480,\n      420,\n      480\n    ]\n  },\n  \"Chile/Continental\": {\n    \"name\": \"Chile/Continental\",\n    \"untils\": [\n      1430017200000,\n      null\n    ],\n    \"offsets\": [\n      180,\n      180\n    ]\n  },\n  \"Chile/EasterIsland\": {\n    \"name\": \"Chile/EasterIsland\",\n    \"untils\": [\n      1430017200000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      300\n    ]\n  },\n  \"Cuba\": {\n    \"name\": \"Cuba\",\n    \"untils\": [\n      1425790800000,\n      1446354000000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"EET\": {\n    \"name\": \"EET\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"EST\": {\n    \"name\": \"EST\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      300\n    ]\n  },\n  \"EST5EDT\": {\n    \"name\": \"EST5EDT\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"Egypt\": {\n    \"name\": \"Egypt\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -120\n    ]\n  },\n  \"Eire\": {\n    \"name\": \"Eire\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      0,\n      -60,\n      0\n    ]\n  },\n  \"Etc/GMT+0\": {\n    \"name\": \"Etc/GMT+0\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Etc/GMT+1\": {\n    \"name\": \"Etc/GMT+1\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      60\n    ]\n  },\n  \"Etc/GMT+10\": {\n    \"name\": \"Etc/GMT+10\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      600\n    ]\n  },\n  \"Etc/GMT+11\": {\n    \"name\": \"Etc/GMT+11\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      660\n    ]\n  },\n  \"Etc/GMT+12\": {\n    \"name\": \"Etc/GMT+12\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      720\n    ]\n  },\n  \"Etc/GMT+2\": {\n    \"name\": \"Etc/GMT+2\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      120\n    ]\n  },\n  \"Etc/GMT+3\": {\n    \"name\": \"Etc/GMT+3\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      180\n    ]\n  },\n  \"Etc/GMT+4\": {\n    \"name\": \"Etc/GMT+4\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      240\n    ]\n  },\n  \"Etc/GMT+5\": {\n    \"name\": \"Etc/GMT+5\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      300\n    ]\n  },\n  \"Etc/GMT+6\": {\n    \"name\": \"Etc/GMT+6\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      360\n    ]\n  },\n  \"Etc/GMT+7\": {\n    \"name\": \"Etc/GMT+7\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      420\n    ]\n  },\n  \"Etc/GMT+8\": {\n    \"name\": \"Etc/GMT+8\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      480\n    ]\n  },\n  \"Etc/GMT+9\": {\n    \"name\": \"Etc/GMT+9\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      540\n    ]\n  },\n  \"Etc/GMT-0\": {\n    \"name\": \"Etc/GMT-0\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Etc/GMT-1\": {\n    \"name\": \"Etc/GMT-1\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -60\n    ]\n  },\n  \"Etc/GMT-10\": {\n    \"name\": \"Etc/GMT-10\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -600\n    ]\n  },\n  \"Etc/GMT-11\": {\n    \"name\": \"Etc/GMT-11\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -660\n    ]\n  },\n  \"Etc/GMT-12\": {\n    \"name\": \"Etc/GMT-12\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -720\n    ]\n  },\n  \"Etc/GMT-13\": {\n    \"name\": \"Etc/GMT-13\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -780\n    ]\n  },\n  \"Etc/GMT-14\": {\n    \"name\": \"Etc/GMT-14\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -840\n    ]\n  },\n  \"Etc/GMT-2\": {\n    \"name\": \"Etc/GMT-2\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -120\n    ]\n  },\n  \"Etc/GMT-3\": {\n    \"name\": \"Etc/GMT-3\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"Etc/GMT-4\": {\n    \"name\": \"Etc/GMT-4\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -240\n    ]\n  },\n  \"Etc/GMT-5\": {\n    \"name\": \"Etc/GMT-5\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -300\n    ]\n  },\n  \"Etc/GMT-6\": {\n    \"name\": \"Etc/GMT-6\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -360\n    ]\n  },\n  \"Etc/GMT-7\": {\n    \"name\": \"Etc/GMT-7\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -420\n    ]\n  },\n  \"Etc/GMT-8\": {\n    \"name\": \"Etc/GMT-8\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -480\n    ]\n  },\n  \"Etc/GMT-9\": {\n    \"name\": \"Etc/GMT-9\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -540\n    ]\n  },\n  \"Etc/GMT\": {\n    \"name\": \"Etc/GMT\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Etc/GMT0\": {\n    \"name\": \"Etc/GMT0\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Etc/Greenwich\": {\n    \"name\": \"Etc/Greenwich\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Etc/UCT\": {\n    \"name\": \"Etc/UCT\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Etc/UTC\": {\n    \"name\": \"Etc/UTC\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Etc/Universal\": {\n    \"name\": \"Etc/Universal\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Etc/Zulu\": {\n    \"name\": \"Etc/Zulu\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Europe/Amsterdam\": {\n    \"name\": \"Europe/Amsterdam\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Andorra\": {\n    \"name\": \"Europe/Andorra\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Athens\": {\n    \"name\": \"Europe/Athens\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"Europe/Belfast\": {\n    \"name\": \"Europe/Belfast\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      0,\n      -60,\n      0\n    ]\n  },\n  \"Europe/Belgrade\": {\n    \"name\": \"Europe/Belgrade\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Berlin\": {\n    \"name\": \"Europe/Berlin\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Bratislava\": {\n    \"name\": \"Europe/Bratislava\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Brussels\": {\n    \"name\": \"Europe/Brussels\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Bucharest\": {\n    \"name\": \"Europe/Bucharest\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"Europe/Budapest\": {\n    \"name\": \"Europe/Budapest\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Busingen\": {\n    \"name\": \"Europe/Busingen\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Chisinau\": {\n    \"name\": \"Europe/Chisinau\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"Europe/Copenhagen\": {\n    \"name\": \"Europe/Copenhagen\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Dublin\": {\n    \"name\": \"Europe/Dublin\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      0,\n      -60,\n      0\n    ]\n  },\n  \"Europe/Gibraltar\": {\n    \"name\": \"Europe/Gibraltar\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Guernsey\": {\n    \"name\": \"Europe/Guernsey\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      0,\n      -60,\n      0\n    ]\n  },\n  \"Europe/Helsinki\": {\n    \"name\": \"Europe/Helsinki\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"Europe/Isle_of_Man\": {\n    \"name\": \"Europe/Isle_of_Man\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      0,\n      -60,\n      0\n    ]\n  },\n  \"Europe/Istanbul\": {\n    \"name\": \"Europe/Istanbul\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"Europe/Jersey\": {\n    \"name\": \"Europe/Jersey\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      0,\n      -60,\n      0\n    ]\n  },\n  \"Europe/Kaliningrad\": {\n    \"name\": \"Europe/Kaliningrad\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -120\n    ]\n  },\n  \"Europe/Kiev\": {\n    \"name\": \"Europe/Kiev\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"Europe/Lisbon\": {\n    \"name\": \"Europe/Lisbon\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      0,\n      -60,\n      0\n    ]\n  },\n  \"Europe/Ljubljana\": {\n    \"name\": \"Europe/Ljubljana\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/London\": {\n    \"name\": \"Europe/London\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      0,\n      -60,\n      0\n    ]\n  },\n  \"Europe/Luxembourg\": {\n    \"name\": \"Europe/Luxembourg\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Madrid\": {\n    \"name\": \"Europe/Madrid\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Malta\": {\n    \"name\": \"Europe/Malta\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Mariehamn\": {\n    \"name\": \"Europe/Mariehamn\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"Europe/Minsk\": {\n    \"name\": \"Europe/Minsk\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"Europe/Monaco\": {\n    \"name\": \"Europe/Monaco\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Moscow\": {\n    \"name\": \"Europe/Moscow\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"Europe/Nicosia\": {\n    \"name\": \"Europe/Nicosia\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"Europe/Oslo\": {\n    \"name\": \"Europe/Oslo\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Paris\": {\n    \"name\": \"Europe/Paris\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Podgorica\": {\n    \"name\": \"Europe/Podgorica\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Prague\": {\n    \"name\": \"Europe/Prague\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Riga\": {\n    \"name\": \"Europe/Riga\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"Europe/Rome\": {\n    \"name\": \"Europe/Rome\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Samara\": {\n    \"name\": \"Europe/Samara\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -240\n    ]\n  },\n  \"Europe/San_Marino\": {\n    \"name\": \"Europe/San_Marino\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Sarajevo\": {\n    \"name\": \"Europe/Sarajevo\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Simferopol\": {\n    \"name\": \"Europe/Simferopol\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"Europe/Skopje\": {\n    \"name\": \"Europe/Skopje\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Sofia\": {\n    \"name\": \"Europe/Sofia\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"Europe/Stockholm\": {\n    \"name\": \"Europe/Stockholm\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Tallinn\": {\n    \"name\": \"Europe/Tallinn\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"Europe/Tirane\": {\n    \"name\": \"Europe/Tirane\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Tiraspol\": {\n    \"name\": \"Europe/Tiraspol\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"Europe/Uzhgorod\": {\n    \"name\": \"Europe/Uzhgorod\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"Europe/Vaduz\": {\n    \"name\": \"Europe/Vaduz\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Vatican\": {\n    \"name\": \"Europe/Vatican\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Vienna\": {\n    \"name\": \"Europe/Vienna\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Vilnius\": {\n    \"name\": \"Europe/Vilnius\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"Europe/Volgograd\": {\n    \"name\": \"Europe/Volgograd\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"Europe/Warsaw\": {\n    \"name\": \"Europe/Warsaw\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Zagreb\": {\n    \"name\": \"Europe/Zagreb\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Europe/Zaporozhye\": {\n    \"name\": \"Europe/Zaporozhye\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"Europe/Zurich\": {\n    \"name\": \"Europe/Zurich\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"GB-Eire\": {\n    \"name\": \"GB-Eire\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      0,\n      -60,\n      0\n    ]\n  },\n  \"GB\": {\n    \"name\": \"GB\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      0,\n      -60,\n      0\n    ]\n  },\n  \"GMT+0\": {\n    \"name\": \"GMT+0\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"GMT-0\": {\n    \"name\": \"GMT-0\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"GMT\": {\n    \"name\": \"GMT\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"GMT0\": {\n    \"name\": \"GMT0\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Greenwich\": {\n    \"name\": \"Greenwich\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"HST\": {\n    \"name\": \"HST\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      600\n    ]\n  },\n  \"Hongkong\": {\n    \"name\": \"Hongkong\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -480\n    ]\n  },\n  \"Iceland\": {\n    \"name\": \"Iceland\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Indian/Antananarivo\": {\n    \"name\": \"Indian/Antananarivo\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"Indian/Chagos\": {\n    \"name\": \"Indian/Chagos\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -360\n    ]\n  },\n  \"Indian/Christmas\": {\n    \"name\": \"Indian/Christmas\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -420\n    ]\n  },\n  \"Indian/Cocos\": {\n    \"name\": \"Indian/Cocos\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -390\n    ]\n  },\n  \"Indian/Comoro\": {\n    \"name\": \"Indian/Comoro\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"Indian/Kerguelen\": {\n    \"name\": \"Indian/Kerguelen\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -300\n    ]\n  },\n  \"Indian/Mahe\": {\n    \"name\": \"Indian/Mahe\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -240\n    ]\n  },\n  \"Indian/Maldives\": {\n    \"name\": \"Indian/Maldives\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -300\n    ]\n  },\n  \"Indian/Mauritius\": {\n    \"name\": \"Indian/Mauritius\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -240\n    ]\n  },\n  \"Indian/Mayotte\": {\n    \"name\": \"Indian/Mayotte\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"Indian/Reunion\": {\n    \"name\": \"Indian/Reunion\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -240\n    ]\n  },\n  \"Iran\": {\n    \"name\": \"Iran\",\n    \"untils\": [\n      1426969800000,\n      1442863800000,\n      null\n    ],\n    \"offsets\": [\n      -210,\n      -270,\n      -210\n    ]\n  },\n  \"Israel\": {\n    \"name\": \"Israel\",\n    \"untils\": [\n      1427414400000,\n      1445727600000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"Jamaica\": {\n    \"name\": \"Jamaica\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      300\n    ]\n  },\n  \"Japan\": {\n    \"name\": \"Japan\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -540\n    ]\n  },\n  \"Kwajalein\": {\n    \"name\": \"Kwajalein\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -720\n    ]\n  },\n  \"Libya\": {\n    \"name\": \"Libya\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -120\n    ]\n  },\n  \"MET\": {\n    \"name\": \"MET\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"MST\": {\n    \"name\": \"MST\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      420\n    ]\n  },\n  \"MST7MDT\": {\n    \"name\": \"MST7MDT\",\n    \"untils\": [\n      1425805200000,\n      1446364800000,\n      null\n    ],\n    \"offsets\": [\n      420,\n      360,\n      420\n    ]\n  },\n  \"Mexico/BajaNorte\": {\n    \"name\": \"Mexico/BajaNorte\",\n    \"untils\": [\n      1425808800000,\n      1446368400000,\n      null\n    ],\n    \"offsets\": [\n      480,\n      420,\n      480\n    ]\n  },\n  \"Mexico/BajaSur\": {\n    \"name\": \"Mexico/BajaSur\",\n    \"untils\": [\n      1428224400000,\n      1445760000000,\n      null\n    ],\n    \"offsets\": [\n      420,\n      360,\n      420\n    ]\n  },\n  \"Mexico/General\": {\n    \"name\": \"Mexico/General\",\n    \"untils\": [\n      1428220800000,\n      1445756400000,\n      null\n    ],\n    \"offsets\": [\n      360,\n      300,\n      360\n    ]\n  },\n  \"NZ-CHAT\": {\n    \"name\": \"NZ-CHAT\",\n    \"untils\": [\n      1428156000000,\n      1443276000000,\n      null\n    ],\n    \"offsets\": [\n      -825,\n      -765,\n      -825\n    ]\n  },\n  \"NZ\": {\n    \"name\": \"NZ\",\n    \"untils\": [\n      1428156000000,\n      1443276000000,\n      null\n    ],\n    \"offsets\": [\n      -780,\n      -720,\n      -780\n    ]\n  },\n  \"Navajo\": {\n    \"name\": \"Navajo\",\n    \"untils\": [\n      1425805200000,\n      1446364800000,\n      null\n    ],\n    \"offsets\": [\n      420,\n      360,\n      420\n    ]\n  },\n  \"PRC\": {\n    \"name\": \"PRC\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -480\n    ]\n  },\n  \"PST8PDT\": {\n    \"name\": \"PST8PDT\",\n    \"untils\": [\n      1425808800000,\n      1446368400000,\n      null\n    ],\n    \"offsets\": [\n      480,\n      420,\n      480\n    ]\n  },\n  \"Pacific/Apia\": {\n    \"name\": \"Pacific/Apia\",\n    \"untils\": [\n      1428156000000,\n      1443276000000,\n      null\n    ],\n    \"offsets\": [\n      -840,\n      -780,\n      -840\n    ]\n  },\n  \"Pacific/Auckland\": {\n    \"name\": \"Pacific/Auckland\",\n    \"untils\": [\n      1428156000000,\n      1443276000000,\n      null\n    ],\n    \"offsets\": [\n      -780,\n      -720,\n      -780\n    ]\n  },\n  \"Pacific/Bougainville\": {\n    \"name\": \"Pacific/Bougainville\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -660\n    ]\n  },\n  \"Pacific/Chatham\": {\n    \"name\": \"Pacific/Chatham\",\n    \"untils\": [\n      1428156000000,\n      1443276000000,\n      null\n    ],\n    \"offsets\": [\n      -825,\n      -765,\n      -825\n    ]\n  },\n  \"Pacific/Chuuk\": {\n    \"name\": \"Pacific/Chuuk\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -600\n    ]\n  },\n  \"Pacific/Easter\": {\n    \"name\": \"Pacific/Easter\",\n    \"untils\": [\n      1430017200000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      300\n    ]\n  },\n  \"Pacific/Efate\": {\n    \"name\": \"Pacific/Efate\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -660\n    ]\n  },\n  \"Pacific/Enderbury\": {\n    \"name\": \"Pacific/Enderbury\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -780\n    ]\n  },\n  \"Pacific/Fakaofo\": {\n    \"name\": \"Pacific/Fakaofo\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -780\n    ]\n  },\n  \"Pacific/Fiji\": {\n    \"name\": \"Pacific/Fiji\",\n    \"untils\": [\n      1421503200000,\n      1446300000000,\n      null\n    ],\n    \"offsets\": [\n      -780,\n      -720,\n      -780\n    ]\n  },\n  \"Pacific/Funafuti\": {\n    \"name\": \"Pacific/Funafuti\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -720\n    ]\n  },\n  \"Pacific/Galapagos\": {\n    \"name\": \"Pacific/Galapagos\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      360\n    ]\n  },\n  \"Pacific/Gambier\": {\n    \"name\": \"Pacific/Gambier\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      540\n    ]\n  },\n  \"Pacific/Guadalcanal\": {\n    \"name\": \"Pacific/Guadalcanal\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -660\n    ]\n  },\n  \"Pacific/Guam\": {\n    \"name\": \"Pacific/Guam\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -600\n    ]\n  },\n  \"Pacific/Honolulu\": {\n    \"name\": \"Pacific/Honolulu\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      600\n    ]\n  },\n  \"Pacific/Johnston\": {\n    \"name\": \"Pacific/Johnston\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      600\n    ]\n  },\n  \"Pacific/Kiritimati\": {\n    \"name\": \"Pacific/Kiritimati\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -840\n    ]\n  },\n  \"Pacific/Kosrae\": {\n    \"name\": \"Pacific/Kosrae\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -660\n    ]\n  },\n  \"Pacific/Kwajalein\": {\n    \"name\": \"Pacific/Kwajalein\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -720\n    ]\n  },\n  \"Pacific/Majuro\": {\n    \"name\": \"Pacific/Majuro\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -720\n    ]\n  },\n  \"Pacific/Marquesas\": {\n    \"name\": \"Pacific/Marquesas\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      570\n    ]\n  },\n  \"Pacific/Midway\": {\n    \"name\": \"Pacific/Midway\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      660\n    ]\n  },\n  \"Pacific/Nauru\": {\n    \"name\": \"Pacific/Nauru\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -720\n    ]\n  },\n  \"Pacific/Niue\": {\n    \"name\": \"Pacific/Niue\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      660\n    ]\n  },\n  \"Pacific/Norfolk\": {\n    \"name\": \"Pacific/Norfolk\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -690\n    ]\n  },\n  \"Pacific/Noumea\": {\n    \"name\": \"Pacific/Noumea\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -660\n    ]\n  },\n  \"Pacific/Pago_Pago\": {\n    \"name\": \"Pacific/Pago_Pago\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      660\n    ]\n  },\n  \"Pacific/Palau\": {\n    \"name\": \"Pacific/Palau\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -540\n    ]\n  },\n  \"Pacific/Pitcairn\": {\n    \"name\": \"Pacific/Pitcairn\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      480\n    ]\n  },\n  \"Pacific/Pohnpei\": {\n    \"name\": \"Pacific/Pohnpei\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -660\n    ]\n  },\n  \"Pacific/Ponape\": {\n    \"name\": \"Pacific/Ponape\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -660\n    ]\n  },\n  \"Pacific/Port_Moresby\": {\n    \"name\": \"Pacific/Port_Moresby\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -600\n    ]\n  },\n  \"Pacific/Rarotonga\": {\n    \"name\": \"Pacific/Rarotonga\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      600\n    ]\n  },\n  \"Pacific/Saipan\": {\n    \"name\": \"Pacific/Saipan\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -600\n    ]\n  },\n  \"Pacific/Samoa\": {\n    \"name\": \"Pacific/Samoa\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      660\n    ]\n  },\n  \"Pacific/Tahiti\": {\n    \"name\": \"Pacific/Tahiti\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      600\n    ]\n  },\n  \"Pacific/Tarawa\": {\n    \"name\": \"Pacific/Tarawa\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -720\n    ]\n  },\n  \"Pacific/Tongatapu\": {\n    \"name\": \"Pacific/Tongatapu\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -780\n    ]\n  },\n  \"Pacific/Truk\": {\n    \"name\": \"Pacific/Truk\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -600\n    ]\n  },\n  \"Pacific/Wake\": {\n    \"name\": \"Pacific/Wake\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -720\n    ]\n  },\n  \"Pacific/Wallis\": {\n    \"name\": \"Pacific/Wallis\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -720\n    ]\n  },\n  \"Pacific/Yap\": {\n    \"name\": \"Pacific/Yap\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -600\n    ]\n  },\n  \"Poland\": {\n    \"name\": \"Poland\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -60,\n      -120,\n      -60\n    ]\n  },\n  \"Portugal\": {\n    \"name\": \"Portugal\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      0,\n      -60,\n      0\n    ]\n  },\n  \"ROC\": {\n    \"name\": \"ROC\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -480\n    ]\n  },\n  \"ROK\": {\n    \"name\": \"ROK\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -540\n    ]\n  },\n  \"Singapore\": {\n    \"name\": \"Singapore\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -480\n    ]\n  },\n  \"Turkey\": {\n    \"name\": \"Turkey\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      -120,\n      -180,\n      -120\n    ]\n  },\n  \"UCT\": {\n    \"name\": \"UCT\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"US/Alaska\": {\n    \"name\": \"US/Alaska\",\n    \"untils\": [\n      1425812400000,\n      1446372000000,\n      null\n    ],\n    \"offsets\": [\n      540,\n      480,\n      540\n    ]\n  },\n  \"US/Aleutian\": {\n    \"name\": \"US/Aleutian\",\n    \"untils\": [\n      1425816000000,\n      1446375600000,\n      null\n    ],\n    \"offsets\": [\n      600,\n      540,\n      600\n    ]\n  },\n  \"US/Arizona\": {\n    \"name\": \"US/Arizona\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      420\n    ]\n  },\n  \"US/Central\": {\n    \"name\": \"US/Central\",\n    \"untils\": [\n      1425801600000,\n      1446361200000,\n      null\n    ],\n    \"offsets\": [\n      360,\n      300,\n      360\n    ]\n  },\n  \"US/East-Indiana\": {\n    \"name\": \"US/East-Indiana\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"US/Eastern\": {\n    \"name\": \"US/Eastern\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"US/Hawaii\": {\n    \"name\": \"US/Hawaii\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      600\n    ]\n  },\n  \"US/Indiana-Starke\": {\n    \"name\": \"US/Indiana-Starke\",\n    \"untils\": [\n      1425801600000,\n      1446361200000,\n      null\n    ],\n    \"offsets\": [\n      360,\n      300,\n      360\n    ]\n  },\n  \"US/Michigan\": {\n    \"name\": \"US/Michigan\",\n    \"untils\": [\n      1425798000000,\n      1446357600000,\n      null\n    ],\n    \"offsets\": [\n      300,\n      240,\n      300\n    ]\n  },\n  \"US/Mountain\": {\n    \"name\": \"US/Mountain\",\n    \"untils\": [\n      1425805200000,\n      1446364800000,\n      null\n    ],\n    \"offsets\": [\n      420,\n      360,\n      420\n    ]\n  },\n  \"US/Pacific-New\": {\n    \"name\": \"US/Pacific-New\",\n    \"untils\": [\n      1425808800000,\n      1446368400000,\n      null\n    ],\n    \"offsets\": [\n      480,\n      420,\n      480\n    ]\n  },\n  \"US/Pacific\": {\n    \"name\": \"US/Pacific\",\n    \"untils\": [\n      1425808800000,\n      1446368400000,\n      null\n    ],\n    \"offsets\": [\n      480,\n      420,\n      480\n    ]\n  },\n  \"US/Samoa\": {\n    \"name\": \"US/Samoa\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      660\n    ]\n  },\n  \"UTC\": {\n    \"name\": \"UTC\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"Universal\": {\n    \"name\": \"Universal\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  },\n  \"W-SU\": {\n    \"name\": \"W-SU\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      -180\n    ]\n  },\n  \"WET\": {\n    \"name\": \"WET\",\n    \"untils\": [\n      1427590800000,\n      1445734800000,\n      null\n    ],\n    \"offsets\": [\n      0,\n      -60,\n      0\n    ]\n  },\n  \"Zulu\": {\n    \"name\": \"Zulu\",\n    \"untils\": [\n      null\n    ],\n    \"offsets\": [\n      0\n    ]\n  }\n};\n\n},{}],\"/Users/claudiocalautti/Projects/TmzTab/tmz-clocks-app/src/scripts/mixins/SearchInString.js\":[function(require,module,exports){\n/**\n * Search in a large string of 'key value' matches, delimited by single quote.\n * http://stackoverflow.com/a/3976066\n * @param {string} value The value to search.\n * @param {string} string The string of possible matches 'key value'.\n * @param {number} limit The results limit.\n */\nvar SearchInString = function(value, string, limit) {\n\n  // Delimiter single quote.\n  var reg = new RegExp(\"'(\\\\d+) ([^']*\" + value + \"[^']*)'\", \"gi\");\n\n  var results = [];\n\n  var result;\n\n  var i = 0;\n\n  while (result = reg.exec(string)) {\n\n    results.push(result[1]);\n    i ++;\n\n    if (i >= limit) {\n      break;\n    }\n  }\n\n  return results;\n};\n\nmodule.exports = SearchInString;\n\n},{}]},{},[\"./src/scripts/app.jsx\"]);\n"],"file":"app.js","sourceRoot":"/source/"}